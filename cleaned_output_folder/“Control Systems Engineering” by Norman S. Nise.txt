CONTROL SYSTEMS ENGINEERING Seventh EditionNorman S. Nise NiseCONTROL SYSTEMS ENGINEERINGSeventh EditionNOW WITH HARDWARE INTERFACE LABORATORY EXPERIMENTS USING NATIONAL INSTRUMENTS™ myDAQ Close the loop between the lectures and lab. Integrated throughout the Nise text are 10 virtual experiments, which enable students to implement the design-simulate-prototype workflow of practicing engineers. Powered by LabVIEW™ software and simulations of Quanser lab plants, the virtual labs enable students to apply concepts to virtual systems, implement control solutions and evaluate results. The virtual labs deepen the homework learning experience and prepare students to make more effective use of their time in the lab. IN ADDITION · 20% new end-of-chapter problems that highlight biomedical, robotics, or other engineering applications, including a new progressive analysis and design problem—a solar energy parabolic trough collector. · Greater emphasis on computer-aided analysis and design, including MA TLAB®, LabVIEW™, and Simulink®. MATLAB® and Simulink® have has been updated to R2014a and a new section has been added: Using Simulink® for control system design. LabVIEW™ has been updated to LabVIEW™ 2013. · Hardware Interface Laboratory experiments have been added to certain chapters. These experiments use National Instruments™ m yDAQ to interface your computer with actual hardware to test control system principles in the real-world. An included tutorial on the use of myDAQ gives the students the background they need to do the experiments. 9 781118 17051990000ISBN 978-1-118-17051-9Cover Design: Wendy Lai Cover Image: Spencer Platt/Getty Images www.wiley.com/college/nise Nise_Control7e.indd 1 10/21/14 10:05 AMWEBFFIRS 10/29/2014 0:50:34 Page 2WEBFIFC 10/29/2014 0:32:32 Antenna Azimuth Position Control System Layout Motori(t) Desired azimuth angle input Differential amplifier and power amplifier Potentiometero(t)Potentiometer Azimuth angle outputAntenna θθ Schematic JL kg-m2Ja kg-m2 Da N-m s/rad Kb V-s/rad Kt N-m/A n-turn potentiometerDL N-m-s/radvi(t) vo(t) KK1 s + a+ –vp(t) ea(t) θm(t)θi(t) θo(t)RaMotorFixed field–V+V Power amplifierDifferential preamplifiern-turn potentiometer Armature +V–VN1 Gear N2 Gear N3 GearWEBFFEP 10/29/2014 0:36:16 Block Diagram Potentiometer PreamplifierPower amplifierMotor and load GearsDesired azimuth angleAzimuth angle θi(s) θo(s) s + aK1K Kgs(s+am)K1 Potentiometer Kpot+ –θm(s) Ea(s) Ve(s) Vi(s) Vp(s) Kpot Schematic Parameters Parameter Conﬁ guration 1 Conﬁ guration 2 Conﬁ guration 3 V 10 10 10 n 10 1 1 K ——— K1 100 150 100 a 100 150 100 Ra 855 Ja 0.02 0.05 0.05 Da 0.01 0.01 0.01 Kb 0.5 1 1 Kt 0.5 1 1 N1 25 50 50 N2 250 250 250 N3 250 250 250 JL 155 DL 133 Block Diagram Parameters Parameter Conﬁ guration 1 Conﬁ guration 2 Conﬁ guration 3 Kpot 0.318 K — K1 100 a 100 Km 2.083 am 1.71 Kg 0.1 Note: reader may ﬁll in Con ﬁguration 2 and Con ﬁguration 3 columns after completing the antenna control Case Study challenge problems in Chapters 2 and 10, respectively.WEBFFIRS 10/29/2014 0:50:33 WEBFFIRS 10/29/2014 0:50:34 Page 2WEBFFIRS 10/29/2014 0:50:34 CONTROL SYSTEMS ENGINEERING Seventh Edition Norman S. Nise California State Polytechnic University, PomonaWEBFFIRS 10/29/2014 0:50:34 To my wife, Ellen; sons, Benjamin and Alan; and daughter, Sharon, and their families. Vice President & Executive Publisher Don Fowley Executive Editor Dan Sayre Editorial Assistant Francesca Baratta Content Manager Ellinor Wagner Executive Marketing Manager Christopher Ruel Design Director Harry Nolan Senior Designer Wendy Lai Photo Editor Elizabeth Blomster Senior Product Designer Jenny Welter Associate Editor Wendy Ashenberg Cover Photo Credit Spencer Platt/Getty Images This book was set in 10/12 pt Lato Black by Thomson Digital and printed and bound by Courier Kendallville. The cover was printed by Courier Kendallville. The new Honda robot ASIMO walks up stairs during a North American educational tour designed to introduce the public to ASIMO and to encourage students to study robotics science. ASIMO (Advanced Step in Innovative Mobility) is a product of over 15 years of robotic development at Honda and was created for the purpose of helping people in need. (Photo by Spencer Platt/Getty Images). This book has not been approved, licensed, or sponsored by Honda. Copyright 2015, 2011, 2008, 2004, 2000, 1999 John Wiley & Sons, Inc. All rights reserved. No part of this publication may be reproduced, stored in a retrieval system or transmitted in any form or by any means, electronic, mechanical, photocopying, recording, scanning or otherwise, except as permitted under Sections 107 or 108 of the 1976 United States Copyright Act, without either the prior written permission of the Publisher, or authorization through payment of the appropriate per-copy fee to the Copyright Clearance Center, Inc. 222 Rosewood Drive,Danvers, MA 01923, website www.copyright.com . Requests to the Publisher for permission should be addressed to the Permissions Department, John Wiley & Sons, Inc., 111 River Street, Hoboken, NJ 07030-5774, (201)748-6011,fax (201)748-6008, website http://www.wiley.com/go/permissions . Founded in 1807, John Wiley & Sons, Inc. has been a valued source of knowledge and understanding for more than 200 years, helping people around the world meet their needs and ful ﬁll their aspirations. Our company is built on a foundation of principles that include responsibility to the communities we serve and where we live and work. In 2008, we launched aCorporate Citizenship Initiative, a global effort to address the environmental, social, economic, and ethical challenges we face in our business. Among the issues we are addressing are carbon impact, paper speci ﬁcations and procurement, ethical conduct within our business and among our vendors, and community and charitable support. For more information, please visit our website: www.wiley.com/go/citizenship . The software programs and experiments available with this book have been included for their instructional value. Theyhave been tested with care but are not guaranteed for any particular purpose. The publisher and author do not offer any warranties or restrictions, nor do they accept any liabilities with respect to the programs and experiments. AMTRAK is a registered trademark of National Railroad Passenger Corporation. Adobe andAcrobat are trademarks of Adobe Systems, Inc. which may be registered in some jurisdictions. FANUC is a registered trademark of FANUC, Ltd.Microsoft, Visual Basic, andPowerPoint are registered trademarks of Microsoft Corporation. QuickBasic is a trademark of Microsoft Corporation. MATLAB andSIMULINK are registered trademarks of The MathWorks, Inc. The Control System Toolbox, LTI Viewer, Root Locus Design GUI, Symbolic Math Toolbox, Simulink Control Design, andMathWorks are trademarks of The MathWorks, Inc. LabVIEW is a registered trademark of National Instruments Corporation. Segway is a registered trademark of Segway, Inc. in the United States and/or other countries. Chevrolet Volt is a trademark of General Motors LLC. Virtual plant simulations pictured and referred to herein are trademarks or registered trademarks of Quanser Inc. and/or its af ﬁliates.2010 Quanser Inc. All rights reserved. Quanser virtual plant simulations pictured and referred to herein may be subject to change without notice. ASIMO is a registered trademark of Honda. Evaluation copies are provided to quali ﬁed academics and professionals for review purposes only, for use in their courses during the next academic year. These copies are licensed and may not be sold or transferred to a third party. Upon completion of the review period, please return the evaluation copy to Wiley. Return instructions and a free of charge return shipping label are available at www.wiley.com/go/returnlabel . Outside of the United States, please contact your local representative. Library of Congress Cataloging-in-Publication Data Nise, Norman S. Control systems engineering / Norman S. Nise, California State Polytechnic University, Pomona. —Seventh edition. 1 online resource. Includes bibliographical references and index. Description based on print version record and CIP data provided by publisher; resource not viewed. ISBN 978-1-118-80082-9 (pdf) —ISBN 978-1-118-17051-9 (cloth : alk. paper) Automatic control –Textbooks. 2. Systems engineering –Textbooks. I. Title. TJ213629.8–dc23 2014037468 Printed in the United States of America 1 0987654321WEBFTOC 10/29/2014 0:28:41 Contents PREFACE, ix INTRODUCTION, 1 1.1 Introduction, 2 1.2 A History of Control Systems, 4 1.3 System Con ﬁgurations, 6 1.4 Analysis and Design Objectives, 9 Case Study, 11 1.5 The Design Process, 14 1.6 Computer-Aided Design, 19 1.7 The Control Systems Engineer, 20 Summary, 21Review Questions, 22Problems, 22 Cyber Exploration Laboratory, 29 Bibliography, 30 MODELING IN THE FREQUENCY DOMAIN, 33 2.1 Introduction, 342.2 Laplace Transform Review, 35 2.3 The Transfer Function, 44 2.4 Electrical Network Transfer Functions, 472.5 Translational Mechanical System Transfer Functions, 61 2.6 Rotational Mechanical System Transfer Functions, 69 2.7 Transfer Functions for Systems with Gears, 732.8 Electromechanical System Transfer Functions, 77 2.9 Electric Circuit Analogs, 83 2.10 Nonlinearities, 86 2.11 Linearization, 87 Case Studies, 92Summary, 95 Review Questions, 95Problems, 96 Cyber Exploration Laboratory, 107 Hardware Interface Laboratory, 110 Bibliography, 112 MODELING IN THE TIME DOMAIN, 115 3.1 Introduction, 1163.2 Some Observations, 1163.3 The General State-Space Representation, 120 3.4 Applying the State-Space Representation, 122 3.5 Converting a Transfer Function to State Space, 130 3.6 Converting from State Space to a Transfer Function, 136 3.7 Linearization, 138 Case Studies, 141Summary, 145 Review Questions, 146 Problems, 146 Cyber Exploration Laboratory, 153 Bibliography, 155 TIME RESPONSE, 157 4.1 Introduction, 158 4.2 Poles, Zeros, and System Response, 158 4.3 First-Order Systems, 162 4.4 Second-Order Systems: Introduction, 164 4.5 The General Second-Order System, 1694.6 Underdamped Second-Order Systems, 173 4.7 System Response with Additional Poles, 182 4.8 System Response with Zeros, 1864.9 Effects of Nonlinearities upon Time Response, 192 vWEBFTOC 10/29/2014 0:28:41 4.10 Laplace Transform Solution of State Equations, 194 4.11 Time Domain Solution of State Equations, 198 Case Studies, 202 Summary, 208Review Questions, 209 Problems, 210 Cyber Exploration Laboratory, 223 Hardware Interface Laboratory, 226 Bibliography, 231 REDUCTION OF MULTIPLE SUBSYSTEMS, 235 5.1 Introduction, 236 5.2 Block Diagrams, 236 5.3 Analysis and Design of Feedback Systems, 245 5.4 Signal-Flow Graphs, 2485.5 Mason ’s Rule, 251 5.6 Signal-Flow Graphs of State Equations, 254 5.7 Alternative Representations in State Space, 256 5.8 Similarity Transformations, 265 Case Studies, 272Summary, 278 Review Questions, 278 Problems, 279 Cyber Exploration Laboratory, 295 Bibliography, 296 STABILITY, 299 6.1 Introduction, 300 6.2 Routh-Hurwitz Criterion, 303 6.3 Routh-Hurwitz Criterion: Special Cases, 305 6.4 Routh-Hurwitz Criterion: Additional Examples, 311 6.5 Stability in State Space, 318 Case Studies, 321 Summary, 323Review Questions, 323 Problems, 324 Cyber Exploration Laboratory, 332 Bibliography, 3337. STEADY-STATE ERRORS, 335 7.1 Introduction, 336 7.2 Steady-State Error for Unity Feedback Systems, 339 7.3 Static Error Constants and System Type, 3457.4 Steady-State Error Speci ﬁcations, 348 7.5 Steady-State Error for Disturbances, 3517.6 Steady-State Error for Nonunity Feedback Systems, 353 7.7 Sensitivity, 3567.8 Steady-State Error for Systems in State Space, 359Case Studies, 362 Summary, 365 Review Questions, 366 Problems, 367 Cyber Exploration Laboratory, 377 Bibliography, 379 ROOT LOCUS TECHNIQUES, 381 8.1 Introduction, 382 8.2 De ﬁning the Root Locus, 386 8.3 Properties of the Root Locus, 3888.4 Sketching the Root Locus, 390 8.5 Re ﬁning the Sketch, 395 8.6 An Example, 404 8.7 Transient Response Design via Gain Adjustment, 407 8.8 Generalized Root Locus, 4118.9 Root Locus for Positive-Feedback Systems, 413 8.10 Pole Sensitivity, 415 Case Studies, 417 Summary, 422 Review Questions, 423Problems, 423 Cyber Exploration Laboratory, 439 Hardware Interface Laboratory, 441 Bibliography, 447 DESIGN VIA ROOT LOCUS, 449 9.1 Introduction, 450 9.2 Improving Steady-State Error via Cascade Compensation, 453vi ContentsWEBFTOC 10/29/2014 0:28:41 9.3 Improving Transient Response via Cascade Compensation, 462 9.4 Improving Steady-State Error and Transient Response, 474 9.5 Feedback Compensation, 487 9.6 Physical Realization of Compensation, 495 Case Studies, 500 Summary, 504 Review Questions, 505 Problems, 506 Cyber Exploration Laboratory, 519Hardware Interface Laboratory, 520 Bibliography, 523 FREQUENCY RESPONSE TECHNIQUES, 525 10.1 Introduction, 526 10.2 Asymptotic Approximations: Bode Plots, 531 10.3 Introduction to the Nyquist Criterion, 55010.4 Sketching the Nyquist Diagram, 555 10.5 Stability via the Nyquist Diagram, 560 10.6 Gain Margin and Phase Margin via the Nyquist Diagram, 564 10.7 Stability, Gain Margin, and Phase Margin via Bode Plots, 566 10.8 Relation Between Closed-Loop Transient and Closed-Loop Frequency Responses, 570 10.9 Relation Between Closed- and Open-Loop Frequency Responses, 573 10.10 Relation Between Closed-Loop Transient and Open-Loop Frequency Responses, 578 10.11 Steady-State Error Characteristics from Frequency Response, 582 10.12 Systems with Time Delay, 586 10.13 Obtaining Transfer Functions Experimentally, 591 Case Study, 595 Summary, 596 Review Questions, 597Problems, 598 Cyber Exploration Laboratory, 609 Bibliography, 610 DESIGN VIA FREQUENCY RESPONSE, 613 11.1 Introduction, 61411.2 Transient Response via Gain Adjustment, 615 11.3 Lag Compensation, 61811.4 Lead Compensation, 623 11.5 Lag-Lead Compensation, 629 Case Studies, 638Summary, 640 Review Questions, 640Problems, 641 Cyber Exploration Laboratory, 646 Bibliography, 647 DESIGN VIA STATE SPACE, 649 12.1 Introduction, 650 12.2 Controller Design, 651 12.3 Controllability, 658 12.4 Alternative Approaches to Controller Design, 661 12.5 Observer Design, 667 12.6 Observability, 674 12.7 Alternative Approaches to Observer Design, 677 12.8 Steady-State Error Design via Integral Control, 684 Case Study, 688Summary, 693 Review Questions, 694 Problems, 695 Cyber Exploration Laboratory, 703 Bibliography, 704 DIGITAL CONTROL SYSTEMS, 707 13.1 Introduction, 70813.2 Modeling the Digital Computer, 711 13.3 The z-Transform, 714 13.4 Transfer Functions, 71913.5 Block Diagram Reduction, 723 13.6 Stability, 72613.7 Steady-State Errors, 733 13.8 Transient Response on the z-Plane, 737 13.9 Gain Design on the z-Plane, 739 13.10 Cascade Compensation via the s-Plane, 742 13.11 Implementing the Digital Compensator, 746Contents viiWEBFTOC 10/29/2014 0:28:41 Case Studies, 749 Summary, 753 Review Questions, 754 Problems, 755 Cyber Exploration Laboratory, 762Bibliography, 764 APPENDIX A List of Symbols, 767 APPENDIX B MATLAB Tutorial, 771 B.1 Introduction, 771B.2 MATLAB Examples, 772B.3 Command Summary, 814 Bibliography, 817 APPENDIX C Simulink Tutorial, 819C.1 Introduction, 819C.2 Using Simulink, 819 C.3 Examples, 824 C.4 Using Simulink for Control System Design, 836Summary, 846Bibliography, 846 APPENDIX D LabVIEW Tutorial, 849D.1 Introduction, 849D.2 Control Systems Analysis, Design, and Simulation, 850 D.3 Using LabVIEW, 851D.4 Analysis and Design Examples, 853D.5 Simulation Examples, 865D.6 Interfacing with External Hardware, 875Summary, 879Bibliography, 879 Online location is www.wiley.com/college/niseGLOSSARY, 881 ANSWERS TO SELECTED PROBLEMS, 889 INDEX, 895 APPENDIX E MATLAB ’s GUI Tools Tutorial (Online) APPENDIX F MATLAB ’s Symbolic Math Toolbox Tutorial (Online) APPENDIX G Matrices, Determinants, and Systems of Equations (Online) APPENDIX H Control System Computational Aids (Online) APPENDIX I Derivation of a Schematic for a DC Motor (Online) APPENDIX J Derivation of the Time Domain Solution of State Equations (Online) APPENDIX K Solution of State Equations for t060 (Online) APPENDIX L Derivation of Similarity Transformations (Online) APPENDIX M Root Locus Rules: Derivations (Online) Control Systems Engineering Toolbox (Online) Cyber Exploration Laboratory Experiments Cover Sheets (Online) Hardware Interface Laboratory Experiments Cover Sheets (Online) Lecture Graphics (Online)Solutions to Skill-Assessment Exercises (Online)viii ContentsWEBFPREF 10/29/2014 0:22:8 Preface This book introduces students to the theory and practice of control systems engineering. The text emphasizes the practical application of the subject to the analysis and design offeedback systems. The study of control systems engineering is essential for students pursuing degrees in electrical, mechanical, aerospace, biomedical, or chemical engineering. Control systems arefound in a broad range of applications within these disciplines, from aircraft and spacecraftto robots and process control systems. Control Systems Engineering is suitable for upper-division college and university engineering students and for those who wish to master the subject matter through self-study.The student using this text should have completed typical lower-division courses inphysics and mathematics through differential equations. Other required background material, including Laplace transforms and linear algebra, is incorporated in the text, either within chapter discussions or separately in the appendixes or on the book's CompanionWeb site. This review material can be omitted without loss of continuity if the student does notrequire it. Key Features The key features of this seventh edition are: Standardized chapter organization Qualitative and quantitative explanations Examples, Skill-Assessment Exercises, andCase Studies throughout the text Cyber Exploration Laboratory, Hardware Interface Laboratory, and VirtualExperiments Abundant illustrations Numerous end-of-chapter problems Emphasis on design Flexible coverage Emphasis on computer-aided analysis and design including MATLAB 1and LabVIEW2 Icons identifying major topics Let us look at each feature in more detail. 1MATLAB is a registered trademark of The MathWorks, Inc. 2LabVIEW is a registered trademark of National Instruments Corporation. ixWEBFPREF 10/29/2014 0:22:8 Standardized Chapter Organization Each chapter begins with a list of chapter learning outcomes, followed by a list of case study learning outcomes that relate to speci ﬁc student performance in solving a practical case study problem, such as an antenna azimuth position control system. Topics are then divided into clearly numbered and labeled sections containing explanations, examples, and, where appropriate, skill-assessment exercises with answers. These numbered sections are followed by one or more case studies, as will be outlined in afew paragraphs. Each chapter ends with a brief summary, several review questions requiringshort answers, a set of homework problems, and experiments. Qualitative and Quantitative Explanations Explanations are clear and complete and, where appropriate, include a brief review of requiredbackground material. Topics build upon and support one another in a logical fashion.Groundwork for new concepts and terminology is carefully laid to avoid overwhelmingthe student and to facilitate self-study. Although quantitative solutions are obviously important, a qua litative or intuitive understanding of problems and methods of solution is vital to producing the insight required to develop sound designs. Therefore, whenever possible, new concepts are discussed from a qualitative perspective before quantitative analysis and design areaddressed. For example, in Chapter 8 the student can simply look at the root locus anddescribe qualitatively the changes in transient response that will occur as a systemparameter, such as gain, is varied. This ability is developed with the help of a few simpleequations from Chapter 4. Examples, Skill-Assessment Exercises, and Case Studies Explanations are clearly illustrated by means of numerous numbered and labeled Examples throughout the text. Where appropriate, sections conclude with Skill-Assessment Exercises . These are computation drills, most with answers that test comprehension and provideimmediate feedback. Complete solutions can be found at www.wiley.com/college/nise . Broader examples in the form of Case Studies can be found after the last numbered section of every chapter, with the exception of Chapter 1. These case studies are practicalapplication problems that demonstrate the concepts introduced in the chapter. Each case study concludes with a “Challenge ”problem that students may work in order to test their understanding of the material. One of the case studies, an antenna azimut h position control system, is carried throughout the book. The purpose is to illust rate the application of new material in each chapter to the same physical system, thus highlighting the continuity of the design process. Another, more challenging case study, involving an Unmannered Free-SwimmingSubmersible Vehicle, is developed over the course of ﬁve chapters. Cyber Exploration Laboratory, Hardware Interface Laboratory, and Virtual Experiments Computer experiments using MATLAB, Simulink3and the Control System Toolbox are found at the end of the Problems sections under the sub-heading Cyber Exploration Laboratory . The experiments allow the reader to verify the concepts covered in the chapter via simulation. The reader also can change parameters and perform “what if ”exploration to gain insight into the effect of parameter and con ﬁguration changes. The experiments are written with stated Objectives, Minimum Required Software Packages, as well as Prelab, Lab, and Postlab tasks and questions. Thus, the experiments may be used for a laboratory course that accompanies the class. Cover sheets for these experiments are available atwww.wiley.com.college/nise . 3Simulink is a registered trademark of The MathWorks, Inc.x PrefaceWEBFPREF 10/29/2014 0:22:8 Subsequent to the Cyber Exploration Laboratory experiments, and new to this seventh edition, are Hardware Interface Laboratory experiments in some chapters. These experiments use National Instruments ’myDAQ to interface your computer to actual hardware to test control system principles in the real world. Finally, in this seventh edition are Virtual Experiments. These experiments are more tightly focused than the Cyber Exploration Laboratory experiments as they let students interactwith virtual models of actual teaching lab equipment produced by Quanser. These experimentswill help students gain a more intuitive understanding of the physical implications of importantcontrol concepts. The experiments are referenced in sidebars throughout some chapters. Abundant Illustrations The ability to visualize concepts and processes is critical to the student's understanding. For this reason, approximately 800 photos, diagrams, graphs, and tables appear throughout the book to illustrate the topics under discussion. Numerous End-of-Chapter Problems Each chapter ends with a variety of homework problems that allow students to test theirunderstanding of the material presented in the chapter. Problems vary in degree of dif ﬁculty and complexity, and most chapters include several practical, real-life problems to help maintainstudents ’motivation. Also, the homework problems contain progressive analysis and design problems that use the same practical systems to demonstrate the concepts of each chapter. Emphasis on Design This textbook places a heavy emphasis on design. Chapters 8, 9, 11, 12, and 13 focusprimarily on design. But. even in chapters that emphasize analysis, simple design examplesare included wherever possible. Throughout the book, design examples involving physical systems are identi ﬁed by the icon shown in the margin. End-of-chapter problems that involve the design ofphysical systems are included under the separate heading Design Problems .D e s i g n Problems also can be found in chapters covering design, under the heading Progressive Analysis and Design Problems . In these examples and problems, a desired response is speci ﬁed, and the student must evaluate certa in system parameters, such as gain, or specify a system con ﬁguration along with parameter values. In addition, the text includes numerous design examples and problems (not identi ﬁed by an icon) that involve purely mathematical systems. Because visualization is so vital to understanding design, this text carefully relates indirect design speci ﬁcations to more familiar ones. For example, the less familiar and indirect phase margin is carefully related to the more direct and familiar percent overshootbefore being used as a design speci ﬁcation. For each general type of design problem introduced in the text, a methodology for solving the problem is presented —in many cases in the form of a step-by-step procedure, beginning with a statement of design objectives. Example problems serve to demonstrate themethodology by following the procedure, making simplifying assumptions, and presenting the results of the design in tables or plots that compare the performance of the original system to that of the improved system. This comparison also serves as a check on the simplifyingassumptions. Transient response design topics are covered comprehensively in the text. They include: Design via gain adjustment using the root locus Design of compensation and controllers via the root locus Design via gain adjustment using sinusoidal frequency response methods Design of compensation via sinusoidal frequency response methods Design of controllers in state space using pole-placement techniquesPreface xiWEBFPREF 10/29/2014 0:22:8 Design of observers in state-space using pole-placement techniques Design of digital control systems via gain adjustment on the root locus Design of digital control system compensation via s-plane design and the Tustin transformation Steady-state error design is covered comprehensively in this textbook and includes: Gain adjustment Design of compensation via the root locus Design of compensation via sinusoidal frequency response methods Design of integral control in state space Finally, the design of gain to yield stability is covered from the following perspectives: Routh-Hurwitz criterion Root locus Nyquist criterion Bode plots Flexible Coverage The material in this book can be adapted for a one-quarter or a one-semester course. The organization is ﬂexible, allowing the instructor to select the material that best suits the requirements and time constraints of the class. Throughout the book, state-space methods are presented along with the classical approach. Chapters and sections (as well as examples, exercises, review questions, and problems) that cover state space are marked by the icon shown in the margin and can beomitted without any loss of continuity. Those wishing to add a basic introduction to state-spacemodeling can include Chapter 3 in the syllabus. In a one-semester course, the discussions of state-space analysis in Chapters 4, 5, 6 and 7, as well as state-space design in Chapter 12, can be covered along with the classical approach.Another option is to teach state space separately by gathering the appropriate chapters andsections marked with the State Space icon into a single unit that follows the classical approach. In a one-quarter course, Chapter 13, Digital Control Systems, could be eliminated. Emphasis on Computer-Aided Analysis and Design Control systems problems, particularly analysis and design problems using the root locus,can be tedious, since their solution involves trial and error. To solve these problems,students should be given access to computers or programmable calculators con ﬁgured with appropriate software. In this seventh edition, MATLAB and LabVIEW continue to beintegrated into the text as an optional feature. Many problems in this text can be solved with either a computer or a hand-held programmable calculator. For example, students can use the programmable calculator to(1) determine whether a point on the s-plane is also on the root locus, (2) ﬁnd magnitude and phase frequency response data for Nyquist and Bode diagrams, and (3) convert between thefollowing representations of a second-order system: Pole location in polar coordinates Pole location in Cartesian coordinates Characteristic polynomial Natural frequency and damping ratio Settling time and percent overshoot Peak time and percent overshoot Settling time and peak time Handheld calculators have the advantage of easy accessibility for homework and exams. Please consult Appendix H, located at www.wiley.com/college/nise , for a discussion of computational aids that can be adapted to handheld calculators.xii PrefaceWEBFPREF 10/29/2014 0:22:8 Personal computers are better suited for more computation-intensive applications, such as plotting time responses, root loci, and frequency response curves, as well as ﬁnding state-transition matrices. These co mputers also give the student a real-world environment in which to analyze and design control systems. Those not using MATLABor LabVIEW can write their own programs o r use other programs, such as Program CC. Please consult Appendix H at www.wiley.com/college/nise for a discussion of computa- tional aids that can be adapted for use on computers that do not have MATLAB orLabVIEW installed. Without access to computers or programmable calculators, students cannot obtain meaningful analysis and design results and the learning experience will be limited. Icons Identifying Major Topics Several icons identify coverage and optional material. The icons are summarized as follows: The MATLAB icon identi ﬁes MATLAB discussions, examples, exercises, and problems. MATLAB coverage is provided as an enhancement and is not required touse the text. The Simulink icon identi ﬁes Simulink discussions, examples, exercises, and problems. Simulink coverage is provided as an enhancement and is not required to use the text. The GUI Tool icon identi ﬁes MATLAB GUI Tools discussions, examples, exercises, and problems. The discussion of the tools, which includes the LTI Viewer, the Simulink LTIViewer, and the SISO Design Tool, is provided as an enhancement and is not required to usethe text. The Symbolic Math icon identi ﬁes Symbolic Math Toolbox discussions, examples, exercises, and problems. Symbolic Math Toolbox coverage is provided as an enhancementand is not required to use the text. The LabVIEW icon identi ﬁes LabVIEW discussions, examples, exercises, and problems. LabVIEW is provided as an enhancement and is not required to use the text. The State Space icon highlights state-space discussions, examples, exercises, and problems. State-space material is optional and can be omitted without loss of continuity. The Design icon clearly identi ﬁes design problems involving physical systems. New to This Edition The following list describes the key changes in this seventh edition: End-of-chapter problems More than 20% of the end-of-chapter problems are either new or revised. Also, an additionalProgressive Analysis and Design Problem has been added at the end of the chapter problems. The new progressive problem analyzes and designs a solar energy parabolic trough collector. MATLAB The use of MATLAB for computer-aided analysis and design continues to be integrated intodiscussions and problems as an optional feature in the seventh edition. The MATLABtutorial has been updated to MATLAB Version 8.3 (R2014a), the Control System Toolbox Version 9.7, and the Symbolic Math Toolbox Version 6.0 In addition, MATLAB code continues to be incorporated in the chapters in the form of sidebar boxes entitled TryIt. Simulink The use of Simulink to show the effects of nonlinearities upon the time response of open- loop and closed-loop systems appears again in this seventh edition. We also continue to use Simulink to demonstrate how to simulate digital systems. Finally, the Simulink tutorial hasPreface xiiiWEBFPREF 10/29/2014 0:22:8 been updated to Simulink 8.3 and a new section has been added: Using Simulink for Control System Design . LabVIEW LabVIEW continues to be integrated in problems and experiments. LabVIEW has been updated to LabVIEW 2013. Hardware Interface Laboratory New to this edition are experiments that use National Instruments’ myDAQ to control an actual motor. A tutorial to familiarize the reader with myDAQ is added to Appendix DLabVIEW Tutorial. Book Companion Site (BCS) at www.wiley.com/college/nise The BCS for the seventh edition includes various student and instructor resources. This freeresource can be accessed by going to www.wiley.com/college/nise and clicking on Student Companion Site. Professors also access their password-protected resources on the Instructor Companion Site available through this url. Instructors should contact their Wiley sales representative for access. For the Student: All M- ﬁles used in the MATLAB, Simulink, GUI Tools, and Symbolic Math Toolbox tutorials, as well as the TryIt exercises Copies of the Cyber Exploration Laboratory experiments for use as experiment cover sheets Solutions to the Skill-Assessment Exercises in the text LabVIEW Virtual Experiments LabVIEW VIs used in Appendix D Allﬁles required to perform Hardware Interface Laboratory experiments using National Instruments myDAQ For the Instructor; PowerPoint 4ﬁles containing the ﬁgures from the textbook Solutions to end-of-chapter problem sets Simulations, developed by JustAsk, for inclusion in lecture presentations Book Organization by Chapter Many times it is helpful lo understand an author's reasoning behind the organization of thecourse material. The following paragraphs hopefully shed light on this topic. The primary goal of Chapter 1 is to motivate students. In this chapter, students learn about the many applications of control systems in everyday life and about the advantages ofstudy and a career in this ﬁeld. Control systems engineering design objectives, such as transient response, steady-state error, and stability, are introduced, as is the path to obtainingthese objectives. New and unfamiliar terms also are included in the Glossary. Many students have trouble with an early step in the analysis and design sequence: transforming a physical system into a schematic. This step requires many simplifyingassumptions based on experience the typical college student does not yet possess.Identifying some of these assumptions in Chapter 1 helps to ﬁll the experience gap. Chapters 2, 3, and 5 address the representation of physical systems. Chapters 2 and 3 cover modeling of open-loop systems, using frequency response techniques and state-spacetechniques, respectively. Chapter 5 discusses the representation and reduction of systemsformed of interconnected open-loop subsystems. Only a representative sample of physical 4PowerPoint is a registered trademark of Microsoft Corporation.xiv PrefaceWEBFPREF 10/29/2014 0:22:8 systems can be covered in a textbook of this length. Electrical, mechanical (both translational and rotational), and electromechanical systems are used as examples of physical systems that are modeled, analyzed, and designed. Linearization of a nonlinear system —one technique used by the engineer to simplify a system in order to represent it mathematically —is also introduced. Chapter 4 provides an introduction to system analysis, that is, ﬁnding and describing the output response of a system. It may seem more logical to reverse the order of Chapters 4 and 5,to present the material in Chapter 4 along with other chapters covering analysis. However,many years of teaching control systems have taught me that the sooner students see an application of the study of system representation, the higher their motivation levels remain. Chapters 6, 7, 8, and 9 return to control systems analysis and design with the study of stability (Chapter 6), steady-state errors (Chapter 7), and transient response of higher-order systems using root locus techniques (Chapter 8). Chapter 9 covers design of compensatorsand controllers using the root locus. Chapters 10 and 11 focus on sinusoidal frequency analysis and design. Chapter 10, like Chapter 8, covers basic concepts for stability, transient response, and steady-state-erroranalysis. However, Nyquist and Bode methods are used in place of root locus. Chapter 11, like Chapter 9, covers the design of compensators, but from the point of view of sinusoidal frequency techniques rather than root locus. An introduction to state-space design and digital control systems analysis and design completes the text in Chapters 12 and 13, respectively. Although these chapters can be used asan introduction for students who will be continuing their study of control systems engineering,they are useful by themselves and as a supplement to the discussion of analysis and design inthe previous chapters. The subject matter cannot be given a comprehensive treatment in twochapters, but the emphasis is clearly outlined and logically linked to the rest of the book. Acknowledgments The author would like to acknowledge the contributions of faculty and students, both atCalifornia State Polytechnic University, Pomona, and across the country, whose sugges-tions through all editions have made a positive impact on this new edition. I am deeply indebted to my colleagues, Drs. Elhami T. Ibrahim and Salomon Oldak at California State Polytechnic University, Pomona for authoring the creative new problems you will ﬁnd at the end of every chapter. The new progressive problem, solar energy parabolic trough collector, that is at the end of every chapter is the creation of Dr Oldak. In addition, I am grateful to Dr. Oldak for creating the National InstrumentsmyDAQ experiments, which you will ﬁnd in the Hardware Interface Laboratory section of many chapters. Finally, I want to thank Dr. Norali Pernalete, also of California StatePolytechnic University, Pomona, for her contribution of the LabVIEW experiments andproblems continuing in this edition. I would like to express my appreciation to those who participated in reviews of this seventh edition. They are: James R. McCusker, Wentworth Institute of Technology, and Ji-chulRyu, Northern Illinois University. The author would like to thank John Wiley & Sons, Inc. and its staff for once again providing professional support for this project through all phases of its development.Speciﬁ cally, the following are due recognition for their contributions: Don Fowley, Vice President and Publisher, who gave full corporate support to the project; Dan Sayre,Executive Editor, with whom I worked closely and who provided guidance and leadershipthroughout the development of the seventh edition; Francesca Baratta and Jessica Knecht, Editorial Assistants who were always there to answer my questions and respond to my concerns in a professional manner; and Anna Melhorn, Senior Production Editor, whoturned the seventh edition manuscript into the ﬁnal product you are holding in your hands. Other contributors who worked hard behind the scenes are: Wendy Lai, Designer;Preface xvWEBFPREF 10/29/2014 0:22:8 Harry Nolan, Director of Design; Jennifer Welter, Senior Product Designer; Kevin Holm, Learning Space Content Manager; and Wendy Ashenberg, Content Editor. My sincere appreciation is extended to Erik Luther of National Instruments Corporation and Paul Gilbert, Michel Levis, and Tom Lee of Quanser for conceiving, coordinating, and developing the Virtual Experiments that I am sure will enhance your understanding of controlsystems. Others from National Instruments who contributed to the successful publication ofthis book are Margaret Barrett and Kathy Brown. Finally, last but certainly not least, I want to express my appreciation to my wife, Ellen, for her support in ways too numerous to mention during the writing of all editions. Speci ﬁcally, though, thanks to her proo ﬁng pages for this seventh edition, you, the reader, hopefully will ﬁnd comprehension rather than apprehension in the pages that follow. Norman S. Nisexvi PrefaceWEBC01 10/28/2014 14:10:27 Introduction Chapter Learning Outcomes After completing this chapter, the student will be able to: Deﬁne a control system and describe some applications (Section 1.1) Describe historical developments leading to modern day control theory (Section 1.2) Describe the basic features and con ﬁgurations of control systems (Section 1.3) Describe control systems analysis and design objectives (Section 1.4) Describe a control system ’s design process (Sections 1.5 –1.6) Describe the bene ﬁt from studying control systems (Section 1.7) Case Study Learning Outcomes You will be introduced to a running case study —an antenna azimuth position control system —that will serve to illustrate the principles in each subsequent chapter. In this chapter, the system is used to demonstrate qualitatively how a control system works as well as to de ﬁne performance criteria that are the basis for control systems analysis and design.1 1WEBC01 10/28/2014 14:10:27 1.1 Introduction Control systems are an integral part of modern society. Numerous applications are all around us: The rockets ﬁre, and the space shuttle lifts off to earth orbit; in splashing cooling water, a metallic part is automatically machined; a self-guided vehicle delivering material toworkstations in an aerospace assembly plant glides along the ﬂoor seeking its destination. These are just a few examples of the automatically controlled systems that we can create. We are not the only creators of automatically controlled systems; these systems also exist in nature. Within our own bodies are numerous control systems, such as the pancreas, which regulates our blood sugar. In time of “ﬁght or ﬂight,” our adrenaline increases along with our heart rate, causing more oxygen to be delivered to our cells. Our eyes follow a moving object to keep it in view; our hands grasp the object and place it precisely at apredetermined location. Even the nonphysical world appears to be automatically regulated. Models have been suggested showing automatic control of student performance. The input to the model is thestudent ’s available study time, and the output is the grade. The model can be used to predict the time required for the grade to rise if a sudden increase in study time is available. Using this model, you can determine whether increased study is worth the effort during the last week of the term. Control System Deﬁ nition A control system consists of subsystems andprocesses (orplants) assembled for the purpose of obtaining a desired output with desired performance , given a speci ﬁed input . Figure 1.1 shows a control system in its simplest form, where the input represents a desired output. For example, consider an elevator. When the fourth- ﬂoor button is pressed on the ﬁrstﬂoor, the elevator rises to the fourth ﬂoor with a speed and ﬂoor- leveling accuracy designed for passenger comfort. The push of the fourth- ﬂoor button is an input that represents our desired output , shown as a step function in Figure 1.2. The performance of the elevator can be seen from the elevator response curve in the ﬁgure. Two major measures of performance are apparent: (1) the transient response and (2) the steady-state error. In our example, passenger comfort and passenger patience aredependent upon the transient response. If this response is too fast, passenger comfort issacriﬁced; if too slow, passenger patience is sacri ﬁced. The steady-state error is another important performance speci ﬁcation since passenger safety and convenience would be sacriﬁced if the elevator did not level properly. Advantages of Control Systems With control systems we can move large equipment with precision that would otherwisebe impossible. We can point huge antennas toward the farthest reaches of the universe topick up faint radio signals; controlling these antennas by hand would be impossible.Because of control systems, elevators carry us quickly to our destination, automatically stopping at the right ﬂoor (Figure 1.3). We alone could not provide the power required for 4Input command Transient response TimeElevator location (floor)Steady-state errorSteady-state response Elevator response 1FIGURE 1.2 Elevator responseControl systemOutput; response Actual responseInput; stimulus Desired response FIGURE 1.1 Simpli ﬁed description of a control system2 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:27 the load and the speed; motors provide the power, and control systems regulate the position and speed. We build control systems for four primary reasons: 1.Power ampli ﬁcation 2.Remote control 3.Convenience of input form 4.Compensation for disturbances For example, a radar antenna, positioned by the low-power rotation ofa knob at the input, requires a large amount of power for its outputrotation. A control system can produce the needed power ampli ﬁcation, or power gain. Robots designed by control system principles can compensate for human disabilities. Control systems are also useful in remote or dangerouslocations. For example, a remote-controlled robot arm can be used to pickup material in a radioactive environment. Figure 1.4 shows a robot armdesigned to work in contaminated environments. Control systems can also be used to provide convenience by changing the form of the input. For example, in a temperature control system, theinput is a position on a thermostat. The output is heat. Thus, a convenient position input yields a desired thermal output. Another advantage of a control system is the ability to compensate for disturbances. Typically, we control such variables as temperature in thermalsystems, position and velocity in mechanical systems, and voltage, current,or frequency in electrical systems. The system must be able to yield thecorrect output even with a disturbance. For example, consider an antennasystem that points in a commanded direction. If wind forces the antennafrom its commanded position, or if noise enters internally, the system must be able to detect the disturbance and correct the antenna ’s position. FIGURE 1.4 Rover was built to work in contaminated areas at Three Mile Island in Middleton, Pennsylvania, where a nuclear accident occurred in 1979. The remote-controlled robot ’s long arm can be seen at the front of the vehicle. FIGURE 1.3 a.Early elevators were controlled by hand ropes or an elevatoroperator. Here a rope is cut todemonstrate the safety brake, an innovation in early elevators; b.One of two modern Duo-lift elevators makes its way up the Grande Arche in Paris. Two elevators are driven by onemotor, with each car acting as a counterbalance to the other. Today, elevators are fullyautomatic, using controlsystems to regulate position and velocity.1.1 Introduction 3WEBC01 10/28/2014 14:10:27 Obviously, the system ’s input will not change to make the correction. Consequently, the system itself must measure the amount that the disturbance has repositioned the antenna and then return the antenna to the position commanded by the input. 1.2 A History of Control Systems Feedback control systems are older than humanity. Numerous biological control systemswere built into the earliest inhabitants of our planet. Let us now look at a brief history ofhuman-designed control systems. 1 Liquid-Level Control The Greeks began engineering feedback systems around 300 B.C. A water clock invented by Ktesibios operated by having water trickle into a measuring container ata constant rate. The level of water in the measuring container could be used to tell time. For water to trickle at a constant rate, the supply tank had to be kept at a constant level. This was accomplished using a ﬂoat valve similar to the water-level control in today ’s ﬂush toilets. Soon after Ktesibios, the idea of liquid-level control was applied to an oil lamp by Philon of Byzantium. The lamp consisted of two oil containers con ﬁgured vertically. The lower pan was open at the top and was the fuel supply for the ﬂame. The closed upper bowl was the fuel reservoir for the pan below. The containers were interconnected by twocapillary tubes and another tube, called a vertical riser , which was inserted into the oil in the lower pan just below the surface. As the oil burned, the base of the vertical riser was exposedto air, which forced oil in the reservoir above to ﬂow through the capillary tubes and into the pan. The transfer of fuel from the upper reservoir to the pan stopped when the previous oillevel in the pan was reestablished, thus blocking the air from entering the vertical riser.Hence, the system kept the liquid level in the lower container constant. Steam Pressure and Temperature Controls Regulation of steam pressure began around 1681 with Denis Papin ’s invention of the safety valve. The concept was further elaborated on by weighting the valve top. If the upwardpressure from the boiler exceeded the weight, steam was released, and the pressuredecreased. If it did not exceed the weight, the valve did not open, and the pressure insidethe boiler increased. Thus, the weight on the valve top set the internal pressure of the boiler. Also in the seventeenth century, Cornelis Drebbel in Holland invented a purely mechanical temperature control system for hatching eggs. The device used a vial of alcohol and mercury with a ﬂoater inserted in it. The ﬂoater was connected to a damper that controlled a ﬂame. A portion of the vial was inserted into the incubator to sense the heat generated by the ﬁre. As the heat increased, the alcohol and mercury expanded, raising the ﬂoater, closing the damper, and reducing the ﬂame. Lower temperature caused the ﬂoat to descend, opening the damper and increasing the ﬂame. Speed Control In 1745, speed control was applied to a windmill by Edmund Lee. Increasing winds pitched the blades farther back, so that less area was available. As the wind decreased, more bladearea was available. William Cubitt improved on the idea in 1809 by dividing the windmillsail into movable louvers. Also in the eighteenth century, James Watt invented the ﬂyball speed governor to control the speed of steam engines. In this device, two spinning ﬂyballs rise as rotational speed increases. A steam valve connected to the ﬂyball mechanism closes with the ascending ﬂyballs and opens with the descending ﬂyballs, thus regulating the speed. 1See ( Bennett ,1979 ) and ( Mayr ,1970 ) for de ﬁnitive works on the history of control systems.4 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:27 Stability, Stabilization, and Steering Control systems theory as we know it today began to crystallize in the latter half of the nineteenth century. In 1868, James Clerk Maxwell published the stability criterion for a third-order system based on the coef ﬁcients of the differential equation. In 1874, Edward John Routh, using a suggestion from William Kingdon Clifford that was ignored earlier byMaxwell, was able to extend the stability criterion to ﬁfth-order systems. In 1877, the topic for the Adams Prize was “The Criterion of Dynamical Stability. ”In response, Routh submitted a paper entitled A Treatise on the Stability of a Given State of Motion and won the prize. This paper contains what is now known as the Routh-Hurwitz criterion for stability,which we will study in Chapter 6. Alexandr Michailovich Lyapunov also contributed to the development and formulation of today ’s theories and practice of control system stability. A student of P. L. Chebyshev at the University of St. Petersburg in Russia, Lyapunov extended the work of Routh to nonlinear systems in his 1892 doctoral thesis, entitled The General Problem of Stability of Motion . During the second half of the 1800s, the development of control systems focused on the steering and stabilizing of ships. In 1874, Henry Bessemer, using a gyro to sense a ship ’s motion and applying power generated by the ship ’s hydraulic system, moved the ship ’s saloon to keep it stable (whether this made a difference to the patrons is doubtful). Other efforts were made to stabilize platforms for guns as well as to stabilize entire ships, using pendulums to sense the motion. Twentieth-Century Developments It was not until the early 1900s that automatic steering of ships was achieved. In 1922, theSperry Gyroscope Company installed an automatic steering system that used theelements of compensation and adaptive control to improve performance. However,much of the general theory used today to improve the performance of automatic controlsystems is attributed to Nicholas Minorsky, a Russian born in 1885. It was his theoreticaldevelopment applied to the automatic steering of ships that led to what we call todayproportional-plus-integral-pl us-derivative (PID), or three-mode, controllers, which we will study in Chapters 9 and 11. In the late 1920s and early 1930s, H. W. Bode and H. Nyquist at Bell Telephone Laboratories developed the analysis of feedback ampli ﬁers. These contributions evolved into sinusoidal frequency analysis and design techniques currently used for feedback controlsystem, and are presented in Chapters 10 and 11. In 1948, Walter R. Evans, working in the aircraft industry, developed a graphical technique to plot the roots of a characteristic equation of a feedback system whose parameterschanged over a particular range of values. This technique, now known as the root locus, takes its place with the work of Bode and Nyquist in forming the foundation of linear control systems analysis and design theory. We will study root locus in Chapters 8, 9, and 13. Contemporary Applications Today, control systems ﬁnd widespread application in the guidance, navigation, and control of missiles and spacecraft, as well as planes and ships at sea. For example, modern ships usea combination of electrical, mechanical, and hydraulic components to develop ruddercommands in response to desired heading commands. The rudder commands, in turn, resultin a rudder angle that steers the ship. Weﬁnd control systems throughout the process control industry, regulating liquid levels in tanks, chemical concentrations in vats, as well as the thickness of fabricatedmaterial. For example, consider a thickness control system for a steel plate ﬁnishing mill. Steel enters the ﬁnishing mill and passes through rollers. In the ﬁnishing mill, X-rays measure the actual thickness and compare it to the desired thickness. Any difference isadjusted by a screw-down position control that changes the roll gap at the rollers throughwhich the steel passes. This change in roll gap regulates the thickness.1.2 A History of Control Systems 5WEBC01 10/28/2014 14:10:27 Modern developments have seen widespread use of the digital computer as part of control systems. For example, computers in control systems are for industrial robots, spacecraft, and the process control industry. It is hard to visualize a modern control systemthat does not use a digital computer. Although recently retired, the space shuttle provides an excellent example of the use of control systems because it contained numerous control systems operated by an onboardcomputer on a time-shared basis. Without control systems, it would be impossible to guidethe shuttle to and from earth ’s orbit or to adjust the orbit itself and support life on board. Navigation functions programmed into the shuttle ’s computers used data from the shuttle ’s hardware to estimate vehicle position and velocity. This information was fed to the guidanceequations that calculated commands for the shuttle ’sﬂight control systems, which steered the spacecraft. In space, the ﬂight control system gimbaled (rotated) the orbital maneuvering system (OMS) engines into a position that provided thrust in the commanded direction tosteer the spacecraft. Within the earth ’s atmosphere, the shuttle was steered by commands sent from the ﬂight control system to the aerosurfaces, such as the elevons. Within this large control system represented by navigation, guidance, and control were numerous subsystems to control the vehicle ’s functions. For example, the elevons required a control system to ensure that their position was indeed that which was commanded, sincedisturbances such as wind could rotate the elevons away from the commanded position.Similarly, in space, the gimbaling of the orbital maneuvering engines required a similar controlsystem to ensure that the rotating engine can accomplish its function with speed and accuracy.Control systems were also used to control and stabilize the vehicle during its descent fromorbit. Numerous small jets that compose the reaction control system (RCS) were used initiallyin the exoatmosphere, where the aerosurfaces are ineffective. Control was passed to theaerosurfaces as the orbiter descended into the atmosphere. Inside the shuttle, numerous control systems were required for power and life support. For example, the orbiter had three fuel-cell power plants that converted hydrogen andoxygen (reactants) into electricity and water for use by the crew. The fuel cells involved theuse of control systems to regulate temperature and pressure. The reactant tanks were kept atconstant pressure as the quantity of reactant diminishes. Sensors in the tanks sent signals tothe control systems to turn heaters on or off to keep the tank pressure constant ( Rockwell International, 1984 ). Control systems are not limited to science and industry. For example, a home heating system is a simple control system consisting of a thermostat containing a bimetallic materialthat expands or contracts with changing temperature. This expansion or contraction moves avial of mercury that acts as a switch, turning the heater on or off. The amount of expansion orcontraction required to move the mercury switch is determined by the temperature setting. Home entertainment systems also have built-in control systems. For example, in an optical disk recording system microscopic pits representing the information are burned intothe disc by a laser during the recording process. During playback, a re ﬂected laser beam focused on the pits changes intensity. The light intensity changes are converted to an electrical signal and processed as sound or picture. A control system keeps the laser beam positioned on the pits, which are cut as concentric circles. There are countless other examples of control systems, from the everyday to the extraordinary. As you begin your study of control systems engineering, you will becomemore aware of the wide variety of applications. 1.3 System Con ﬁgurations In this section, we discuss two major con ﬁgurations of control systems: open loop and closed loop. We can consider these con ﬁgurations to be the internal architecture of the total system shown in Figure 1.1. Finally, we show how a digital computer forms part of a controlsystem ’s con ﬁguration.6 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:28 Open-Loop Systems A generic open-loop system is shown in Figure 1.5( a). It starts with a subsystem called an input transducer , which converts the form of the input to that used by the controller . The controller drives a process or aplant . The input is sometimes called the reference , while the output can be called the controlled variable . Other signals, such as disturbances , are shown added to the controller and process outputs via summing junctions , which yield the algebraic sum of their input signals using associated signs. For example, the plant can be a furnace or air conditioning system, where the output variable is temperature. The controller in a heatingsystem consists of fuel valves and the electrical system that operates the valves. The distinguishing characteristic of an open-loop system is that it cannot compensate for any disturbances that add to the controller ’s driving signal (Disturbance 1 in Figure 1.5( a)). For example, if the controller is an electronic ampli ﬁer and Disturbance 1 is noise, then any additive ampli ﬁer noise at the ﬁrst summing junction will also drive the process, corrupting the output with the effect of the noise. The output of an open-loop system is corrupted not only bysignals that add to the controller ’s commands but also by disturbances at the output (Disturbance 2 in Figure 1.5( a)). The system cannot correct for these disturbances, either. Open-loop systems, then, do not correct for disturbances and are simply commanded by the input. For example, toasters are open-loop systems, as anyone with burnt toast can attest.The controlled variable (output) of a toaster is the color of the toast. The device is designed with the assumption that the toast will be darker the longer it is subjected to heat. The toaster does not measure the color of the toast; it does not correct for the fact that the toast is rye, white,or sourdough, nor does it correct for the fact that toast comes in different thicknesses. Other examples of open-loop systems are mechanical systems consisting of a mass, spring, and damper with a constant force positioning the mass. The greater the force, thegreater the displacement. Again, the system position will change with a disturbance, such asan additional force, and the system will not detect or correct for the disturbance. Or, assumethat you calculate the amount of time you need to study for an examination that covers three chapters in order to get an A. If the professor adds a fourth chapter —a disturbance —you are an open-loop system if you do not detect the disturbance and add study time to that previously calculated. The result of this oversight would be a lower grade than youexpected.ControllerProcess or Plant++Output or Controlled variableDisturbance 1 Disturbance 2 Summing junctionSumming junction (a) ControllerProcess or Plant++Input or ReferenceOutput or Controlled variableDisturbance 1 Disturbance 2 Summing junctionSumming junction (b)Error or Actuating signal Summing junction+ Input transducer– Output transducer or Sensor+ ++ +Input or ReferenceInput transducer FIGURE 1.5 Block diagrams of control systems: a.open-loop system; b.closed-loop system1.3 System Con ﬁgurations 7WEBC01 10/28/2014 14:10:28 Closed-Loop (Feedback Control) Systems The disadvantages of open-loop systems, namely sensitivity to disturbances and inability to correct for these disturbances, may be overcome in closed-loop systems . The generic architecture of a closed-loop system is shown in Figure 1.5( b). The input transducer converts the form of the input to the form used by the controller. An output transducer ,o rsensor , measures the output response and converts it into the form used by the controller. For example, if the controller uses electrical signals to operate the valves of a temperature control system, the input position and the outputtemperature are converted to electrical signals. The input position can be converted to avoltage by a potentiometer , a variable resistor, and the output temperature can be converted to a voltage by a thermistor , a device whose electrical resistance changes with temperature. Theﬁrst summing junction algebraically adds the signal from the input to the signal from the output, which arrives via the feedback path , the return path from the output to the summing junction. In Figure 1.5( b), the output signal is subtracted from the input signal. The result is generally called the actuating signal . However, in systems where both the input and output transducers have unity gain (that is, the transducer ampli ﬁes its input by 1), the actuating signal ’s value is equal to the actual difference between the input and the output. Under this condition, the actuating signal is called the error . The closed-loop system compensates for disturbances by measuring the output response, feeding that measurement back through a feedback path, and comparing thatresponse to the input at the summing junction. If there is any difference between the tworesponses, the system drives the plant, via the actuating signal, to make a correction. If thereis no difference, the system does not drive the plant, since the plant ’s response is already the desired response. Closed-loop systems, then, have the obvious advantage of greater accuracy than open-loop systems. They are less sensitive to noise, disturbances, and changes in theenvironment. Transient response and steady-state error can be controlled more convenientlyand with greater ﬂexibility in closed-loop systems, often by a simple adjustment of gain (ampli ﬁcation) in the loop and sometimes by redesigning the controller. We refer to the redesign as compensating the system and to the resulting hardware as a compensator . On the other hand, closed-loop systems are more complex and expensive than open-loop systems. Astandard, open-loop toaster serves as an example: It is simple and inexpensive. A closed-looptoaster oven is more complex and more expensive since it has to measure both color (through light re ﬂectivity) and humidity inside the toaster oven. Thus, the control systems engineer must consider the trade-off between the simplicity and low cost of an open-loop system and the accuracy and higher cost of a closed-loop system. In summary, systems that perform the previously described measurement and correction are called closed-loop, or feedback control, systems. Systems that do nothave this property of measurement and correction are called open-loop systems. Computer-Controlled Systems In many modern systems, the controller (or compensator) is a digital computer. Theadvantage of using a computer is that many loops can be controlled or compensated by thesame computer through time sharing. Furthermore, any adjustments of the compensatorparameters required to yield a desired response can be made by changes in software ratherthan hardware. The computer can also perform supervisory functions, such as schedulingmany required applications. For example, the space shuttle main engine (SSME) controller,which contained two digital computers, alone controlled numerous engine functions. It monitored engine sensors that provided pressures, temperatures, ﬂow rates, turbopump speed, valve positions, and engine servo valve actuator positions. The controller further provided closed-loop control of thrust and propellant mixture ratio, sensor excitation, valveactuators, spark igniters, as well as other functions ( Rockwell International ,1984 ).8 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:28 1.4 Analysis and Design Objectives In Section 1.1 we brie ﬂy alluded to some control system performance speci ﬁcations, such as transient response and steady-state error. We now expand upon the topic of performance and place it in perspective as we de ﬁne our analysis and design objectives. Analysis is the process by which a system ’s performance is determined. For example, we evaluate its transient response and steady-state error to determine if they meet the desiredspeciﬁcations. Design is the process by which a system ’s performance is created or changed. For example, if a system ’s transient response and steady-state error are analyzed and found not to meet the speci ﬁcations, then we change parameters or add additional components to meet the speci ﬁcations. A control system is dynamic: It responds to an input by undergoing a transient response before reaching a steady-state response that generally resembles the input. Wehave already identi ﬁed these two responses and cited a position control system (an elevator) as an example. In this section, we discuss three major objectives of systems analysis anddesign: producing the desired transient response, reducing steady-state error, and achievingstability. We also address some other design concerns, such as cost and the sensitivity of system performance to changes in parameters. Transient Response Transient response is important. In the case of an elevator, a slow transient response makes passengers impatient, whereas an excessively rapid response makes them uncomfortable.If the elevator oscillates about the arrival ﬂoor for more than a second, a disconcerting feeling can result.Transient response is also important for structuralreasons: Too fast a transient response could causepermanent physical damage. In a computer, transientresponse contributes to the time required to read from or write to the computer ’s disk storage (see Figure 1.6). Since reading and writing cannot take place until the head stops, the speed of the read/write head ’s movement from one track on the disk to another in ﬂuences the overall speed of the computer. In this book, we establish quantitative de ﬁnitions for transient response. We then analyze the system for itsexisting transient response. Finally, we adjust parame- ters or design components to yield a desired transient response —ourﬁrst analysis and design objective. Steady-State Response Another analysis and design goal focuses on the steady-state response. As we have seen,this response resembles the input and is usually what remains after the transients havedecayed to zero. For example, this response may be an elevator stopped near the fourthﬂoor or the head of a disk drive ﬁnally stopped at the correct track. We are concerned about the accuracy of the steady-state response. An elevator must be level enough withtheﬂoor for the passengers to exit, and a read/write head not positioned over the commanded track results in computer errors. An antenna tracking a satellite mustkeep the satellite well within its beamwidth in order not to lose track. In this text we deﬁne steady-state errors quantitatively, analyze a system’ s steady-state error, and then design corrective action to reduce the steady-state error —our second analysis and design objective. FIGURE 1.6 Computer hard disk drive, showing disks and read/write head1.4 Analysis and Design Objectives 9WEBC01 10/28/2014 14:10:28 Stability Discussion of transient response and steady-state error is moot if the system does not have stability . In order to explain stability, we start from the fact that the total response of a system is the sum of the natural response and the forced response . When you studied linear differential equations, you probably referred to these responses as the homogeneous and the particular solutions , respectively. Natural response describes the way the system dissipates or acquires energy. The form or nature of this response is dependent only on the system, not the input. On the other hand, the form or nature of the forced response is dependent on theinput. Thus, for a linear system, we can write Total response Natural response Forced response 1.1 2 For a control system to be useful, the natural response must (1) eventually approach zero, thus leaving only the forced response, or (2) oscillate. In some systems, however, thenatural response grows without bound rather than diminish to zero or oscillate. Eventually,the natural response is so much greater than the forced response that the system is no longer controlled. This condition, called instability , could lead to self-destruction of the physical device if limit stops are not part of the design. For example, the elevator would crash through theﬂoor or exit through the ceiling; an aircraft would go into an uncontrollable roll; or an antenna commanded to point to a target would rotate, line up with the target, but then beginto oscillate about the target with growing oscillations and increasing velocity until the motor or ampli ﬁers reached their output limits or until the antenna was damaged structurally. A time plot of an unstable system would show a transient response that grows without boundand without any evidence of a steady-state response. Control systems must be designed to be stable. That is, their natural response must decay to zero as time approaches in ﬁnity, or oscillate. In many systems the transient response you see on a time response plot can be directly related to the natural response.Thus, if the natural response decays to zero as time approaches in ﬁnity, the transient response will also die out, leaving only the forced response. If the system is stable, theproper transient response and steady-state error characteristics can be designed. Stability isour third analysis and design objective. Other Considerations The three main objectives of control system analysis and design have already beenenumerated. However, other important considerations must be taken into account. Forexample, factors affecting hardware selection, such as motor sizing to ful ﬁll power requirements and choice of sensors for accuracy, must be considered early in the design. Finances are another consideration. Control system designers cannot create designs without considering their economic impact. Such considerations as budget allocations andcompetitive pricing must guide the engineer. For example, if your product is one of akind, you may be able to create a design that uses more expensive components withoutappreciably increasing total cost. However, if your design will be used for many copies,slight increases in cost per copy can translate into many more dollars for your company topropose during contract bidding and to outlay before sales. 2You may be confused by the words transient vs.natural , and steady-state vs.forced . If you look at Figure 1.2, you can see the transient and steady-state portions of the total response as indicated. The transient response is the sum of the natural and forced responses, while the natural response is large. If we plotted the natural response by itself, wewould get a curve that is different from the transient portion of Figure 1.2. The steady-state response of Figure 1.2is also the sum of the natural and forced responses, but the natural response is small. Thus, the transient and steady-state responses are what you actually see on the plot; the natural and forced responses are the underlying mathematical components of those responses.10 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:28 Another consideration is robust design. System parameters considered constant during the design for transien t response, steady-state error s, and stability change over time when the actual system is built. Thus, the performance of the system also changes over time and will not be consistent with your design. Unfortunately, the relationshipbetween parameter changes and their effect on performance is not linear. In some cases,even in the same system, changes in parameter values can lead to small or large changesin performance, depending on the system ’s nominal operating point and the type of design used. Thus, the engineer wants to creat e a robust design so that the system will not be sensitive to parameter changes. We disc uss the concept of system sensitivity to parameter changes in Chapters 7 and 8. This concept, then, can be used to test a design forrobustness. Case Study Introduction to a Case StudyIntroduction to a Case Study Now that our objectives are stated, how do we meet them? In this section we will look at an example of a feedback control system. The system introduced here will be used in subsequent chapters as a running case study to demonstrate the objectives of those chapters. A colored background like this will identify the case study section at the end ofeach chapter. Section 1.5, which follows this ﬁrst case study, explores the design process that will help us build our system. Antenna Azimuth: An Introduction to Position Control Systems A position control system converts a position input command to a position output response. Position control systems ﬁnd widespread applications in antennas, robot arms, and computer disk drives. The radio telescope antenna in Figure 1.7 is one exampleof a system that uses position control systems. In this section, we will look in detail at anantenna azimuth position control system that could be used to position a radio telescopeantenna. We will see how the system works and how we can effect changes in itsperformance. The discussion here will be on a qualitative level, with the objective of getting an intuitive feeling for the systems with which we will be dealing. An antenna azimuth position control system is shown in Figure 1.8( a), with a more detailed layout and schematic in Figures 1.8( b) and 1.8( c), respectively. Figure 1.8( d) shows a functional block diagram of the system. The functions are shown above the blocks, and the required hardware is indicated inside the blocks. Parts of Figure 1.8 are repeated on the front endpapers for future reference. The purpose of this system is to have the azimuth angle output of the antenna, θ o t, follow the input angle of the potentiometer, θi t. Let us look at Figure 1.8( d) and describe how this system works. The input command is an angular displacement. The potentiometerconverts the angular displacement into a voltage. Similarly, the output angular displacementis converted to a voltage by the potentiometer in the feedback path. The signal and powerampli ﬁers boost the difference between the input and output voltages. This ampli ﬁed actuating signal drives the plant. The system normally operates to drive the error to zero. When the input and output match, the error will be zero, and the motor will not turn. Thus, the motor isdriven only when the output and the input do not match. The greater the difference between the input and the output, the larger the motor input voltage, and the faster the motor will turn. Peter Menzel FIGURE 1.7 The search for extraterrestrial life is being carried out with radio antennaslike the one pictured here. A radio antenna is an example of a system with position controlsCase Study 11WEBC01 10/28/2014 14:10:28 FIGURE 1.8 Antenna azimuth position control system: a.system concept; b.detailed layout; c.schematic (ﬁgure continues )(a)θi(t) Desired azimuth angle inputPotentiometer θo(t) Azimuth angle outputAntenna (b)Motorθi(t) Desired azimuth angle input Differential amplifier and power amplifier PotentiometerPotentiometer θo(t) Azimuth angle outputAntenna –+ Differential and power amplifier KPotentiometer Armature resistance Armature Potentiometer Gearθi(t) θo(t) Fixed field +–Inertia Viscous dampingGear GearMotor –+Amplifiers (c)12 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:29 If we increase the gain of the signal ampliﬁ er, will there be an increase in the steady-state value of the output? If the gain is increased, then for a given actuating signal, the motor will be driven harder. However, the motor will still stop when the actuating signal reaches zero, that is, when the output matches the input. The difference in the response, however, will be in the transients. Since the motor is driven harder, it turns faster toward its ﬁnal position. Also, because of the increased speed, increased momentum could cause themotor to overshoot the ﬁnal value and be forced by the system to return to the commanded position. Thus, the possibility exists for a transient response that consists of damped oscillations (that is, a sinusoidal response whose amplitude diminishes with time) about the steady-state value if the gain is high. The responses for low gain and high gain areshown in Figure 1.9. We have discussed the transient response of the position control system. Let us now direct our attention to the steady-state position to see how closely the output matches theinput after the transients disappear. We de ﬁne steady-state error as the difference between the input and the output after the transients have effectively disappeared. The de ﬁnition holds equally well for step, ramp, and other types of inputs. Typically, the steady-state error decreases with anincrease in gain and increases with a decrease in gain. Figure 1.9 shows zero error in thesteady-state response; that is, after the transients have disappeared, the output positionSignal and power amplifiersMotor, load, and gearsAngular inputAngular outputError or Actuating signalVoltage proportional to input + –Input transducer Summing junction Voltage proportional to outputControllerPlant or Process Sensor (output transducer) PotentiometerPotentiometer (d)FIGURE 1.8 (Continued ) d.functional block diagram Output with low gainOutput with high gain Input TimeResponse FIGURE 1.9 Response of a position control system, showing effect of high and low controller gain on the output responseCase Study 13WEBC01 10/28/2014 14:10:29 1.5 The Design Process In this section, we establish an orderly sequence for the design of feedback control systems that will be followed as we progress through the rest of the book. Figure 1.10 shows thedescribed process as well as the chapters in which the steps are discussed. The antenna azimuth position control system discussed in the last section is representative of control systems that must be analyzed and designed. Inherent inFigure 1.10 is feedback and communication during each phase. For example, if testing(Step 6) shows that requirements have not been met, the system must be redesigned andretested. Sometimes requirements are con ﬂicting and the design cannot be attained. In these cases, the requirements have to be respeci ﬁed and the design process repeated. Let us now elaborate on each block of Figure 1.10. Step 1: Transform Requirements Into a Physical System We begin by transforming the requirements into a physical system. For example, in theantenna azimuth position control system, the requirements would state the desire to position Determine a physical system and specifications from the requirements.Transform the physical system into a schematic.Use the schematic to obtain a block diagram, signal-flow diagram, or state-space representation.If multiple blocks, reduce the block diagram to a single block or closed-loop system.Analyze, design, and test to see that requirements and specifications are met. Chapter 1 Chapters 2, 3 Chapter 13Chapter 5 Chapter 13Chapters 4, 6–12 Chapter 13Analog: Digital:Draw a functional block diagram.Step 1 Step 2 Step 3 Step 4 Step 5 Step 6 FIGURE 1.10 The control system design processequals the commanded input position. In some systems, the steady-state error will not be zero; for these systems, a simple gain adjustment to regulate the transient response is either not effective or leads to a trade-off between the desired transient response and the desired steady-state accuracy. To solve this problem, a controller with a dynamic response, such as an electrical ﬁlter, is used along with an ampli ﬁer. With this type of controller, it is possible to design both the required transient response and the required steady-state accuracy without thetrade-off required by a simple setting of gain. However, the controller is now morecomplex. The ﬁlter in this case is called a compensator. Many systems also use dynamic elements in the feedback path along with the output transducer to improve system performance. An animation PowerPoint presentation (PPT) demonstrating this system is available for instructors at www.wiley.com/college/nise . See Antenna (Ch. 1 ). In summary, then, our design objectives and the system’ s performance revolve around the transient response, the steady-state error, and stability. Gain adjustments canaffect performance and sometimes lead to trade-offs between the performance criteria.Compensators can often be designed to achieve performance speci ﬁcations without the need for trade-offs. Now that we have stated our objectives and some of the methodsavailable to meet those objectives, we describe the orderly progression that leads us to the ﬁnal system design.14 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:29 the antenna from a remote location and describe such features as weight and physical dimensions. Using the requirements, design speci ﬁcations, such as desired transient response and steady-state accuracy, are determined. Perhaps an overall concept, such as Figure 1.8( a), would result. Step 2: Draw a Functional Block Diagram The designer now translates a qualitative description of the system into a functional blockdiagram that describes the component parts of the system (that is, function and/or hardware)and shows their interconnection. Figure 1.8( d) is an example of a functional block diagram for the antenna azimuth position control system. It indicates functions such as inputtransducer and controller, as well as possible hardware descriptions such as ampli ﬁers and motors. At this point the designer may produce a detailed layout of the system, such as that shown in Figure 1.8( b), from which the next phase of the analysis and design sequence, developing a schematic diagram, can be launched. Step 3: Create a Schematic As we have seen, position control system s consist of electrical, mechanical, and electromechanical components . After producing the description of a physical system, the control systems engineer transforms th e physical system into a schematic diagram. The control system designer can begin with t he physical description, as contained in Figure 1.8( a), to derive a schematic. The engineer must make approximations about the system and neglect certain phenomena, or else the schematic will be unwieldy, making it difﬁcult to extract a useful mathematical model during the next phase of the analysis and design sequence. The designer starts with a simple schematic representation and, at subsequent phases of the analysis and design sequence, checks the assumptions made about the physical system through analysis and computer simulation. If the schematic istoo simple and does not adequately account for observed behavior, the control systemsengineer adds phenomena to the schematic that were previously assumed negligible. Aschematic diagram for the antenna azimuth position control system is shown inFigure 1.8( c). When we draw the potentiometers, we make our ﬁrst simplifying assumption by neglecting their friction or inertia. These mechanical characteristics yield a dynamic, rather than an instantaneous, response in the output voltage. We assume that these mechanical effects are negligible and that the voltage across a potentiometer changes instantaneously asthe potentiometer shaft turns. A differential ampli ﬁer and a power ampli ﬁer are used as the controller to yield gain and power ampli ﬁcation, respectively, to drive the motor. Again, we assume that the dynamics of the ampli ﬁers are rapid compared to the response time of the motor; thus, we model them as a pure gain, K. A dc motor and equivalent load produce the output angular displacement. The speed of the motor is proportional to the voltage applied to the motor ’sarmature circuit . Both inductance and resistance are part of the armature circuit. In showing just the armatureresistance in Figure 1.8( c), we assume the effect of the armature inductance is negligible for a dc motor. The designer makes further assumptions about the load. The load consists of a rotating mass and bearing friction. Thus, the model consists of inertia andviscous damping whose resistive torque increases with speed, as in an automobile ’s shock absorber or a screen door damper. The decisions made in developing the schematic stem from knowledge of the physical system, the physical laws governing the system ’s behavior, and practical experience . These decisions are not easy; however, as you acquire more design experience, you will gain theinsight required for this dif ﬁcult task.1.5 The Design Process 15WEBC01 10/28/2014 14:10:29 Step 4: Develop a Mathematical Model (Block Diagram) Once the schematic is drawn, the designer uses physical laws, such as Kirchhoff ’s laws for electrical networks and Newton’ s law for mechanical systems, along with simplifying assumptions, to model the system mathematically. These laws are Kirchhoff ’s and Newton’ s laws lead to mathematical models that describe the relationship between the input and output of dynamic systems. One such model is the linear, time-invariant differential equation , Eq. (1.2): dmc t dtndn 1dm 1c t dtn 1∙∙∙d0c tbmdmr t dtmbm 1dm 1r t dtm 1∙∙∙b0r t 1.24 Many systems can be approximately described by this equation, which relates the output, c(t), to the input, r(t), by way of the system parameters, aiandbj. We assume the reader is familiar with differential equations. Problems and a bibliography are provided at the end of the chapter for you to review this subject. Simplifying assumptions made in the process of obtaining a mathematical model usually leads to a low-order form of Eq. (1.2). Without the assumptions the system model could be of high order or described with nonlinear, time-varying, or partial differentialequations. These equations complicate the design process and reduce the designer ’s insight. Of course, all assumptions must be checked and all simpli ﬁcations justi ﬁed through analysis or testing. If the assumptions for simpli ﬁcation cannot be justi ﬁed, then the model cannot be simpli ﬁed. We examine some of these simplifying assumptions in Chapter 2. In addition to the differential equation, the transfer function is another way of mathematically modeling a system. The model is derived from the linear, time-invariantdifferential equation using what we call the Laplace transform . Although the transfer function can be used only for linear systems, it yields more intuitive information than thedifferential equation. We will be able to change system parameters and rapidly sense theeffect of these changes on the system response. The transfer function is also useful inmodeling the interconnection of subsystems by forming a block diagram similar toFigure 1.8( d) but with a mathematical function inside each block. Still another model is the state-space representation . One advantage of state-space methods is that they can also be used for systems that cannot be described by lineardifferential equations. Further, state-space methods are used to model systems forsimulation on the digital computer. Basically, this representation turns an nth-order differential equation into nsimultaneous ﬁrst-order differential equations. Let this description sufﬁ ce for now; we describe this approach in more detail in Chapter 3.Kirchhoff's voltage law The sum of voltages around a closed path equals zero. Kirchhoff's current law The sum of electric currents ﬂowing from a node equals zero. Newton's laws The sum of forces on a body equals zero;3the sum of moments on a body equals zero. 3Alternately,Pforces Ma. In this text the force, Ma, will be brought to the left-hand side of the equation to yieldPforces 0( D’Alembert ’s principle). We can then have a consistent analogy between force and voltage, and Kirchhoff ’s and Newton ’s laws (that is,Pforces 0;Pvoltages 0). 4The right-hand side of Eq. (1.2) indicates differentiation of the input, r(t). In physical systems, differentiation of the input introduces noise. In Chapters 3 and 5 we show implementations and interpretations of Eq. (1.2) that do not require differentiation of the input.16 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:30 Finally, we should mention that to produce the mathematical model for a system, we require knowledge of the parameter values, such as equivalent resistance, inductance, mass, and damping, which is often not eas y to obtain. Analysis, measurements, or speci ﬁcations from vendors are sources that the control systems engineer may use to obtain the parameters. Step 5: Reduce the Block Diagram Subsystem models are interconnected to form block diagrams of larger systems, as in Figure 1.8( d), where each block has a mathematical description. Notice that many signals, such as proportional voltage s and error, are internal to the system. There are also two signals —angular input and angular output —that are external to the system. In order to evaluate system response in this example, we need to reduce this large system ’s block diagram to a single block with a mathematical description that represents the system from its input to its output, as shown inFigure 1.11. Once the block diagram is reduced, we are ready to analyze anddesign the system. Step 6: Analyze and Design The next phase of the process, following block diagram reduction, is analysis and design. Ifyou are interested only in the performance of an individual subsystem, you can skip theblock diagram reduction and move immediately into analysis and design. In this phase, theengineer analyzes the system to see if the response speci ﬁcations and performance requirements can be met by simple adjustments of system parameters. If speci ﬁcations cannot be met, the designer then designs additional hardware in order to effect a desiredperformance. Test input signals are used, both analytically and during testing, to verify the design. It is neither necessarily practical nor illuminating to choose complicated inputsignals to analyze a system’ s performance. Thus, the engineer usually selects standard test inputs. These inputs are impulses, steps, ramps, parabolas, and sinusoids, as shown inTable 1.1. Animpulse is inﬁnite at t0 and zero elsewhere. The area under the unit impulse is 1. An approximation of this type of waveform is used to place initial energy into a system sothat the response due to that initial energy is only the transient response of a system. Fromthis response the designer can derive a mathematical model of the system. Astepinput represents a constant command , such as position, velocity, or acceleration. Typically, the step input command is of the same form as the output. For example, if thesystem ’s output is position, as it is for the antenna azimuth position control system, the step input represents a desired position, and the output represents the actual position. If the system ’s output is velocity, as is the spindle speed for a video disc player, the step input represents a constant desired speed, and the output represents the actual speed. The designer uses step inputs because both the transient response and the steady-state response are clearly visible andcan be evaluated. The ramp input represents a linearly increasing command . For example, if the system ’s output is position, the input ramp represents a linearly increasing position, such as that found when tracking a satellite moving across the sky at constant speed. If the system ’s output is velocity, the input ramp represents a linearly increasing velocity. The response toan input ramp test signal yields additional information about the steady-state error. The previous discussion can be extended to parabolic inputs, which are also used to evaluate a system ’s steady-state error. Sinusoidal inputs can also be used to test a physical system to arrive at a mathematical model. We discuss the use of this waveform in detail in Chapters 10 and 11.Mathematical descriptionAngular outputAngular input FIGURE 1.11 Equivalent block diagram for the antenna azimuth position control system1.5 The Design Process 17WEBC01 10/28/2014 14:10:32 We conclude that one of the basic analysis and design requirements is to evaluate the time response of a system for a given input. Throughout the book you will learn numerous methods for accomplishing this goal. The control systems engineer must take into consideration other characteristics about feedback control systems. For example, control system behavior is altered by ﬂuctuations in component values or system parameters. These variations can be caused by temperature, pressure, or other environmental changes. Systems must be built so thatexpected ﬂuctuations do not degrade performance beyond speci ﬁed bounds. A sensitivity analysis can yield the percentage of change in a speci ﬁcation as a function of a change in a system parameter. One of the designer ’s goals, then, is to build a system with minimum sensitivity over an expected range of environmental changes. In this section we looked at some control systems analysis and design considerations. We saw that the designer is concerned about transient response, steady-state error, stability, and sensitivity. The text pointed out that although the basis of evaluating system performance is the differential equation, other methods, such as transfer functions and statespace, will be used. The advantages of these new techniques over differential equations willbecome apparent as we discuss them in later chapters.TABLE 1.1 Test waveforms used in control systems Input Function Description Sketch Use Impulse δ t δ t∞for 0  <t<0 0 elsewhere Z0 0 δ tdt1f(t) tδ(t)Transient response Modeling Step u t u t1 for t>0 0 for t<0f(t) tTransient responseSteady-state error Ramp tu t tu ttfort0 0 elsewheref(t) tSteady-state error Parabola 1 2t2u t12t 2u t12t 2fort0 0 elsewheref(t) tSteady-state error Sinusoid sin ωt f(t) tTransient response ModelingSteady-state error18 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:32 1.6 Computer-Aided Design Now that we have discussed the analysis and design sequence, let us discuss the use of the computer as a computational tool in this sequence. The computer plays an important role inthe design of modern control systems. In the past, control system design was labor intensive.Many of the tools we use today were implemented through hand calculations or, at best,using plastic graphical aid tools. The process was slow, and the results not always accurate.Large mainframe computers were then used to simulate the designs. Today we are fortunate to have computers and software that remove the drudgery from the task. At our own desktop computers, we can perform analysis, design, andsimulation with one program. With the ability to simulate a design rapidly, we can easilymake changes and immediately test a new d esign. We can play what-if games and try alternate solutions to see if they yield bett er results, such as reduced sensitivity to parameter changes. We can include nonlinear ities and other effects and test our models for accuracy. MATLAB The computer is an integral part of modern control system design, and many computationaltools are available for your use. In this book we use MATLAB and the MATLAB ControlSystem Toolbox, which expands MATLAB to include control system– speciﬁc commands. In addition, presented are several MATLAB enhancements that give added functionality toMATLAB and the Control Systems Toolbox. Included are (1) Simulink, which uses agraphical user interface (GUI); (2) the LTI Viewer, which permits measurements to be madedirectly from time and frequency response curves; (3) the SISO Design Tool, a convenientand intuitive analysis and design tool; and (4) the Symbolic Math Toolbox, which saves labor when making symbolic calculations required in control system analysis and design. Some of these enhancements may require additional software available fromThe MathWorks, Inc. MATLAB is presented as an alternate method of solving control system problems. You are encouraged to solve problems ﬁrst by hand and then by MATLAB so that insight is not lost through mechanized use of computer programs. To this end, many examplesthroughout the book are solved by hand, followed by suggested use of MATLAB. As an enticement to begin using MATLAB, simple program statements that you can try are suggested throughout the chapters at appropriate locations. Throughout the book,various icons appear in the margin to identify MATLAB references that direct you to theproper program in the proper appendix and tell you what you will learn. Selected end-of-chapter problems and Case Study Challenges to be solved using MATLAB have also beenmarked with appropriate icons. The following list itemizes the speci ﬁc components of MATLAB used in this book, the icon used to identify each, and the appendix in which adescription can be found: MATLAB/Control System Toolbox tutorials and code are found in Appendix B and identiﬁ ed in the text with the MATLAB icon shown in the margin. Simulink tutorials and diagrams are found in Appendix C andidenti ﬁed in the text with the Simulink icon shown in the margin. MATLAB GUI tools, tutorials, and examples are in Appendix E atwww.wiley.com/college/nise and identi ﬁed in the text with the GUI Tool icon shown in the margin. These tools consist of the LTIViewer and the SISO Design Tool.1.6 Computer-Aided Design 19WEBC01 10/28/2014 14:10:33 Symbolic Math Toolbox tutorials and code are found in Appendix F atwww.wiley.com/college/nise and identi ﬁed in the text with the Symbolic Math icon shown in the margin. MATLAB code itself is not platform speci ﬁc. The same code runs on PCs and workstations that support MATLAB. Although there are differences in installing and managing MATLAB ﬁles, we do not address them in this book. Also, there are many more commands in MATLAB and the MATLAB toolboxes than are covered in the appendixes. Pleaseexplore the bibliographies at the end of the applicable appendixes to ﬁnd out more about MATLAB ﬁle management and MATLAB instructions not covered in this textbook. LabVIEW LabVIEW is a programming environment presented as an alternative to MATLAB. This graphical alternative produces front panels of virtual instruments on your computer that are pictorial reproductions of hardware instruments, such as waveform generators oroscilloscopes. Underlying the front panels are block diagrams. The blocks containunderlying code for the controls and indicators on the front panel. Thus, a knowledge ofcoding is not required. Also, parameters can be easily passed or viewed from the front panel. A LabVIEW tutorial is in Appendix D and all LabVIEW material is identiﬁ ed with the LabVIEW icon shown in the margin. You are encouraged to use computational aids throughout this book. Those not using MATLAB or LabVIEW should consult Appendix H at www.wiley.com/college/nise for a discussion of other alternatives. Now that we have introduced control systems to you and established a need for computational aids to perform analysis and design, we will concludewith a discussion of your career as a control systems engineer and look at the opportunitiesand challenges that await you. 1.7 The Control Systems Engineer Control systems engineering is an exciting ﬁeld in which to apply your engineering talents, because it cuts across numerous disciplines and numerous functions within thosedisciplines. The control engineer can be found at the top level of large projects, engaged atthe conceptual phase in determining or implementing overall system requirements. Theserequirements include total system performance speci ﬁcations, subsystem functions, and the interconnection of these functions, including interface requirements, hardware andsoftware design, and test plans and procedures. Many engineers are engaged in only one area, such as circuit design or software development. However, as a control systems engineer, you may ﬁnd yourself working in a broad arena and interacting with people from numerous branches of engineering and thesciences. For example, if you are working on a biological system, you will need to interactwith colleagues in the biological sciences, mechanical engineering, electrical engineering,and computer engineering, not to mention mathematics and physics. You will be workingwith these engineers at all levels of project development from concept through design and,ﬁnally, testing. At the design level, the control systems engineer can be performinghardware selection, design, and interface, including total subsystem design to meet speci ﬁed requirements. The control engineer can be working with sensors and motors as well as electronic, pneumatic, and hydraulic circuits. The space shuttle provides another example of the diversity required of the systems engineer. In the previous section, we showed that the space shuttle ’s control systems cut across many branches of science: orbital mechanics and propulsion, aerodynamics,20 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:33 electrical engineering, and mechanical engineering. Whether or not you work in the space program, as a control systems engineer you will apply broad-based knowledge to the solution of engineering control problems. You will have the opportunity to expand yourengineering horizons beyond your university curriculum. You are now aware of future opportunities. But for now, what advantages does this course offer to a student of control systems (other than the fact that you need it to graduate)?Engineering curricula tend to emphasize bottom-up design. That is, you start from the components, develop circuits, and then assemble a product. In top-down design, a high-level picture of the requirements is ﬁrst formulated; then the functions and hardware required to implement the system are determined. You will be able to take a top-down systems approachas a result of this course. A major reason for not teaching top-down design throughout the curriculum is the high level of mathematics initially required for the systems approach. For example, controlsystems theory, which requires differential equations, could not be taught as a lower-divisioncourse. However, while progressing through bottom-up design courses, it is dif ﬁcult to see how such design ﬁts logically into the large picture of the product development cycle. After completing this control systems course, you will be able to stand back and see how your previous studies ﬁt into the large picture. Your ampli ﬁer course or vibrations course will take on new meaning as you begin to see the role design work plays as part ofproduct development. For example, as engineers, we want to describe the physical worldmathematically so that we can create systems that will bene ﬁt humanity. You will ﬁnd that you have indeed acquired, through your previous courses, the ability to model physicalsystems mathematically, although at the time you might not have understood where in theproduct development cycle the modeling ﬁts. This course will clarify the analysis and design procedures and show you how the knowledge you acquired ﬁts into the total picture of system design. Understanding control systems enables students from all branches of engineering to speak a common language and develop an appreciation and working knowledge of the otherbranches. You will ﬁnd that there really is not much difference among the branches of engineering as far as the goals and applications are concerned. As you study controlsystems, you will see this commonality. Summary Control systems contribute to every aspect of modern society. In our homes we ﬁnd them in everything from toasters to heating systems to DVD players. Control systems also havewidespread applications in science and industry, from steering ships and planes to guidingmissiles. Control systems also exist naturally; our bodies contain numerous control systems.Even economic and psychological system representations have been proposed based oncontrol system theory. Control systems are used where power gain, remote control, orconversion of the form of the input is required. A control system has an input ,aprocess , and an output . Control systems can be open loop orclosed loop . Open-loop systems do not monitor or correct the output for disturbances; however, they are simpler and less expensive than closed-loop systems.Closed-loop systems monitor the output and compare it to the input. If an error is detected,the system corrects the output and hence corrects the effects of disturbances. Control systems analysis and design focuses on three primary objectives: 1.Producing the desired transient response 2.Reducing steady-state errors 3.Achieving stabilitySummary 21WEBC01 10/28/2014 14:10:33 A system must be stable in order to produce the proper transient and steady-state response. Transient response is important because it affects the speed of the system and inﬂuences human patience and comfort, not to mention mechanical stress. Steady-state response determines the accuracy of the control system; it governs how closely the outputmatches the desired response. The design of a control system follows these steps: Step 1 Determine a physical system and speci ﬁcations from requirements. Step 2 Draw a functional block diagram. Step 3 Represent the physical system as a schematic. Step 4 Use the schematic to obtain a mathematical model, such as a block diagram. Step 5 Reduce the block diagram. Step 6 Analyze and design the system to meet speci ﬁed requirements and speci ﬁca- tions that include stability, transient response, and steady-state performance. In the next chapter we continue through the analysis and design sequence and learn how touse the schematic to obtain a mathematical model. Review Questions 1.Name three applications for feedback control systems. 2.Name three reasons for using feedback control systems and at least one reason for notusing them. 3.Give three examples of open-loop systems. 4.Functionally, how do closed-loop systems differ from open-loop systems? 5.State one condition under which the error signal of a feedback control system wouldnot be the difference between the input and the output. 6.If the error signal is not the difference between input and output, by what general namecan we describe the error signal? 7.Name two advantages of having a computer in the loop. 8.Name the three major design criteria for control systems. 9.Name the two parts of a system ’s response. 10.Physically, what happens to a system that is unstable? 11.Instability is attributable to what part of the total response? 12.Describe a typical control system analysis task. 13.Describe a typical control system design task. 14.Adjustments of the forward path gain can cause changes in the transient response.True or false? 15.Name three approaches to the mathematical modeling of control systems. 16.Brieﬂy describe each of your answers to Question 15. Problems 1.A variable resistor, called a potentiometer ,i ss h o w n in Figure P1.1. The resistance is varied by moving awiper arm along a ﬁxed resistance. The resistance from AtoCisﬁxed, but the resistance from BtoC varies with the position of the wiper arm. If it takes 10turns to move the wiper arm from AtoC,d r a wa block diagram of the potentiometer showing the inputvariable, the output variable, and (inside the block)the gain, which is a constant and is the amountby which the input is multiplied to obtain the output.An animation PowerPoint presentation (PPT)demonstrating this system i s available for instructors atwww.wiley.com/college/nise .S e e Potentiometer . [Section 1.4: Introduction to a Case Study]22 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:33 –+50 voltsθi(t) Input angle, Output voltage, v o(t)A C 50 voltsB FIGURE P1.1 Potentiometer 2.A temperature control system operates by sensing the difference between the thermostat setting and the actualtemperature and then opening a fuel valve an amount proportional to this difference. Draw a functional closed- loop block diagram similar to Figure 1.8( d) identifying the input and output transducers, the controller, and theplant. Further, identify the input and output signals of allsubsystems previously described. [Section 1.4: Introduc-tion to a Case Study] 3.An aircraft ’s attitude varies in roll, pitch, and yaw as deﬁned in Figure P1.2. Draw a functional block diagram for a closed-loop system that stabilizes the roll as follows:The system measures the actual roll angle with a gyro andcompares the actual roll angle with the desired roll angle.Theaileronsrespondtotheroll-angleerrorbyundergoinganangularde ﬂection.Theaircraftrespondstothisangular deﬂection, producing a roll angle rate. Identify the input and output transducers, the controller, and the plant.Further, identify the nature of each signal. [Section 1.4:Introduction to a Case Study] Roll anglePitch angle Aileron deflection up Yaw angley zxAileron deflection down FIGURE P1.2 Aircraft attitude de ﬁned 4.We can build a control system that will automaticallyadjustamotorcycle ’sradiovolumeasthenoisegenerated by the motorcycle changes. The noise generated by themotorcycle increases with speed. As the noise increases, the system increases the volume of the radio. Assume that the amount of noise can be represented by a voltagegenerated by the speedometer cable, and the volume of the radio is controlled by a dc voltage ( Hogan ,1988 ). If the dc voltage represents the desired volume disturbed by the motorcycle noise, draw the functional block diagramof the automatic volume control system, showing theinput transducer, the volume control circuit, and thespeed transducer as blocks. Also, show the followingsignals: the desired volume as an input, the actual volumeas an output, and voltages representing speed, desired volume, and actual volume. An animation PowerPoint presentation (PPT) demonstrating this system is availablefor instructors at www.wiley.com/college/nise . See Motorcycle . [Section 1.4: Introduction to a Case Study] 5.A dynamometer is a device used to measure torque and speed and to vary the load on rotating devices. The dynamometer operates as follows to control the amountoftorque:Ahydraulicactuatorattachedtotheaxlepressesa tire againsta rotating ﬂywheel. The greater the displace- ment of the actuator, the greater the force that is applied tothe rotating ﬂywheel. A strain gage load cell senses the force.Thedisplacementoftheactuatoriscontrolledbyanelectrically operated valve whose displacement regulates ﬂuidﬂowing into the actuator ( D’Souza ,1988 ). Draw a functional block diagram of a closed-loop system that uses the described dynamometer to regulate the forceagainst the tire during testing. Show all signals andsystems. Include ampli ﬁers that power the valve, the valve, the actuator and load, and the tire. [Section 1.4:Introduction to a Case Study] 6.During a medical operation an anesthesiologist controlsthe depth of unconsciousness by controlling the concen-tration of iso ﬂurane in a vaporized mixture with oxygen and nitrous oxide. The depth of anesthesia is measured bythe patient ’s blood pressure. The anesthesiologist also regulates ventilation, ﬂuid balance, and the administra- tion of other drugs. In order to free the anesthesiologist to devote more time to the latter tasks, and in the interest of the patient ’s safety, we wish to automate the depth of anesthesia by automating the control of iso ﬂurane con- centration.Drawafunctionalblockdiagramofthesystemshowing pertinent signals and subsystems ( Meier ,1992 ). [Section 1.4: Introduction to a Case Study] 7.The vertical position, x(t), of a grinding wheel is controlled by a closed-loop system. The input to the system is thedesired depth of grind, and the output is the actual depth ofgrind. The difference between the desired depth and theactual depth drives the motor, resulting in a force appliedto the work. This force results in a feed velocity for thegrinding wheel (Jenkins, 1997 ). Draw a closed-loop functional block diagram for the grinding process, showing the input, output, force, and grinder feed rate. [Section 1.4: Introduction to a Case Study]Problems 23WEBC01 10/28/2014 14:10:33 8.You are given a high-speed proportional solenoid valve. A voltage proportional to the desired position of the spool is applied to the coil. The resulting magnetic ﬁeld pro- duced by the current in the coil causes the armature tomove. A push pin connected to the armature moves thespool. A linear voltage differential transformer (LVDT)thatoutputsavoltageproportionaltodisplacementsensesthe spool ’s position. This voltage can be used in a feed- back path to implement closed-loop operation ( Vaughan , 1996 ). Draw a functional block diagram of the valve, showing input and output positions, coil voltage, coilcurrent, and spool force. [Section 1.4: Introduction to aCase Study] 9.The human eye has a biological control system that varies the pupil diameter to maintain constant light intensity to the retina. As the light intensity increases, the optical nervesends a signal to the brain, which commands internal eyemuscles to decrease the pupil ’s eye diameter. When the light intensity decreases, the pupil diameter increases. a.Draw a functional block diagram of the light-pupilsystem indicating the input, output, and intermediatesignals; the sensor; the controller; and the actuator.[Section 1.4: Introduction to a Case Study] b.Under normal conditions the incident light will belarger than the pupil. If the incident light is smaller than the diameter of the pupil, the feedback path is broken ( Bechhoefer ,2005). Modify your block diagram from Part a.to show where the loop is broken. What will happen if the narrow beam of light varies in intensity,such as in a sinusoidal fashion? c.It has been found ( Bechhoefer ,2005 ) that it takes the pupil about 300 milliseconds to react to a change in theincident light. If light shines off center to the retina,describe the response of the pupil with delay present and then without delay present. 10.A Segway 5Personal Transporter (PT) (Figure P1.3) is a two-wheeled vehicle in which the human operator stands vertically on a platform. As the driver leans left, right,forward, or backward, a set of sensitive gyroscopicsensors sense the desired input. These signals are fed to a computer that ampli ﬁes them and commands motors to propel the vehicle in the desired direction. One very important feature of the PT is its safety: The systemwill maintain its vertical position within a speci ﬁed angle despite road disturbances, such as uphills and downhillsor even if the operator over-leans in any direction. Draw afunctional block diagram of the PT system that keepsthe system in a vertical position. Indicate the input and output signals, intermediate signals, and main subsys- tems. ( http://segway.com ) D.A. Winstein/Custom Medial Stock photo FIGURE P1.3 The Segway Personal Transporter (PT) 11.In humans, hormone levels, alertness, and core bodytemperature are synchronized through a 24-hourcircadian cycle. Daytime alertness is at its best whensleep/wake cycles are in sync with the circadian cycle.Thus alertness can be easily affected with a distributedwork schedule, such as the one to which astronauts are subjected. It has been shown that the human circadian cycle can be delayed or advanced through light stimulus.To ensure optimal alertness, a system is designed to trackastronauts ’circadian cycles and increase the quality of sleepduringmissions.Corebodytemperaturecanbeusedas an indicator of the circadian cycle. A computer modelwith optimum circadian body temperature variations canbe compared to an astronaut ’s body temperatures. Whenever a difference is detected, the astronaut is sub-jected to a light stimulus to advance or delay the astro-naut’s circadian cycle ( Mott,2003 ). Draw a functional blockdiagramofthesystem.Indicatetheinputandoutputsignals, intermediate signals, and main subsystems. 12.Tactile feedback is an important component in the learning of motor skills such as dancing, sports, and physical rehabilitation. A suit with white dots recognizedby a vision system to determine arm joint positions withmillimetric precision was developed. This suit is worn byboth teacher and student to provide position information.(Lieberman, 2007 ). If there is a difference between the teacher ’s positions and that of the student, vibrational feedback is provided to the student through eight strategically placed vibrotactile actuators in the wrist and arm. This placement takes advantage of a sensoryeffect known as cutaneous rabbit that tricks the subject to feel uniformly spaced stimuli in places where the 5Segway is a registered trademark of Segway, Inc. in the United States and/ or other countries.24 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:34 actuators are not present. These stimuli help the student adjust to correct the motion. In summary, the system consists of an instructor and a student having theirmovements followed by the vision system. Their move-ments are fed into a computer that ﬁnds the differences between their joint positions and provides proportionalvibrationalstrengthfeedback tothestudent.Drawablockdiagram describing the system design. 13.Some skillful drivers can drive and balance a four-wheeled vehicle on two wheels. To verify that a controlsystem can also drive a car in this fashion, a prototypeusing an RC (remote-controlled) car is equipped with afeedback control system ( Arndt ,2011 ). In a simpli ﬁed systemmodel,theroll angle atwhich the carbalanceswas calculated a priori and found to be 52.3 °. This value was used as the desired input. The desired input is compared with the actual roll angle and the difference is fed to acontroller that feeds a servomotor indicating the desiredwheel steering angle that controls the vehicle ’s roll angle on two wheels. The car ’s actual roll angle is measured using a hinged linkage that rolls along the ground next tothe vehicle and is connected to a potentiometer. Draw a block diagram indicating the system functions. Draw blocks for the system controller, the steering servo, andthe car dynamics. Indicate in the diagram the followingsignals: the desired roll angle, the steering wheel angle,and the actual car roll angle. 14.Moored ﬂoating platforms are subject to external disturbances such as waves, wind, and currents thatcause them to drift. There are certain applications,such as diving support, drilling pipe-laying, and tank-ing between ships in which precise positioning ofmoored platforms is very important ( Muñoz-Mansilla , 2011). Figure P1.4 illustrates a tethered platform inwhich side thrusters are used for positioning. A controlsystem is to be designed in which the objective is to minimize the drift, Y, and an angular deviation from the vertical axes, ϕ(not shown). The disturbances acting on the system ’s outputs are the force, F, and the torque, M, caused by the external environment. In thisproblem, the plant will have one input, the forced e l i v e r e db yt h et h r u s t e r s( F u) and two outputs, Y andϕ. Note also that this is a disturbance attenuation problem, so there is no command input. Draw a block diagram of the system indicating the disturbances F and M, the control signal F u, and the outputs Y and ϕ. Your diagram should also have blocks for a controller,the one-input two-output plant, and a block indicatinghow the disturbances affect each of the outputs. 15.In the Case Study of Section 1.4, an antenna azimuth angleis controlled, and its corresponding block diagram is shownin Figure 1.8( d) in the text. There, the sensor used to measure the antenna ’s azimuth angle is a potentiometer. a.Modifytheblockdiagramifthesensorusedtomeasurethe antenna ’s angle is an accelerometer. b.Modifytheblockdiagramifthesensorusedtomeasurethe antenna ’s angle is a gyroscope. 16.Figure P1.5 shows the topology of a photo-voltaic (PV) system that uses solar cells to supply electrical power to a residence with hybrid electric vehicle loads ( Gurkavnak , 2009). The system consists of a PV array to collect the sun ’s rays, a battery pack to store energy during the day, a dc/ac inverter to supply ac power to the load, and a bidirectionaldc/dc converter to control the terminal voltage of the solararray according to a maximum power point tracking(MPPT) algorithm. In case of sufﬁ cient solar power (solar insolation), the dc/dc converter charges the battery and thesolar array supplies power to the load through the dc/acinverter. With less or no solar energy (solar non-insolation),power is supplied from the battery to the load through thedc/dc converter and the dc/ac inverter. Thus, the dc/dcconverter must be bidirectional to be able to charge anddischarge the battery. With the MPPT controller providingthe reference voltage, the converter operates as a step-up converter (boost) to discharg e the battery if the battery is full or a step-down (buck) converter, which charges the battery if it is not full. 7 In Figure P1.5, the Inverter is controlled by the Power Manager and Controller through the CurrentController. The Power Manager and Controller directsthe Inverter to take power either from the battery,via the Bidirectional Converter, or the solar array, depending upon the time of day and the battery statesea levelY F sea floorthrusters FIGURE P1.4 Tethered platform using side thrusters for positioning6 6Muñoz-Mansilla, R., Aranda, J., Diaz, J. M., Chaos, D., and Reinoso, A. J., Applications of QFT Robust Control Techniques to Marine Systems. 9th IEEE International Conference on Control and Automation . December 19–21, 2011, pp. 378 –385. (Figure 3, p. 382).7For a description of all other operational scenarios, refer to the above-listed reference.Problems 25WEBC01 10/28/2014 14:10:34 of charge (SOC). Draw the following two functional block diagrams for this system: a.A diagram that illustrates the conversion of solar irradiation into energy stored in the battery. In that diagram, the input is the solar irradiance, r(t), and the output is the battery voltage, vb(t). b.The main diagram, in which the input is the desiredoutput voltage, v r(t), and the output is the actual inverter output voltage, vo(t). Both of these functional block diagrams should show their major components, including the PV array,MPPT controller, dc/dc converter, battery pack, dc/acinverter, current controller, and the Power Manager andController. Show all signals, including intermediatevoltages and currents, time of day, and the SOC ofthe battery. 17.Oil drilling rigs are used for drilling holes for identi ﬁ- cation of oil or natural gas sources and for extraction.An oil drilling system can be thought of as a drillinside a straw, which is placed inside a glass. The straw assembly represents t he drill string, the drill surrounded by ﬂuid, and the glass represents the volume, the annulus, around the drill string through which slurry and eventually oil will ﬂow as the drilling progresses. Assume that we want to control the drill pres- sure output, P d(t), with a reference voltage input, Vd(t). A control loop model ( Zhao, 2007) consists of a drill-pressure controller, drill motor subsystem,pulley subsystem, and drill stick subsystem. Theoutput signal of the latter, the drill pressure, P d(t), is measured using a transducer, which transmits anegative feedback voltage signal, V b(t), to the drill pressure controller. That signal is compared at theinput of the controller to the reference voltage, V r(t), Based on the error, e(t)=Vr(t)–Vb(t), the drill pressure controller sets the desired drill speed, ωd, which is the input to the drill motor subsystem whoseoutput is the actual drill speed, ω a, which is the input to the pulley subsystem. The output of the pulleysystem drives the drill stick subsystem. The drill stickHEV BD Converter Controller GD Bidirectional ConverterSOC TimePower Manager and ControllerCurrent ControllerIPV LP CcVcVo VuIoLo Iu IL Ib IO IL I* uVcIb VbIPVVPVVPV VPV*Q1 Q4 Q5 Q6Q3 Q2 GInverterPlug-in HEV ACLOADMPPT+ + –++ ––+ – – + FIGURE P1.5 Proposed solar powered residential home with plug-in hybrid electric vehicle (PHEV) loads8 8Gurkaynak, Y., Li, Z., and Khaligh, A. A Novel Grid-tied, Solar Powered Residential Home with Plug-in Hybrid Electric Vehicle (PHEV) Loads. IEEE Vehicle Power and Propulsion Conference 2009 , pp. 813 –816. (Figure 1, p. 814).26 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:34 subsystem may be severely affected by environmental conditions, which may be represented as disturbances acting between the pulley and stick subsystems. Draw a functional block diagram for the above system, showing its major components as well as allsignals. 18.Given the electric network shown in Figure P1.6.[Review] a.Write the differential equation for the network ifv tu t, a unit step. b.Solve the differential equation for the current, i(t), if there is no initial energy in the network. c.Make a plot of your solution if R=L1. R L v(t) i(t)+– FIGURE P1.6 RLnetwork 19.Repeat Problem 18 using the network shown inFigure P1.7. Assume R1Ω;L0:5H;and1=LC16. [Review] R Cv(t) i(t)L +– FIGURE P1.7 RLC network 20.Solve the following differential equations using clas-sical methods. Assume zero initial conditions.[Review] a. dx dt7x5 cos 2 t b.d2x dt26dx dt8x5 sin 3 t c.d2x dt28dx dt25x10u t 21.Solve the following differential equations usingclassical methods and the given initial conditions:[Review]a. d2x dt22dx dt2xsin2t x 02;dx dt 0  3 b.d2x dt22dx dtx5e 2tt x 02;dx dt 01 c.d2x dt24xt2 x 01;dx dt 02 PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 22.Contol of HIV/AIDS. As of 2012, the number of people living worldwide with Human Immunode ﬁciency Virus/Acquired Immune De ﬁciency Syndrome (HIV/ AIDS) was estimated at 35 million, with 2.3 million new infections per year and 1.6 million deaths due to t h ed i s e a s e( UNAIDS ,2013). Currently there is no known cure for the disease, and HIV cannot be com- pletely eliminated in an infected individual. Drugcombinations can be used to maintain the virus num-bers at low levels, which helps prevent AIDS fromdeveloping. A common treatment for HIV is the admin-istration of two types of drugs: reverse transcriptaseinhibitors (RTIs) and protease inhibitors (PIs). The amount in which each of these drugs is administered is varied according to the amount of HIV viruses in thebody ( Craig ,2004). Draw a block diagram of a feed- back system designed to control the amount of HIVviruses in an infected person. The plant input variablesare the amount of RTIs and PIs dispensed. Show blocksrepresenting the controller, the system under control,and the transducers. Label the corresponding variables at the input and output of every block. 23.Hybrid vehicle. The use of hybrid cars is becoming increasingly popular. A hybrid electric vehicle (HEV) combines electric machine(s) with an internal com-bustion engine (ICE), making it possible (along withother fuel consumption –reducing measures, such as stopping the ICE at traf ﬁc lights) to use smaller and more ef ﬁcient gasoline engines. Thus, the ef ﬁciency advantages of the electric drivetrain are obtained,while the energy needed to power the electric motoris stored in the onboard fuel tank and not in a largeand heavy battery pack. There are various ways to arrange the ﬂow of power in a hybrid car. In a serial HEV (Figure P1.8),Problems 27WEBC01 10/28/2014 14:10:34 the ICE is not connected to the drive shaft. It drives only the generator, which charges the batteries and/orsupplies power to the electric motor(s) through aninverter or a converter. The HEVs sold today are primarily of the parallel or split-power variety. If the combustion engine canturn the drive wheels as well as the generator, then thevehicle is referred to as a parallel hybrid, because both an electric motor and the ICE can drive the vehicle. Aparallel hybrid car (Figure P1.9) includes a relativelysmall battery pack (electrical storage) to put out extrapower to the electric motor when fast acceleration is needed. See ( Bosch ,5th ed., 2000 ), (Bosch ,7th ed., 2007 ), (Edelson ,2008 ), (Anderson ,2009 ) for more detailed information about HEV. As shown in Figure P1.10, split-power hybrid cars utilize a combination of series and parallel drives (Bosch ,5th ed., 2007 ). These cars use a planetary gear (3) as a split-power transmission to allow someof the ICE power to be applied mechanically to the drive. The other part is converted into electrical energy through the alternator (7) and the inverter (5) to feed theelectric motor (downstream of the transmission) and/orto charge the high-voltage battery (6). Depending upondriving conditions, the ICE, the electric motor, or bothpropel the vehicle. Draw a functional block diagram for the cruise (speed) control system of: a.A serial hybrid vehicle, showing its major compo-nents, including the speed sensor, electronic controlunit (ECU), inverter, electric motor, and vehicledynamics; as well as all signals, including the desiredvehicle speed, actual speed, control command (ECUoutput), controlled voltage (inverter output), themotive force (provided by the electric motor), andrunning resistive force; 12 b.A parallel hybrid vehicle, showing its major compo- nents, which should include also a block that represents the accelerator, engine, and motor, as well as the signals(including accelerator displacement and combinedengine/motor motive force); c.A split-power HEV, showing its major componentsand signals, including, in addition to those listedin Parts aandb, a block representing the planetary gear and its control, which, depending upondriving conditions, would allow the ICE, the elec- tric motor, or both to propel the vehicle, that is, to provide the necessary total motive force.Fuel tank Electrical storageGeneratorCombustion engine Electric motor/generator FIGURE P1.8 Serial hybrid-electric vehicle912 +–1 . internal-combustion engine; 2. tank3. planet ar y gear; 4. electric motor; 5. inverter; battery; 7 . alternator. 7 6534 FIGURE P1.10 Split-power hybrid electric vehicle11 Fuel tank Electrical storageCombustion engine Electric motor/generator FIGURE P1.9 Parallel hybrid drive10 9Mark Looper, www.Altfuels.org. Alternative Drivetrains, July 2005, http://www.altfuels.org/backgrnd/altdrive.html. Last accessed 10/13/2009. 10Mark Looper, www.Altfuels.org. Alternative Drivetrains, July 2005, http://www.altfuels.org/backgrnd/altdrive.html. Last accessed 10/13/2009.11Robert Bosch GmbH, Bosch Automotive Handbook, 7th ed. John Wiley & Sons, Ltd., UK, 2007. 12These include the aerodynamic drag, rolling resistance, and climbing resistance. The aerodynamic drag is a function of car speed, whereas the other two are proportional to car weight.28 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:35 24.Parabolic trough collector. A set of parabolic mirrors can be used to concentrate the sun’ sr a y st oh e a ta ﬂuidﬂowing in a pipe positioned at the mirrors ’focal points ( Camacho ,2012). The heated ﬂuid, such as oil, for example, is transported to a pressurized tank to be used to create steam to generate electricity or power an industrial process. Since the solar energy varieswith time of day, time of year, cloudiness, humidity,etc., a control system has to be developed in order tomaintain the ﬂuid temperature constant. The temper- ature is mainly controlled by varying the amount ofﬂuidﬂow through the pipes, but possibly also with asolar tracking mechanism that tilts the mirrors at appropriate angles. Assuming ﬁxed mirror angles, draw the func- tional block diagram of a system to maintain the ﬂuid temperature a constant. The desired and actual ﬂuid temperature difference is fed to a controller followed by an ampliﬁ er and signal conditioning circuit that varies the speed of a ﬂuid circulating pump. Label the blocks and links of your diagram, indicating all the inputs to the system, including external disturbances such as solar variations, cloud-iness, humidity, etc. Cyber Exploration Laboratory Experiment 1.1 Objective To verify the behavior of closed-loop systems as described in the Chapter 1 Case Study. Minimum Required Software Packages LabVIEW and the LabVIEW Control Design and Simulation Module. Note: While no knowledge of LabVIEW is required for this experiment, see Appendix D to learn more about LabVIEW, which will be pursued in more detail in later chapters. Prelab 1.From the discussion in the Case Study, describe the effect of the gain of a closed-loopsystem upon transient response. 2.From the discussion in the Case Study about steady-state error, sketch a graph of a stepinput superimposed with a step response output and show the steady-state error. Assumeany transient response. Repeat for a ramp input and ramp output response. Describe theeffect of gain upon the steady-state error. Lab 1.Launch LabVIEW and open Find Examples . . . under the Help tab. 2.In the NI Example Finder window, open CDEx Effect of Controller Type.vi, found by navigating to it thourgh Toolkits and Modules/Control and Simulation/Control Design/Time Analysis/CDEx Effect of Controller Type vi. 3.On the tool bar click the circulating arrows located next to the solid arrow on the left. Theprogram is now running. 4.Move the slider Controller Gain and note the effect of high and low gains. 5.Change the controller by clicking the arrows for Controller Type and repeat Step 4. Postlab 1.Correlate the responses found in the experiment with those described in your Prelab.Explore other examples provided in the LabVIEW example folders.Cyber Exploration Laboratory 29C01 10/31/2014 10:23:46 Bibliography Alternative Drivetrains, July 2005. Available at www.altfuels.org/backgrnd/altdrive.html. Accessed October 13, 2009. Anderson, S. Field Guide: Hybrid Electric Powertrains, Part 4 of 5. Automotive Design & Production . Gardner Publication, Inc. Av ailable at http://www.auto ﬁeldguide.com/articles/020904.html. Accessed October 13, 2009. Arndt, D., Bobrow, J. E., Peters, S., Iagnemma, K., and Dubowsky, S. Two-Wheel Self-Balancing of a Four-wheel Vehicle. IEEE Control Systems Magazine, April 2011, pp. 20 –37. Bahill, A. T. Bioengineering: Biomedical, Medical, and Clinical Engineering . Prentice Hall, Englewood Cliffs, NJ, 1981. Bechhoefer, J. Feedback for Physicists: A Tutorial Essay on Control. To Appear in Review of Modern Physics , July 2005, pp. 42 –45. Also available at http://www.sfu.ca/chaos/papers/2005/ rmp_reprint05.pdf. Bennett, S. A History of Control Engineering, 1800 –1930 . Peter Peregrinus, Stevenage, UK, 1979. Bode, H. W. Network Analysis and Feedback Ampli ﬁer Design . Van Nostrand, Princeton, NJ, 1945. Bosch, R. GmbH. Automotive Electrics and Automotive Electronics, 5th ed. John Wiley & Sons Ltd., UK, 2007. Bosch, R. GmbH. Bosch Automotive Handbook , 7th ed. John Wiley & Sons Ltd., UK, 2007. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems , Springer-Verlag, London, 2012. Cannon, R. H., Jr. Dynamics of Physical Systems . McGraw-Hill, New York, 1967. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. D’Azzo, J. J., and Houpis, C. H. Feedback Control System Analysis and Synthesis ,2 de d . McGraw-Hill, New York, 1966. Doebelin, E. O. Measurement Systems Application and Design , 4th ed. McGraw-Hill, New York, Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA, 1989. D’Souza, A. F. Design of Control Systems . Prentice Hall, Upper Saddle River, NJ, 1988. Edelson, J., et al. Facing the Challenges of the Current Hybrid Electric Drivetrain. SMMA Technical Conference of the Motor and Motion Association. Fall 2008. Available at www.ChorusCars.com. Franklin, G. F., Powell, J. D., and Emami-Naeini, A. Feedback Control of Dynamic Systems . Addison- Wesley, Reading, MA, 1986. Gurkaynak, Y., Li, Z., and Khaligh, A. A Novel Grid-tied, Solar Powered Residential Home with Plug-in Hybrid Electric Vehicle (PHEV) Loads. IEEE Vehicle Power and Propulsion Conference 2009, pp. 813 –816. Heller, H. C., Crawshaw, L. I., and Hammel, H. T. The Thermostat of Vertebrate Animals . Scienti ﬁc American, August 1978, pp. 102 –113. Hogan, B. J. As Motorcycle ’s Speed Changes, Circuit Adjusts Radio ’s Volume . Design News , 18, August 1988, pp. 118 –119. Hostetter, G. H., Savant, C. J., Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Jenkins, H. E., Kurfess, T. R., and Ludwick, S. J. Determination of a Dynamic Grinding Model. Journal of Dynamic Systems, Measurements, and Control , vol. 119, June 1997, pp. 289 –293. Klapper, J., and Frankle, J. T. Phase-Locked and Frequency-Feedback Systems . Academic Press, New York, 1972. Lieberman, J., and Breazeal, C. Development of a Wearable Vibrotactile Feedback Suit for Accelerated Human Motor Learning. 2007 IEEE Int. Conf. on Robotics and Automation. Roma, Italy, April 2007.30 Chapter 1 IntroductionWEBC01 10/28/2014 14:10:35 Martin, R. H., Jr. Elementary Differential Equations with Boundary Value Problems. McGraw-Hill, New York, 1984. Mayr, O. The Origins of Feedback Control . Scienti ﬁc American, October 1970, pp. 110 –118. Mayr, O. The Origins of Feedback Control . MIT Press, Cambridge, MA, 1970. Meier, R., Nieuwland, J., Zbinden, A. M., and Hacisalihzade, S. S. Fuzzy Logic Control of Blood Pressure during Anesthesia . IEEE Control Systems , December 1992, pp. 12 –17. Mott, C., et al. Modifying the Human Circadian Pacemaker Using Model-Based Predictive Control . Proceedings of the American Control Conference. Denver, CO, June 2003, pp. 453 –458. Muñoz-Mansilla, R., Aranda, J., Diaz, J. M., Chaos, D., and Reinoso, A. J. Applications of QFT Robust Control Techniques to Marine Systems. 9th IEEE International Conference on Control and Automation , December 19 –21, 2011, pp. 378 –385. Novosad, J. P. Systems, Modeling, and Decision Making. Kendall/Hunt, Dubuque, IA, 1982. Nyquist, H. Regeneration Theory. Bell System Technical Journal, January 1932. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Overbye, D. The Big Ear. Omni, December 1990, pp. 41 –48. Figure caption source for Figure 1.7. Rockwell International. Space Shuttle Transportation System , 1984 (press information). Shaw, D. A., and Turnbull, G. A. Modern Thickness Control for a Generation III Hot Strip Mill . The International Steel Rolling Conference —The Science & Technology of Flat Rolling, vol. 1. Association Technique de la Siderurgie Francaise, Deauville, France, 1 –3, June 1987. UNAIDS. GLOBAL REPORT: UNAIDS report on the global AIDS epidemic 2013. Joint United Nations Programme on HIV/AIDS (UNAIDS), 2013, p. 4. United Technologies Otis Elevator Co. The World of Otis. United Technologies Otis Elevator Co., p. 2, 1991. Figure caption source for Figure 1.3(b). United Technologies Otis Elevator Co. Tell Me About Elevators. United Technologies Otis Elevator Co., pp. 20 –25, 1991. Figure caption source for Figure 1.3(b). Vaughan, N. D., and Gamble, J. B. The Modeling and Simulation of a Proportional Solenoid Valve. Journal of Dynamic Systems, Measurements, and Control , vol. 118, March 1996, pp. 120 –125. Zhao, Q., Wang, F., Wang, W., and Deng, H. Adaptive Fuzzy Control Technology for Automatic Oil Drilling System. Proceedings of the IEEE International Conference on Automation and Logistics , China, August 18 –21, 2007. Zhou, J., Nygaard, G., Godhaven, J., Bretholtz, Ø., and Ver ﬁng, E. H. Adaptive Observer for Kick Detection and Switched Control for Bottom hole Pressure Regulation and Kick Attenuation during Managed Pressure Drilling. 2010 American Control Conference . Baltimore, MD, USA, June 30 –July 02, 2010.Bibliography 31WEBC01 10/28/2014 14:10:35 Page 32WEBC02 10/28/2014 16:18:2 Modeling in the Frequency Domain Chapter Learning Outcomes After completing this chapter, the student will be able to: Find the Laplace transform of time functions and the inverse Laplace transform (Sections 2.1 –2.2) Find the transfer function from a differential equation and solve the differentialequation using the transfer function (Section 2.3) Find the transfer function for linear, time-invariant electrical networks(Section 2.4) Find the transfer function for linear, time-invariant translational mechanicalsystems (Section 2.5) Find the transfer function for linear, time-invariant rotational mechanicalsystems (Section 2.6) Find the transfer functions for gear systems with loss and for gear systems with no loss (Section 2.7) Find the transfer function for linear, time-invariant electromechanical systems (Section 2.8) Produce analogous electrical and mechanical circuits (Section 2.9) Linearize a nonlinear system in order to ﬁnd the transfer function (Sections 2.10 –2.11)2 33WEBC02 10/28/2014 16:18:2 Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with case studies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to ﬁnd the transfer function of each subsystem. Given a model of a human leg or a nonlinear electrical circuit, you will be able tolinearize the model and then ﬁnd the transfer function. 2.1 Introduction In Chapter 1 we discussed the analysis and design sequence that included obtaining thesystem ’s schematic and demonstrated this step for a position control system. To obtain a schematic, the control systems engineer must often make many simplifying assumptions inorder to keep the ensuing model manageable and still approximate physical reality. The next step is to develop mathematical models from schematics of physical systems. We will discuss two methods: (1) transfer functions in the frequency domainand (2) state equations in the time domain. These topics are covered in this chapter and in Chapter 3, respectively. As we proceed, we will notice that in every case the ﬁrst step in developing a mathematical model is to apply the fundamental physical laws of science and engineering. For example, when we model electrical networks, Ohm ’s law and Kirchhoff ’s laws, which are basic laws of electric networks, will be applied initially. We will sumvoltages in a loop or sum currents at a node. When we study mechanical systems, we willuse Newton ’s laws as the fundamental guiding principles. Here we will sum forces or torques. From these equations we will obtain the relationship between the system’ s output and input. In Chapter 1 we saw that a differential equation can describe the relationship between the input and output of a system. The form of the differential equation and its coef ﬁcients are a formulation or description of the system. Although the differential equation relates thesystem to its input and output, it is not a satisfying representation from a system perspective.Looking at Eq. (1.2), a general, nth-order, linear, time-invariant differential equation, we see that the system parameters, which are the coef ﬁcients, appear throughout the equation. In addition, the output, c(t), and the input, r(t), also appear throughout the equation. We would prefer a mathematical representation such as that shown in Figure 2.1( a), where the input, output, and system are distinct and separate parts. Also, we would liketo represent conveniently the interconnection of several subsystems. For example, wewould like to represent cascaded interconnections, as shown in Figure 2.1( b), where a mathematical function, called a transfer function, is inside each block, and block functions SystemInput Output ( ) Subsystem ( )SubsystemInputSubsystemOutputa br(t) r(t)c(t) c(t) Note: The input, r(t), stands for reference input. The out put, c(t), stands for controlled variable.FIGURE 2.1 a.Block diagram representation of a system; b.block diagram representation of aninterconnection of subsystems34 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:3 can easily be combined to yield Figure 2.1( a) for ease of analysis and design. This convenience cannot be obtained with the differential equation. 2.2 Laplace Transform Review A system represented by a differential equation is dif ﬁcult to model as a block diagram. Thus, we now lay the groundwork for the Laplace transform, with which we can represent the input, output, and system as separate entities. Further, their interrelationship will besimply algebraic. Let us ﬁrst de ﬁne the Laplace transform and then show how it simpli ﬁes the representation of physical systems ( Nilsson ,1996 ). The Laplace transform is de ﬁned as ℒf t  F sZ∞ 0 f te stdt 2.1 where sσjω, a complex variable. Thus, knowing f(t) and that the integral in Eq. (2.1) exists, we can ﬁnd a function, F(s), that is called the Laplace transform off(t).1 The notation for the lower limit means that even if f(t) is discontinuous at t0, we can start the integration prior to the discon tinuity as long as the i ntegral converges. Thus, we can ﬁnd the Laplace transform of impulse fu nctions. This property has distinct advantages when applying the Laplace transform to the solution of differentialequations where the initial conditions are discontinuous at t0. Using differential equations, we have to solve for the initial cond itions after the discontinuity knowing the initial conditions before the discontinuity. Using the Laplace transform we need onlyknow the initial conditions befo re the discontinuity. See Kailath (1980) for a more detailed discussion. The inverse Laplace transform, which allows us to ﬁnd f(t) given F(s), is ℒ 1F s 1 2πjZσj∞ σ j∞F sestdsf tu t 2.2 where u t1 t>0 0 t<0 is the unit step function. Multiplication of f(t)b yu(t) yields a time function that is zero for t<0. Using Eq. (2.1), it is possible to derive a table relating f(t)t oF(s) for speci ﬁc cases. Table 2.1 shows the results for a representative sample of functions. If we use the tables, we do not have to use Eq. (2.2), which requires complex integration, to ﬁnd f(t) given F(s). 1The Laplace transform exists if the integral of Eq. (2.1) converges. The integral will converge ifR∞ 0 jf tje σ1tdt<∞.I fjf tj<Meσ2t;0<t<∞, the integral will converge if ∞>σ1>σ2. We call σ2the abscissa of convergence , and it is the smallest value of σ, where sσjω, for which the integral exists.2.2 Laplace Transform Review 35WEBC02 10/28/2014 16:18:5 In the following example we demonstrate the use of Eq. (2.1) to ﬁnd the Laplace transform of a time function. In addition to the Laplace transform table, Table 2.1, we can use Laplace transform theorems, listed in Table 2.2, to assist in transforming between f(t) and F(s). In the next example, we demonstrate the use of the Laplace transform theorems shown in Table 2.2 to ﬁnd f(t) given F(s).TABLE 2.1 Laplace transform table Item no. f(t) F(s) δ(t) 1 u(t)1 s tu(t)1 s2 tnu tn! sn1 e atu t1 sa sinωtu tω s2ω2 cosωtu ts s2ω2 Example 2.2 Inverse Laplace TransformInverse Laplace Transform PROBLEM: Find the inverse Laplace transform of F1 s1= s32. SOLUTION: For this example we make use of the frequency shift theorem, Item 4 of Table 2.2, and the Laplace transform of f ttu t, Item 3 of Table 2.1. If the inverse transform of F s1=s2istu(t), the inverse transform of F sa1= sa2ise attu t. Hence, f1 te 3ttu t.Example 2.1 Laplace Transform of a Time FunctionLaplace Transform of a Time Function PROBLEM: Find the Laplace transform of f tAe atu t. SOLUTION: Since the time function does not contain an impulse function, we can replace the lower limit of Eq. (2.1) with 0. Hence, F sZ∞ 0f te stdtZ∞ 0Ae ate stdtAZ∞ 0e  satdt  A sae  sat/C12/C12/C12∞ t0A sa 2.336 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:9 Partial-Fraction Expansion Toﬁnd the inverse Laplace transform of a complicated function, we can convert the function to a sum of simpler terms for which we know the Laplace transform of each term. The result is called a partial-fraction expansion .I fF1 sN s=D s, where the order of N(s) is less than the order of D(s), then a partial-fraction expansion can be made. If the order of N(s) is greater than or equal to the order of D(s), then N(s) must be divided by D(s) successively until the result has a remainder whose numerator is of order less than its denominator. For example, if F1 ss32s26s7 s2s5 2.4 we must perform the indicated division until we obtain a remainder whose numerator is oforder less than its denominator. Hence, F 1 ss12 s2s5 2.5 Taking the inverse Laplace transform, using Item 1 of Table 2.1, along with the differentiationtheorem (Item 7) and the linearity theorem (Item 3 of Table 2.2), we obtain f 1 tdδ t dtδ tℒ 1 2 s2s5/C20/C21 2.6 Using partial-fraction e xpansion, we will be able to expand functions like F s 2= s2s5into a sum of terms and then ﬁnd the inverse Laplace transform for each term. We will now consider three cases and show for each case how an F(s)c a nb e expanded into partial fractions.TABLE 2.2 Laplace transform theorems Item no. Theorem Name ℒf t  F sR∞ 0 f te stdt Deﬁnition ℒkf t  kF s Linearity theorem ℒf1 tf2 t  F1 sF2 s Linearity theorem ℒe atf t  F sa Frequency shift theorem ℒf t T  e sTF s Time shift theorem ℒf at 1 aFs a/C16/C17 Scaling theorem ℒdf dt/C20/C21 sF s f 0  Differentiation theorem 8.ℒd2f dt2/C20/C21 s2F s sf 0    f´ 0  Differentiation theorem ℒdnf dtn/C20/C21 snF s Xn k1sn kfk 1 0  Differentiation theorem ℒRt 0 f τdτ/C2/C3 F s sIntegration theorem f ∞ lim s®0sF s Final value theorem1 f 0  lim s®∞sF s Initial value theorem2 1For this theorem to yield correct ﬁnite results, all roots of the denominator of F(s) must have negative real parts, and no more than one can be at the origin. 2For this theorem to be valid, f(t) must be continuous or have a step discontinuity at t0 (that is, no impulses or their derivatives at t0).2.2 Laplace Transform Review 37WEBC02 10/28/2014 16:18:10 Case 1. Roots of the Denominator of F(s) Are Real and Distinct An example of an F(s) with real and distinct roots in the denominator is F s2 s1 s2 2.7 The roots of the denominator are distinct, since each factor is raised only to unity power. We can write the partial-fraction expansion as a sum of terms where each factor of the original denominator forms the denominator of each term, and constants, called residues , form the numerators. Hence, F s2 s1 s2K1 s1K2 s2 2.8 Toﬁnd K1,w eﬁrst multiply Eq. (2.8) by s1, which isolates K1. Thus, 2 s2K1 s1K2 s2 2.9 Letting sapproach  1 eliminates the last term and yields K12. Similarly, K2can be found by multiplying Eq. (2.8) by s2and then letting sapproach  2; hence, K2 2. Each component part of Eq. (2.8) is an F(s) in Table 2.1. Hence, f(t) is the sum of the inverse Laplace transform of each term, or f t 2e t 2e 2tu t 2.10 In general, then, given an F(s) whose denominator has real and distinct roots, a partial- fraction expansion, F sN s D sN s sp1 sp2∙∙∙ spm∙∙∙ spn K1 sp1K2 sp2∙∙∙Km spm∙∙∙Kn spn 2.11 can be made if the order of N(s) is less than the order of D(s). To evaluate each residue, Ki, we multiply Eq. (2.11) by the denominator of the corresponding partial fraction. Thus, if wewant to ﬁnd K m, we multiply Eq. (2.11) by spmand get spmF s spmN s sp1 sp2∙∙∙ spm∙∙∙ spn  spmK1 sp1 spmK2 sp2∙∙∙Km∙∙∙  spmKn spn 2.12 If we let sapproach  pm, all terms on the right-hand side of Eq. (2.12) go to zero except the term Km, leaving spmN s sp1 sp2∙∙∙ spm∙∙∙ spn/C12/C12/C12 s® pmKm 2.13 The following example demonstrates the use of the partial-fraction expansion to solve a differential equation. We will see that the Laplace transform reduces the task of ﬁnding the solution to simple algebra.38 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:11 Example 2.3 Laplace Transform Solution of a Differential EquationLaplace Transform Solution of a Differential Equation PROBLEM: Given the following differential equation, solve for y(t) if all initial conditions are zero. Use the Laplace transform. d2y dt212dy dt32y32u t 2.14 SOLUTION: Substitute the corresponding F(s) for each term in Eq. (2.14), using Item 2 in Table 2.1, Items 7 and 8 in Table 2.2, and the initial conditions of y(t) and dy(t)/dtgiven byy 0   0 and y: 0   0, respectively. Hence, the Laplace transform of Eq. (2.14) is s2Y s12sY s32Y s32 s 2.15 Solving for the response, Y(s), yields Y s32 s s212s3232 s s4 s8 2.16 To solve for y(t), we notice that Eq. (2.16) does not match any of the terms in Table 2.1. Thus, we form the partial-fraction expansion of the right-hand term and match each of the resulting terms with F(s) in Table 2.1. Therefore, Y s32 s s4 s8K1 sK2 s4K3 s8 2.17 where, from Eq. (2.13), K132 s4 s8/C12/C12/C12 s®01 (2.18a) K232 s s8/C12/C12/C12 s® 4 2 (2.18b) K332 s s4/C12/C12/C12 s® 81 (2.18c) Hence, Y s1 s 2 s41 s8 2.19 Since each of the three component parts of Eq. (2.19) is represented as an F(s)i n Table 2.1, y(t) is the sum of the inverse Laplace transforms of each term. Hence, y t 1 2e 4te 8tu t 2.20 Students who are using MATLAB should now run ch2p1 through ch2p8 in Appendix B. This is your ﬁrst MATLAB exercise. You will learn how to use MATLAB to (1) represent polynomials, (2) ﬁnd roots of polynomials, (3) multiply polynomials, and (4) ﬁnd partial- fraction expansions. Finally, Example 2.3 will be solved usingMATLAB.2.2 Laplace Transform Review 39WEBC02 10/28/2014 16:18:12 Theu(t) in Eq. (2.20) shows that the response is zero until t0. Unless otherwise speciﬁed, all inputs to systems in the text will not start until t0. Thus, output responses will also be zero until t0. For convenience, we will leave off the u(t) notation from now on. Accordingly, we write the output response as y t1 2e 4te 8t 2.21 Case 2. Roots of the Denominator of F(s) Are Real and Repeated An example of an F(s) with real and repeated roots in the denominator is F s2 s1 s22 2.22 The roots of s22in the denominator are repeated, since the factor is raised to an integer power higher than 1. In this case, the denominator root at  2i samultiple root of multiplicity 2. We can write the partial-fraction expansion as a sum of terms, where each factor of the denominator forms the denominator of each term. In addition, each multiple root generates additional terms consisting of denominator factors of reduced multiplicity. For example, if F s2 s1 s22K1 s1K2 s22K3 s2 2.23 then K12, which can be found as previously described. K2can be isolated by multiplying Eq. (2.23) by s22, yielding 2 s1 s22K1 s1K2 s2K3 2.24 Letting sapproach  2;K2 2. To ﬁndK3we see that if we differentiate Eq. (2.24) with respect to s,  2 s12 s2s s12K1K3 2.25 K3is isolated and can be found if we let sapproach  2. Hence, K3 2. Each component part of Eq. (2.23) is an F(s) in Table 2.1; hence, f(t) is the sum of the inverse Laplace transform of each term, or f t2e t 2te 2t 2e 2t 2.26 If the denominator root is of higher multiplicity than 2, successive differentiation wouldisolate each residue in the expansion of the multiple root. In general, then, given an F(s) whose denominator has real and repeated roots, a partial-fraction expansion F sN s D s N s sp1r sp2∙∙∙ spn K1 sp1rK2 sp1r 1∙∙∙Kr sp1Kr1 sp2∙∙∙Kn spn 2.27TryIt 2.2 Use the following MATLAB statements to help you get Eq. (2.26). numf=2; denf= poly( [ 1 2 2]) ; [K,p,k] =residue... (numf ,denf)TryIt 2.1 Use the following MATLAB and Control System Toolbox statement to form the linear, time-invariant (LTI) transferfunction of Eq. (2.22). F=zpk([],[ 1 2 2],2)40 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:13 can be made if the order of N(s) is less than the order of D(s) and the repeated roots are of multiplicity rat p1.T oﬁnd K1through Krfor the roots of multiplicity greater than unity, ﬁrst multiply Eq. (2.27) by sp1rgetting F1 s, which is F1 s sp1rF s  sp1rN s sp1r sp2∙∙∙ spn K1 sp1K2 sp12K3∙∙∙ sp1r 1Kr Kr1 sp1r sp2∙∙∙Kn sp1r spn 2.28 Immediately, we can solve for K1if we let sapproach  p1. We can solve for K2if we differentiate Eq. (2.28) with respect to sand then let sapproach  p1. Subsequent differentiation will allow us to ﬁndK3through Kr. The general expression for K1through Krfor the multiple roots is Ki1 i 1!di 1F1 s dsi 1/C12/C12/C12 s® p1i1;2;...;r;0!1 2.29 Case 3. Roots of the Denominator of F(s) Are Complex or Imaginary An example of F(s) with complex roots in the denominator is F s3 s s22s5 2.30 This function can be expanded in the following form: 3 s s22s5K1 sK2sK3 s22s5 2.31 K1is found in the usual way to be3 5.K2andK3can be found by ﬁrst multiplying Eq. (2.31) by the lowest common denominator, s s22s5, and clearing the fractions. After simpli ﬁcation with K13 5, we obtain 3K23 5/C18/C19 s2K365/C18/C19 s3 2.32 Balancing coef ﬁcients, K 23 5/C0/C1 0 and K365/C0/C1 0. Hence K2 35and K3 65. Thus, F s3 s s22s53=5 s 3 5s2 s22s5 2.33 The last term can be shown to be the sum of the Laplace transforms of an exponentially damped sine and cosine. Using Item 7 in Table 2.1 and Items 2 and 4 in Table 2.2, we get ℒAe atcosωtA sa sa2ω2 2.34TryIt 2.3 Use the following MATLAB and Control System Toolboxstatement to form the LTItransfer function of Eq. (2.30). F=tf( [3] ,[1 2 5 0] )2.2 Laplace Transform Review 41WEBC02 10/28/2014 16:18:13 Similarly, ℒBe atsinωtBω sa2ω2 2.35 Adding Eqs. (2.34) and (2.35), we get ℒAe atcosωtBe atsinωtA saBω sa2ω2 2.36 We now convert the last term of Eq. (2.33) to the form suggested by Eq. (2.36) by completing the squares in the denominator and adjusting terms in the numerator without changing its value. Hence, F s3=5 s 3 5 s1 1=2 2 s1222 2.37 Comparing Eq. (2.37) to Table 2.1 and Eq. (2.36), we ﬁnd f t35 35e  tcos 2 t12sin 2t/C18/C19 2.38 In order to visualize the solution, an alternate form of f(t), obtained by trigonometric identities, is preferable. Using the amplitudes of the cos and sin terms, we factor outﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2 1=22q from the term in parentheses and obtain f t3 5 35ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2 1=22q e t 1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 12 1=22q cos 2 t1=2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 2 1=22q sin 2 t0 B@1 CA 2.39 Letting 1 =ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 12 1=22q cosϕand 1=2=ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 2 1=22q sinϕ, f t3 5 35ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2 1=22q e t cosϕcos 2 tsinϕsin 2t 2.40 or f t0:6 0:671e tcos 2t ϕ 2.41 where ϕarctan 0 :526:57°. Thus, f(t) is a constant plus an exponentially damped sinusoid. In general, then, given an F(s) whose denominator has complex or purely imaginary roots, a partial-fraction expansion, F sN s D sN s sp1 s2asb∙∙∙ K1 sp1 K2sK3 s2asb∙∙∙ 2.42TryIt 2.4 Use the following MATLAB and Symbolic Math Toolboxstatements to get Eq. (2.38) from Eq. (2.30). syms s f=ilaplace... (3/ (s* (s^2 +2*s+5)) ) ; pretty (f)42 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:14 can be made if the order of N(s) is less than the order of D(s)p1is real, and s2asb has complex or purely imaginary roots. The complex or imaginary roots are expanded with K2sK3terms in the numerator rather than just simply Ki, as in the case of real roots. The Ki’s in Eq. (2.42) are found through balancing the coef ﬁcients of the equation after clearing fractions. After completing the squares on s2asband adjusting the numerator, K2sK3= s2asbcan be put into the form shown on the right-hand side of Eq. (2.36). Finally, the case of purely imaginary roots arises if a0 in Eq. (2.42). The calculations are the same. Another method that follows the technique used for the partial-fraction expansion of F(s) with real roots in the denominator can be used for complex and imaginary roots. However, the residues of the complex and imaginary roots are themselves complexconjugates. Then, after taking the inverse Laplace transform, the resulting terms can beidenti ﬁed as ejθe jθ 2cosθ 2.43 and ejθ e jθ 2jsinθ 2.44 For example, the previous F(s) can also be expanded in partial fractions as F s3 s s22s53 s s1j2 s1 j2 K1 sK2 s1j2K3 s1 j2 2.45 Finding K2, K23 s s1 j2/C12/C12/C12 s® 1 j2 3 20 2j1 2.46 Similarly, K3is found to be the complex conjugate of K2, and K1is found as previously described. Hence, F s3=5 s 3 202j1 s1j22 j1 s1 j2/C18/C19 2.47 from which f t3 5 3 20 2j1e  1j2t 2 j1e  1 j2t/C2/C3 35 3 20e t4ej2te j2t 2/C18/C19 2ej2te j2t 2j/C18/C19 /C20/C21 2.48 Using Eqs. (2.43) and (2.44), we get f t35 35e  tcos 2 t12sin 2t/C18/C19 0:6 0:671e  tcos 2t ϕ 2.49 where ϕarctan 0 :526:57°.TryIt 2.5 Use the following MATLAB statements to help you get Eq. (2.47). numf=3 denf=[ 1250 ] [K,p,k] =residue... (numf, denf)2.2 Laplace Transform Review 43WEBC02 10/28/2014 16:18:15 Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch2sp1 and ch2sp2 in Appendix F at www.wiley.com/ college/nise . You will learn how to construct symbolic objects and then ﬁnd the inverse Laplace and Laplace transforms of frequency and time functions, respectively. The examples in Case 2 and Case 3 in this section will be solved using the Symbolic Math Toolbox. 2.3 The Transfer Function In the previous section we de ﬁned the Laplace transform and its inverse. We presented the idea of the partial-fraction expansion and applied the concepts to the solution of differentialequations. We are now ready to formulate the system representation shown in Figure 2.1 byestablishing a viable de ﬁnition for a function that algebraically relates a system ’s output to its input. This function will allow separation of the input, system, and output into three separate and distinct parts, unlike the differential equation. The function will also allow us to algebraically combine mathematical representations of subsystems to yield a total system representation. Let us begin by writing a general nth-order, linear, time-invariant differential equation, a ndnc t dtnan 1dn 1c t dtn 1∙∙∙a0c tbmdmr t dtmbm 1dm 1r t dtm 1∙∙∙b0r t 2.50 where c(t) is the output, r(t) is the input, and the ai’s,bi’s, and the form of the differential equation represent the system. Taking the Laplace transform of both sides, ansnC san 1sn 1C s∙∙∙a0C sinitial condition terms involving c t bmsmR sbm 1sm 1R s∙∙∙b0R sinitial condition terms involving r t 2.51Skill-Assessment Exercise 2.1 PROBLEM: Find the Laplace transform of f tte 5t. ANSWER: F s1= s52 The complete solution is at www.wiley.com/college/nise . Skill-Assessment Exercise 2.2 PROBLEM: Find the inverse Laplace transform of F s10=s s2 s32. ANSWER: f t5 9 5e 2t10 3te 3t40 9e 3t The complete solution is at www.wiley.com/college/nise .44 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:16 Equation (2.51) is a purely algebraic expression. If we assume that all initial conditions are zero, Eq. (2.51) reduces to ansnan 1sn 1∙∙∙a0C s bmsmbm 1sm 1∙∙∙b0R s 2.52 Now form the ratio of the output transform, C(s), divided by the input transform, R(s): C s R sG s bmsmbm 1sm 1∙∙∙b0 ansnan 1sn 1∙∙∙a0 2.53 Notice that Eq. (2.53) separates the output, C(s), the input, R(s), and the system, which is the ratio of polynomials in son the right. We call this ratio, G(s), the transfer function and evaluate it with zero initial conditions . The transfer function can be represented as a block diagram, as shown in Figure 2.2, with the input on the left, the output on the right, and the system transfer function inside the block. Notice that the denominator of the transfer function is identical to the characteristic polynomial of thedifferential equation. Also, we can ﬁnd the output, C(s) by using C sR sG s 2.54 Let us apply the concept of a transfer function to an example and then use the result to ﬁnd the response of the system. Students who are using MATLAB should now run ch2p9 through ch2p12in Appendix B. You will learn how to use MATLAB to create transferfunctions with numerators and denominators in polynomial or fac- tored form. You will also learn how to convert between polynomial and factored forms. Finally, you will learn how to use MATLAB toplot time functions.Example 2.4 Transfer Function for a Differential EquationTransfer Function for a Differential Equation PROBLEM: Find the transfer function represented by dc t dt2c tr t 2.55 SOLUTION: Taking the Laplace transform of both sides, assuming zero initial conditions, we have sC s2C sR s 2.56 The transfer function, G(s), is G sC s R s1 s2 2.57C(s) R(s) (bmsm + bm–1sm–1 + . . . + b 0) (ansn + an–1sn–1 + . . . + a0) FIGURE 2.2 Block diagram of a transfer function2.3 The Transfer Function 45WEBC02 10/28/2014 16:18:17 Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch2sp3 in Appendix F at www.wiley.com/college/nise . You will learn how to use the Symbolic Math Toolbox to simplify the input of complicated transfer functions as well as improvereadability. You will learn how to enter a symbolic transferfunction and convert it to a linear, time-invariant (LTI) object aspresented in Appendix B, ch2p9. Example 2.5 System Response from the Transfer FunctionSystem Response from the Transfer Function PROBLEM: Use the result of Example 2.4 to ﬁnd the response, c(t) to an input, r tu t, a unit step, assuming zero initial conditions. SOLUTION: To solve the problem, we use Eq. (2.54), where G s1= s2as found in Example 2.4. Since r tu t;R s1=s, from Table 2.1. Since the initial conditions are zero, C sR sG s1 s s2 2.58 Expanding by partial fractions, we get C s1=2 s 1=2 s2 2.59 Finally, taking the inverse Laplace transform of each term yields c t1 2 12e  2t 2.60TryIt 2.7 Use the following MATLAB statements to plot Eq. (2.60) for t f r o m0t o1s a ti n t e r v a l so f0 . 0 1s . t=0:0.01:3; plot... (t,(1/2 -1/2*exp (-2*t) ) )TryIt 2.6 Use the following MATLAB and Symbolic Math Toolbox statements to help you get Eq. (2.60). syms s C=1/(s* (s +2) ) C=ilaplace(C) Skill-Assessment Exercise 2.3 PROBLEM: Find the transfer function, G sC s=R s, corresponding to the differential equationd3c dt33d2c dt27dc dt5cd2r dt24dr dt3r. ANSWER: G sC s R ss24s3 s33s27s5 The complete solution is at www.wiley.com/college/nise . Skill-Assessment Exercise 2.4 PROBLEM: Find the differential equation corresponding to the transfer function, G s2s1 s26s2 ANSWER:d2c dt26dc dt2c2dr dtr The complete solution is at www.wiley.com/college/nise .46 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:19 In general, a physical system that can be represented by a linear, time-invariant differential equation can be modeled as a transfer function. The rest of this chapter will be devoted to the task of modeling individual subsystems. We will learn how to represent electrical networks, translational mechanical systems, rotational mechanical systems, andelectromechanical systems as transfer functions. As the need arises, the reader can consultthe Bibliography at the end of the chapter for discussions of other types of systems, such aspneumatic, hydraulic, and heat-transfer systems ( Cannon ,1967 ). 2.4 Electrical Network Transfer Functions In this section, we formally apply the transfer function to the mathematical modeling ofelectric circuits including passive networks and operational ampli ﬁer circuits. Subsequent sections cover mechanical and electromechanical systems. Equivalent circuits for the electric networks that we work with ﬁrst consist of three passive linear components: resistors, capacitors, and inductors. 2Table 2.3 summarizes the components and the relationships between voltage and current and between voltage andcharge under zero initial conditions. We now combine electrical components into circuits, decide on the input and output, andﬁnd the transfer function. Our guiding principles are Kirchhoff ’s laws. We sum voltages around loops or sum currents at nodes, depending on which technique involves the leastSkill-Assessment Exercise 2.5 PROBLEM: Find the ramp response for a system whose transfer function is G ss s4 s8 ANSWER: c t1 32 1 16e 4t1 32e 8t The complete solution is at www.wiley.com/college/nise . 2Passive means that there is no internal source of energy.TABLE 2.3 Voltage-current, voltage-charge, and impedance relationships for capacitors, resistors, and inductors Component Voltage-current Current-voltage Voltage-chargeImpedance Z sV s=I sAdmittance Y sI s=V s Capacito rv t1 CZ1 0i τdτ i tCdv t dtv t1 Cq t1 CsCs Resistorv tRi t i t1 Rv t v tRdq t dtR1 RG Inductorv tLdi t dti t1 LZ1 0v τdτ v tLd2q t dt2 Ls1 Ls Note: The following set of symbols and units is used throughout this book: v(t) V (volts), i(t) A (amps), q(t) Q (coulombs), C F (farads), R Ω(ohms), G Ω(mhos), L H(henries).2.4 Electrical Network Transfer Functions 47WEBC02 10/28/2014 16:18:20 effort in algebraic manipulation, and then equate the result to zero. From these relationships we can write the differential equations for the circuit. Then we can take the Laplace transforms of the differential equations and ﬁnally solve for the transfer function. Simple Circuits via Mesh Analysis Transfer functions can be obtained using Kirchhoff ’s voltage law and summing voltages around loops or meshes.3We call this method loop ormesh analysis and demonstrate it in the following example. Example 2.6 Transfer Function —Single Lo op via the Differential EquationTransfer Function —Single Loop via the Differential Equation PROBLEM: Find the transfer function relating the capacitor voltage, VC s,t o the input voltage, V(s) in Figure 2.3. SOLUTION: In any problem, the designer must ﬁrst decide what the input and output should be. In this network, several variables could have been chosen to be the output —for example, the inductor voltage, the capacitor voltage, the resistor voltage, or the current. The problem statement, however, is clear in this case: We are to treat thecapacitor voltage as the output and the applied voltage as the input. Summing the voltages around the loop, assuming zero initial conditions, yields the integro-differential equation for this network as Ldi t dtRi t1 CZt 0i τdτv t 2.61 Changing variables from current to charge using i tdq t=dtyields Ld2q t dt2Rdq t dt1 Cq tv t 2.62 From the voltage-charge relationship for a capacitor in Table 2.3, q tCvC t 2.63 Substituting Eq. (2.63) into Eq. (2.62) yields LCd2vC t dt2RCdvC t dtvC tv t 2.64 Taking the Laplace transform assuming zero initial conditions, rearranging terms, andsimplifying yields LCs 2RCs 1VC sV s 2.65 Solving for the transfer function, VC s=V s, we obtain VC s V s1=LC s2R Ls1 LC 2.66 as shown in Figure 2.4. 3A particular loop that resembles the spaces in a screen or fence is called a mesh .R L –v(t) i(t)vC(t) C+ +– FIGURE 2.3 RLC network 1 LCV(s) VC(s) s2 + R Ls + 1 LC FIGURE 2.4 Block diagram of series RLC electrical network48 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:21 Let us now develop a technique for simplifying the solution for future problems. First, take the Laplace transform of the equations in the voltage-current column of Table 2.3 assuming zero initial conditions. For the capacitor, V s1 CsI s 2.67 For the resistor, V sRI s 2.68 For the inductor, V sLsI s 2.69 Now de ﬁne the following transfer function: V s I sZ s 2.70 Notice that this function is similar to the de ﬁnition of resistance, that is, the ratio of voltage to current. But, unlike resistance, this function is applicable to capacitors andinductors and carries information on the dynamic behavior of the component, since itrepresents an equivalent differential equation. We call this particular transfer functionimpedance . The impedance for each of the electrical elements is shown in Table 2.3. Let us now demonstrate how the concept of impedance simpli ﬁes the solution for the transfer function. The Laplace transform of Eq. (2.61), assuming zero initial conditions, is LsR 1 Cs/C18/C19 I sV s 2.71 Notice that Eq. (2.71), which is in the form Sum of impedances I sSum of applied voltages  2.72 suggests the series circuit shown in Figure 2.5. Also notice that the circuit of Figure 2.5could have been obtained immediately from the circuit of Figure 2.3 simply by replacingeach element with its impedance. We call this altered circuit the transformed circuit . Finally, notice that the transformed circuit leads immediately to Eq. (2.71) if we addimpedances in series as we add resistors in series. Thus, rather than writing the differentialequation ﬁrst and then taking the Laplace transform, we can draw the transformed circuit and obtain the Laplace transform of the differential equation simply by applying Kirchhoff ’s voltage law to the transformed circuit. We summarize the steps as follows: 1.Redraw the original network showing all time variables, such as v(t),i(t), and v C t,a s Laplace transforms V(s),I(s), and VC s, respectively. 2.Replace the component values with their impedance values. This replacement is similar to the case of dc circuits, where we represent resistors with their resistance values. We now redo Example 2.6 using the transform methods just described and bypass thewriting of the differential equation.R Ls I(s)1 CsV(s)+––VC(s)+ FIGURE 2.5 Laplace-transformed network2.4 Electrical Network Transfer Functions 49WEBC02 10/28/2014 16:18:22 Simple Circuits via Nodal Analysis Transfer functions also can be obtained using Kirchhoff ’s current law and summing currents ﬂowing from nodes. We call this method nodal analysis . We now demonstrate this principle by redoing Example 2.6 using Kirchhoff ’s current law and the transform methods just described to bypass writing the differential equation. Example 2.8 Transfer Function —Single Node via Transform Methods Transfer Function —Single Node via Transform Methods PROBLEM: Repeat Example 2.6 using nodal analysis and without writing a differential equation. SOLUTION: The transfer function can be obtained by summing currents ﬂowing out of the node whose voltage is VC sin Figure 2.5. We assume that currents leaving the node are positive and currents entering the node are negative. The currents consist of the current through the capacitor and the current ﬂowing through the series resistor and inductor. From Eq. (2.70), each I sV s=Z s. Hence, VC s 1=CsVC s V s RLs0 2.76 where VC s= 1=Csis the current ﬂowing out of the node through the capacitor, and VC s V s= RLsis the current ﬂowing out of the node through the series resistor and inductor. Solving Eq. (2.76) for the transfer function, VC s=V s, we arrive at the same result as Eq. (2.66).Example 2.7 Transfer Function —Single L oop via Transform Methods Transfer Function —Single Loop via Transform Methods PROBLEM: Repeat Example 2.6 using mesh analysis and transform methods without writing a differential equation. SOLUTION: Using Figure 2.5 and writing a mesh equation using the impedances as we would use resistor values in a purely resistive circuit, we obtain LsR1 Cs/C18/C19 I sV s 2.73 Solving for I(s)/V(s), I s V s1 LsR1 Cs 2.74 But the voltage across the capacitor, VC s, is the product of the current and the impedance of the capacitor. Thus, VC sI s1 Cs 2.75 Solving Eq. (2.75) for I(s) substituting I(s) into Eq. (2.74), and simplifying yields the same result as Eq. (2.66).50 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:24 Simple Circuits via Voltage Division Example 2.6 can be solved directly by using voltage division on the transformed network. We now demonstrate this technique. The previous example involves a simple, single-loop electrical network. Many electrical networks consist of multiple loops and nodes, and for these circuits we mustwrite and solve simultaneous differential equations in order to ﬁnd the transfer function, or solve for the output. Complex Circuits via Mesh Analysis To solve complex electrical networks— those with multiple loops and nodes —using mesh analysis, we can perform the following steps: 1.Replace passive element values with their impedances. 2.Replace all sources and time variables with their Laplace transform. 3.Assume a transform current and a current direction in each mesh. 4.Write Kirchhoff ’s voltage law around each mesh. 5.Solve the simultaneous equations for the output. 6.Form the transfer function. Let us look at an example. Example 2.10 Transfer Function —Multiple L oops Transfer Function —Multiple Loops PROBLEM: Given the network of Figure 2.6( a),ﬁnd the transfer function, I2 s=V s. SOLUTION: Theﬁrst step in the solution is to convert the network into Laplace transforms for impedances and circuit variables, assuming zero initial conditions. The result is shown in Figure 2.6( b). The circuit with which we are dealing requires two simultaneous equations to solve for the transfer function. These equations can be found by summing voltages aroundExample 2.9 Transfer Function —Single L oop via Voltage Division Transfer Function —Single Loop via Voltage Division PROBLEM: Repeat Example 2.6 using voltage division and the transformed circuit. SOLUTION: The voltage across the capacitor is some proportion of the input voltage, namely the impedance of the capacitor divided by the sum of the impedances. Thus, VC s1=Cs LsR1 Cs/C18/C19 V s 2.77 Solving for the transfer function, VC s=V s, yields the same result as Eq. (2.66). Review Examples 2.6 through 2.9. Which method do you think is easiest for this circuit?2.4 Electrical Network Transfer Functions 51WEBC02 10/28/2014 16:18:24 each mesh through which the assumed currents, I1 sandI2 s,ﬂow. Around Mesh 1, where I1 sﬂows, R1I1 sLsI 1 s LsI 2 sV s 2.78 Around Mesh 2, where I2 sﬂows, LsI 2 sR2I2 s1 CsI2 s LsI1 s0 2.79 Combining terms, Eqs. (2.78) and (2.79) become simultaneous equations in I1 sandI2 s: R1LsI1 s  LsI 2 sV s (2.80a)  LsI 1 s LsR21 Cs/C18/C19 I2 s0 (2.80b) We can use Cramer ’s rule (or any other method for solving simultaneous equations) to solve Eq. (2.80) for I2 s.4Hence, I2 s/C12/C12/C12/C12 R 1LsV s  Ls 0/C12/C12/C12/C12 ΔLsV s Δ 2.81 where Δ/C12/C12/C12/C12/C12 R 1Ls  Ls  Ls Ls R21 Cs/C18/C19/C12/C12/C12/C12/C12 4See Appendix G (Section G.4) at www.wiley.com/college/nise for Cramer ’s rule.FIGURE 2.6 a.Two-loop electrical network; b.transformed two-loop electrical network; c.block diagram52 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:25 Complex Circuits via Nodal Analysis Often, the easiest way to ﬁnd the transfer function is to use nodal analysis rather than mesh analysis. The number of simultaneous differential equations that must be written is equal to the number of nodes whose voltage is unknown. In the previous example we wrotesimultaneous mesh equations using Kirchhoff ’s voltage law. For multiple nodes we use Kirchhoff ’s current law and sum currents ﬂowing from each node. Again, as a convention, currents ﬂowing from the node are assumed to be positive, and currents ﬂowing into the node are assumed to be negative. Before progressing to an example, let us ﬁrst de ﬁneadmittance ,Y(s), as the reciprocal of impedance, or Y s1 Z sI s V s 2.84 When writing nodal equations, it can be more convenient to represent circuit elements bytheir admittance. Admittances for the basic electrical components are shown in Table 2.3. Let us look at an example.Forming the transfer function, G(s), yields G sI2 s V sLs ΔLCs2 R1R2LCs2 R1R2CLsR1 2.82 as shown in Figure 2.6( c). We have succeeded in modeling a physical network as a transfer function: The network of Figure 2.6( a) is now modeled as the transfer function of Figure 2.6( c). Before leaving the example, we notice a pattern ﬁrst illustrated by Eq. (2.72). The form that Eqs. (2.80) take is Sum of impedances around Mesh 12 435I 1 s Sum of impedances common to the two meshes2 66643 7775I 2 sSum of applied voltages around Mesh 12 435 (2.83a)  Sum of impedances common to the two meshes266643 7775I 1 sSum of impedances around Mesh 22 435I 2 sSum of applied voltages around Mesh 22435 (2.83b) Recognizing the form will help us write such equations rapidly; for example, mechanical equations of motion (covered in Sections 2.5 and 2.6) have the same form. Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch2sp4 in Appendix F at www.wiley.com/college/nise , where Example 2.10 is solved. You will learn how to use the Symbolic Math Toolbox to solve simultaneous equations using Cramer’ s rule. Speciﬁ cally, the Symbolic Math Toolbox will be used to solve for the transfer function in Eq.(2.82)using Eq.(2.80).2.4 Electrical Network Transfer Functions 53WEBC02 10/28/2014 16:18:27 Another way to write node equations is to replace voltage sources by current sources. A voltage source presents a constant voltage to any load; conversely, a current source delivers a constant current to any load. Practically, a current source can be constructed froma voltage source by placing a large resistance in series with the voltage source. Thus,variations in the load do not appreciably change the current because the current isdetermined approximately by the large series resistor and the voltage source. Theoretically,we rely on Norton ’s theorem , which states that a voltage source, V(s), in series with an impedance, Z s s, can be replaced by a current source, I sV s=Zs s, in parallel with Zs s. In order to handle multiple-node electrical networks, we can perform the following steps: 1.Replace passive element values with their admittances. 2.Replace all sources and time variables with their Laplace transform. 3.Replace transformed voltage sources with transformed current sources.Example 2.11 Transfer Function —Multiple Nodes T ransfer Function —Multiple Nodes PROBLEM: Find the transfer function, VC s=V s, for the circuit in Figure 2.6( b). Use nodal analysis.SOLUTION: For this problem, we sum currents at the nodes rather than sum voltages around the meshes. From Figure 2.6(b ) the sum of currents ﬂowing from the nodes marked V L sandVC sare, respectively, VL s V s R1VL s LsVL s VC s R20( 2.85a) CsV C sVC s VL s R20 (2.85b) Rearranging and expressing the resistances as conductances,5G11=R1andG21=R2, we obtain, G1G21 Ls/C18/C19 VL s  G2VC sV sG1 (2.86a)  G 2VL s G2CsVC s0 (2.86b) Solving for the transfer function, VC s=V s, yields Eq. (2.87) as shown in Figure 2.7. VC s V sG1G2 Cs G1G2s2G1G2LC LCsG2 LC 2.87G1G2 CV(s) VC(s) (G1 + G2)s2 + G1G2L + C s + LC G2 LCs FIGURE 2.7 Block diagram of the network of Figure 2.6 5In general, admittance is complex. The real part is called conductance and the imaginary part is called susceptance. But when we take the reciprocal of resistance to obtain the admittance, a purely real quantity results. The reciprocal of resistance is called conductance.54 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:28 4.Write Kirchhoff ’s current law at each node. 5.Solve the simultaneous equations for the output. 6.Form the transfer function. Let us look at an example. A Problem-Solving Technique In all of the previous examples, we have seen a repeating pattern in the equations that we can use to our advantage. If we recognize this pattern, we need not write the equations component bycomponent; we can sum impedances around a mesh in the case of mesh equations or sumadmittances at a node in the case of node equations. Let us now look at a three-loop electricalnetwork and write the mesh equations by inspection to demonstrate the process.Example 2.12 Transfer Function —Multiple Nodes with Current Sources Transfer Function —Multiple Nodes with Current Sources PROBLEM: For the network of Figure 2.6, ﬁnd the transfer function, VC s=V s, using nodal analysis and a transformed circuit with current sources. SOLUTION: Convertallimpedancestoadmittancesandallvoltagesources in series with an impedance to current sources in parallel with an admittance using Norton's theorem. Redrawing Figure 2.6( b)t or e ﬂect the changes, we obtain Figure 2.8, where G11=R1;G21=R2, and the node voltages —the voltages across the inductor and the capacitor —have been identi ﬁed as VL sandVC s, respectively. Using the general relationship, I sY sV s,a n ds u m m i n g currents at the node VL s, G1VL s1 LsVL sG2VL s VC s V sG1 2.88 Summing the currents at the node VC syields CsVC sG2VC s VL s 0 2.89 Combining terms, Eqs. (2.88) and (2.89) become simultaneous equations in VC sand VL s, which are identical to Eq. (2.86) and lead to the same solution as Eq. (2.87). An advantage of drawing this circuit lies in the form of Eq. (2.86) and its direct relationship to Figure 2.8, namely Sum of admittances connected to Node 1/C20/C21 VL s Sum of admittances common to the two nodes2 435V C sSum of applied currents at Node 1/C20/C21 (2.90a)  Sum of admittances common to the two nodes2435V L sSum of admittances connected to Node 2/C20/C21 VC sSum of applied currents at Node 2/C20/C21 (2.90b)1 LsV(s)G1 G1 CsVL(s)G2VC(s) FIGURE 2.8 Transformed network ready for nodal analysis2.4 Electrical Network Transfer Functions 55WEBC02 10/28/2014 16:18:29 Example 2.13 Mesh Equations via InspectionMesh Equations via Inspection PROBLEM: Write, but do not solve, the mesh equations for the network shown in Figure 2.9. SOLUTION: Each of the previous problems has illustrated that the mesh equations and nodal equations have a predictable form. We use that knowledge to solve this three-loop problem. The equation for Mesh 1 will have the following form: Sum of impedances around Mesh 12 6643 775I 1 s Sum of impedances common to Mesh 1 and Mesh 22 6666666643 777777775I 2 s  Sum of impedances common to Mesh 1 and Mesh 32 6666666643 777777775I 3 sSum of applied voltages around Mesh 12 6643 775 2.91 Similarly, Meshes 2 and 3, respectively, are  Sum of impedances common to Mesh 1 and Mesh 22 66666643 7777775I 1 sSum of impedances around Mesh 22 643 75I2 s Sum of impedances common to Mesh 2 and Mesh 32 66666643 7777775I 3 sSum of appied voltages around Mesh 22 643 75 2.92V(s)14 s1s 2s1 I1(s) I2(s)I3(s) 3s+– FIGURE 2.9 Three-loop electrical network56 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:30 Passive electrical circuits were the topic of discussion up to this point. We now discuss a class of active circuits that can be used to implement transfer functions. These are circuits built around an operational ampli ﬁer. Operational Ampli ﬁers Anoperational ampli ﬁer, pictured in Figure 2.10( a), is an electronic ampli ﬁer used as a basic building block to implement transfer functions. It has the following characteristics: 1.Differential input, v2 t v1 t 2.High input impedance, Zi∞(ideal) 3.Low output impedance, Zo0 (ideal) 4.High constant gain ampli ﬁcation, A∞(ideal) The output, vo t, is given by vo tAv 2 t v1 t  2.95 Inverting Operational Ampli ﬁer Ifv2 tis grounded, the ampli ﬁer is called an inverting operational ampli ﬁer, as shown in Figure 2.10( b). For the inverting operational ampli ﬁer, we have vo t  Av1 t 2.96and  Sum of impedances common to Mesh 1 and Mesh 32 66666643 7777775I 1 s Sum of impedances common to Mesh 2 and Mesh 32 66666643 7777775I 2 s Sum of impedances around Mesh 32 643 75I3 sSum of applied voltages around Mesh 32 643 75 2.93 Substituting the values from Figure 2.9 into Eqs. (2.91) through (2.93) yields  2s2I1 s  2s1I2 s  I3 sV s (2.94a)   2s1I1 s 9s1I2 s  4sI3 s0 (2.94b)  I1 s  4sI2 s 4s11 s/C18/C19 I3 s0 (2.94c) which can be solved simultaneously for any desired transfer function, for example, I3 s=V s.TryIt 2.8 Use the following MATLAB and Symbolic Math Toolbox statements to help you solve for the electrical currents inEq. (2.94). syms sI 1I 2I 3V A=[(2*s+2) (2*s+1) ...  1  (2*s +1) (9*s +1) ...  4*s  1 4*s... (4*s +1+1/s) ] ; B=[I1;I2;I3] ; C=[V;0;0] ; B=inv(A) *C; pretty(B)2.4 Electrical Network Transfer Functions 57WEBC02 10/28/2014 16:18:31 If two impedances are connected to the inverting operational ampli ﬁer as shown in Figure 2.10( c), we can derive an interesting result if the ampli ﬁer has the characteristics mentioned in the beginning of this subsection. If the input impedance to the ampli ﬁer is high, then by Kirchhoff ’s current law Ia s0 and I1 s  I2 s. Also, since the gain Ais large, v1 t≈0. Thus, I1 sVi s=Z1 s, and  I2 s  Vo s=Z2 s. Equating the two currents, Vo s=Z2 s  Vi s=Z1 s, or the transfer function of the inverting operational ampli ﬁer con ﬁgured as shown in Figure 2.10( c)i s Vo s Vi s Z2 s Z1 s 2.97 Example 2.14 Transfer Function —Inv erting Operational Ampli ﬁer Circuit Transfer Function —Inverting Operational Ampli ﬁer Circuit PROBLEM: Find the transfer function, Vo s=Vi s, for the circuit given in Figure 2.11. R2 = 220 kΩ vo(t)C2 = 0.1 μFC1 = 5.6 μF R1 = 360 kΩvi(t) v1(t) +– FIGURE 2.11 Inverting operational ampli ﬁer circuit for Example 2.14A (a) (c)+v1(t) +v2(t)vo(t) Vi(s) I2(s) Vo(s) I1(s)Ia(s)Z1(s)A (b)vo(t)v1(t) V1(s)Z2(s)+V –V +–+– +– FIGURE 2.10 a.Operational ampli ﬁer;b.schematic for an inverting operational ampli ﬁer; c.inverting operational ampli ﬁer con ﬁgured for transfer function realization. Typically, the ampli ﬁer gain, A, is omitted.58 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:32 Noninverting Operational Ampliﬁ er Another circuit that can be analyzed for its transfer function is the noninverting operational ampli ﬁer circuit shown in Figure 2.12. We now derive the transfer function. We see that Vo sAV i s V1 s  2.101  But, using voltage division, V1 sZ1 s Z1 sZ2 sVo s 2.102  Substituting Eq. (2.102) into Eq. (2.101), rearranging, and simplifying, we obtain Vo s Vi sA 1AZ1 s=Z1 sZ2 s  2.103  For large A, we disregard unity in the denominator and Eq. (2.103) becomes Vo s Vi sZ1 sZ2 s Z1 s 2.104  Let us now look at an example.SOLUTION: The transfer function of the operational ampli ﬁer circuit is given by Eq. (2.97). Since the admittances of parallel components add, Z1 sis the reciprocal of the sum of the admittances, or Z1 s1 C1s1 R11 5:610 6s1 360103360103 2:016s1 2.98 ForZ2 sthe impedances add, or Z2 sR21 C2s220103107 s 2.99 Substituting Eqs. (2.98) and (2.99) into Eq. (2.97) and simplifying, we get Vo s Vi s 1:232s245:95s22:55 s 2.100  The resulting circuit is called a PID controller and can be used to improve the performance of a control system. We explore this possibility further in Chapter 9. – +Z2(s) Z1(s)V1(s) Vi(s)Vo(s) FIGURE 2.12 General noninverting operational ampli ﬁer circuit2.4 Electrical Network Transfer Functions 59WEBC02 10/28/2014 16:18:33 Skill-Assessment Exercise 2.6 PROBLEM: Find the transfer function, G sVL s=V s, for the circuit given in Figure 2.14. Solve the problem two ways —mesh analysis and nodal analysis. Show that the two methods yield the same result. ANSWER: VL s=V s s22s1= s25s2 The complete solution is at www.wiley.com/college/nise .Example 2.15 Transfer Function —Nonin v erting Operational Ampli ﬁer CircuitTransfer Function —Noninverting Operational Ampli ﬁer Circuit PROBLEM: Find the transfer function, Vo s=Vi s, for the circuit given in Figure 2.13. SOLUTION: Weﬁnd each of the impedance functions, Z1 sandZ2 s, and then substitute them into Eq. (2.104). Thus, Z1 sR11 C1s 2.105  and Z2 sR2 1=C2s R2 1=C2s 2.106  Substituting Eqs. (2.105) and (2.106) into Eq. (2.104) yields Vo s Vi sC2C1R2R1s2 C2R2C1R2C1R1s1 C2C1R2R1s2 C2R2C1R1s1 2.107 R2 R1v1(t) vi(t)vo(t)C2 C1– + FIGURE 2.13 Noninverting operational ampli ﬁer circuit for Example 2.15 + –v(t) vL(t)1Ω 1Ω1H 1 H 1 H+– FIGURE 2.14 Electric circuit for Skill-Assessment Exercise 2.660 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:33 In this section, we found transfer functions for multiple-loop and multiple-node electrical networks, as well as operational ampli ﬁer circuits. We developed mesh and nodal equations, noted their form, and wrote them by inspection. In the next section we begin our work with mechanical systems. We will see that many of the concepts applied to electricalnetworks can also be applied to mechanical systems via analogies —from basic concepts to writing the describing equations by inspection. This revelation will give you the con ﬁdence to move beyond this textbook and study systems not covered here, such as hydraulic orpneumatic systems. 2.5 Translational Mechanical System Transfer Functions We have shown that electrical networks can be modeled by a transfer function, G(s), that algebraically relates the Laplace transform of the output to the Laplace transform of theinput. Now we will do the same for mechanical systems. In this section we concentrate ontranslational mechanical systems. In the next section we extend the concepts to rotationalmechanical systems. Notice that the end product, shown in Figure 2.2, will be mathemati-cally indistinguishable from an electrical network. Hence, an electrical network can be interfaced to a mechanical system by cascading their transfer functions, provided that one system is not loaded by the other. 6 Mechanical systems parallel electrical networks to such an extent that there are analogies between electrical and mechanical components and variables. Mechanicalsystems, like electrical networks, have three passive, linear components. Two of them,the spring and the mass, are energy-storage elements; one of them, the viscous damper,dissipates energy. The two energy-storage elements are analogous to the two electricalenergy-storage elements, the inductor and capacitor. The energy dissipator is analogous to electrical resistance. Let us take a look at these mechanical elements, which are shown in Table 2.4. In the table, K,f v, and Mare called spring constant ,coefﬁcient of viscous friction , andmass , respectively. We now create analogies between electrical and mechanical systems by comparing Tables 2.3 and 2.4. Comparing the force-velocity column of Table 2.4 to the voltage-currentcolumn of Table 2.3, we see that mechanical force is analogous to electrical voltage andmechanical velocity is analogous to electrical current. Comparing the force-displacementcolumn of Table 2.4 with the voltage-charge column of Table 2.3 leads to the analogy between the mechanical displacement and electrical charge. We also see that the spring isSkill-Assessment Exercise 2.7 PROBLEM: IfZ1 sis the impedance of a 10 μF capacitor and Z2 sis the impedance of a 100 k Ωresistor, ﬁnd the transfer function, G sVo s=Vi s, if these components are used with (a) an inverting operational ampli ﬁer and (b) a noninverting ampli ﬁer as shown in Figures 2.10(c) and 2.12, respectively. ANSWER: G s sfor an inverting operational ampli ﬁer;G ss1 for a noninverting operational ampli ﬁer. The complete solution is at www.wiley.com/college/nise . 6The concept of loading is explained further in Chapter 5.2.5 Translational Mechanical System Transfer Functions 61WEBC02 10/28/2014 16:18:34 analogous to the capacitor, the viscous damper is analogous to the resistor, and the mass is analogous to the inductor. Thus, summi ng forces written in t erms of velocity is analogous to summing vo ltages written in terms of current , and the resulting mechanical differential equations are analogous to mesh equations. If the forces are written in terms of displacement, the resulting m echanical equations resemb le, but are not analogous to, the mesh equations. We, however, will use t his model for mechanical systems so that we can write equations directly in terms of displacement. Another analogy can be drawn by comparing the force-velocity column of Table 2.4 to the current-voltage column of Table 2.3 in reverse order. Here the analogyis between force and current and between ve locity and voltage. Also, the spring is analogous to the inductor, the viscous damper is analogous to the resistor, and the massis analogous to the capacitor. Thus, summing forces written in terms of velocity isanalogous to summing currents written in te rms of voltage and the resulting mechanical differential equations are analogous to nodal equations. We will discuss these analogiesin more detail in Section 2.9. We are now ready to ﬁnd transfer functions for trans lational mechanical systems. Ourﬁrst example, shown in Figure 2.15(a ), is similar to the simple RLC network of Example 2.6 (see Figure 2.3). The mechanical system requires just one differentialequation, called the equation of motion ,t od e s c r i b ei t .W ew i l lb e g i nb ya s s u m i n ga positive direction of motion, for example, to the right. This assumed positive direction ofmotion is similar to assuming a current direction in an electrical loop. Using our assumeddirection of positive motion, we ﬁrst draw a free-body diagram, placing on the body all forces that act on the body either in the direction of motion or opposite to it. Next we use Newton ’s law to form a differential equation of motion by summing the forces and setting the sum equal to zero. Finally, assuming zer o initial conditions, we take the Laplace transform of the differential equation, separa te the variables, and arrive at the transfer function. An example follows.TABLE 2.4 Force-velocity, force-displacement, and impedance translational relationships for springs, viscous dampers, and mass Component Force-velocity Force-displacementImpedence ZM sF s=X s KSpring x(t) f(t)f tKZt 0v τdτ f tKx t K fvViscous damper x(t) f(t)f tfvv t f tfvdx t dtfvs Mass x(t) f(t) Mf tMdv t dtf tMd2x t dt2 Ms2 Note: The following set of symbols and units is used throughout this book: f tN newtons ,x tm meters , v tm/s meters/second ,K=N/m (newtons/meter), fvN-s/m newton-seconds =meter ,Mkg kilograms  newton-seconds2/meter .62 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:35 Now can we parallel our work with electrical networks by circumventing the writing of differential equations and by de ﬁning impedances for mechanical components? If so, we can apply to mechanical systems the problem-solving techniques learned in the previous section. Taking the Laplace transform of the force-displacement column in Table 2.4, weobtain for the spring, F sKX s 2.112 Example 2.16 Transfer Function —One Equation of Motion Transfer Function —One Equation of Motion PROBLEM: Find the transfer function, X s=F s, for the system of Figure 2.15( a). SOLUTION: Begin the solution by drawing the free-body diagram shown in Figure 2.16( a). Place on the mass all forces felt by the mass. We assume the mass is traveling toward the right. Thus, only the applied force points to the right; all other forces impede the motionand act to oppose it. Hence, the spring, viscous damper, and the force due to accelerationpoint to the left. We now write the differential equation of motion using Newton’ s law to sum to zero all of the forces shown on the mass in Figure 2.16( a): M d2x t dt2fvdx t dtKx tf t 2.108  Taking the Laplace transform, assuming zero initial conditions, Ms2X sfvsX sKX sF s 2.109  or Ms2fvsKX sF s 2.110  Solving for the transfer function yields G sX s F s1 Ms2fvsK 2.111  which is represented in Figure 2.15( b).F(s) (b)fvsX(s) Ms2X(s)KX(s) f(t) (a)fv MKx(t) dx dt d2x dt2M MX(s) x(t) FIGURE 2.16 a.Free-body diagram of mass, spring, and damper system; b.transformed free-body diagram(a)( b)X(s) F(s)K f(t)x(t) fvM1 Ms2 + fvs + K FIGURE 2.15 a.Mass, spring, and damper system;b.block diagram2.5 Translational Mechanical System Transfer Functions 63WEBC02 10/28/2014 16:18:35 for the viscous damper, F sfvsX s 2.113  and for the mass, F sMs2X s 2.114  If we de ﬁne impedance for mechanical components as ZM sF s X s 2.115  and apply the de ﬁnition to Eqs. (2.112) through (2.114), we arrive at the impedances of each component as summarized in Table 2.4 ( Raven ,1995 ).7 Replacing each force in Figure 2.16( a) by its Laplace transform, which is in the format F sZM sX s 2.116  we obtain Figure 2.16( b), from which we could have obtained Eq. (2.109) immediately without writing the differential equation. From now on we use this approach. Finally, notice that Eq. (2.110) is of the form Sum of impedances X sSum of applied forces  2.117  which is similar, but not analogous, to a mesh equation (see footnote 7). Many mechanical systems are similar to multiple-loop and multiple-node electrical networks, where more than one simultaneous differential equation is required to describe the system. In mechanical systems, the number of equations of motion required is equal to thenumber of linearly independent motions. Linear independence implies that a point of motion in a system can still move if all other points of motion are held still. Another namefor the number of linearly independent motions is the number of degrees of freedom . This discussion is not meant to imply that these motions are not coupled to one another; ingeneral, they are. For example, in a two-loop electrical network, each loop current depends on the other loop current, but if we open-circuit just one of the loops, the other current can still exist if there is a voltage source in that loop. Similarly, in a mechanical system with twodegrees of freedom, one point of motion can be held still while the other point of motionmoves under the in ﬂuence of an applied force. In order to work such a problem, we draw the free-body diagram for each point of motion and then use superposition. For each free-body diagram we begin by holding allother points of motion still and ﬁnding the forces acting on the body due only to its own motion. Then we hold the body still and activate the other points of motion one at a time, placing on the original body the forces created by the adjacent motion. Using Newton ’s law, we sum the forces on each body and set the sum to zero. The result is a system of simultaneous equations of motion. As Laplace transforms, these 7Notice that the impedance column of Table 2.4 is not a direct analogy to the impedance column of Tabel 2.3, since the denominator of Eq. (2.115) is displacement. A direct analogy could be derived by de ﬁning mechanical impedance in terms of velocity as F s=V s. We chose Eq. (2.115) as a convenient de ﬁnition for writing the equations of motion in terms of displacement, rather than velocity. The alternative, however, is available.64 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:37 equations are then solved for the output variable of interest in terms of the input variable from which the transfer function is evaluated. Example 2.17 demonstrates this problem-solving technique. Example 2.17 Transfer Function —Two Degrees of Freedom Transfer Function —Two Degrees of Freedom PROBLEM: Find the transfer function, X2 s=F s, for the system of Figure 2.17( a). SOLUTION: The system has two degrees of freedom, since each mass can be moved in the horizontal direction while the other is he ld still. Thus, two simu ltaneous equations of motion will be required to describe the sys tem. The two equations come from free-body diagrams of each mass. Superposition is used to draw the free-body diagrams. For example, the forces on M1are due to (1) its own motion and (2) the motion of M2 transmitted to M1through the system. We will consider these two sources separately. If we hold M2still and move M1to the right, we see the forces shown in Figure 2.18( a). If we hold M1still and move M2to the right, we see the forces shown in Figure 2.18( b). The total force on M1is the superposition, or sum, of the forces just discussed. This result is shown in Figure 2.18( c). For M2, we proceed in a similar fashion: First we move M2to the right while holding M1still; then we move M1to the right and hold M2still. For each case we evaluate the forces on M2. The results appear in Figure 2.19.K1 K3f(t)fv3 fv1fv2M1 M2 K2x1(t) x2(t) (a) (fv3s+K2) ΔX2(s) F(s) (b)FIGURE 2.17 a.Two- degrees-of-freedom translational mechanical system;8b.block diagram K1X1(s) fv1sX1(s) F(s) M1s2X1(s) afv3sX1(s) K2X1(s) (b)fv3sX2(s)K2X2(s) (K1 + K 2)X1(s) F(s) M1s2X1(s)(fv1 + fv3)sX1(s) fv3sX2(s)K2X2(s) (c)( )M1 M1 M1FIGURE 2.18 a.Forces on M1due only to motion of M1; b.forces on M1due only to motion of M2;c.all forces onM1Virtual Experiment 2.1 Vehicle Suspension Put theory into practice exploring the dynamics ofanother two-degrees-of- freedom system —a vehicle suspension system driving over a bumpy road anddemonstrated with the Quanser Active Suspension System modeled inLabVIEW. © Debra Lex Virtual experiments are foundon Learning Space. 8Friction shown here and throughout the book, unless otherwise indicated, is viscous friction. Thus, fv1andfv2are not Coulomb friction, but arise because of a viscous interface.2.5 Translational Mechanical System Transfer Functions 65WEBC02 10/28/2014 16:18:37 Notice again, in Eq. (2.118), that the form of the equations is similar to electrical mesh equations: Sum of impedances connected to the motion atx12 66666643 7777775X 1 s Sum of impedances between x1andx22 666643 77775X 2 sSum of applied forces atx12 643 75 (2.120a)  Sum of impedances between x1andx22 666643 77775X 1 sSum of impedances connected to the motion atx22 66666643 7777775X 2 sSum of applied forces atx22 643 75 (2.120b) The pattern shown in Eq. (2.120) should now be familiar to us. Let us use the concept to write the equations of motion of a three-degrees-of-freedom mechanical network byinspection, without drawing the free-body diagram.The Laplace transform of the equations of motion can now be written from Figures 2.18( c) and 2.19( c)a s M1s2 Fv1fv3s K1K2X1 s  fv3sK2X2 sF s (2.118a)   fv3sK2X1 sM2s2 fv2fv3s K2K3X2 s0 (2.118b) From this, the transfer function, X2 s=F s,i s X2 s F sG s fv3sK2 Δ 2.119  as shown in Figure 2.17( b) where Δ/C12/C12/C12/C12/C12M 1s2 fv1fv3s K1K2   fv3sK2   fv3sK2 M2s2 fv2fv3s K2K3/C12/C12/C12/C12/C12K2X2(s) fv2sX2(s) M2s2X2(s)fv3sX2(s) (a)K3X2(s) (b)fv3sX1(s) (K2 + K3)X2(s) M2s2X2(s)(fv2 + fv3)sX2(s)fv3sX1(s)K2X1(s) (c)K2X1(s)M2 M2 M2FIGURE 2.19 a.Forces on M2due only to motion of M2; b.forces on M2due only to motion of M1;c.all forces onM266 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:39 Example 2.18 Equations of Motion by InspectionEquations of Motion by Inspection PROBLEM: Write, but do not solve, the equations of motion for the mechanical network of Figure 2.20. SOLUTION: The system has three degrees of freedom, since each of the three masses can be moved independently while the others are held still. The form of the equations will be similar to electrical mesh equations. For M1, Sum of impedances connected to the motion atx12 66666643 7777775X 1 s Sum of impedances between x1andx22 666643 77775X 2 s  Sum of impedances between x1andx32 666643 77775X 3 sSum of applied forces atx12 643 75 2.121  Similarly, for M2andM3, respectively,  Sum of impedances between x1andx22 666643 77775X 1 sSum of impedances connected to the motion atx22 66666643 7777775X 2 s  Sum of impedances between x2andx32 666643 77775X 3 sSum of applied forces atx22 643 75 2.122 x2(t)x3(t) f(t) fv1fv2K1 K2fv3 M2 M1fv4M3 x1(t) FIGURE 2.20 Three-degrees- of-freedom translational mechanical system2.5 Translational Mechanical System Transfer Functions 67WEBC02 10/28/2014 16:18:40  Sum of impedances between x1andx32 666643 77775X 1 s Sum of impedances between x2andx32 666643 77775X 2 s Sum of impedances connected to the motion atx32 66666643 7777775X 3 sSum of applied forces atx32 643 75 2.123  M1has two springs, two viscous dampers, and mass associated with its motion. There is one spring between M1andM2and one viscous damper between M1andM3. Thus, using Eq. (2.121), M1s2 fv1fv3s K1K2X1 s K2X2 s fv3sX3 s0 2.124  Similarly, using Eq. (2.122) for M2,  K 2X1 sM2s2 fv2fv4sK2X2 s fv4sX3 sF s 2.125  and using Eq. (2.123) for M3,  fv3sX1 s fv4sX2 sM3s2 fv3fv4sX3 s0 2.126  Equations (2.124) through (2.126) are the equations of motion. We can solve them for any displacement, X1 s;X2 s;orX3 s, or transfer function. Skill-Assessment Exercise 2.8 PROBLEM: Find the transfer function, G sX2 s=F s, for the translational mechanical system shown in Figure 2.21. ANSWER: G s3s1 s s37s25s1 The complete solution is at www.wiley.com/college/nise .fv1= 1 N-s/m fv2= 1 N-s/m fv4=1 N - s / mfv3= 1 N-s/mK=1 N / m M1= 1 kg M2=1 k gx1(t) f(t)x2(t) FIGURE 2.21 Translational mechanical system for Skill- Assessment Exercise 2.868 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:41 2.6 Rotational Mechanical System Transfer Functions Having covered electrical and translational mechanical systems, we now move on to consider rotational mechanical systems. Rotational mechanical systems are handled thesame way as translational mechanical systems, except that torque replaces force and angulardisplacement replaces translational displacement. The mechanical components for rotationalsystems are the same as those for translational systems, except that the components undergorotation instead of translation. Table 2.5 shows the components along with the relationshipsbetween torque and angular velocity, as well as angular displacement. Notice that the symbols for the components look the same as translational symbols, but they are undergoing rotation and not translation. Also notice that the term associated w ith the mass is replaced by inertia. The values of K,D,a n dJ are called spring constant ,coefﬁcient of viscous friction ,a n d moment of inertia , respectively. The impedances of the mechanical components are also summarized in the last column of Table 2.5. The values can be found by taking theLaplace transform, assuming zero initial conditions, of the torque-angular displacementcolumn of Table 2.5. The concept of degrees of freedom carries over to rotational systems, except that we test a point of motion by rotating it while holding still all other points of motion. The number of points of motion that can be rotated while all others are held still equals thenumber of equations of motion required to describe the system. Writing the equations of motion for rotational systems is similar to writing them for translational systems; the only difference is that the free-body diagram consists of torquesrather than forces. We obtain these torques using superposition. First, we rotate a body whileholding all other points still and place on its free-body diagram all torques due to the body ’s own motion. Then, holding the body still, we rotate adjacent points of motion one at a timeand add the torques due to the adjacent motion to the free-body diagram. The process isrepeated for each point of motion. For each free-body diagram, these torques are summedand set equal to zero to form the equations of motion. TABLE 2.5 Torque-angular velocity, torque-angular displacement, and impedance rotational relationships for springs, viscous dampers, and inertia ComponentTorque-angular velocityTorque-angular displacementImpedence ZM sT s=θ s KSpringT(t) (t) θ T tKRt 0ω τdτ T tKθ t K DViscous damperT(t) (t) θ T tDω t T tDdθ t dtDs JInertiaT(t) (t) θ T tJdω t dtT tJd2θ t dt2Js2 Note: The following set of symbols and units is used throughout this book: T t N-m newton-meters , θ t rad radians ,ω t rad/s radians/second ,K N-m/rad newton-meters/radian ,D N-m-s/rad newton- meters-seconds/radian :J kg-m2 kilograms-meters2 newton-meters-seconds2/radian .2.6 Rotational Mechanical System Transfer Functions 69WEBC02 10/28/2014 16:18:42 Two examples will demonstrate the solution of rotational systems. The ﬁrst one uses free-body diagrams; the second uses the concept of impedances to write the equations of motion by inspection. 9In this case the parameter is referred to as a distributed parameter. 10The parameter is now referred to as a lumped parameter.Example 2.19 Transfer Function —Two Equations of Motion Transfer Function —Two Equations of Motion PROBLEM: Find the transfer function, θ2 s=T s, for the rotational system shown in Figure 2.22( a). The rod is supported by bearings at either end and is undergoing torsion. A torque is applied at the left, and the displacement is measured at the right. SOLUTION: First, obtain the schematic from the physical system. Even though torsion occurs throughout the rod in Figure 2.22( a),9we approximate the system by assuming that the torsion acts like a spring concentrated at one particular point in the rod, with an inertia J1to the left and an inertia J2to the right.10We also assume that the damping inside the ﬂexible shaft is negligible. The schematic is shown in Figure 2.22( b). There are two degrees of freedom, since each inertia can be rotated while the other is held still.Hence, it will take two simultaneous equations to solve the system. Next, draw a free-body diagram of J 1, using superposition. Figure 2.23(a ) shows the torques on J1ifJ2is held still and J1rotated. Figure 2.23( b) shows the torques on J1ifJ1 is held still and J2rotated. Finally, the sum of Figures 2.23( a) and 2.23( b) is shown in Figure 2.23( c), the ﬁnal free-body diagram for J1. The same process is repeated in Figure 2.24 for J2.θ1(t) θ2(t) D1 K D2T(t) (b)θ1(t) T(t) θ2(t) Bearing D1Bearing D2Torsion (a)J2J1 J2J1 K Δ (c)T(s) θ2(s)FIGURE 2.22 a.Physical system; b.schematic; c.block diagram (a)J1 KT(s) (b)( c)D1sθ1(s) θ1(s) Kθ2(s)Kθ1(s)D1sθ1(s)J1s2θ1(s)T(s)Direction θ1 θ1 θ1 (s) J1 J1J1s2θ1(s) Kθ2(s)Direction(s) Direction(s) FIGURE 2.23 a.Torques on J1due only to the motion of J1; b.torques on J1due only to the motion of J2;c.ﬁnal free-body diagram for J170 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:44 Summing torques, respectively, from Figures 2.23( c) and 2.24( c) we obtain the equations of motion, J1s2D1sKθ1 s  Kθ2 sT s (2.127a)  Kθ1 s J2s2D2sKθ2 s0 (2.127b) from which the required transfer function is found to be θ2 s T sK Δ 2.128  as shown in Figure 2.22( c), where Δ/C12/C12/C12/C12/C12 J 1s2D1sK  K  K J2s2D2sK/C12/C12/C12/C12/C12 Notice that Eqs. (2.127) have that now well-known form Sum of impedances connected to the motion atθ 12 6666643 777775θ 1 s Sum of impedances between θ1andθ22 66643 7775θ 2 sSum of applied torques atθ12 435 (2.129a)  Sum of impedances between θ 1andθ22 66643 7775θ 1 sSum of impedances connected to the motion atθ22 6666643 777775θ 2 sSum of applied torques atθ22 435 (2.129b)θ2(s) D2s KJ2J2s2 (a)( b)( c)θ2(s) θ2(s) θ2(s) θ2(s) θ2(s)Kθ1(s) J2Kθ1(s) θ2(s) D2sJ2s2 θ2(s) Kθ2(s)Direction Direction Direction J2 FIGURE 2.24 a.Torques on J2due only to the motion of J2; b.torques on J2due only to the motion of J1;c.ﬁnal free-body diagram for J2 TryIt 2.9 Use the following MATLAB and Symbolic Math Toolbox statements to help you get Eq. (2.128). syms s J 1D 1KTJ 2D 2 . . . theta1 theta2 A=[ (J1*s^2 +D1*s+K) K  K (J2*s^2 +D2*s +K) ] ; B=[theta1 theta2] ; C=[T 0] ; B=inv(A) *C; theta2 =B(2) ; 'theta2' pretty (theta2) Example 2.20 Equations of Motion by InspectionEquations of Motion by Inspection PROBLEM: Write, but do not solve, the Laplace transform of the equations of motion for the system shown in Figure 2.25. θ1(t) θ2(t) θ3(t) T(t) D1 KD 2 D3J2 J1 J3FIGURE 2.25 Three-degrees- of-freedom rotational system2.6 Rotational Mechanical System Transfer Functions 71WEBC02 10/28/2014 16:18:45 SOLUTION: The equations will take on the following form, similar to electrical mesh equations: Sum of impedances connected to the motion atθ12 66666643 7777775θ 1 s Sum of impedances between θ1andθ22 666643 77775θ 2 s  Sum of impedances between θ1andθ32 666643 77775θ 3 sSum of applied torques atθ12 643 75(2.130a)  Sum of impedances between θ1andθ22 666643 77775θ 1 sSum of impedances connected to the motion atθ22 66666643 7777775θ 2 s  Sum of impedances between θ2andθ32 666643 77775θ 3 sSum of applied torques atθ22 643 75(2.130b)  Sum of impedances between θ1andθ32 666643 77775θ 1 s Sum of impedances between θ2andθ32 666643 77775θ 2 s Sum of impedances connected to the motion atθ32 66666643 7777775θ 3 sSum of applied torques atθ32 643 75(2.130c) Hence, J1s2D1sKθ1 s  Kθ2 s  0θ3 sT s  Kθ1 s J2s2D2sKθ2 s  D2sθ3 s0  0θ1 s  D2sθ2 s J3s2D3sD2sθ3 s0 (2.131a,b,c)72 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:45 2.7 Transfer Functions for Systems with Gears Now that we are able to ﬁnd the transfer function for rotational systems, we realize that these systems, especially those driven by motors, are rarely seen without associated gear trains driving the load. This section covers this important topic. Gears provide mechanical advantage to rotational systems. Anyone who has ridden a 10-speed bicycle knows the effect of gearing. Going uphill, you shift to provide more torqueand less speed. On the straightaway, you shift to obtain more speed and less torque. Thus, gearsallow you to match the drive system and the load —a trade-off between speed and torque. For many applications, gears exhibit backlash , which occurs because of the loose ﬁt between two meshed gears. The drive gear rotates through a small angle before makingcontact with the meshed gear. The result is that the angular rotation of the output gear doesnot occur until a small angular rotation of the input gear has occurred. In this section, weidealize the behavior of gears and assume that there is no backlash. The linearized interaction between two gears is depicted in Figure 2.27. An input gear with radius r 1andN1teeth is rotated through angle θ1 tdue to a torque, T1 t. An output gear with radius r2andN2teeth responds by rotating through angle θ2 tand delivering a torque, T2 t. Let us now ﬁnd the relationship between the rotation of Gear 1, θ1 t, and Gear 2, θ2 t. From Figure 2.27, as the gears turn, the distance traveled along each gear ’s circumference is the same. Thus, r1θ1r2θ2 2.132  or θ2 θ1r1 r2N1 N2 2.133 Skill-Assessment Exercise 2.9 PROBLEM: Find the transfer function, G sθ2 s=T s, for the rotational mechanical system shown in Figure 2.26. ANSWER: G s1 2s2s1 The complete solution is at www.wiley.com/college/nise .1 N-m/rad1 N-m/rad 1 N-m-s/rad 1 N-m-s/radθ2(t)T(t) 1 kg-m 2 FIGURE 2.26 Rotational mechanical system for Skill-Assessment Exercise 2.9 r2 Input drive gear, Gear 1 Output driven gear, Gear 2r1N1N2T1(t) θ1(t)T2(t) θ2(t) FIGURE 2.27 A gear system2.7 Transfer Functions for Systems with Gears 73WEBC02 10/28/2014 16:18:46 since the ratio of the number of teeth along the circumference is in the same proportion as the ratio of the radii. We conclude that the ratio of the angular displacement of the gears is inversely proportional to the ratio of the number of teeth. What is the relationship between the input torque, T1, and the delivered torque, T2?I f we assume the gears are lossless , that is, they do not absorb or store energy, the energy into Gear 1 equals the energy out of Gear 2.11Since the translational energy of force times displacement becomes the rotational energy of torque times angular displacement, T1θ1T2θ2 2.134  Solving Eq. (2.134) for the ratio of the torques and using Eq. (2.133), we get T2 T1θ1 θ2N2 N1 2.135  Thus, the torques are directly proportional to the ratio of the number ofteeth. All results are summarized in Figure 2.28. Let us see what happens to mechanical impedances that are driven by gears. Figure 2.29( a) shows gears driving a rotational inertia, spring, and viscous damper. For clarity, the gears are shown by an end-on view.We want to represent Figure 2.29( a) as an equivalent system at θ 1without the gears. In other words, can the mechanical impedances be re ﬂected from the output to the input, thereby eliminating the gears? From Figure 2.28( b),T1can be re ﬂected to the output by multiplying by N2=N1. The result is shown in Figure 2.29( b), from which we write the equation of motion as Js2DsKθ2 sT1 sN2 N1 2.136  Now convert θ2 sinto an equivalent θ1 s, so that Eq. (2.136) will look as if it were written at the input. Using Figure 2.28(a ) to obtain θ2 sin terms of θ1 s, we get Js2DsKN1 N2θ1 sT1 sN2 N1 2.137  11This is equivalent to saying that the gears have negligible inertia and damping.JDθ1(t) θ1(t)θ2(t) θ2(t)T1(t) N1 N2 (a)D T1(t) N2 N1 K (b) T1(t) J2N1 N2 2N1 N2K (c)2N1 N2DJ K FIGURE 2.29 a.Rotational system driven by gears; b.equivalent system at the output after reﬂ ection of input torque; c.equivalent system at the input after reﬂ ection of impedancesθ2 θ1 N1 N2 (a)T1 T2 N2 N1 (b) FIGURE 2.28 Transfer functions for a.angular displacement in lossless gears and b.torque in lossless gears74 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:47 After simpli ﬁcation, JN1 N2/C18/C192 s2DN1 N2/C18/C192 sKN1 N2/C18/C192"# θ1 sT1 s 2.138  which suggests the equivalent system at the input and without gears shown in Figure 2.29( c). Thus, the load can be thought of as having been re ﬂected from the output to the input. Generalizing the results, we can make the following statement: Rotational mechanical impedances can be re ﬂected through gear trains by multiplying the mechanical impedance by the ratio Number of teeth of gear on destination shaft Number of teeth of gear on source shaft0 BB@1 CCA2 where the impedance to be re ﬂected is attached to the source shaft and is being re ﬂected to the destination shaft. The next example demonstrates the application of the concept of reﬂected impedances as we ﬁnd the transfer function of a rotational mechanical system with gears. Example 2.21 Transfer Function —System with Lossless Gears Transfer Function —System with Lossless Gears PROBLEM: Find the transfer function, θ2 s=T1 s, for the system of Figure 2.30(a ). SOLUTION: It may be tempting at this point to search for two simultaneous equations corresponding to each inertia. The inertias, however, do not undergo linearly independent motion, since they are tied together by the gears. Thus, there is only one degree offreedom and hence one equation of motion. Let us ﬁrst re ﬂect the impedances ( J 1andD1) and torque ( T1) on the input shaft to the output as shown in Figure 2.30( b), where the impedances are re ﬂected by N2=N12 and the torque is re ﬂected by ( N2=N1). The equation of motion can now be written as Jes2DesKeθ2 sT1 sN2 N1 2.139 J2θ1(t) θ2(t)θ2(t) θ2(s)T1(t) N1 N2 K2D2 JeT1(t) Ke = K2 (b)N2 N1De = D12 + D2 2 + J2D1 (a)Je = J1J1 Jes2 + D es + K e (c)T1(s)N2 N1 N2 N1N2/N1 FIGURE 2.30 a.Rotational mechanical system with gears; b.system after reﬂ ection of torques and impedances to the output shaft; c.block diagram2.7 Transfer Functions for Systems with Gears 75WEBC02 10/28/2014 16:18:48 In order to eliminate gears with large radii, a gear train is used to implement large gear ratios by cascading smaller gear ratios. A schematic diagram of a gear train is shown in Figure 2.31. Next to each rotation, theangular displacement relative to θ 1has been calculated. From Figure 2.31, θ4N1N3N5 N2N4N6θ1 2.141  For gear trains, we conclude that the equivalent gear ratio is the product ofthe individual gear ratios. We now apply this result to solve for the transferfunction of a system that does not have lossless gears.where JeJ1N2 N1/C18/C192 J2;DeD1N2 N1/C18/C192 D2;KeK2 Solving for θ2 s=T1 s, the transfer function is found to be G sθ2 s T1 sN2=N1 Jes2DesKe 2.140  as shown in Figure 2.30( c). N1 N3 N5N2 N4 N6=N5 N6=N1 N3 N5 N2 N4 N6=N3 N4=N1 N3 N2 N4=N1 N2θ1 θ1 θ3 θ4θ3 θ1θ2 θ1θ2 FIGURE 2.31 Gear train Example 2.22 Transfer Function —Gears with Loss Transfer Function —Gears with Loss PROBLEM: Find the transfer function, θ1 s=T1 s, for the system of Figure 2.32( a). SOLUTION: This system, which uses a gear train, does not have lossless gears. All of the gears have inertia, and for some shafts there is viscous friction. To solve theproblem, we want to re ﬂect all of the impedances to the input shaft, θ The gear ratio is not the same for all impedances. For example, D2is reﬂected only through one gear ratio asD2 N1=N22, whereas J4plus J5is re ﬂected through two gear ratios as J4J5 N3=N4 N1=N22. The result of re ﬂecting all impedances to θ1is shownθ1(t)θ1(t) θ1(s)T1(t) N1 J1, D1 N2 N3 D2, J2 J3 J5N4 J4Je De Je = J1 + (J2 + J3)N1 N22 + (J4 + J5)N1N3 N2N42 N1 N22 (a)( b)T1(t) De = D1 + D21 Jes2 + DesT1(s) (c) FIGURE 2.32 a.System using a gear train; b.equivalent system at the input; c.block diagram76 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:49 2.8 Electromechanical System Transfer Functions In the last section we talked about rotational systems with gears, which completed our discussion of purely mechanical systems. Now, we move to systems that are hybrids of electrical and mechanical variables, the electromechanical systems . We have seen one application of an electromechanical system in Chapter 1, the antenna azimuth positionin Figure 2.32( b), from which the equation of motion is Jes2Desθ1 sT1 s 2.142  where JeJ1 J2J3N1 N2/C18/C192  J4J5N1N3 N2N4/C18/C192 and DeD1D2N1 N2/C18/C192 From Eq. (2.142), the transfer function is G sθ1 s T1 s1 Jes2Des 2.143  as shown in Figure 2.32( c). Skill-Assessment Exercise 2.10 PROBLEM: Find the transfer function, G sθ2 s=T s, for the rotational mechanical system with gears shown in Figure 2.33. ANSWER: G s1=2 s2s1 The complete solution is at www.wiley.com/college/nise .1 N-m-s/rad 4 N-m/radθ2(t)T(t) 1 kg-m 2 N2=5 0N1=2 5 FIGURE 2.33 Rotational mechanical system with gears for Skill-Assessment Exercise 2.102.8 Electromechanical System Transfer Functions 77WEBC02 10/28/2014 16:18:49 control system. Other applications for systems with electromechanical components are robot controls, sun and star trackers, and computer tape and disk-drive position controls. Anexample of a control system that uses electromechanical components is shown inFigure 2.34. A motor is an electromechanical component that yields a displacement output for a voltage input, that is, a mechanical output generated by an electrical input. We will derive thetransfer function for one particular kind of electromechanical system, the armature-controlleddc servomotor ( Mablekos ,1980 ). The motor ’s schematic is shown in Figure 2.35( a), and the transfer function we will derive appears in Figure 2.35( b). In Figure 2.35( a) a magnetic ﬁeld is developed by stationary permanent magnets or a stationary electromagnet called the ﬁxedﬁeld. A rotating circuit called the armature , through which current i a tﬂows, passes through this magnetic ﬁeld at right angles and feels a force, FBlia t, where Bis the magnetic ﬁeld strength and lis the length of the conductor. The resulting torque turns the rotor , the rotating member of the motor. There is another phenomenon that occurs in the motor: A conductor moving at right angles to a magnetic ﬁeld generates a voltage at the terminals of the conductor equal to 12See Appendix I at www.wiley.com/college/nise for a derivation of this schematic and its parameters.Armature circuitvb(t)Ra La Rotor Tm(t)Fixed field G(s)θm(s) θm(t)Ea(s) (a)( b)ia(t)ea(t)++ –– FIGURE 2.35 DC motor: a.schematic;12b.block diagram FIGURE 2.34 NASA ﬂight simulator robot arm with electromechanical control system components78 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:50 eBlv, where eis the voltage and vis the velocity of the conductor normal to the magnetic ﬁeld. Since the current-carrying armature is rotating in a magnetic ﬁeld, its voltage is proportional to speed. Thus, vb tKbdθm t dt 2.144  We call vb ttheback electromotive force (back emf );Kbis a constant of proportionality called the back emf constant; and dθm t=dtωm tis the angular velocity of the motor. Taking the Laplace transform, we get Vb sKbsθm s 2.145  The relationship between the armature current, ia t, the applied armature voltage, ea t, and the back emf, vb t, is found by writing a loop equation around the Laplace transformed armature circuit (see Figure 3.5( a)): RaIa sLasIa sVb sEa s 2.146  The torque developed by the motor is proportional to the armature current; thus, Tm sKtIa s 2.147  where Tmis the torque developed by the motor, and Ktis a constant of proportionality, called the motor torque constant, which depends on the motor and magnetic ﬁeld characteristics. In a consistent set of units, the value of Ktis equal to the value of Kb. Rearranging Eq. (2.147) yields Ia s1 KtTm s 2.148  Toﬁnd the transfer function of the motor, we ﬁrst substitute Eqs. (2.145) and (2.148) into (2.146), yielding RaLasTm s KtKbsθm sEa s 2.149  Now we must ﬁndTm sin terms of θm sif we are to separate the input and output variables and obtain the transfer function, θm s=Ea s. Figure 2.36 shows a typical equivalent mechanical loading on a motor. Jmis the equivalent inertia at the armature and includes both the armature inertia and, as we will see later, the load inertia re ﬂected to the armature. Dmis the equivalent viscous damping at the armature and includes both the armature viscous damping and, as we will see later, the load viscous damping re ﬂected to the armature. From Figure 2.36, Tm s Jms2Dmsθm s 2.150  Substituting Eq. (2.150) into Eq. (2.149) yields RaLas Jms2Dmsθm s KtKbsθm sEa s 2.151 Tm(t)θm(t) Jm Dm FIGURE 2.36 Typical equivalent mechanical loading on a motor2.8 Electromechanical System Transfer Functions 79WEBC02 10/28/2014 16:18:51 If we assume that the armature inductance, La, is small compared to the armature resistance, Ra, which is usual for a dc motor, Eq. (2.151) becomes Ra Kt JmsDmKb/C20/C21 sθm sEa s 2.152  After simpli ﬁcation, the desired transfer function, θm s=Ea s, is found to be θm s Ea sKt= RaJm ss1 JmDmKtKb Ra/C18/C19 /C20/C21 2.153  Even though the form of Eq. (2.153) is relatively simple, namely θm s Ea sK s sα 2.154  the reader may be concerned about how to evaluate the constants. Let us ﬁrst discuss the mechanical constants, JmandDm. Consider Figure 2.37, which shows a motor with inertia Jaand damping Daat the armature driving a load consisting of inertia JLand damping DL. Assuming that all inertia and damping values shown are known, JLandDLcan be reﬂected back to the armature as some equivalent inertia and damping to be added to Jaand Da, respectively. Thus, the equivalent inertia, Jm, and equivalent damping, Dm, at the armature are JmJaJLN1 N2/C18/C192 ;DmDaDLN1 N2/C18/C192 2.155  Now that we have evaluated the mechanical constants, JmandDm, what about the electrical constants in the transfer function of Eq. (2.153)? We will show that these constants can be obtained through a dynamometer test of the motor, where a dynamometer measures the torque and speed of a motor under the condition of a constant applied voltage. Let us ﬁrst develop the relationships that dictate the use of a dynamometer. Substituting Eqs. (2.145) and (2.148) into Eq. (2.146), with La0, yields Ra KtTm sKbsθm sEa s 2.156  Taking the inverse Laplace transform, we get Ra KtTm tKbωm tea t 2.157  where the inverse Laplace transform of sθm sisdθm t=dtor, alternately, ωm t. If a dc voltage, ea, is applied, the motor will turn at a constant angular velocity, ωm, with a constant torque, Tm. Hence, dropping the functional relationship based on time from Eq. (2.157), the following relationship exists when the motor is operating at steady statewith a dc voltage input: Ra KtTmKbωmea 2.158 JL DLN2N1 Motor Ja, Da FIGURE 2.37 DC motor driving a rotational mechanical load13 14 13The units for the electrical constants are Kt=N-m-A (newton-meters/ampere), and Kb=V-s/rad (volt-seconds/radian). 14If the values of the mechanical constants are not known, motor constants can be determined through laboratory testing using transient response or frequency response data. The concept of transient response is covered in Chapter 4; frequency response is covered in Chapter 10.80 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:52 Solving for Tmyields Tm KbKt RaωmKt Raea 2.159  Equation (2.159) is a straight line, Tmvs.ωm, and is shown in Figure 2.38. This plot is called the torque-speed curve . The torque axis intercept occurs when the angular velocity reaches zero. That value of torque is called the stall torque ,Tstall. Thus, TstallKt Raea 2.160  The angular velocity occurring when the torque is zero is called the no-load speed, ωno-load . Thus, ωno-load ea Kb 2.161  The electrical constants of the motor ’s transfer function can now be found from Eqs. (2.160) and (2.161) as Kt RaTstall ea 2.162  and Kbea ωno-load 2.163  The electrical constants, Kt=RaandKb, can be found from a dynamometer test of the motor, which would yield Tstallandωno-load for a given ea.Tm ea1 ea2TstallTorque Speedωno-loadωm FIGURE 2.38 Torque-speed curves with an armature voltage, ea, as a parameter Example 2.23 Transfer Function —DC Motor and Load Transfer Function —DC Motor and Load PROBLEM: Given the system and torque-speed curve of Figure 2.39( a) and ( b),ﬁnd the transfer function, θL s=Ea s. SOLUTION: Begin by ﬁnding the mechanical constants, JmandDm, in Eq. (2.153). From Eq. (2.155), the total inertia at the armature of the motor is JmJaJLN1 N2/C18/C192 57001 10/C18/C192 12 2.164  and the total damping at the armature of the motor is DmDaDLN1 N2/C18/C192 28001 10/C18/C192 10 2.165 Virtual Experiment 2.2 Open-Loop Servo Motor Put theory into practice exploring the dynamics of theQuanser Rotary Servo System modeled in LabVIEW. It is particularly important toknow how a servo motorbehaves when using them in high-precision applications such as hard disk drives. Virtual experiments are foundon Learning Space.2.8 Electromechanical System Transfer Functions 81WEBC02 10/28/2014 16:18:53 Now we will ﬁnd the electrical constants, Kt=RaandKb. From the torque-speed curve of Figure 2.39( b), Tstall500 2.166  ωno-load 50 2.167  ea100 2.168  Hence the electrical constants are Kt RaTstall ea500 1005 2.169  and Kbea ωno-load100 502 2.170  Substituting Eqs. (2.164), (2.165), (2.169), and (2.170) into Eq. (2.153) yield θm s Ea s5=12 ss1 1210 5 2/C26/C27 0:417 s s1:667 2.171  In order to ﬁndθL s=Ea s, we use the gear ratio, N1=N21=10, and ﬁnd θL s Ea s0:0417 s s1:667 2.172  as shown in Figure 2.39( c).Tm ea = 100 V500Torque (N-m) 50 Speed (rad/s)ia(t)ea(t)Ra θm(t) θL(t)Fixed field (a)N1 = 100 N2 = 1000 Da = 2 N-m s/radJa = 5 kg-m2 JL = 700 kg-m2 DL = 800 N-m s/rad (b)ωm+ – 0.0417 s(s + 1.667) (c)Ea (s) θL (s) FIGURE 2.39 a.DC motor and load; b.torque-speed curve; c.block diagram82 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:53 2.9 Electric Circuit Analogs In this section, we show the commonality of systems from the various disciplines by demonstrating that the mechanical systems with which we worked can be represented byequivalent electric circuits. We have pointed out the similarity between the equationsresulting from Kirchhoff ’s laws for electrical systems and the equations of motion of mechanical systems. We now show this commonality even more convincingly by producing electric circuit equivalents for mechanical systems. The variables of the electric circuits behave exactly as the analogous variables of the mechanical systems. In fact, convertingmechanical systems to electrical networks before writing the describing equations is aproblem-solving approach that you may want to pursue. An electric circuit that is analogous to a system from another discipline is called an electric circuit analog. Analogs can be obtained by comparing the describing equations, such as the equations of motion of a mechanical system, with either electrical mesh or nodal equations.When compared with mesh equations, the resulting electrical circuit is called a series analog . When compared with nodal equations, the resulting electrical circuit is called a parallel analog . Series Analog Consider the translational mechanical system shown in Figure 2.41( a), whose equation of motion is Ms2fvsKX sF s 2.173  Kirchhoff ’s mesh equation for the simple series RLC network shown in Figure 2.41( b)i s LsR1 Cs/C18/C19 I sE s 2.174  As we previously pointed out, Eq. (2.173) is not directly analogous to Eq. (2.174) because displacement and current are not analogous. We can create a direct analogy bySkill-Assessment Exercise 2.11 PROBLEM: Find the transfer function, G sθL s=Ea s, for the motor and load shown in Figure 2.40. The torque-speed curve is given by Tm 8ωm200 when the input voltage is 100 volts. ANSWER: G s1=20 ss 15=2 The complete solution is at www.wiley.com/college/nise .+ –ea(t) Ja=1 kg-m 2 Da=5 N-m- s/rad DL=800 N-m-s/rad JL=400 kg-m 2N2= 100N1=2 0 N4= 100N3=2 5 θL(t)Motor FIGURE 2.40 Electromechanical system forSkill-Assessment Exercise 2.112.9 Electric Circuit Analogs 83WEBC02 10/28/2014 16:18:54 operating on Eq. (2.173) to convert displacement to velocity by dividing and multiplying the left-hand side by s, yielding Ms2fvsK ssX s MsfvK s/C18/C19 V sF s 2.175  Comparing Eqs. 2.174 and 2.175, we recognize the sum of impedances and draw the circuitshown in Figure 2.41( c). The conversions are summarized in Figure 2.41( d). When we have more than one degree of freedom, the impedances associated with a motion appear as series electrical elements in a mesh, but the impedances between adjacentmotions are drawn as series electrical impedances between the two corresponding meshes.We demonstrate with an example.+fv M –f(t) v(t)1 K+R L e(t) i(t)C (c)(b)f(t)K fv (a)x(t) (d)mass = M viscous damper = f v spring = K applied force = f(t) velocity = v(t)inductor = M henries resistor = fv ohms capacitor = 1 voltage source = f(t)mesh current = v(t)KM+– +–– farads FIGURE 2.41 Development of series analog: a.mechanical system; b.desired electrical representation; c.series analog; d.parameters for series analog Example 2.24 Converting a Mechanical System to a Series AnalogConverting a Mechanical System to a Series Analog PROBLEM: Draw a series analog for the mechanical system of Figure 2.17( a). SOLUTION: Equations (2.118) are analogous to electrical mesh equations after conversion to velocity. Thus, M1s fv1fv3 K1K2 s/C20/C21 V1 s  fv3K2 s/C18/C19 V2 sF s (2.176a)  fv3K2 s/C18/C19 V1 s M2s fv2fv3 K2K3 s/C20/C21 V2 s0 (2.176b) Coefﬁcients represent sums of electrical impedance. Mechanical impedances associated with M1form the ﬁrst mesh, where impedances between the two masses are common to the two loops. Impedances associated with M2form the second mesh. The result is shown in Figure 2.42, where v1 tandv2 tare the velocities of M1andM2, respectively.84 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:54 Parallel Analog A system can also be converted to an equivalent parallel analog. Consider the translational mechanical system shown in Figure 2.43(a ), whose equation of motion is given by Eq. (2.175). Kirchhoff ’s nodal equation for the simple parallel RLC network s h o w ni nF i g u r e2 . 4 3 ( b)i s Cs1 R1 Ls/C18/C19 E sI s 2.177  Comparing Eqs. (2.175) and (2.177), we identify the sum of admittances and draw thecircuit shown in Figure 2.43( c). The conversions are summarized in Figure 2.43( d). When we have more than one degree of freedom, the components associated with a motion appear as parallel electrical elements connected to a node. The components ofadjacent motions are drawn as parallel electrical elements between two correspondingnodes. We demonstrate with an example. i(t) (c)(b) (d)mass = M viscous damper = f v spring = K applied force = f(t) velocity = v(t)capacitor = M farads resistor = fv ohms inductor = 1 henries current source = f(t)node voltage = v(t)1C RLe(t) f(t) Mv(t) 1 fv1 KKf(t)K fv (a)x(t) M FIGURE 2.43 Development of parallel analog: a.mechanical system; b.desired electrical representation; c.parallel analog; d.parameters for parallel analogv2(t)fv3 1 K2M11 K1 M2fv11 K3 fv2 v1(t)f(t)+– FIGURE 2.42 Series analog of mechanical system of Figure 2.17( a)2.9 Electric Circuit Analogs 85WEBC02 10/28/2014 16:18:55 2.10 Nonlinearities The models thus far are developed from systems that can be described approximately by linear, time-invariant differential equations. An assumption of linearity was implicit in the development of these models. In this section, we formally de ﬁne the terms linear and nonlinear and show how to distinguish between the two. In Section 2.11, we show how to approximate a nonlinear system as a linear system so that we can use the modelingtechniques previously covered in this chapter ( Hsu,1968 ). A linear system possesses two properties: superposition and homogeneity. The property ofsuperposition means that the output response of a system to the sum of inputs is the sum of the responses to the individual inputs. Thus, if an input of r 1 t yields an output of c1 tand an input of r2(t) yields an output of c2 t, then an input of r1 tr2 tyields an output of c1 tc2 t. The property of homogeneity describes the response of the system to a multiplication of the input by a scalar. Speci ﬁcally, in a linear system, the property of homogeneity is demonstrated if for aninput of r 1 tthat yields an output of c1 t, an input of Ar1 tyields an output of Ac1 t; that is, multiplication of an input by a scalar yields a response that is multiplied by the same scalar. We can visualize linearity as shown in Figure 2.45. Figure 2.45( a) is a linear system where the output is alwaysExample 2.25 Converting a Mechanical System to a Parallel AnalogConverting a Mechanical System to a Parallel Analog PROBLEM: Draw a parallel analog for the mechanical system of Figure 2.17( a). SOLUTION: Equation (2.176) is also analogous to electrical node equations. Coef ﬁcients represent sums of electrical admittances. Admittances associated with M1form the elements connected to the ﬁrst node, where mechanical admittances between the two masses are common to the two nodes. Mechanical admittances associated with M2form the elements connected to the second node. The result is shown in Figure 2.44, where v1 tandv2 tare the velocities of M1andM2, respectively. f(t) M1v1(t) 1 fv11 K1M21 fv3 1 K21 fv21 K3v2(t) FIGURE 2.44 Parallel analog of mechanical system of Figure 2.17( a) Skill-Assessment Exercise 2.12 PROBLEM: Draw a series and parallel analog for the rotational mechanical system of Figure 2.22. ANSWER: The complete solution is at www.wiley.com/college/nise .Output Inputx 01 2 3 412 Output Inputx 0 (a) (b)f(x) f(x) 12 1234 FIGURE 2.45 a.Linear system; b.nonlinear system86 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:55 one half the input, or f x0:5x, regardless of the value of x. Thus each of the two properties of linear systems applies. For example, an input of 1 yields an output of1 2and an input of 2 yields an output of 1. Using superposition, an input that is the sum of the original inputs, or 3, should yield an output that is the sum of the individual outputs, or 1.5. FromFigure 2.45( a), an input of 3 does indeed yield an output of 1.5. To test the property of homogeneity, assume an input of 2, which yields an output of 1. Multiplying this input by 2 should yield an output of twice as much, or 2. From Figure 2.45( a), an input of 4 does indeed yield an output of 2. The reader can verify that the properties oflinearity certainly do not apply to the relationship shown in Figure 2.45( b). Figure 2.46 shows some examples of physical nonlinearities. An electronic ampli ﬁer is linear over a speci ﬁc range but exhibits the nonlinearity called saturation at high input voltages. A motor that does not respond at very low input voltages due to frictional forcesexhibits a nonlinearity called dead zone . Gears that do not ﬁt tightly exhibit a nonlinearity called backlash: The input moves over a small range without the output responding. The reader should verify that the curves shown in Figure 2.46 do not ﬁtt h ed e ﬁnitions of linearity over their entire range. Another example of a nonlinear subsystem is a phase detector, used in aphase-locked loop in an FM radio receiver, whose output response is the sine of the input. A designer can often make a linear approximation to a nonlinear system. Linear approximations simplify the analysis and design of a system and are used as long as theresults yield a good approximation to reality. For example, a linear relationship can beestablished at a point on the nonlinear curve if the range of input values about that point issmall and the origin is translated to that point. Electronic ampli ﬁers are an example of physical devices that perform linear ampli ﬁcation with small excursions about a point. 2.11 Linearization The electrical and mechanical systems covered thus far were assumed to be linear. However,if any nonlinear components are present, we must linearize the system before we can ﬁnd the transfer function. In the last section, we de ﬁned and discussed nonlinearities; in this section, we show how to obtain linear approximations to nonlinear systems in order to obtaintransfer functions. Theﬁrst step is to recognize the nonlinear component and write the nonlinear differential equation. When we linearize a nonlinear differential equation, we linearize itfor small-signal inputs about the steady-state solution when the small-signal input is equal tozero. This steady-state solution is called equilibrium and is selected as the second step in the linearization process. For example, when a pendulum is at rest, it is at equilibrium. The angulardisplacement is described by a nonlinear differential equation, but it can be expressed with alinear differential equation for small excursions about this equilibrium point. Next we linearize the nonlinear differential equation, and then we take the Laplace transform of the linearized differential equation, assuming zero initial conditions. Finally,we separate input and output variables and form the transfer function. Let us ﬁrst see how to linearize a function; later, we will apply the method to the linearization of a differentialequation. Output Inputx Output Inputx Output Inputxf(x) f(x) f(x)Amplifier saturation Motor dead zone Backlash in gears FIGURE 2.46 Some physical nonlinearities2.11 Linearization 87WEBC02 10/28/2014 16:18:56 If we assume a nonlinear system operating at point A,x0;f x0in Figure 2.47, small changes in the input can be related to changes in the output about the point by way of the slope of the curve at the point A. Thus, if the slope of the curve at point Aisma, then small excursions of the input about point A,δx, yield small changes in the output, δf x, related by the slope at point A. Thus, f x f x0≈ma x x0 2.178  from which δf x≈maδx 2.179  and f x≈f x0ma x x0≈f x0maδx 2.180  This relationship is shown graphically in Figure 2.47, where a new set of axes, δxand δf x, is created at the point A,a n d f(x) is approximately equal to f x0, the ordinate of the new origin, plus small excursions, maδx, away from point A. Let us look at an example. Example 2.26 Linearizing a FunctionLinearizing a Function PROBLEM: Linearize f x5 cos xabout xπ=2. SOLUTION: Weﬁrstﬁnd that the derivative of f(x)i sdf=dx   5 sin x.A txπ=2, the derivative is  5. Also f x0f π=25 cos π=20. Thus, from Eq. (2.180), the system can be represented as f x  5δxfor small excursions of xabout π=2. The process is shown graphically in Figure 2.48, where the cosine curve does indeed look like a straight line of slope  5 near π=2.Output Inputxx0 0 xδxf(x) ~f(x) f(x0)δf(x) A~ FIGURE 2.47 Linearization about point A x 4 3 2 1123 δxSlope = –5 π/205f(x) δf(x)–1–44 –3 –2 –1 –2 –3 –4 –5FIGURE 2.48 Linearization of 5 cos xabout xπ=288 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:18:57 The previous discussion can be formalized using the Taylor series expansion, which expresses the value of a function in terms of the value of that function at a particular point, the excursion away from that point, and derivatives evaluated at that point. The Taylor seriesis shown in Eq. (2.181). f xf x 0df dx/C12/C12/C12 xx0 x x0 1!d2f dx2/C12/C12/C12 xx0 x x02 2!∙∙∙ 2.181  For small excursions of xfrom x0, we can neglect higher-order terms. The resulting approximation yields a straight-line relationship between the change in f(x) and the excursions away from x0. Neglecting the higher-order terms in Eq. (2.181), we get f x f x0≈df dx/C12/C12/C12 xx0 x x0 2.182  or δf x≈m/C12/C12 xx0δx 2.183  which is a linear relationship between δf xandδxfor small excursions away from x0.I ti s interesting to note that Eqs. (2.182) and (2.183) are identical to Eqs. (2.178) and (2.179), which we derived intuitively. The following examples illustrate linearization. The ﬁrst example demonstrates linearization of a differential equation, and the second exampleapplies linearization to ﬁnding a transfer function. Example 2.27 Linearizing a Differential EquationLinearizing a Differential Equation PROBLEM: Linearize Eq. (2.184) for small excursions about xπ=4. d2x dt22dx dtcosx0 2.184  SOLUTION: T h ep r e s e n c eo ft h et e r mc o s xmakes this equation nonlinear. Since we want to linearize the equation about xπ=4, we let xδxπ=4, where δxis the small excursion about π=4, and substitute xinto Eq. (2.184): d2δxπ 4/C16/C17 dt22dδxπ 4/C16/C17 dtcos δxπ 4/C16/C17 0 2.185  But d2δxπ 4/C16/C17 dt2d2δx dt2 2.186  and dδxπ 4/C16/C17 dtdδx dt 2.187 2.11 Linearization 89WEBC02 10/28/2014 16:19:2 Finally, the term cos δx π=4 ) can be linearized with the truncated Taylor series. Substituting f xcos δx π=4;f x0f π=4cos π=4;and x x0δxinto Eq. (2.182) yields cosδxπ 4/C16/C17  cosπ 4/C16/C17 dcosx dx/C12/C12/C12 xπ 4δx sinπ 4/C16/C17 δx 2.188  Solving Eq. (2.188) for cos δx π=4,w eg e t cosδxπ 4/C16/C17 cosπ 4/C16/C17  sinπ 4/C16/C17 δxﬃﬃﬃ 2p 2 ﬃﬃﬃ2p 2δx 2.189  Substituting Eqs. (2.186), (2.187), and (2.189) into Eq. (2.185) yields the following linearized differential equation: d2δx dt22dδx dt ﬃﬃﬃ 2p 2δx ﬃﬃﬃ2p 2 2.190  This equation can now be solved for δx, from which we can obtain xδx π=4. Even though the nonlinear Eq. (2.184) is homogeneous, the linearized Eq. (2.190) is not homogeneous. Eq. (2.190) has a forcing function on its right-hand side. This additional term can be thought of as an input to a system represented by Eq. (2.184). Another observation about Eq. (2.190) is the negative sign on the left-hand side. The study of differential equations tells us that since the roots of the characteristic equation are positive, the homogeneous solution grows without bound instead of diminishing to zero.Thus, this system, linearized around xπ=4, is not stable. Example 2.28 Transfer Function —Nonlinear Electrical Network Transfer Function —Nonlinear Electrical Network PROBLEM: Find the transfer function, VL s=V s, for the electrical network shown in Figure 2.49, which contains a nonlinear resistor whose voltage-currentrelationship is de ﬁned by i r2e0:1vr, where irandvrare the resistor current and voltage, respectively. Also, v(t) in Figure 2.49 is a small-signal source. SOLUTION: We will use Kirchhoff ’s voltage law to sum the voltages in the loop to obtain the nonlinear differential equation, but ﬁrst we must solve for the voltage across the nonlinear resistor. Taking the natural log of the resistor's current-voltagerelationship, we get v r10 ln1 2ir. Applying Kirchhoff ’s voltage law around the loop, where iri, yields Ldi dt10 ln1 2i 20v t 2.191  Next, let us evaluate the equilibrium solution. First, set the small-signal source, v(t), equal to zero. Now evaluate the steady-state current. With v t0, the circuit consists of a 20 V battery in series with the inductor and nonlinear resistor. In the steady state, the voltage across the inductor will be zero, since vL tLdi=dtanddi=dtis zero in the steady state, given a constant battery source. Hence, the resistor voltage, vr, is 20 V. Using the characteristics of the resistor, ir2e0:1vr,w eﬁnd that iri14:78 amps. This current,vL(t) 1 H Nonlinear resistor 20 Vv(t)i(t)+ +–– r FIGURE 2.49 Nonlinear electrical network90 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:2 i0, is the equilibrium value of the network current. Hence ii0δi. Substituting this current into Eq. (2.191) yields Ld i0δi dt10 ln1 2 i0δi 20v t 2.192  Using Eq. (2.182) to linearize ln1 2 i0δi, we get ln1 2 i0δi ln12i 0dln12i/C16/C17 di/C12/C12/C12 ii0δi1 i/C12/C12/C12 ii0δi1 i0δi 2.193  or ln1 2 i0δilni0 21 i0δi 2.194  Substituting into Eq. (2.192), the linearized equation becomes Ldδi dt10 lni0 21 i0δi/C18/C19  20v t 2.195  Letting L1 and i014:78, the ﬁnal linearized differential equation is dδi dt0:677δiv t 2.196  Taking the Laplace transform with zero initial conditions and solving for δi s,w eg e t δi sV s s0:677 2.197  But the voltage across the inductor about the equilibrium point is vL tLd dt i0δiLdδi dt 2.198  Taking the Laplace transform, VL sLsδi ssδi s 2.199  Substituting Eq. (2.197) into Eq. (2.199) yields VL ssV s s0:677 2.200  from which the ﬁnal transfer function is VL s V ss s0:677 2.201  for small excursions about i14:78 or, equivalently, about v t0. Skill-Assessment Exercise 2.13 PROBLEM: Find the linearized transfer function, G sV s=I s,f o rt h ee l e c t r i - cal network shown in Figure 2.50. The net work contains a nonlinear resistor whose voltage-current relationship is deﬁ ned by irevr. The current source, i(t), is a small-signal generator.2.11 Linearization 91WEBC02 10/28/2014 16:19:6 ANSWER: G s1 s2 The complete solution is at www.wiley.com/college/nise . 2 A i(t)v(t) Nonlinear resistorr 1 F FIGURE 2.50 Nonlinear electric circuit for Skill- Assessment Exercise 2.13 Case Studies Antenna Control: Transfer FunctionsAntenna Control: Transfer Functions This chapter showed that physical systems can be modeled mathematically with transfer functions. Typically, systems are composed of subsystems of different types, such aselectrical, mechanical, and electromechanical. Theﬁrst case study uses our ongoing example of the antenna azimuth position control system to show how to represent each subsystem as a transfer function. PROBLEM: Find the transfer function for each subsystem of the antenna azimuth position control system schematic shown on the front endpapers. Use Con ﬁguration 1. SOLUTION: First, we identify the individual subsystems for which we must ﬁnd transfer functions; they are summarized in Table 2.6. We proceed to ﬁnd the transfer function for each subsystem. Input Potentiometer; Output Potentiometer Since the input and output potentiometers are con ﬁgured in the same way, their transfer functions will be the same. We neglect the dynamics for the potentiometers and simply ﬁnd the relationship between the output voltage and the input angular displacement. In the center position the output voltage is zero. Five turns toward either the positive10 volts or the negative 10 volts yields a voltage change of 10 volts. Thus, the transferfunction, V i s=θi s, for the potentiometers is found by dividing the voltage change byTABLE 2.6 Subsystems of the antenna azimuth position control system Subsystem Input Output Input potentiometer Angular rotation from user, θi t Voltage to preamp, vi t Preamp Voltage from potentiometers, ve tvi t v0 tVoltage to power amp, vp t Power amp Voltage from preamp, vp t Voltage to motor, ea t Motor Voltage from power amp, ea t Angular rotation to load, θ0 t Output potentiometer Angular rotation from load, θ0 t Voltage to preamp, v0(t)92 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:7 the angular displacement: Vi s θi s10 10π1 π 2.202  Preampli ﬁer; Power Ampli ﬁer The transfer functions of the ampli ﬁers are given in the problem statement. Two phenomena are neglected . First, we assume that saturation is never reached. Second, the dynamics of the preampli ﬁer are neglected , since its speed of response is typically much greater than that of the power ampli ﬁer. The transfer functions of both ampli ﬁers are given in the problem statement and are the ratio of the Laplace transforms of the output voltage divided by the input voltage. Hence, for the preampli ﬁer, Vp s Ve sK 2.203  and for the power ampli ﬁer, Ea s Vp s100 s100 2.204  Motor and Load The motor and its load are next. The transfer function relating the armature displacement to the armature voltage is given in Eq. (2.153). The equivalent inertia, Jm,i s JmJaJL25 250/C18/C192 0:0211 1000:03 2.205  where JL1 is the load inertia at θ0. The equivalent viscous damping, Dm,a tt h e armature is DmDaDL25 250/C18/C192 0:0111 1000:02 2.206  where DLis the load viscous damping at θ0. From the problem statement, Kt0:5 N-m/A, Kb0:5 V-s/rad, and the armature resistance Ra8 ohms. These quantities along with JmandDmare substituted into Eq. (2.153), yielding the transfer function of the motor from the armature voltage to the armature displacement, or θm s Ea sKt= RaJm ss1 JmDmKtKb Ra/C18/C19 /C20/C21 2:083 s s1:71 2.207  To complete the transfer function of the motor, we multiply by the gear ratio to arrive at thetransfer function relating load displacement to armature voltage: θ0 s Ea s0:1θm s Ea s0:2083 s s1:71 2.208  The results are summarized in the block diagram and table of block diagram parameters(Conﬁguration 1) shown on the front endpapers. An animation PowerPoint presentation (PPT) demonstrating this system is available for instructors at www.wiley.com/college/nise . SeeAntenna (Ch. 2 ). CHALLENGE: We now give you a problem to test your knowledge of this chapter ’s objectives: Referring to the antenna azimuth position control system schematic shown on the front endpapers, evaluate the transfer function of each subsystem. UseCase Studies 93WEBC02 10/28/2014 16:19:8 Conﬁguration 2. Record your results in the tab le of block diagram parameters shown on the front endpapers for use in subsequent chapters ’case study challenges. Transfer Function of a Human LegTransfer Function of a Human Leg In this case study we ﬁnd the transfer function of a biological system. The system is a human leg, which pivots from the hip joint. In this problem, the component of weight is nonlinear, so the system requires linearization beforethe evaluation of the transfer function. PROBLEM: The transfer function of a human leg relates the output angular rotation about the hip joint to the input torque supplied by the leg muscle. A simpli ﬁed model for the leg is shown in Figure 2.51. The model assumes an applied muscular torque, T m(t), viscous damping, D, at the hip joint, and inertia, J, around the hip joint.15Also, a component of the weight of the leg, Mg, where Mis the mass of the leg and gis the acceleration due to gravity, creates a nonlinear torque. If we assume that the leg is of uniform density, the weight can be applied at L/2, where Lis the length of the leg ( Milsum ,1966 ). Do the following: a.Evaluate the nonlinear torque. b.Find the transfer function, θ s=Tm s, for small angles of rotation, where θ sis the angular rotation of the leg about the hip joint. SOLUTION: First, calculate the torque due to the weight. The total weight of the legis Mgactingvertically.Thecomponentoftheweightinthedirectionofrotation isMgsinθ. This force is applied at a distance L=2 from the hip joint. Hence the torque in the direction of rotation, TW(t),is Mg L=2sinθ. Next, draw a free-body diagram of the leg, showing the applied torque, Tm(t), the torque due to the weight, TW(t), and the opposing torques due to inertia and viscous damping (see Figure 2.52). Summing torques, we get Jd2θ dt2Ddθ dtMgL 2sinθTm t 2.209  We linearize the system about the equilibrium point, θ0, the vertical position of the leg. Using Eq. (2.182), we get sinθ sin0  cos0 δθ 2.210  from which, sin θδθ. Also, Jd2θ=dt2Jd2δθ=dt2andDdθ=dtDdδθ=dt. Hence Eq. (2.209) becomes Jd2δθ dt2Ddδθ dtMgL 2δθTm t 2.211  Notice that the torque due to the weight approximates a spring torque on the leg. Taking the Laplace transform with zero initial conditions yields Js2DsMgL 2/C18/C19 δθ sTm s 2.212  15For emphasis, Jis not around the center of mass, as we previously assumed for inertia in mechanical rotation.LegTm(t)θd2θJD dt2 TW(t)dtdθ FIGURE 2.52 Free-body diagram of leg modelθTm Mg sin θ MgLegHip joint L/2L/2 FIGURE 2.51 Cylinder model of a human leg94 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:8 Summary In this chapter, we discussed how to ﬁnd a mathematical model, called a transfer function , for linear, time-invariant electrical, mechanical, and electromechanical systems. The transfer function is de ﬁned as G sC s=R s, or the ratio of the Laplace transform of the output to the Laplace transform of the input. This relationship is algebraic and alsoadapts itself to modeling interconnected subsystems. We realize that the physical world consists of more systems than we illustrated in this chapter. For example, we could apply transfer function modeling to hydraulic, pneumatic,heat, and even economic systems. Of course, we must assume these systems to be linear, ormake linear approximations, in order to use this modeling technique. Now that we have our transfer function, we can evaluate its response to a speci ﬁed input. System response will be covered in Chapter 4. For those pursuing the state-space approach, we continue our discussion of modeling in Chapter 3, where we use the time domain rather than the frequency domain. Review Questions 1.What mathematical model permits easy interconnection of physical systems? 2.To what classi ﬁcation of systems can the transfer function be best applied? 3.What transformation turns the solution of d ifferential equations into algebraic manipulations? 4.Deﬁne the transfer function. 5.What assumption is made concerning initial conditions when dealing with transferfunctions? 6.What do we call the mechanical equations written in order to evaluate the transferfunction? 7.If we understand the form the mechanical equations take, what step do we avoid inevaluating the transfer function? 8.Why do transfer functions for mechanical networks look identical to transfer functions forelectrical networks? 9.What function do gears perform?from which the transfer function is δθ s Tm s1=J s2D JsMgL 2J 2.213  for small excursions about the equilibrium point, θ0. CHALLENGE: We now introduce a case study challenge to test your knowledge of this chapter ’s objectives. Although the physical system is different from a human leg, the problem demonstrates the sameprinciples: linearization followed by transfer function evaluation. Given the nonlinear electrical network shown in Figure 2.53, ﬁnd the transfer function relating the output nonlinear resistor voltage, V r(s), to the input source voltage, V(s).1 H 5 VNonlinear resistorv(t)i(t) vr(t) = 2 ir2(t)+ + – –r FIGURE 2.53 Nonlinear electric circuitReview Questions 95WEBC02 10/28/2014 16:19:10 10.What are the component parts of the mechanical constants of a motor ’s transfer function? 11.The motor ’s transfer function relates armature displacement to armature voltage. How can the transfer function that relates load displacement and armature voltage be determined? 12.Summarize the steps taken to linearize a nonlinear system. Problems 1.Derive the Laplace transform for the following timefunctions: [Section: 2.2] a.u(t) b.tu(t) c.sinωtu t d.cosωtu t 2.Using the Laplace transform pairs of Table 2.1 and theLaplace transform theorems of Table 2.2, derive theLaplace transforms for the following time functions:[Section: 2.2] a.e  atsinωtu t b.e atcosωtu t c.t3u t 3.Repeat Problem 19 in Chapter 1, using Laplacetransforms. Assume zero initial conditions. [Sections:2.2; 2.3] 4.Repeat Problem 20 in Chapter 1, using Laplace trans- forms. Assume that the forcing functions are zero prior tot0 . [Section: 2.2] 5.Repeat Problem 21 in Chapter 1, using Laplace trans-forms. Use the following initial conditions for each partas follows: (a) x 04;x ´ 0  4; (b) x 04; x´ 01; (c) x 02;x´ 03, where x´ 0dx dt 0. Assume that the forcing functions are zero prior tot0 . [Section: 2.2] Use MATLAB and the Symbolic MathToolbox to ﬁnd the Laplace transform of the following timefunctions: [Section: 2.2] a.f t8t 2cos 3t45° b.f t3te 2tsin 4t60° 7.Use MATLAB and the Symbolic MathToolbox to ﬁnd the inverse Laplace transform of the followingfrequency functions: [Section: 2.2] a.G s s23s10 s5 s3 s4 s22s100 b.G ss34s22s6 s8 s28s3 s25s78.A system is described by the following differentialequation: d3y dt33d2y dt25dy dtyd3x dt34d2x dt26dx dt8x Find the expression for the transfer function of thesystem, Y s=X s. [Section: 2.3] 9.For each of the following transfer functions, write thecorresponding differential equation. [Section: 2.3] a. X s F s7 s25s10 b.X s F s15 s10 s11 c.X s F ss3 s311s212s18 10.Write the differential equation for the system shown inFigure P2.1. [Section: 2.3] s5 + 2s4 + 4s3 + s2 + 4 s6 + 7s5 + 3s4 + 2s3 + s2 + 5C(s) R(s) FIGURE P2.1 11.Write the differential equation that is mathematicallyequivalent to the block diagram shown in Figure P2.2.Assume that r t3t [Section: 2.3] s4 + 3s3 + 2s2 + s + 1 s5 + 4s4 + 3s3 + 2s2 + 3s + 2C(s) R(s) FIGURE P2.2 12.A system is described by the following differential equa-tion: [Section 2.3] d2x dt24dx dt5x1 with the initial conditions x 01;x: 0  1. Show a block diagram of the system, giving its transfer functionand all pertinent inputs and outputs. (Hint: the initial96 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:10 conditions will show up as added inputs to an effective system with zero initial conditions.) 13.Use MATLAB to generate the transfer function: [Section: 2.3] G s5 s15 s26 s72 s s55 s25s30 s56 s227s52 in the following ways: a.the ratio of factors; b.the ratio of polynomials. 14.Repeat Problem 13 for thefollowing transfer function:[Section: 2.3] G s s425s320s215s42 s513s49s337s235s50 15.Use MATLAB to generate the partial-fraction expansion of the followingfunction: [Section: 2.3] F s104 s5 s70 s s45 s55 s27s110 s26s95 16.Use MATLAB and the Symbolic MathToolbox to input and form LTIobjects in polynomial and factored formfor the following frequency functions:[Section: 2.3] a. G s45 s237s74 s328s232s16 s39 s47 s22s100 s327s218s15 b.G s56 s14 s349s262s53 s381s276s65 s288s33 s256s77 17.Find the transfer function, G sVo s=Vi s, for each network shown in Figure P2.3. [Section: 2.4] 2 Ω 1 Ω+ 1H1 Ω vo(t) vi(t)+– – (a)+1 H 2 F vo(t)1 Ω vi(t)+– – (b) FIGURE P2.3 18.Find the transfer function, G sVL s=V s, for each network shown in Figure P2.4. [Section: 2.4]2 ΩF vL(t)+ v(t)2 Ω2 Ω 2 H1 2 +– –vL(t)+ – (b)v(t) 22 H 2 HΩ2Ω (a)+– F12 FIGURE P2.4 19.Find the transfer function, G sVo s=Vi s, for each network shown in Figure P2.5. Solve the problem using mesh analysis. [Section: 2.4] + – vi(t)vo(t) 112 H 3 H 2F Ω (a)+– 1 F 1 F vi(t) vo(t)+1 Ω +–– (b)1 H 1 H1 H FIGURE P2.5 20.Repeat Problem 19 using nodal equations. [Section: 2.4] a. Write, but do not solve, the mesh and nodal equationsfor the network of Figure P2.6. [Section: 2.4] b. Use MATLAB, the Symbolic MathToolbox, and the equationsfound in part a to solve for thetransfer function, G sV o s=V s. Use both the mesh and nodal equations andshow that either set yields the sametransfer function. [Section: 2.4] 2 Ω 4 Ω 8 Ω2 Ω 4 H6 H1 9 F v(t) vo(t)+ –+– FIGURE P2.6 22.Find the transfer function, G sVo s=Vi s, for each operational ampli ﬁer circuit shown in Figure P2.7. [Section: 2.4]Problems 97WEBC02 10/28/2014 16:19:11 100 kΩ 100 kΩ 100 kΩ 22 μF vi(t) vo(t)v1(t) (b)+–100 kΩ 500 kΩ2 μF2 μF vi(t) vo(t)v1(t) (a)+– FIGURE P2.7 23.Find the transfer function, G sVo s=Vi s, for each operational ampli ﬁer circuit shown in Figure P2.8. [Section: 2.4] v1(t) vi(t)vo(t) vi(t)110 kΩ 400 kΩ4 μF 4 μF 4 μF(a) (b)+– 110 kΩ 600 kΩ600 kΩ 400 kΩ4 μF vo(t)v1(t) +– FIGURE P2.824.Find the transfer function, G sX1 s=F s, for the translational mechanical system shown in Figure P2.9. [Section: 2.5] 4 N-s/m 5 N/m f(t) 5 kgx1(t) FIGURE P2.9 25.Find the transfer function, G sX2 s=F s, for the translational mechanical network shown in Figure P2.10.[Section: 2.5] f(t)x2(t) x1(t) Frictionless1 N/m 1 kg 1 kg 1 N-s/m FIGURE P2.10 26.Find the transfer function, G sX2 s=F s, for the translational mechanical system shown in Figure P2.11.(Hint: place a zero mass at x 2(t).) [Section: 2.5] 2 N-s/m 2 N/mf(t)x2(t) 4 N-s/m8 kg FIGURE P2.11 27.For the system of Figure P2.12 ﬁnd the transfer function, G sX1 s=F s. [Section: 2.5] 4 N/m 3 N-s/m3 N-s/mf(t) 2 N-s/m5 N/mx1(t) x2(t) 1 kg 2 kg fv3= fv1=fv2=M1= M2=K1= K2= FIGURE P2.12 28.Find the transfer function, G sX3 s=F s, for the translational mechanical system shown in Figure P2.13.[Section: 2.5] 2 N-s/m2 N-s/m 6 N/m6 N/m Frictionlessf(t)2 N-s/m 4 kg4 kg 4 kgx2(t) x3(t) x1(t) FIGURE P2.1398 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:11 29.Find the transfer function, X3 s=F s, for each system shown in Figure P2.14. [Section: 2.5] fv1= 4 N-s/m fv2= 4 N-s/m fv4= 4 N-s/mfv3= 4 N-s/m K= 5 N/m M1= 4 kg M2= 4 kgx1(t) f(t)x2(t) x3(t) (a) 4 N-s/m1 N/mf(t) 16 N-s/m 15 N/mM1 = 8 kgx1(t) x2(t) x3(t) M2=3 kg FrictionlessFrictionlessFrictionless (b) FIGURE P2.14 30.Write, but do not solve, the equations of motion for the translational mechanical system shown in Figure P2.15. [Section: 2.5] f(t) x1(t) x2(t)x3(t) K1 = 5 N/m K2 = 4 N/m fv2 = 2 N-s/mfv1 = 2 N-s/m M1 = 4 kgfv3 = 3 N-s/ m K3= 4 N/mM3 = 5 kg M2 = 5 kg Frictionless FIGURE P2.15 31.For the unexcited (no external force applied) system ofFigure P2.16, do the following: a.Write the differential equation that describes thesystem. b.Assuming initial conditions x 0x 0and _x 0x1, write a Laplace transform expression for X s. c.Find x tby obtaining the inverse Laplace transform from the result in Part c.d.What will be the oscillation frequency in Hz for this system? K Mx(t) FIGURE P2.16 32.For each of the rotational mechanical systems shown in Figure P2.17, write, but do not solve, the equationsof motion. [Section: 2.6] θ1(t) θ2(t) T(t) 5 kg-m2 3 kg-m 2 9 N-m/rad8 N-m-s/rad 3 N-m/rad1 N-m-s/rad (a) (b)J1 J2 J3D1 K1K3K2D2 T(t) FIGURE P2.17 33.For the rotational mechanical system shown inFigure P2.18, ﬁnd the transfer function G s θ 2 s=T s[Section: 2.6] 1 N-m-s/rad 1 N-m-s/rad1 N-m/rad 1 N-m-s/radθ2(t) T(t) 1 kg-m 2 FIGURE P2.18 34.Find the transfer function,θ1 s T s, for the system shown in Figure P2.19. θ1(t) T(t) 1 N-m-s/rad1 N-m/rad1 N-m/rad 1 kg-m21 kg-m2 FIGURE P2.19Problems 99WEBC02 10/28/2014 16:19:12 35.For the rotational mechanical system with gears shown in Figure P2.20, ﬁnd the transfer function, G sθ3 s=T s. The gears have inertia and bearing friction as shown. [Section: 2.7] N2 N4θ3(t)N3N1T(t) J2, D2 J4, D4J1, D1 J3, D3 J5, D5 FIGURE P2.20 36.For the rotational system shown in Figure P2.21, ﬁnd the transfer function, G sθ2 s=T s. [Section: 2.7] J1 = 2 kg-m2 J2 = 1 kg-m2 J3 = 16 kg-m2K = 64 N-m/radN1 = 4T(t) D1 = 1 N-m-s/rad N2 = 12 D2 = 2 N-m-s/radN3 = 4 N4 = 16θ2(t) D3 = 32 N-m-s/rad FIGURE P2.21 37.Find the transfer function, G sθ2 s=T s, for the rotational mechanical system shown in Figure P2.22.[Section: 2.7] N1 = 5N3 = 25 N2 = 50500 N-m-s/rad 300 N-m/rad 150 kg-m23 kg-m2 θ2(t)T(t)100 kg-m2 3 N-m/rad FIGURE P2.22 38.Find the transfer function, G sθ4 s=T s, for the rotational system shown in Figure P2.23. [Section: 2.7] N3 = 23 N2 = 110 2 N-m/radN1 = 26 N4 = 12026 N-m-s/radT(t) θ4(t) θ1(t) θ2(t) θ3(t) FIGURE P2.2339.For the rotational system shown in Figure P2.24, ﬁnd the transfer function, G sθL s=T s. [Section: 2.7] 2 N-m/rad 0.02 N-m-s/rad2 N-m-s/rad θL(t) T(t)1 kg-m 2 N2=2 0 N1=5 N4=1 0N3=4 0 FIGURE P2.24 40.For the rotational system shown in Figure P2.25, writethe equations of motion from which the transfer function,G sθ 1 s=T s, can be found. [Section: 2.7] KN1 N4 DLJ4J1DN3 J3N2 J2JaT(t)θ1(t) JL FIGURE P2.25 41.Given the rotational system shown in Figure P2.26, ﬁnd the transfer function, G sθ6 s=θ1 s. [Section: 2.7] N1 J1, D N2N3 J3K1 N4 K2D T(t)θ6(t)θ1(t) DJ2, D J4, DJ5 J6 FIGURE P2.26 42.In the system shown in Figure P2.27, the inertia, J,o f radius, r, is constrained to move only about the stationary axisA. A viscous damping force of translational value fv exists between the bodies JandM. If an external force, f(t), is applied to the mass, ﬁnd the transfer function, G sθ s=F s. [Sections: 2.5; 2.6] Kfv f(t) MfvrJ A Mθ(t) FIGURE P2.27100 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:12 43.For the combined translational and rotational system shown in Figure P2.28, ﬁnd the transfer function, G sX s=T s. [Sections: 2.5; 2.6; 2.7] D2 = 1 N-m-s/rad3 kg-m2N1 = 10 N4 = 60 N2 = 20Radius = 2 m1 N-m-s/rad J = 3 kg-m2 Idealgear 1:1 3 N/m 2 N-s/mT(t) x(t)N3 = 30 2 kg FIGURE P2.28 44.Given the combined translational and rotational system shown in Figure P2.29, ﬁnd the transfer function, G sX s=T s. [Sections: 2.5; 2.6] D3J2 Radius = r K1Ideal gear 1:1 K2M fvJ1 J3T(t) x(t) FIGURE P2.29 45.For the motor, load, and torque-speed curve shown inFigure P2.30, ﬁnd the transfer function, G sθ L s= Ea s. [Section: 2.8] J2 = 36 kg-m2N1 = 50 N2 = 150Ra ea(t) θL(t)+ D1 = 8 N -m-s/rad D2 = 36 N-m-s/rad T (N-m) 150 50 V 100ω (rad/s)J1 = 4 kg-m2 – FIGURE P2.30 46.The motor whose torque-speed characteristics are shownin Figure P2.31 drives the load shown in the diagram.Some of the gears have inertia. Find the transfer function,G sθ 2 s=Ea s. [Section: 2.8]J= 2 kg-m2 2N1 = 10 N2 = 20 N3 = 10 J 18 kg-m42D = 36 N-m-s/rad T(N-m) 5 RPM5 V 600πJ 1 kg-m1 = 2 J 2 kg-m32 = =θ2(t) N4 = 20ea(t)Motor+ – FIGURE P2.31 47.A dc motor develops 55 N-m of torque at a speed of 600 rad/s when 12 volts are applied. It stalls out at this voltagewith100N-moftorque.Iftheinertiaanddampingofthearmatureare7kg-m 2and3N-m-s/rad,respectively, ﬁnd the transfer function, G sθL s=Ea s, of this motor if it drives an inertia load of 105 kg-m2through a gear train, as shown in Figure P2.32. [Section: 2.8] N1 = 12 N2 = 25 N3 = 25θm(t) θL(t) Load N4 = 72ea(t) Motor+ – FIGURE P2.32 48.In this chapter, we derived the transfer function of a dcmotor relating the angular displacement output to the armature voltage input. Often we want to control the output torque rather than the displacement. Derivethetransferfunctionofthemotorthatrelatesoutputtorqueto input armature voltage. [Section: 2.8] 49.Find the transfer function, G sX s=E a s, for the system shown in Figure P2.33. [Sections: 2.5 –2.8] N2 = 20 Radius = 2 m D = 1 N-m-s/radN1 = 10 ea(t) J = 1 kg-m2 Ideal gear 1:1 fv = 1 N-s/mx(t) Ja = 1 kg-m2 Da = 1 N-m-s/rad Ra = 1 Ω Kb = 1 V-s/rad Kt = 1 N-m/A M = 1 kgMotor+ For the motor:– FIGURE P2.33Problems 101WEBC02 10/28/2014 16:19:13 50.Find the series and parallel analogs for the translational mechanical system shown in Figure 2.20 in the text. [Section: 2.9] 51.Find the series and parallel analogs for the rotationalmechanical systems shown in Figure P2.17( b) in the problems. [Section: 2.9] 52.A system ’s output, c, is related to the system ’s input, r,b y the straight-line relationship, c5r7. Is the system linear? [Section: 2.10] 53.Consider the differential equation d2x dt23dx dt2xf x where f(x) is the input and is a function of the output, x.I f f xsinx, linearize the differential equation for small excursions. [Section: 2.10] a.x0 b.xπ 54.Consider the differential equation d3x dt310d2x dt220dx dt15xf x where f(x) is the input and is a function of the output, x.I f f x3e 5x, linearize the differential equation for xnear [Section: 2.10] 55.Many systems are piecewise linear. That is, over a large range of variable values, the system can be describedlinearly. A system with ampli ﬁer saturation is one such example. Given the differential equation d2x dt217dx dt50xf x assume that f(x) is as shown in Figure P2.34. Write the differential equation for each of the following rangesofx: [Section: 2.10] a.  ∞<x< 3 b. 3<x<3 c.3<x<∞ –33 –66 xf(x) FIGURE P2.3456.For the translational mechanical system with a nonlinear spring shown in Figure P2.35, ﬁnd the transfer function, G sX s=F s, for small excursions around f t1. The spring is de ﬁned by xs t1 e fs t, where xs tis the spring displacement and fs tis the spring force. [Section: 2.10] x(t) f(t) 2 N-s/mNonlinear spring 2 kg FIGURE P2.35 57.Enzymes are large proteins that biological systems use to increasetherateatwhichreactionsoccur.Forexample,foodis usually composed of large molecules that are hard todigest; enzymes break down the large molecules into smallnutrientsaspartofthediges tiveprocess.Onesuchenzymeis amylase, contained in human saliva. It is commonly knownthat if you place a piece of un cooked pasta in your mouth its taste will changefrom paper-like to sweet as amylase breaks down the carbohydrates into sugars. Enzyme breakdown is often expressed by the following relation: SE⇄ ks k1C®k1P In this expression a substrate ( S) interacts with an enzyme ( E) to form a combined product ( C) at a rate k1. The intermediate compound is reversible and gets disassociated at a rate k 1. Simultaneously some of the compound is transformed into the ﬁnal product ( P)a ta ratek2. The kinetics describing this reaction are known as the Michaelis-Menten equations and consist of fournonlinear differential equ ations. However, under some conditions these equations can be simpliﬁ ed. Let E 0and S0be the initial concentrations of enzyme and substrate, respectively. It is generally accepted that under someenergetic conditions or when the enzyme concentrationis very big E 0 S0, the kinetics for this reaction are given by dS dtkψ K~ sC S dC dtkψ S K~ MC dP dtk2C where the following constant terms are used ( Schnell , 2004 ): kψk1E0 ~Ksk 1 kψ102 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:14 and ~KM~Ksk2 kψ a.Assuming the initial conditions for the reaction are S 0S0;E 0E0;C 0P 00,ﬁnd the Laplace transform expressions for S,C, and P: ℒfSg;ℒfCg, andℒfPg, respectively. b.Use the ﬁnal theorem to ﬁndS ∞;C ∞, and P ∞. 58.Humans are able to stand on two legs through a complexfeedback system that includes several sensory inputs — equilibrium and visual along with muscle actuation. Inorder to gain a better understanding of the workings ofthe postural feedback mechanism, an individual isasked to stand on a platform to which sensors areattached at the base. Vibration actuators are attachedwith straps to the individual ’s calves. As the vibration actuators are stimulated, the individual sways andmovements are recorded. It was hypothesized that the human postural dynamics are analogous to those of a cart with a balancing standing pole attached(inverted pendulum). In that case, the dynamics canbe described by the following two equations: J d2θ dt2mglsinθ tTbalTd t Tbal t  mglsinθ tkJθ t ηJθ_ t  ρJZt 0θ tdt where mis the individual ’s mass; lis the height of the individual ’s center of gravity; gis the gravitational constant; Jis the individual ’s equivalent moment of inertia; η;ρ, and kare constants given by the body ’s postural control system; θ tis the individual ’s angle with respect to a vertical line; Tbal(t) is the torque generated by the body muscles to maintain balance;andT d tis the external torque input disturbance. Find the transfer functionΘ s Td s(Johansson ,1988 ). 59.Figure P2.36 shows a crane hoisting a load. Although theactual system ’s model is highly nonlinear, if the rope is considered to be stiff with a ﬁxed length L, the system can be modeled using the following equations: m L€xLamLgϕ mT€xTfT mLgϕ xLaxT xL xLLϕ where mLis the mass of the load, mTis the mass of the cart, xTandxLare displacements as de ﬁn e di nt h eﬁ gure, ϕis therope angle with respect to the vertical, and fTis the force a p p l i e dt ot h ec a r t( Marttinen ,1990 ). a.Obtain the transfer function from cart velocity to rope angleΦ s VT s. b.Assume that the cart is driven at a constant velocity V0 and obtain an expression for the resulting ϕ t. Show that under this condition, the load will sway with a frequency ω0ﬃﬃﬃg Lr . c.Find the transfer function from the applied force to the cart’s position,XT s FT s. d.Show that if a constant force is applied to the cart, its velocity will increase without bound as t®∞. fT L ϕ mL xLaxLx mTT FIGURE P2.3616 60.In 1978, Malthus developed a model for humangrowth population that is also commonly used tomodel bacterial growth as follows. Let N(t)b et h e population density observed at time t.L e t Kbe the rate of reproduction per unit time. Neglecting populationdeaths, the population density at a time tΔt(with small Δt)i sg i v e nb y N tΔt≈N tKN tΔt which also can be written as N tΔt N t ΔtKN t Since N(t) can be considered to be a very large number, letting Δt®0 gives the following differential equation (Edelstein-Keshet ,2005 ): dN t dtKN t 16Marttinen A., Virkkunen J., Salminen R.T. Control Study with Pilot Crane. IEEE Transactions on Education , Vol. 33, No.3, August 1990. Fig. 2. p. 300. IEEE Transactions on Education by Institute of Electrical and Electronics Engineers; IEEE Education Group; IEEE Education Society. Reproducedwith permission of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.Problems 103WEBC02 10/28/2014 16:19:15 a.Assuming an initial population N 0N0, solve the differential equation by ﬁnding N(t). b.Find the time at which the population is double the initial population. 61.In order to design an underwater vehicle that has thecharacteristics of both a long-range transit vehicle(torpedo-like) and a highly maneuverable low-speedvehicle (boxlike), researchers have developed a thruster that mimics that of squid jet locomotion ( Krieg ,2008 ). It has been demonstrated there that the average normalized thrust due to a command step input, U s Tref^ sis given by: T tTref^ 1 e λtasin 2πft where Tref^is the reference or desired thrust, λis the system ’s damping constant, ais the amplitude of the oscillation caused by the pumping action of the actuator, fistheactuatorfrequency,and T(t)istheaverageresulting normalized thrust. Find the thruster ’s transfer function T s U s. Show all steps. 62.The Gompertz growth model is commonly used to model tumor cell growth. Let v(t) be the tumor ’s volume, then dv t dtλe αtv t where λandαare two appropriate constants ( Edelstein- Keshet ,2005 ). a.Verify that the solution to this equation is given by v tv0eλ=α 1 e αt, where v0is the initial tumor volume. b.This model takes into account the fact that when nutrients and oxygen are scarce at the tumor ’s core, its growth is impaired. Find the ﬁnal predicted tumor volume (let t®∞). c.For a speci ﬁc mouse tumor, it was experimentally found that λ2:5d a y s ;α0:1 days with v0 5010 3mm3(Chignola ,2005). Use any method available to make a plot of v(t)v s . t. d.Check the result obtained in Part bwith the results from the graph found in Part c. 63.A muscle hanging from a beam is shown in Figure P2.37( a) (Lessard ,2009). The α-motor neuron can be used to electrically stimulate the muscle to contract and pull themass, m, which under static conditions causes the muscle to stretch. An equivalent mechan ical system to this setup is shown in Figure P2.37( b). The force F isowill be exerted when the muscle contracts. Find an expression for thedisplacement X 1(s)i nt e r m so f F1(s)a n d Fiso(s).Load mvelocity F1α-motor neuronReference Load m F1 (a) (b)xm Fiso kB vm v1x1 v1 FIGURE P2.37 a.Motor neuron stimulating a muscle;17 b.equivalent circuit18 64.A three-phase ac/dc converter supplies dc to a batterycharging system or dc motor ( Graovac ,2001 ). Each phase has an ac ﬁlter represented by the equivalent circuit in Figure P2.38. Va(s)RIacR (s)IacF (s)Ls 1/Cs+ – FIGURE P2.38 ACﬁlter equivalent circuit for a three-phase ac/dc converter Derive that the inductor current in terms of the two active sources is IacF s1RCs LCs2RCs 1IacR sCs LCs2RCs 1Va s 65.A photovoltaic system is used to capture solar energy to be converted to electrical energy. A control system is used to pivot the solar platform to track the sun ’s movements in order to maximize the captured energy.The system consists of a motor and load similar to thatdiscussed in Section 2.8. A model has been proposed(Agee ,2012) that is different from the model developed in the chapter in the following ways: (1) the motorinductance was not neglected and (2) the load, in addition to having inertia and damping, has a spring. Find the transfer function, θ m s=Ea s,f o rt h i s augmented system assuming all load impedanceshave already been reﬂ ected to the motor shaft. 17Lessard, C. D. Basic Feedback Controls in Biomedicine , Morgan & Claypool, San Rafael, CA, 2009. Figure 2.8, p. 12. 18Lessard, C. D. Basic Feedback Controls in Biomedicine , Morgan & Claypool, San Rafael, CA, 2009 Figure 2.9, p. 13.104 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:16 66.In a paint mixing plant, two tanks supply ﬂuids to a mixing cistern. The height, h,o ft h eﬂ u i di nt h ec i s t e r n is dependent upon the difference between the input mass ﬂow rate, q, and the output ﬂow rate, qe.A nonlinear differential equation describing this depen-dency is given by ( Schiop, 2010) dh dtAe Aﬃﬃﬃﬃﬃﬃﬃﬃ 2ghp q ρA where A=cross-sectional area of the cistern, Ae= cross-sectional area of the exit pipe, g=acceleration due to gravity, and ρ=liquid density. a.Linearize the nonlinear equation about the equilibrium point ( h0,q0)a n d ﬁnd the transfer function relating the output cistern ﬂuid level, H(s), to the input mass ﬂow rate, Q(s). b.The color of the liquid in the cistern can be keptconstant by adjusting the input ﬂow rate, q,a s s u m - ing the input ﬂow’s color is speci ﬁcally controlled. Assuming an average height, h av, of the liquid in the cistern, the following equation relates the netﬂow of color to the cistern to the color in the cistern. e 1q eqed dt ρAeh av where e1=fractional part of ﬂow representing color into the cistern, and e=fractional part of the cistern representing color in the cistern. Assume that theﬂow out of the cistern is constant and use therelationship, q eρAeﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 2ghavp , along with the given equation above to ﬁnd the transfer function, E s=Q s, that relates the color in the cistern to the input ﬂow rate. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 67.Control of HIV/AIDS. HIV in ﬂicts its damage by infecting healthy CD4 +T cells (a type of white blood cell) that are necessary to ﬁght infection. As the virus embedsinaTcellandtheimmunesystemproducesmore of these cells to ﬁght the infection, the virus propagates in an opportunistic fashion. As we now develop a simpleHIV model, refer to Figure P2.39. Normally T cells areproduced at a rate sand die at a rate d. The HIV virus is present in the bloodstream in the infected individual. These viruses in the bloodstream, called free viruses , infect healthy T cells at a rate β. Also, the viruses reproduce through the T cell multiplication process or otherwise at a rate k. Free viruses die at a rate c. Infected T cells die at a rate μ.s Healthy cell Free virus Infected cell dk β c μ FIGURE P2.3919 A simple mathematical model that illustrates these interactions is given by the following equations(Craig, 2004 ): dT dts dT βTv dT dtβTv μT dv dtkT cv where Tnumber of healthy T cells Tnumber of infected T cells vnumber of free viruses a.The system is nonlinear; thus linearization is necessary to ﬁnd transfer functions as you will do in subsequent chapters. The nonlinear nature ofthis model can be seen from the above equations. Determine which of these equations are linear, which are nonlinear, and explain why. b.The system has two equilibrium points. Show thatthese are given by T 0;T 0;v0s d;0;0/C16/C17 and T0;T 0;v0cμ βk;s μ cd βk;sk cμ d β/C18/C19 68.Hybrid vehicle. Problem 23 in Chapter 1 discusses the cruise control of serial, parallel, and split-power hybrid electric vehicles (HEVs). The functional block diagramsdeveloped for these HEVs indicated that the speed of a 19Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education Into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Fig. 1, p. 66. IEEE Transactions on Education by Institute of Electrical and Electronics Engineers; IEEE Education Group; IEEE Education Society.Reproduced with permission of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.Problems 105WEBC02 10/28/2014 16:19:17 vehicle depends upon the balance between the motive forces (developed by the gasoline engine and/or the electric motor) and running resistive forces. The resistiveforces include the aerodynamic drag, rolling resistance,and climbing resistance. Figure P2.40 illustrates therunning resistances for a car moving uphill ( Bosch ,2007 ). FL S α GFSt ½ FRO ½ FRO FIGURE P2.40 Running resistances20 The total running resistance, Fw, is calculated as FwFRoFLFSt, where FRois the rolling resistance, FLis the aerodynamic drag, and FStis the climbing resistance. The aerodynamic drag is proportional to the square of the sum of car velocity, v, and the head-wind velocity, vhw,o rvvhw. The other two resistances are functions of car weight, G, and the gradient of the road (given by the gradient angle, α), as seen from the following equations: FRofGcosαfm gcosα where fcoefficient of rolling resistance mcar mass ;in kg ggravitational acceleration ;in m/s2 FL0:5ρCwAvvhw 2: and ρair density ;in kg/m3 Cwcoefficient of aerodynamic drag Alargest cross-section of the car ;in kg =m2 FStGsinαmgsinα: T h em o t i v ef o r c e , F, available at the drive wheels is: FTitot rηtotPηtot vwhere Tmotive torque Pmotive power itottotal transmission ratio rtire radius ηtottotal drive-train efficiency : The surplus force, F Fw, accelerates the vehicle (or retards it when Fw>F). Letting aF Fw kmm, where ais the acceleration and kmis a coef ﬁcient that compensates for the apparent increase in vehicle mass due to rotating masses (wheels, ﬂywheel, crankshaft, etc.): a.Show that car acceleration,21a, may be determined from the equation: Ffm gcosαmgsinα0:5ρCwAvvhw 2kmma b.Assuming constant acceleration and using the averagevalue for speed, ﬁnd the average motive force, F av (in N), and power, Pav(in kW) the car needs to accelerate from 40 to 60 km/h in 4 seconds on a levelroad, α0°  , under windless conditions, where v hw0. You are given the following parameters: m1590 kg, A 2m2,f0:011, ρ1:2 kg/m3, Cw0:3,ηtot0:9;km1:2. Furthermore, calcu- late the additional power, Padd, the car needs after reaching 60 km/h to maintain its speed while climbing a hill with a gradient α5°. c.The equation derived in Part adescribes the non- linear car motion dynamics where Ft is the input to the system, and vt the resulting output. Given that the aerodynamic drag is proportional to v2under windless conditions, linearize the resulting equation of motion around an average speed, vo50 km/h, when the car travels on a level road,22where α0°. (Hint: Expand v2 v2 0in a truncated Taylor series). Write that equation of motion and represent it with a block diagram in which the block Gvrepresents the vehicle dynamics. The output of that block is the car speed, v(t), and the input is the excess motive force, Fet ,d eﬁned as: FeF FSt FRoFo,w h e r e Fo is the constant component of the linearized aerody-namic drag. d.Use the equation in Part ctoﬁnd the vehicle transfer function: G vs  Vs =Fes . 69.Parabolic trough collector . In a signi ﬁcant number of cases, the open-loop transfer function from ﬂuidﬂow to 20Robert Bosch GmbH, Bosch Automotive Handbook, 7th ed. John Wiley & Sons Ltd. UK, 2007. P. 430. Figure at bottom left.21Other quantities, such as top speed, climbing ability, etc., may also be calculated by manipulation from that equation. 22Note that on a level road the climbing resistance, Fst0, since sinαsin 0 °0.106 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:18 ﬂuid temperature in a parabolic trough collector can be approximated ( Camacho ,2012 ) by: P sK 1τse sT a.Write an analytic expression for the unit step response of the open-loop system assuming that h trepresents the output temperature and q tthe input ﬂuidﬂow.b.Make a sketch of the unit step response of the open-loop system. Indicate on your ﬁgure the time delay, the settling time, the initial and ﬁnal values of the response, and the value of the response when tτT. c.Call the output temperature h tand the input ﬂuidﬂowq t. Find the differential equation that represents the open-loop system. Cyber Exploration Laboratory Experiment 2.1 Objectives To learn to use MATLAB to (1) generate polynomials, (2) manipulate polynomials, (3) generate transfer functions, (4) manipulate transfer functions, and (5) perform partial-fraction expansions. Minimum Required Software Packages MATLAB and the Control System Toolbox Prelab 1.Calculate the following by hand or with a calculator: a.The roots of P1s67s52s49s310s212s15 b.The roots of P2s69s58s49s312s215s20 c.P3P1P2;P4P1 P2;P5P1P2 2.Calculate by hand or with a calculator the polynomial P6 s7 s8 s3 s5 s9 s10 3.Calculate by hand or with a calculator the following transfer functions: a.G1 s20 s2 s3 s6 s8 s s7 s9 s10 s15, represented as a numerator polynomial divided by a denominator polynomial. b.G2 ss417s399s2223s140 s532s4363s32092 s25052 s4320, expressed as factors in the numerator divided by factors in the denominator, similar tothe form of G 1 sin Prelab 3a. c.G3 sG1 sG2 s;G4 sG1 s G2 s;G5 sG1 sG2 s expressed as factors divided by factors and expressed as polynomials divided by polynomials. 4.Calculate by hand or with a calculator the partial-fraction expansion of the following transfer functions: a.G65 s2 s s28s15 b.G75 s2 s s26s9 c.G85 s2 s s26s34Cyber Exploration Laboratory 107WEBC02 10/28/2014 16:19:19 Lab 1.Use MATLAB to ﬁndP3,P4, and P5in Prelab 1. 2.Use only one MATLAB command to ﬁndP6in Prelab 2. 3.Use only two MATLAB commands to ﬁnd G1 sin Prelab 3 arepresented as a polynomial divided by a polynomial. 4.Use only two MATLAB commands to ﬁndG2(s) expressed as factors in the numerator divided by factors in the denominator. 5.Using various combinations of G1 sandG2(s),ﬁndG3(s),G4 s, and G5 s. Various combinations implies mixing and matching G1 sandG2(s) expressed as factors and polynomials. For example, in ﬁnding G3(s),G1 scan be expressed in factored form and G2(s) can be expressed in polynomial form. Another combination is G1 sandG2(s) both expressed as polynomials. Still another combination is G1 sand G2(s) both expressed in factored form. 6.Use MATLAB to evaluate the partial fraction expansions shown in Prelab 4. Postlab 1.Discuss your ﬁndings for Lab 5. What can you conclude? 2.Discuss the use of MATLAB to manipulate transfer functions and polynomials. Discuss any shortcomings in using MATLAB to evaluate partial fraction expansions. Experiment 2.2 Objectives To learn to use MATLAB and the Symbolic Math Toolbox to (1) ﬁnd Laplace transforms for time functions, (2) ﬁnd time functions from Laplace transforms, (3) create LTI transfer functions from symbolic transfer functions, and (4) perform solutions of symbolic simultaneous equations. Minimum Required Software Packages MATLAB, the Symbolic Math Tool- box, and the Control System Toolbox Prelab 1.Using a hand calculation, ﬁnd the Laplace transform of: f t0:0075  0:00034 e 2:5tcos 22t0:087e 2:5tsin 22t 0:0072 e 8t 2.Using a hand calculation, ﬁnd the inverse Laplace transform of F s2 s3 s5 s7 s s8 s210s100 3.Use a hand calculation to solve the circuit for the Laplace transforms of theloop currents shown in Figure P2.41. Lab 1.Use MATLAB and the Symbolic Math Toolbox to a.Generate symbolically the time function f(t) shown in Prelab 1. b.Generate symbolically F(s) shown in Prelab 2. Obtain your result symbolically in both factored and polynomial forms. c.Find the Laplace transform of f(t) shown in Prelab 1. d.Find the inverse Laplace transform of F(s) shown in Prelab 2. e.Generate an LTI transfer function for your symbolic representation of F(s) in Prelab 2 in both polynomial form and factored form. Start with the F(s) you generated symbolically. f.Solve for the Laplace transforms of the loop currents in Prelab 3.+ –3u(t)1 F51 H1 H 2Ω 2Ω5Ω 1 F 31Ω1 F4 3(t)i 1(t)i2(t)i FIGURE P2.41108 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:19 Postlab 1.Discuss the advantages and disadvantages between the Symbolic Math Toolbox and MATLAB alone to convert a transfer function from factored form to polynomial formand vice versa. 2.Discuss the advantages and disadvantages of using the Symbolic Math Toolbox togenerate LTI transfer functions. 3.Discuss the advantages of using the Symbolic Math Toolbox to solve simultaneousequations of the type generated by the electrical network in Prelab 3. Is it possible tosolve the equations via MATLAB alone? Explain. 4.Discuss any other observations you had using the Symbolic Math Toolbox. Experiment 2.3 Objectives To learn to use LabVIEW to generate and manipulate polynomials and transfer functions. Minimum Required Software Packages LabVIEW and the LabVIEW Control Design and Simulation Module. Prelab 1.Study Appendix D, Sections D.1 through Section D.4, Example D.1. 2.Perform by hand the calculations stated in Prelab 1 of Experiment 2.1. 3.Find by a hand calculation the polynomial whose roots are:  7; 8; 3; 5; 9;and 10. 4.Perform by hand a partial-fraction expansion of Gs 5s10 s38s215s. 5.Find by a hand calculation G1s   G2s ;G1s    G2s ;andG1s G2s , where G1s 1 s2s2andG2s s1 s24s3. Lab 1.Open the LabVIEW functions palette and select the Mathematics/Polynomial palette. 2.Generate the polynomials enumerated in Prelab 1a and lb of Experiment 2.1. 3.Generate the polynomial operations stated in Prelab 1c of Experiment 2.1. 4.Generate a polynomial whose roots are those stated in Prelab 3 of this experiment. 5.Generate the partial-fraction expansion of the transfer function given in Prelab 4 of this experiment. 6.Using the Control Design and Simulation/Control Design/Model Construction palette, construct the two transfer functions enumerated in Prelab 5. 7.Using the Control Design and Simulation/Control Design/Model Interconnection palette, display the results of the mathematical operations enumerated in Prelab 5 of thisexperiment. Postlab 1.Compare the polynomial operations obtained in Lab 3 to those obtained in Prelab 2. 2.Compare the polynomial displayed in Lab 4 with that calculated in Prelab 3. 3.Compare the partial-fraction expansion obtained in Lab 5 with that calculated inPrelab 4. 4.Compare the results of the mathematical operations found in Lab 7 to those calculated in Prelab 5.Cyber Exploration Laboratory 109C02 10/31/2014 11:3:30 Hardware Interface Laboratory Note: Before performing experiments in this section, please study Appendix D — LabVIEW Tutorial, including the section discussing myDAQ. When an experiment indicates a provided ﬁle, the ﬁle is obtained at www.wiley.com/college/nise. Experiment 2.4 Programming with LabVIEW Part 1 Objectives 1.To learn how to program LabVIEW, Part 1 2.To learn how to write basic LabVIEW programs and understand LabVIEW ﬂow Material Required Computer with LabVIEW Installed Prelab Go to the website http://www.learnni.com/getting-started/. Complete modules 0-7. Lab 1.Write a LabVIEW program that executes an equivalent of the following C-like code, where xis an input and yis an output (Formula Nodes are not allowed): if(abs(x) <0.1) y=1 ; else if(x>=0) y=0 ; else y=2 ; Run your program for the following inputs: x0:05; 0:05;1; 1. 2.Write a LabVIEW program that receives three colors representing a resistor ’s value and returns the numeric resistor value in ohms. Your interface should be similar to the oneshown in Figure P2.42. The third band should include silver and gold colors. FIGURE P2.42110 Chapter 2 Modeling in the Frequency DomainC02 10/31/2014 11:3:31 Run your program at least for the following inputs: Red Red Black Brown Black OrangeOrange White Gold Experiment 2.5 Programming with LabVIEW Part 2 Objectives 1.To learn how to program LabVIEW, Part 2 2.To learn how to use loops, do basic math inside loops, and graph numerical information using LabVIEW Material Required Computer with LabVIEW Installed Prelab Go to the website http://www.learnni.com/getting-started/ . Complete modules 8-10. Lab 1.It is well known that 1 xx2x3∙∙∙1 1 xwhen jxj<1: Write a LabVIEW program that takes as an input a value for x, and a number of iterations. The program will use a loop to calculate the sum of the geometric series forthe speci ﬁed number of operations. It will also calculate the closed-form expression for the series. The program will display the two results, and will also display the absoluteerror of the difference. Demonstrate your program with x=0.5 and 3, 10, and 200 iterations. 2.Write a LabVIEW program that generates a 50% duty-cycle square-wave signal between0 and X maxvolts, where Xmax<10 V, with a nonzero variable frequency. The amplitude and frequency will be inputs. Display the waveform on a waveform chart,which will be an output. In this part you are not allowed to use the LabVIEW-provided function generation blocks. Demonstrate this program for amplitudes of 1, 5, and 10 V and for 1 Hz and 5 Hz. Experiment 2.6 MyDAQ Programming Objectives To become familiar with the data acquisition and signal generation capabilities of myDAQ Material Required Computer with LabVIEW installed, and myDAQ Files Provided at www.wiley.com/college/nise Battery Meter.ctl Prelab Go to the website https://decibel.ni.com/content/docs/DOC-11624. Go over Unit 4 —DAQ: Lesson 1. Then go over the measuring voltage tutorial in http://zone.ni.com/devzone/cda/ epd/p/id/6436 . Lab 1.Write a battery-tester program using LabVIEW and myDAQ as an acquisition device. The battery tester should work for three nominal values of batteries: 1.5 V, 6 V, and 9 V.Hardware Interface Laboratory 111WEBC02 10/28/2014 16:19:20 Bibliography Agee J. T., and Jimoh, A. A. Flat controller design for hardware-cost reduction in polar-axis photovoltaic systems. Solar Energy , vol. 86, pp. 452 –462, 2012. Aggarwal, J. K. Notes on Nonlinear Systems . Van Nostrand Reinhold, New York, 1972. Bosch, R. GmbH, Bosch Automotive Handbook , 7th ed. John Wiley & Sons Ltd., UK, 2007. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Cannon, R. H., Jr., Dynamics of Physical Systems . McGraw-Hill, New York, 1967. Carlson, L. E., and Griggs, G. E. Aluminum Catenary System Quarterly Report . Technical Report Contract Number DOT-FR-9154, U.S. Department of Transportation, 1980. Chignola, R., and Foroni, R. I. Estimating the Growth Kinetics of Experimental Tumors from as Few as Two Determinations of Tumor Size: Implications for Clinical Oncology. IEEE Transactions on Biomedical Engineering , vol. 52, no. 5, May 2005, pp. 808 –815. Cochin, I. Analysis and Design of Dynamic Systems . Harper and Row, New York, 1980. Cook, P. A. Nonlinear Dynamical Systems . Prentice Hall, United Kingdom, 1986.The batteries are considered dead for voltage values 20% or under the nominal. Between 20% and the nominal value the batteries are in a warning area, and for values above the nominal the batteries are OK. Your interface should be similar to the one shown Figure P2.43. A custom control accepting inputs from 0 to 120 has been created under the nameBattery Meter.ctl . 2.Use the LabVIEW program that you wrote in Experiment 2.5 to generate a 50% duty-cycle square-wave signal. Output your signal through one of the myDAQ’ s analog channels and read the signal using the myDAQ oscilloscope function (available frommyDAQ ﬁle:NI ELVISmx Instrument Launcher ) to verify the generated signal. Print two examples using the scope’ s automatic measurements. FIGURE P2.43112 Chapter 2 Modeling in the Frequency DomainWEBC02 10/28/2014 16:19:20 Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Davis, S. A., and Ledgerwood, B. K. Electromechanical Components for Servomechanisms . McGraw-Hill, New York, 1961. Doebelin, E. O. Measurement Systems Application and Design . McGraw-Hill, New York, 1983. Dorf, R. Introduction to Electric Circuits , 2d ed. Wiley, New York, 1993. D’Souza, A. Design of Control Systems . Prentice Hall, Englewood Cliffs, NJ, 1988. Edelstein-Keshet, L. Mathematical Models in Biology . Society for Industrial and Applied Mathematics, Philadelphia, PA, 2005. Elkins, J. A. A Method for Predicting the Dynamic Response of a Pantograph Running at Constant Speed under a Finite Length of Overhead Equipment. Technical Report TN DA36, British Railways, 1976. Franklin, G. F., Powell, J. D., and Emami-Naeini, A. Feedback Control of Dynamic Systems . Addison-Wesley, Reading, MA, 1986. Graovac D., and Katic ́V. Online Control of Current-Source-Type Active Rectiﬁ er Using Transfer Function Approach. IEEE Transactions on Industrial Electronics , vol. 48, no. 3, June 2001, pp. 526 –535. Hsu, J. C., and Meyer, A. U. Modern Control Principles and Applications . McGraw-Hill, New York, Johansson, R., Magnusson, M., and Akesson, M. Identi ﬁcation of Human Postural Dynamics. IEEE Transactions on Biomedical Engineering , vol. 35, no. 10, October 1988, pp. 858 –869. Kailath, T. Linear Systems . Prentice Hall, Englewood Cliffs, NJ, 1980. Kermurjian, A. From the Moon Rover to the Mars Rover. The Planetary Report , July/August 1990, pp. 4–11. Krieg, M., and Mohseni, K. Developing a Transient Model for Squid Inspired Thrusters, and Incorporation into Underwater Robot Control Design. 2008 IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, France , September 2008. Kuo, F. F. Network Analysis and Synthesis . Wiley, New York, 1966. Lago, G., and Benning ﬁeld, L. M. Control System Theory . Ronald Press, New York, 1962. Lessard, C. D. Basic Feedback Controls in Biomedicine . Morgan & Claypool, San Rafael, CA, 2009. Mablekos, V E. Electric Machine Theory for Power Engineers . Harper & Row, Cambridge, MA, Marttinen, A., Virkkunen, J., and Salminen, R. T. Control Study with Pilot Crane. IEEE Transactions on Education , vol. 33, no. 3, August 1990, pp. 298 –305. Minorsky, N. Theory of Nonlinear Control Systems . McGraw-Hill, New York, 1969. Nilsson, J. W., and Riedel, S. A. Electric Circuits , 5th ed. Addison-Wesley, Reading, MA, 1996. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Englewood Cliffs, NJ, 1990. Raven, F. H.Automatic Control Engineering , 5th ed. McGraw-Hill, New York, 1995. Schiop L., Gaiceanu M. Mathematical Modeling of Color Mixing Process and PLC Control Implementation by Using Human Machine Interface. IEEE International Symposium on Electrical and Electronics Engineering,2 0 1 0 . Van Valkenburg, M. E. Network Analysis . Prentice Hall, Englewood Cliffs, NJ, 1974. Vidyasagar, M. Nonlinear Systems Analysis. Prentice Hall, Englewood Cliffs, NJ, 1978.Bibliography 113WEBC02 10/28/2014 16:19:20 Page 114WEBC03 10/28/2014 16:49:41 Modeling in the Time Domain This chapter covers only state-space methods. Chapter Learning Outcomes After completing this chapter, the student will be able to: Find a mathematical model, called a state-space representation, for a linear, time- invariant system (Sections 3.1 –3.3) Model electrical and mechanical systems in state space (Section 3.4) Convert a transfer function to state space (Section 3.5) Convert a state-space representation to a transfer function (Section 3.6) Linearize a state-space representation (Section 3.7) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with case studies as follows: Given the antenna azimuth position control system shown on the front endpapers, you will be able to ﬁnd the state-space representation of each subsystem. Given a description of the way a pharmaceutical drug ﬂows through a human being, you will be able to ﬁnd the state-space representation to determine drug concentrations in speci ﬁed compartmentalized blocks of the process and of the human body. You will also be able to apply the same concepts to an aquifer toﬁnd water level.3 115WEBC03 10/28/2014 16:49:42 3.1 Introduction Two approaches are available for the analysis and design of feedback control systems. The ﬁrst, which we began to study in Chapter 2, is known as the classical ,o rfrequency-domain , technique. This approach is based on converting a system’ s differential equation to a transfer function, thus generating a mathematical model of the system that algebraically relates a representation of the output to a representation of the input. Replacing a differential equationwith an algebraic equation not only simpli ﬁes the representation of individual subsystems but also simpli ﬁes modeling interconnected subsystems. The primary disadvantage of the classical approach is its limited applicability: It can be applied only to linear, time-invariant systems or systems that can be approximatedas such. A major advantage of frequency-domain techniques is that they rapidly provide stability and transient response information. Thus, we can immediately see the effects ofvarying system parameters until an acceptable design is met. With the arrival of space exploration, requirements for control systems increased in scope. Modeling systems by using linear, time-invariant differential equations and subsequent transfer functions became inadequate. The state-space approach (also referred to as the modern ,o rtime-domain , approach) is a uni ﬁed method for modeling, analyzing, and designing a wide range of systems. For example, the state-space approach can be used to represent nonlinear systems that have backlash, saturation, and dead zone. Also, it canhandle, conveniently, systems with nonzero initial conditions. Time-varying systems, (forexample, missiles with varying fuel levels or lift in an aircraft ﬂying through a wide range of altitudes) can be represented in state space. Many systems do not have just a single input anda single output. Multiple-input, multiple-output systems (such as a vehicle with input direction and input velocity yielding an output direction and an output velocity) can be compactly represented in state space with a model similar in form and complexity to thatused for single-input, single-output systems. The time-domain approach can be used torepresent systems with a digital computer in the loop or to model systems for digitalsimulation. With a simulated system, system response can be obtained for changes in systemparameters —an important design tool. The state-space approach is also attractive because of the availability of numerous state-space software packages for the personal computer. The time-domain approach can also be used for the same class of systems modeled by the classical approach. This alternate model gives the control systems designer anotherperspective from which to create a design. While the state-space approach can be applied toa wide range of systems, it is not as intuitive as the classical approach. The designer has toengage in several calculations before the physical interpretation of the model is apparent,whereas in classical control a few quick calculations or a graphic presentation of data rapidlyyields the physical interpretation. In this book, the coverage of state-space techniques is to be regarded as an introduction to the subject, a springboard to advanced studies, and an alternate approach to frequency-domain techniques. We will limit the state-space approach to linear, time-invariant systems or systems that can be linearized by the methods of Chapter 2.The study of other classes of systems is beyond the scope of this book. Since state-spaceanalysis and design rely on matrices and matrix operations, you may want to review thistopic in Appendix G, located at www.wiley.com/college/nise , before continuing. 3.2 Some Observations We proceed now to establish the state-space approach as an alternate method for representing physical systems. This section sets the stage for the formal de ﬁnition of the state-space representation by making some observations about systems and their variables. In the discussion that follows, some of the development has been placed in116 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:42 footnotes to avoid clouding the main issues with an excess of equations and to ensure that the concept is clear. Although we use two electrical networks to illustrate the concepts, we could just as easily have used a mechanical or any other physical system. We now demonstrate that for a system with many variables, such as inductor voltage, resistor voltage, and capacitor charge, we need to use differential equations onlyto solve for a selected subset of system variables because all other remaining systemvariables can be evaluated algebraically from the variables in the subset. Our examplestake the following approach: 1.We select a particular subset of all possible system variables and call the variables in this subset state variables . 2.For an nth-order system, we write n simultaneous ,ﬁrst-order differential equations in terms of the state variables. We call this system of simultaneous differential equations state equations . 3.If we know the initial condition of all of the state variables at t 0as well as the system input fortt0, we can solve the simultaneous differential equations for the state variables for tt0. 4.Wealgebraically combine the state variables with the system ’s input and ﬁnd all of the other system variables for tt0. We call this algebraic equation the output equation . 5.We consider the state equations and the output equations a viable representation of thesystem. We call this representation of the system a state-space representation . Let us now follow these steps through an example. Consider the RLnetwork shown in Figure 3.1 with an initial current of i(0). 1.We select the current, i(t), for which we will write and solve a differential equation using Laplace transforms. 2.We write the loop equation, Ldi dtRiv t 3.1 3.Taking the Laplace transform, using Tab le 2.2, Item 7, and including the initial conditions, yields LsI s i 0 RI sV s 3.2 Assuming the input, v(t), to be a unit step, u(t), whose Laplace transform is V s1=s, we solve for I(s) and get I s1 R1 s 1 sR L0 B@1 CAi 0 sR L 3.3 from which i t1 R/C16 1 e  R=Lt/C17 i 0e  R=Lt 3.4 The function i(t) is a subset of all possible network variables that we are able to ﬁnd from Eq. (3.4) if we know its initial condition, i(0), and the input, v(t). Thus, i(t) is a state variable, and the differential equation (3.1) is a state equation .L v(t) i(t)R +– FIGURE 3.1 RLnetwork3.2 Some Observations 117WEBC03 10/28/2014 16:49:43 4.We can now solve for all of the other network variables algebraically in terms of i(t) and the applied voltage, v(t). For example, the voltage across the resistor is vR tRi t 3.5 The voltage across the inductor is vL tv t Ri t 3.61 The derivative of the current is di dt1 Lv t Ri t 3.72 Thus, knowing the state variable, i(t), and the input, v(t), we can ﬁnd the value, or state,o f any network variable at any time, tt0. Hence, the algebraic equations, Eqs. (3.5) through (3.7), are output equations . 5.Since the variables of interest are completely described by Eq. (3.1) and Eqs. (3.5) through (3.7), we say that the combine d state equation (3.1) and the output equations (3.5 through 3.7) form a viable representation of the network, whichwe call a state-space representation . Equation (3.1), which describes the dynamics of the network, is not unique. This equation could be written in terms of any other network variable. For example, substitutingiv R=Rinto Eq. (3.1) yields L RdvR dtvRv t 3.8 which can be solved knowing that the initial condition vR 0Ri 0and knowing v(t). In this case, the state variable is vR(t). Similarly, all other network variables can now be written in terms of the state variable, vR(t), and the input, v(t). Let us now extend our observations to a second-order system, such as that shown in Figure 3.2. 1.Since the network is of second order, two simultaneous, ﬁrst-order differential equations are needed to solve for two state variables. We select i(t) and q(t), the charge on the capacitor, as the two state variables. 2.Writing the loop equation yields Ldi dtRi1 CZ id tv t 3.9 Converting to charge, using i tdq=dt, we get Ld2q dt2Rdq dt1 Cqv t 3.10CL R v(t) i(t)+– FIGURE 3.2 RLC network 1Since vL tv t vR tv t Ri t. 2Sincedi dt1 LvL t1 Lv t Ri t.118 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:43 But an nth-order differential equ ation can be converted to nsimultaneous ﬁrst-order differential equatio ns, with each equation of the form dxi dtai1x1ai2x2∙∙∙ainxnbif t 3.11 where each xiis a state variable, and the aij’s and biare constants for linear, time- invariant systems. We say that the right-hand side of Eq. (3.11) is a linear combination of the state variables and the input, f(t). We can convert Eq. (3.10) into two simultaneous, ﬁrst-order differential equations in terms of i(t) and q(t). The ﬁrst equation can be dq=dti. The second equation can be formed by substitutingR id tqinto Eq. (3.9) and solving for di/dt. Summarizing the two resulting equations, we get dq dti (3.12a) di dt 1 LCq R Li1 Lv t (3.12b) 3.These equations are the state equations and can be solved simultaneously for the state variables, q(t) and i(t), using the Laplace transform and the methods of Chapter 2. In addition we must also know the input, v(t), and the initial conditions for q(t) and i(t). 4.From these two state variables, we can solve for all other network variables. For example,the voltage across the inductor can be written in terms of the solved state variables andthe input as v L t 1 Cq t Ri tv t 3.133 Equation (3.13) is an output equation ; we say that vL(t)i sa linear combination of the state variables, q(t) and i(t), and the input, v(t). 5.The combined state equations (3.12) and the output equation (3.13) form a viablerepresentation of the network, which we call a state-space representation . Another choice of two state variables can be made, for example, v R(t) and vC(t), the resistor and capacitor voltage, respectively. The resulting set of simultaneous, ﬁrst-order differential equations follows: dvR dt R LvR R LvCR Lv t (3.14a)4 dvC dt1 RCvR (3.14b) Again, these differential equations can be solved for the state variables if we know the initialconditions along with v(t). Further, all other network variables can be found as a linear combination of these state variables. Is there a restriction on the choice of state variables? Yes! Typically, the minimum number of state variables required to describe a system equals the order of the differentialequation. Thus, a second-order system requires a minimum of two state variables to describe it. 3Since vL tL di=dt  1=Cq Riv t, where di/dt can be found from Eq. (3.9), andRid tq. 4Since vR ti tR, and vC t 1=CRid t, differentiating vR(t) yields dvR=dtRd i =dt   R=L  vL R=L  vt   vR vC  , and differentiating vC(t) yields dvC=dt 1=Ci 1=RCvR.3.2 Some Observations 119WEBC03 10/28/2014 16:49:44 We can de ﬁne more state variables than the minimal set; however, within this minimal set the state variables must be linearly independent. For example, if vR(t) is chosen as a state variable, then i(t) cannot be chosen, because vR(t) can be written as a linear combination of i(t), namely vR tRi t. Under these circumstances we say that the state variables are linearly dependent . State variables must be linearly independent ; that is, no state variable can be written as a linear combination of the other state variables, or else we would not have enough information to solve for all other system variables, and we could even havetrouble writing the simultaneous equations themselves. The state and output equations can be written in vector-matrix form if the system is linear. Thus, Eq. (3.12), the state equations, can be written as _xAxBu 3.15 where _xdq=dt di=dt"# ; A01  1=LC  R=L"# xq i"# ; B0 1=L"# ;uvt  Equation (3.13), the output equation, can be written as yCxDu 3.16 where yv L t;C  1=C R;xq i"# ;D1;uv t We call the combination of Eqs. (3.15) and (3.16) a state-space representation of the network of Figure 3.2. A state-space representation, therefore, consists of (1) the simultaneous,ﬁrst-order differential equations from which the state variables can be solved and (2) the algebraic output equation from which all other system variables can be found. A state-space representation is not unique, since a different choice of state variables leads to a different representation of the same system. In this section, we used two electrical networks to demonstrate some principles that are the foundation of the state-space representation. The representations developed in thissection were for single-input, single-output systems, where y,D, and uin Eqs. (3.15) and (3.16) are scalar quantities. In general, systems have multiple inputs and multipleoutputs. For these cases, yandubecome vector quantities, and Dbecomes a matrix. In Section 3.3 we will generalize the representation for multiple-input, multiple-output systems and summarize the concept of the state-space representation. 3.3 The General State-Space Representation Now that we have represented a physical network in state space and have a good idea of the terminology and the concept, let us summarize and generalize the representation for lineardifferential equations. First, we formalize some of the de ﬁnitions that we came across in the last section. Linear combination . A linear combination of nvariables, x i, fori1t on, is given by the following sum, S: SKnxnKn 1xn 1∙∙∙K1x1 3.17 where each Kiis a constant.120 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:44 Linear independence . A set of variables is said to be linearly independent if none of the variables can be written as a linear combination of the others. For example, given x1,x2, andx3,i fx 25x16x3, then the variables are not linearly independent, since one of them can be written as a linear combination of the other two. Now, what must be true so that one variable cannot be written as a linear combination of the other variables? Considerthe example K 2x2K1x1K3x3.I fn ox i0, then any xican be written as a linear combination of other variables, unless all Ki0. Formally, then, variables xi,f o r i1t on, are said to be linearly independent if their linear combination, S, equals zero onlyif every Ki0 andno x i0f o ra l l t0. System variable . Any variable that responds to an input or initial conditions in a system. State variables . The smallest set of linearly independent system variables such that the values of the members of the set at time t0along with known forcing functions completely determine the value of all system variables for all tt0. State vector . A vector whose elements are the state variables. State space . The n-dimensional space whose axes are the state variables. This is a new term and is illustrated in Figure 3.3, where the state variables are assumed to be a resistor voltage, vR, and a capacitor voltage, vC. These variables form the axes of the state space . A trajectory can be thought of as being mapped out by the state vector, x(t), for a range oft. Also shown is the state vector at the particular time t4. State equations . A set of nsimultaneous, ﬁrst-order differential equations with nvariables, where the nvariables to be solved are the state variables. Output equation . The algebraic equation that expresses the output variables of a system as linear combinations of the state variables and the inputs. Now that the de ﬁnitions have been formally stated, we deﬁ ne the state-space representation of a system. A system is represented in statespace by the following equations: _xAxBu 3.18 yCxDu 3.19 fortt0and initial conditions, x(t0), where xstate vector _xderivative of the state vector with respect to time youtput vector uinput or control vector Asystem matrix Binput matrix Coutput matrix Dfeedforward matrix Equation (3.18) is called the state equation , and the vector x, the state vector , contains the state variables. Equation (3.18) can be solved for the state variables, which wedemonstrate in Chapter 4. Equation (3.19) is called the output equation . This equation is used to calculate any other system variables. This representation of a system providescomplete knowledge of all variables of the system at any tt 0.vC vRState space State vector, x(t) State vector trajectoryState vector, x(4) FIGURE 3.3 Graphic representation of state space and a state vector3.3 The General State-Space Representation 121WEBC03 10/28/2014 16:49:44 As an example, for a linear, time-invariant, second-order system with a single input v(t), the state equations could take on the following form: dx1 dta11x1a12x2b1v t (3.20a) dx2 dta21x1a22x2b2v t (3.20b) where x1andx2are the state variables. If there is a single output, the output equation could take on the following form: yc1x1c2x2d1v t 3.21 The choice of state variables for a given system is not unique. The requirement in choosing the state variables is that they be linearly independent and that a minimum number of thembe chosen. 3.4 Applying the State-Space Representation In this section, we apply the state-space formulation to the representation of morecomplicated physical systems. The ﬁrst step in representing a system is to select the state vector, which must be chosen according to the following considerations: 1.A minimum number of state variables must be selected as components of the state vector. This minimum number of state variables is suf ﬁcient to describe completely the state of the system. 2.The components of the state vector (that is, this minimum number of state variables) mustbe linearly independent. Let us review and clarify these statements. Linearly Independent State Variables The components of the state vector must be linearly independent. For example, following thedeﬁnition of linear independence in Section 3.3, if x 1,x2, and x3are chosen as state variables, butx35x14x2,t h e n x3is not linearly independent of x1andx2, since knowledge of the values of x1andx2will yield the value of x3. Variables and their successive derivatives are linearly independent. For example, the voltage across an inductor, vL, is linearly independent of the current through the inductor, iL, since vLLdi L=dt. Thus, vLcannot be evaluated as a linear combination of the current, iL. Minimum Number of State Variables How do we know the minimum number of state variables to select? Typically, the minimumnumber required equals the order of the differential equation describing the system. For example, if a third-order differential equation describes the system, then three simultaneous, ﬁrst-order differential equations are required along with three state variables. From theperspective of the transfer function, the order of the differential equation is the order ofthe denominator of the transfer function after canceling common factors in the numeratorand denominator. In most cases, another way to determine the number of state variables is to count the number of independent energy-storage elements in the system. 5The number of 5Sometimes it is not apparent in a schematic how many independent energy-storage elements there are. It is possible that more than the minimum number of energy-storage elements could be selected, leading to a state vector whose components number more than the minimum required and are not linearly independent. Selecting additional dependent energy-storage elements results in a system matrix of higher order and more complexity than required for the solution of the state equations.122 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:44 these energy-storage elements equals the orde r of the differential equation and the number of state variables. In Figure 3.2 there are two energy-storage elements, the capacitor and the inductor. Hence, two state variables and two state equations are required for the system. If too few state variables are selected, it may be impossible to write particular output equations, since some system variables cannot be written as a linear combination of thereduced number of state variables. In many cases, it may be impossible even to complete thewriting of the state equations, since the derivatives of the state variables cannot be expressedas linear combinations of the reduced number of state variables. If you select the minimum number of state variables but they are not linearly independent, at best you may not be able to solve for all other system variables. At worstyou may not be able to complete the writing of the state equations. Often the state vector includes more than the minimum number of state variables required. Two possible cases exist. Often state variables are chosen to be physicalvariables of a system, such as position and ve locity in a mechanical system. Cases arise where these variables, although linearly independent, are also decoupled .T h a ti s ,s o m e linearly independent variables are not required in order to solve for any of the other linearly independent variables or any other dependent system variable. Consider the case of a mass and viscous damper whose differential equation is Md v =dtDvf t,w h e r e v is the velocity of the mass. Since this is a ﬁrst-order equation, one state equation is all that is required to de ﬁne this system in state space with velocity as the state variable. Also, since there is only one energy-storag e element, mass, only one state variable is required to represent this system in state space. However, the mass also has anassociated position, which is linearly independent of velocity. If we want to includeposition in the state vector along with velocity, then we add position as a state variable that is linearly independent of the other state variable, velocity. Figure 3.4 illustrates what is happening. The ﬁrst block is the transfer function equivalent to Mdv t=dtDv tf t. The second block shows that we integrate the output velocity to yield output displacement (see Table 2.2,Item 10). Thus, if we want displacement as an output, the denominator, orcharacteristic equation, has increased in order to 2, the product of the two transferfunctions. Many times, the writing of the state equations is simpli ﬁed by including additional state variables. Another case that increases the size of the state vector arises when the added variable is not linearly independent of the other members of the state vector. This usually occurs when a variable is selected as a state variable but its dependence on theother state variables is not immediately apparent. For example, energy-storage elementsmay be used to select the state variables, and the dependence of the variable associatedwith one energy-storage element on the variables of other energy-storage elements maynot be recognized. Thus, the dimension of the system matrix is increased unnecessarily,and the solution for the state vector, which we cover in Chapter 4, is more dif ﬁcult. Also, adding dependent state variables affects the designer ’s ability to use state-space methods for design. 6 We saw in Section 3.2 that the state-space representation is not unique. The following example demonstrates one technique for selecting state variables and representing a systemin state space. Our approach is to write the simple derivative equation for each energy-storage element and solve for each derivative term as a linear combination of any of thesystem variables and the input that are present in the equation. Next we select eachdifferentiated variable as a state variable. Then we express all other system variables in the equations in terms of the state variables and the input. Finally, we write the output variables as linear combinations of the state variables and the input.F(s) V(s) X(s)1 M D Ms +1 s FIGURE 3.4 Block diagram of a mass and damper 6See Chapter 12 for state-space design techniques.3.4 Applying the State-Space Representation 123WEBC03 10/28/2014 16:49:46 Example 3.1 Representing an Electrical NetworkRepresenting an Electrical Network PROBLEM: Given the electrical network of Figure 3.5, ﬁnd a state-space representation if the output is the current through the resistor. SOLUTION: The following steps will yield a viable representation of the network in state space. Step 1 Label all of the branch currents in the network. These include iL,iR, and iC,a s shown in Figure 3.5. Step 2 Select the state variables by writing the derivative equation for all energy-storage elements, that is, the inductor and the capacitor. Thus, CdvC dtiC 3.22 LdiL dtvL 3.23 From Eqs. (3.22) and (3.23), choose the state variables as the quantities that are differentiated, namely vCandiL. Using Eq. (3.20) as a guide, we see that the state-space representation is complete if the right-hand sides of Eqs. (3.22) and (3.23) can be writtenas linear combinations of the state variables and the input. Since i CandvLare not state variables, our next step is to express iCandvLas linear combinations of the state variables, vCandiL, and the input, v(t). Step 3 Apply network theory, such as Kirchhoff ’s voltage and current laws, to obtain iC andvLin terms of the state variables, vCandiL. At Node 1, iC iRiL  1 RvCiL 3.24 which yields iCin terms of the state variables, vCandiL. Around the outer loop, vL vCv t 3.25 which yields vLin terms of the state variable, vC, and the source, v(t). Step 4 Substitute the results of Eqs. (3.24) and (3.25) into Eqs. (3.22) and (3.23) toobtain the following state equations: CdvC dt 1 RvCiL (3.26a) LdiL dt  vCv t (3.26b)Node 1 CL R iC(t)iR(t)iL v(t)(t) +– FIGURE 3.5 Electrical network for representation in state space124 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:49 In order to clarify the representation of physical systems in state space, we will look at two more examples. The ﬁrst is an electrical network with a dependent source. Although we will follow the same procedure as in the previous problem, this problem will yield increased complexity in applying network analysis to ﬁnd the state equations. For the second example, weﬁnd the state-space representation of a mechanical system.or dvC dt 1 RCvC1 CiL (3.27a) diL dt 1 LvC1 Lv t (3.27b) Step 5 Find the output equation. Since the output is iR(t), iR1 RvC 3.28 Theﬁnal result for the state-space representation is found by representing Eqs. (3.27) and (3.28) in vector-matrix form as follows: _vC _iL"#  1= RC 1=C  1=L 0"# vC iL"# 0 1=L"# v t (3.29a) iR1=R0/C2/C3 vC iL/C20/C21 (3.29b) where the dot indicates differentiation with respect to time. Example 3.2 Representing an Electrical Network with a Dependent SourceRepresenting an Electrical Network with a Dependent Source PROBLEM: Find the state and output equations for the electrical network shown in Figure 3.6 if the output vector is yvR2iR2T, where Tmeans transpose.7 SOLUTION: Immediately notice that this network has a voltage-dependent current source.C R1 iR1(t)LNode 1 Node 2 +– i(t) iL(t)iC(t) iR2(t)R24vL(t) FIGURE 3.6 Electrical network for Example 3.2 7See Appendix G for a discussion of the transpose. Appendix G is located at www.wiley.com/college/nise .3.4 Applying the State-Space Representation 125WEBC03 10/28/2014 16:49:50 Step 1 Label all of the branch currents on the network, as shown in Figure 3.6. Step 2 Select the state variables by listing the voltage-current relationships for all of the energy-storage elements: LdiL dtvL (3.30a) CdvC dtiC (3.30b) From Eqs. (3.30) select the state variables to be the differentiated variables. Thus, the statevariables, x 1andx2, are x1iL;x2vC 3.31 Step 3 Remembering that the form of the state equation is _xAxBu 3.32 we see that the remaining task is to transform the right-hand side of Eq. (3.30) into linear combinations of the state variables and input source current. Using Kirchhoff ’s voltage and current laws, we ﬁndvLandiCin terms of the state variables and the input current source. Around the mesh containing LandC, vLvCvR2vCiR2R2 3.33 But at Node 2, iR2iC4vL. Substituting this relationship for iR2into Eq. (3.33) yields vLvC iC4vLR2 3.34 Solving for vL, we get vL1 1 4R2 vCiCR2 3.35 Notice that since vCis a state variable, we only need to ﬁnd iCin terms of the state variables. We will then have obtained vLin terms of the state variables. Thus, at Node 1 we can write the sum of the currents as iCi t iR1 iL i t vR1 R1 iL i t vL R1 iL 3.36 where vR1vL. Equations (3.35) and (3.36) are two equations relating vLandiCin terms of the state variables iLandvC. Rewriting Eqs. (3.35) and (3.36), we obtain two simultaneous equations yielding vLandiCas linear combinations of the state variables iLandvC: 1 4R2vL R2iCvC (3.37a)  1 R1vL iCiL i t (3.37b)126 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:50 In the next example, we ﬁnd the state-space representation for a mechanical system. It is more convenient when working wi th mechanical systems to obtain the state equations directly from the equations of mot ion rather than from the energy-storage elements. For example, consider an energy-storage element such as a spring, where FKx. This relationship does not contain the derivative of a physical variable as in the case of electrical networks, where iCd v =dtfor capacitors, and vLd i =dtfor inductors. Thus, in mechanical systems we change our selection of state variables to be the position and velocityof each point of linearly independent motion. In the example, we will see that although thereare three energy-storage elements, there will be four state variables; an additional linearlyindependent state variable is included for the convenience of writing the state equations. It isleft to the student to show that this system yields a fourth-order transfer function if we relate thedisplacement of either mass to the applied force, and a third-order transfer function if we relate the velocity of either mass to the applied force.Solving Eq. (3.37a) simultaneously for vLandiCyields vL1 ΔR2iL vC R2i t 3.38 and iC1 Δ 1 4R2iL1 R1vC  1 4R2i t/C20/C21 3.39 where Δ  1 4R2R2 R1/C20/C21 3.40 Substituting Eqs. (3.38) and (3.39) into (3.30), simplifying, and writing the result in vector-matrix form renders the following state equation: _iL _vC"# R2= LΔ  1= LΔ 1 4R2= CΔ1= R1CΔ"#iL vC"#  R2= LΔ   1 4R2= CΔ"# i t 3.41 Step 4 Derive the output equation. Since the speci ﬁed output variables are vR2andiR2, we note that around the mesh containing C,L, and R2, vR2 vCvL (3.42a) iR2iC4vL (3.42b) Substituting Eqs. (3.38) and (3.39) into Eq. (3.42), vR2andiR2are obtained as linear combinations of the state variables, iLandvC. In vector-matrix form, the output equation is vR2 iR2"# R2=Δ   11=Δ 1=Δ 1 4R1= ΔR1"# iL vC"#  R2=Δ  1=Δ"# i t 3.433.4 Applying the State-Space Representation 127WEBC03 10/28/2014 16:49:52 Example 3.3 Representing a Translational Mechanical SystemRepresenting a Translational Mechanical System PROBLEM: Find the state equations for the translational mechanical system shown in Figure 3.7. SOLUTION: First write the differential equations for the network in Figure 3.7, using the methods of Chapter 2 to ﬁnd the Laplace-transformed equations of motion. Next take the inverse Laplace transform of these equations, assuming zero initial conditions, and obtain M1d2x1 dt2Ddx1 dtKx1 Kx20 3.44  Kx 1M2d2x2 dt2Kx2f t 3.45 Now let d2x1/dt2dv1/dt, and d2x2/dt2dv2/dt, and then select x1,v1,x2, and v2as state variables. Next form two of the state equations by solving Eq. (3.44) for dv1/dtand Eq. (3.45) for dv2/dt. Finally, add dx1/dtv1anddx2/dtv2to complete the set of state equations. Hence, dx1 dt v1 (3.46a) dv1 dt K M1x1 D M1v1K M1x2 (3.46b) dx2 dt v2 (3.46c) dv2 dtK M2x1  K M2x2 1 M2f t (3.46d) In vector-matrix form, _x1 _v1 _x2 _v22 666643 77775010 0  K=M 1 D=M1K=M10 000 1 K=M2 0  K=M202 666643 77775x 1 v1 x2 v22 666643 777750 0 0 1=M 22 666643 77775f t 3.47 where the dot indicates differentiation with respect to time. What is the output equation if the output is x(t)?D K f(t) FrictionlessM1 M2x1 x2 FIGURE 3.7 Translational mechanical system128 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:52 Skill-Assessment Exercise 3.1 PROBLEM: Find the state-space representation of the electrical network shown in Figure 3.8. The output is vo(t). ANSWER: _x1=C11=C1 1=C1  1=L 00 1=C2 0  1=C22 6643 775x0 102 6643 775v i t y001/C2/C3 x The complete solution is at www.wiley.com/college/nise . Skill-Assessment Exercise 3.2 PROBLEM: Represent the translational mechanical system shown in Figure 3.9 in state space, where x3(t) is the output. ANSWER: _z010000  1 10100 000100 01  1 110 0000010010  1 12 66666666643 7777777775z0 100 0 02 66666666643 7777777775f t y 000010/C2/C3 z where zx 1 _x1x2 _x2x3 _x3/C2/C3T The complete solution is at www.wiley.com/college/nise .vi(t) vo(t) ++ ––L C2C1 R FIGURE 3.8 Electric circuit for Skill-Assessment Exercise 3.1 f(t)1 kg1 N/m 1 N-s/m 1 N/m 1 N-s/m 1 kg 1 kgx1(t) x2(t) x3(t) FIGURE 3.9 Translational mechanical system for Skill-Assessment Exercise 3.23.4 Applying the State-Space Representation 129WEBC03 10/28/2014 16:49:53 3.5 Converting a Transfer Function to State Space In the last section, we applied the state-space representation to electrical and mechanical systems. We learn how to convert a transfer function representation to a state-spacerepresentation in this section. One advantage of the state-space representation is that itcan be used for the simulation of physical systems on the digital computer. Thus, if we wantto simulate a system that is represented by a transfer function, we must ﬁrst convert the transfer function representation to state space. Atﬁrst we select a set of state variables, called phase variables , where each subsequent state variable is de ﬁned to be the derivative of the previous state variable. In Chapter 5 we show how to make other choices for the state variables. Let us begin by showing how to represent a general, nth-order, linear differential equation with constant coef ﬁcients in state space in the phase-variable form. We will then show how to apply this representation to transfer functions. Consider the differential equation dny dtnan 1dn 1y dtn 1∙∙∙a1dy dta0yb0u 3.48 A convenient way to choose state variables is to choose the output, y(t), and its ( n 1) derivatives as the state variables. This choice is called the phase-variable choice . Choosing the state variables, xi, we get x1y (3.49a) x2dy dt(3.49b) x3d2y dt2(3.49c) ... xndn 1y dtn 1(3.49d) and differentiating both sides yields _x1dy dt(3.50a) _x2d2y dt2(3.50b) _x3d3y dt3(3.50c) ... _xndny dtn (3.50d) where the dot above the xsigniﬁes differentiation with respect to time. Substituting the de ﬁnitions of Eq. (3.49) into Eq. (3.50), the state equations are evaluated as130 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:54 _x1x2 (3.51a) _x2x3 (3.51b) ... _xn 1xn (3.51c) _xn a0x1 a1x2∙∙∙ an 1xnb0u (3.51d) where Eq. (3.51d) was obtained from Eq. (3.48) by solving for dny/dtnand using Eq. (3.49). In vector-matrix form, Eq. (3.51) become _x1 _x2 _x3 ... _xn 1 _xn2 666666666643 77777777775010000 ∙∙∙ 0 001000 ∙∙∙ 0 000100 ∙∙∙ 0 ... 000000 ∙∙∙ 1  a0 a1 a2 a3 a4 a5∙∙∙  an 12 666666666643 77777777775x 1 x2 x3 ... xn 1 xn2 666666666643 777777777750 0 0 ... 0 b 02 666666666643 77777777775u 3.52 Equation (3.52) is the phase-variable form of the state equations. This form is easily recognized by the unique pattern of 1 ’s and 0 ’s and the negative of the coefﬁ cients of the differential equation written in reverse order in the last row of the system matrix. Finally, since the solution to the differential equation is y(t), or x 1, the output equation is y100 ∙∙∙ 0/C2/C3x1 x2 x3 ... xn 1 xn2 6666666643 777777775 3.53 In summary, then, to convert a transfer function into state equations in phase-variable form, we ﬁrst convert the transfer function to a differential equation by cross-multiplying and taking the inverse Laplace transform, assuming zero initial conditions. Then we represent the differential equation in state space in phase-variable form. An example illustrates the process. Example 3.4 Converting a Transfer Function with a Constant Term in theNumeratorConverting a Transfer Function with a Constant Term inthe Numerator PROBLEM: Find the state-space representation in phase-variable form for the transfer function shown in Figure 3.10( a). SOLUTION: Step 1 Find the associated differential equation. Since C s R s24 s39s226s24 3.543.5 Converting a Transfer Function to State Space 131WEBC03 10/28/2014 16:49:55 cross-multiplying yields s39s226s24C s24R s 3.55 The corresponding differential equation is found by taking the inverse Laplace transform, assuming zero initial conditions: €c?9€c26_c24c24r 3.56 Step 2 Select the state variables. Choosing the state variables as successive derivatives, we get x1c (3.57a) x2_c (3.57b) x3€c(3.57c) Differentiating both sides and making use of Eq. (3.57) to ﬁnd _x1and _x2, and Eq. (3.56) to ﬁnd~c_x3, we obtain the state equations. Since the output is cx1, the combined state and output equations are _x1 x2 (3.58a) _x2 x3 (3.58b) _x3 24x1 26x2 9x324r (3.58c) ycx1 (3.58d) In vector-matrix form, _x1 _x2 _x32 643 7501 0 00 1  24  26  92 643 75x1 x2 x32 643 750 0 242 643 75r (3.59a) y100/C2/C3x1 x2 x32 435 (3.59b)R(s) C(s) 24 s3 + 9s2 + 26s + 24 (a) 24+ r(t) x3(t) x3(t) x2(t) x1(t)y(t) (b)9 26 24––– FIGURE 3.10 a.Transfer function; b.equivalent block diagram showing phase variables. Note: y tc t.132 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:55 The transfer function of Example 3.4 has a constant term in the numerator. If a transfer function has a polynomial in sin the numerator that is of order less than the polynomial in the denominator, as shown in Figure 3.11( a), the numerator and denominator can be handled separately. First separate the transfer function into two cascaded transfer functions, as shown in Figure 3.11( b); the ﬁrst is the denominator, and the second is just the numerator. Theﬁrst transfer function with just the denominator is converted to the phase-variable representation in state space as demonstrated in the last example. Hence, phase variable x1 is the output, and the rest of the phase variables are the internal variables of the ﬁrst block, as shown in Figure 3.11( b). The second transfer function with just the numerator yields Y sC s b2s2b1sb0X1 s 3.60 where, after taking the inverse Laplace transform with zero initial conditions, y tb2d2x1 dt2b1dx1 dtb0x1 3.61Notice that the third row of the system matrix has the same coef ﬁcients as the denominator of the transfer function but negative and in reverse order. At this point, we can create an equivalent block diagram of the system of Figure 3.10( a) to help visualize the state variables. We draw three integral blocks as shown in Figure 3.10( b) and label each output as one of the state variables, xi(t), as shown. Since the input to each integrator is xi(t), use Eqs. (3.58a), (3.58b), and (3.58c) to determine the combination of input signals to each integrator. Form and label each input. Finally, use Eq. (3.58d) to formand label the output, y tc t.T h e ﬁnal result of Figure 3.10( b) is a system equivalent to Figure 3.10( a) that explicitly shows the state variables and gives a vivid picture of the state-space representation. Students who are using MATLAB should now run ch3p1 through ch3p4in Appendix B. You will learn how to represent the system matrix A, the input matrix B, and the output matrix Cusing MATLAB. You will learn how to convert a transfer function to the state-space representation in phase-variable form. Finally, Example 3.4 will be solved using MATLAB. R(s) X1(s) 1 a3s3 + a2s2 + a1s + a0b2s2 + b1s + b0b2s2 + b1s + b0 a3s3 + a2s2 + a1s + a0 (a) (b)Internal variables: X2(s), X 3(s)C(s)R(s) C(s) FIGURE 3.11 Decomposing a transfer function3.5 Converting a Transfer Function to State Space 133WEBC03 10/28/2014 16:49:56 But the derivative terms are the de ﬁnitions of the phase variables obtained in the ﬁrst block. Thus, writing the terms in reverse order to conform to an output equation, y tb0x1b1x2b2x3 3.62 Hence, the second block simply forms a speci ﬁed linear combination of the state variables developed in the ﬁrst block. From another perspective, the denominator of the transfer function yields the state equations, while the numerator yields the output equation. The next example demonstrates the process. Example 3.5 Converting a Transfer Function with a Polynomial in theNumeratorConverting a Transfer Function with a Polynomial inthe Numerator PROBLEM: Find the state-space representation of the transfer function shown in Figure 3.12( a). R(s) X1(s) s2 + 7s + 21 s3 + 9s2 + 26s + 24 (b)Internal variables: X2(s), X 3(s)C(s)s2 + 7s + 2 s3 + 9s2 + 26s + 24 (a)R(s) C(s) 1 9 26 24+ r(t) (c)x3(t) x3(t) x2(t) x1(t)y(t)1 7 2+ ++ ––– FIGURE 3.12 a.Transfer function; b.decomposed transfer function; c.equivalent block diagram Note: y tc t.134 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:57 SOLUTION: This problem differs from Example3.4, since the numerator has a polynomial insinstead of just a constant term. Step 1 Separate the system into two cascaded blocks, as shown in Figure 3.12( b). The ﬁrst block contains the denominator and the second block contains the numerator. Step 2 Find the state equations for the block containing the denominator. We notice that the ﬁrst block ’s numerator is 1/24 that of Example 3.4. Thus, the state equations are the same except that this system’ s input matrix is 1/24 that of Example 3.4. Hence, the state equation is _x1 _x2 _x32 643 7501 0 00 1  24  26  92 643 75x1 x2 x32 643 750 0 12 643 75r 3.63 Step 3 Introduce the effect of the block with the numerator. The second block of Figure 3.12( b), where b21;b17, and b02, states that C s b2s2b1sb0X1 s s27s2X1 s 3.64 Taking the inverse Laplace transform with zero initial conditions, we get c€x17_x12x1 3.65 But, x1x1 _x1x2 €x1x3 Hence, yc tb2x3b1x2b0x1x3x22x1 3.66 Thus, the last box of Figure 3.11( b)“collects ”the states and generates the output equation. From Eq. (3.66), yb0b1b2/C2/C3x1 x2 x32 435271/C2/C3x 1 x2 x32435 3.67 Although the second block of Figure 3.12( b) shows differentiation, this block was implemented without differentiation because of the partitioning that was applied to the transfer function. The last block simply collected derivatives that were already formed by theﬁrst block. Once again we can produce an equivalent block diagram that vividly represents our state-space model. The ﬁrst block of Figure 3.12( b) is the same as Figure 3.10( a) except for the different constant in the numerator. Thus, in Figure 3.12( c) we reproduce Figure 3.10( b) except for the change in the numerator constant, which appears as a change in the input multiplying factor. The second block of Figure 3.12( b) is represented using Eq. (3.66), which forms the output from a linear combination of the state variables, as shown in Figure 3.12( c).TryIt 3.1 Use the following MATLAB statements to form an LTIstate-space representation from the transfer function shown in Figure 3.12(a). TheAmatrix and Bvector are shown in Eq. (3.63). The C vector is shown in Eq. (3.67). num=[1 7 2] ; den=[1 9 26 24] ; [A,B,C,D] =tf2ss... (num, den) ; P=[ 001 ; 010 ; 100 ] ; A=inv(P) *A*P B=inv(P) *B C=C*P3.5 Converting a Transfer Function to State Space 135WEBC03 10/28/2014 16:49:58 3.6 Converting from State Space to a Transfer Function In Chapters 2 and 3, we have explored two methods of representing systems: the transfer function representation and the state-space representation. In the last section, we united the two representations by converting transfer functions into state-space representations.Now we move in the opposite direction and convert the state-space representation into atransfer function. Given the state and output equations _xAxBu (3.68a) yCxDu (3.68b) take the Laplace transform assuming zero initial conditions: 8 sX sAX sBU s (3.69a) Y sCX sDU s (3.69b) Solving for X(s) in Eq. (3.69a), sI AX sBU s 3.70 or X s sI A 1BU s 3.71 where Iis the identity matrix. Substituting Eq. (3.71) into Eq. (3.69b) yields Y sC sI A 1BU sDU sC sI A 1BD/C2/C3 U s 3.72 We call the matrix C sI A 1BD/C2/C3 the transfer function matrix, since it relates the output vector, Y(s), to the input vector, U(s). However, if U sU sandY sY s are scalars, we can ﬁnd the transfer function, Thus,Skill-Assessment Exercise 3.3 PROBLEM: Find the state equations and output equation for the phase-variable repre- sentation of the transfer function G s2s1 s27s9. ANSWER: _x01  9  7/C20/C21 x0 1/C20/C21 r t y12/C2/C3 x The complete solution is at www.wiley.com/college.nise . 8The Laplace transform of a vector is found by taking the Laplace transform of each component. Since _xconsists of the derivatives of the state variables, the Laplace transform of _xwith zero initial conditions yields each component with the form sXi(s), where Xi(s) is the Laplace transform of the state variable. Factoring out the complex variable, s,i ne a c h component yields the Laplace transform of _xassX(s), where X(s) is a column vector with components Xi(s).136 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:49:59 T sY s U sC sI A 1BD 3.73 Let us look at an example. Example 3.6 State-Space Representation to Transfer FunctionState-Space Representation to Transfer Function PROBLEM: Given the system de ﬁned by Eq. (3.74), ﬁnd the transfer function, T sY s=U s, where U(s) is the input and Y(s) is the output. _x010 001  1  2  32 435x10 0 02 435u (3.74a) y100/C2/C3 x (3.74b) SOLUTION: The solution revolves around ﬁnding the term sI A  1in Eq. (3.73).9All other terms are already de ﬁned. Hence, ﬁrstﬁnd sI A: sI As00 0s0 00 s2 643 75 010 001  1  2  32 643 75s 10 0 s 1 12 s32 643 75 (3.75) Now form sI A 1: sI A 1adj sI A det sI A s23s2 s31  1 s s3 s  s   2s1s22 643 75 s33s22s1(3.76) Substituting sI A 1,B,C, and Dinto Eq. (3.73), where B10 0 02 6643 775 C100/C2/C3 D0 we obtain the ﬁnal result for the transfer function: T s10 s23s2 s33s22s1(3.77) 9See Appendix G. It is located at www.wiley.com/college/nise and discusses the evaluation of the matrix inverse.3.6 Converting from State Space to a Transfer Function 137WEBC03 10/28/2014 16:50:0 In Example 3.6, the state equations in phase-variable form were converted to transfer functions. In Chapter 5, we will see that other forms besides the phase-variable form can be used to represent a system in state space. The method of ﬁnding the transfer function representation for these other forms is the same as that presented in this section. 3.7 Linearization A prime advantage of the state-space representation over the transfer function representationis the ability to represent systems with nonlinearities, such as the one shown in Figure 3.13. The ability to represent nonlinear systems does not imply the ability to solve their state equations for the state variables and the output. Techniques do exist for the solution of somenonlinear state equations, but this study is beyond the scope of this course. However, inAppendix H, located at www.wiley.com/college/nise , you can see how to use the digital computer to solve state equations. This method also can be used for nonlinear state equations. If we are interested in small perturbations about an equilibrium point, as we were when we studied linearization in Chapter 2, we can also linearize the state equations aboutthe equilibrium point. The key to linearization about an equilibrium point is, once again, the Taylor series. In the following example, we write the state equations for a simple pendulum, showing that we can represent a nonlinear system in state space; then we linearize thependulum about its equilibrium point, the vertical position with zero velocity.Students who are using MATLAB should now run ch3p5 in Appendix B.You will learn how to convert a state-space representation to a transfer function using MATLAB. You can practice by writing a MATLAB program to solve Example 3.6. Students who are performing the MATLAB exercises and want toexplore the added capability of MATLAB’ s Symbolic Math Toolbox should now run ch3sp1 in Appendix F located at www.wiley.com/ college/nise . You will learn how to use the Symbolic Math Toolbox to write matrices and vectors. You will see that the SymbolicMath Toolbox yields an alternative way to use MATLAB to solveExample 3.6. Skill-Assessment Exercise 3.4 PROBLEM: Convert the state and output equations shown in Eq. (3.78) to a transfer function. _x 4 1:5 40/C20/C21 x2 0/C20/C21 u t (3.78a) y1:50 :625/C2/C3 x (3.78b) ANSWER: G s3s5 s24s6 The complete solution is located at www.wiley.com/college/nise .TryIt 3.2 Use the following MATLAB and the Control SystemToolbox statements to obtainthe transfer function shown in Skill-Assessment Exercise 3.4 from the state-spacerepresentation of Eq. (3.78). A=[ 4 1.5;4 0] ; B=[2 0] ’; C=[1.5 0.625] ; D=0; T=ss(A,B,C,D) ; T=tf(T)138 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:1 Bruce Frisch/S.S./Photo Researchers, Inc.FIGURE 3.13 Walking robots, such as Hannibal shown here, can be used to explore hostile environments and rough terrain, such as that found onother planets or inside volcanoes Example 3.7 Representing a Nonlinear SystemRepresenting a Nonlinear System PROBLEM: First represent the simple pendulum shown in Figure 3.14(a ) (which could be a simple model for the leg of the robot shown in Figure 3.13) in state space: Mgis the weight, Tis an applied torque in the θdirection, and Lis the length of the pendulum. Assume the mass is evenly distributed, with the center of mass at L/2. Then linearize the state equations about the pendulum ’s equilibrium point —the vertical position with zero angular velocity. SOLUTION: First draw a free-body diagram as shown in Figure 3.14( c). Summing the torques, we get Jd2θ dt2MgL 2sinθT 3.79 where Jis the moment of inertia of the pendulum around the point of rotation. Select the state variables x1andx2as phase variables. Letting x1θandx2dθ/dt, we write the state equations as( ) ( )( )MgT θ L2 Mg sin θTMgL 2d2θ dt2J ab cL2 θ θMg cos θsinθ Mg FIGURE 3.14 a.Simple pendulum; b.force components of Mg;c.free-body diagramVirtual Experiment 3.1 Rotary Inverted Pendulum Put theory into practice by simulating the linear and non-linearmodel of the Quanser Rotary Inverted Pendulum in LabVIEW. The behavior of an invertedpendulum is similar to a variety ofsystems, such as Segway transporters and human posture. Virtual experiments are found on Learning Space.3.7 Linearization 139WEBC03 10/28/2014 16:50:2 _x1x2 (3.80a) _x2 MgL 2Jsinx1T J(3.80b) where _x2d2θ/dt2is evaluated from Eq. (3.79). Thus, we have represented a nonlinear system in state space. It is interesting to note that the nonlinear Eqs. (3.80) represent a valid and complete model of the pendulum in state space even under nonzero initial conditions and even if parameters are time varying.However, if we want to apply classical techniques and convert these state equations to atransfer function, we must linearize them. Let us proceed now to linearize the equation about the equilibrium point, x 10;x20, that is, θ0a n d dθ/dt0. Let x1andx2be perturbed about the equilibrium point, or x10δx1 (3.81a) x20δx2 (3.81b) Using Eq. (2.182), we obtain sinx1 sin0d sinx1 dx1/C12/C12/C12/C12 x10δx1δx1 3.82 from which sinx1δx1 3.83 Substituting Eqs. (3.81) and (3.83) into Eq. (3.80) yields the following state equations: _δx1δx2 (3.84a) _δx2 MgL 2Jδx1T J(3.84b) which are linear and a good approximation to Eq. (3.80) for small excursions away from the equilibrium point. What is the output equation? Skill-Assessment Exercise 3.5 PROBLEM: Represent the translational mechanical system shown in Figure 3.15 in state space about the equilibrium displacement. The spring is nonlinear, where the relationshipbetween the spring force, f s(t), and the spring displacement, xs(t), is fs t2x2 s t. The applied force is f t10δf t,w h e r e δf(t) is a small force about the 10 N constant value. Assume the output to be the displacement of the mass, x(t). ANSWER: _x01  4ﬃﬃﬃ 5p 0"# x0 1"# δf t y10/C2/C3 x The complete solution is located at www.wiley.com/college/nise .x(t) f(t)Nonlinear spring 1 kg FIGURE 3.15 Nonlinear translational mechanical system for Skill-Assessment Exercise 3.5140 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:6 Case Studies Antenna Control: State-Space RepresentationAntenna Control: State-Space Representation We have covered the state-space representation of individual physical subsystems in this chapter. In Chapter 5, we will assemble individual subsystems into feedback controlsystems and represent the entire feedback system in state space. Chapter 5 also shows howthe state-space representation, via signal-ﬂow diagrams, can be used to interconnect these subsystems and permit the state-space representation of the whole closed-loop system. In the following case study, we look at the antenna azimuth position control system anddemonstrate the concepts of this chapter by representing each subsystem in state space. PROBLEM: Find the state-space representation in phase-variable form for each dynamic subsystem in the antenna azimuth position control system shown on the front endpapers, Conﬁguration 1 .B y dynamic , we mean that the system does not reach the steady state instantaneously. For example, a system described by a differential equation of ﬁrst order or higher is a dynamic system. A pure gain, on the other hand, is an example of anondynamic system, since the steady state is reached instantaneously. SOLUTION: In the case study problem of Chapter 2, each subsystem of the antenna azimuth position control system was identi ﬁed. We found that the power ampli ﬁer and the motor and load were dynamic systems. The preampli ﬁer and the potentiometers are pure gains and so respond instantaneously. Hence, we will ﬁnd the state-space representations only of the power ampli ﬁer and of the motor and load. Power ampli ﬁer: The transfer function of the power ampli ﬁer is given on the front endpapers as G s100 = s100. We will convert this transfer function to its state-space representation. Letting v p(t) represent the power ampli ﬁer input and ea(t)r e p r e s e n t the power ampliﬁ er output, G sEa s Vp s100 s100 3.85 Cross-multiplying, s100Ea s100Vp s, from which the differential equation can be written as dea dt100ea100vp t 3.86 Rearranging Eq. (3.86) leads to the state equation with eaas the state variable: dea dt 100ea100vp t 3.87 Since the output of the power ampli ﬁer is ea(t), the output equation is yea 3.88 Motor and load: We now ﬁnd the state-space representation for the motor and load. We could of course use the motor and load block shown in the block diagram on the front endpapers to obtain theresult. However, it is more informative to derive the state-space representation directlyfrom the physics of the motor without ﬁrst deriving the transfer function. The elements ofCase Studies 141WEBC03 10/28/2014 16:50:7 the derivation were covered in Section 2.8 but are repeated here for continuity. Starting with Kirchhoff ’s voltage equation around the armature circuit, we ﬁnd ea tia tRaKbdθm dt 3.89 where ea(t) is the armature input voltage, ia(t) is the armature current, Rais the armature resistance, Kbis the armature constant, and θmis the angular displacement of the armature. The torque, Tm(t), delivered by the motor is related separately to the armature current and the load seen by the armature. From Section 2.8, Tm tKtia tJmd2θm dt2Dmdθm dt 3.90 where Jmis the equivalent inertia as seen by the armature, and Dmis the equivalent viscous damping as seen by the armature. Solving Eq. (3.90) for ia(t) and substituting the result into Eq. (3.89) yields ea tRaJm Kt/C18/C19d2θm dt2DmRa KtKb/C18/C19dθm dt 3.91 Deﬁning the state variables x1andx2as x1θm (3.92a) x2dθm dt(3.92b) and substituting into Eq. (3.91), we get ea tRaJm Kt/C18/C19dx2 dtDmRa KtKb/C18/C19 x2 3.93 Solving for dx2/dtyields dx2 dt 1 JmDmKtKb Ra/C18/C19 x2Kt RaJm/C18/C19 ea t 3.94 Using Eqs. (3.92) and (3.94), the state equations are written as dx1 dtx2 (3.95a) dx2 dt 1 JmDmKtKb Ra/C18/C19 x2Kt RaJm/C18/C19 ea t (3.95b) The output, θo(t), is 1/10 the displacement of the armature, which is x1. Hence, the output equation is y0:1x1 3.96 In vector-matrix form, _x01 0 1 JmDmKtKb Ra/C18/C192 643 75x0 Kt RaJm"# ea t (3.97a) y0:10/C2/C3 x (3.97b)142 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:8 But from the case study problem in Chapter 2, Jm0:03 and Dm0:02. Also, Kt=Ra0:0625 and Kb0:5. Substituting the values into Eq. (3.97a), we obtain the ﬁnal state-space representation: _x01 0 1:71/C20/C21 x0 2:083/C20/C21 ea t (3.98a) y0:10/C2/C3 x (3.98b) CHALLENGE: You are now given a problem to test your knowledge of this chapter’ s objectives. Referring to th e antenna azimuth position control system shown on the front endpapers, ﬁnd the state-space representati on of each dynamic subsystem. Use Conﬁguration 2. Pharmaceutical Drug AbsorptionPharmaceutical Drug Absorption An advantage of state-space representation over the transfer function representation is the ability to focus on component parts of a system and write nsimultaneous, ﬁrst-order differential equations rather than attempt to represent the system as a single, nth-order differential equation, as we have done with the transfer function.Also, multiple-input, multiple-output systems can be conveniently represented in state space. This case study demonstrates both of these concepts. PROBLEM: In the pharmaceutical industry we want to describe the distribution of a drug in the body. A simple model divides the process into compartments: the dosage, the absorption site,the blood, the peripheral compartment, and the urine. The rate ofchange of the amount of a drug in a compartment is equal to theinput ﬂow rate diminished by the output ﬂow rate. Figure 3.16 summarizes the system. Here each x iis the amount of drug in that particular compartment ( Lordi ,1972 ). Represent the system in state space, where the outputs are the amounts of drug in each compartment. SOLUTION: Theﬂow rate of the drug into any given compartment is proportional to the concentration of the drug in the previous compartment, and the ﬂow rate out of a given compartment is proportional to the concentration of the drug in its own compartment. We now write the ﬂow rate for each compartment. The dosage is released to the absorption site at a rate proportional to the dosage concentration, or dx1 dt K1x1 3.99 Theﬂow into the absorption site is proportional to the concentration of the drug at the dosage site. The ﬂow from the absorption site into the blood is proportional to the concentration of the drug at the absorption site. Hence, dx2 dtK1x1 K2x2 3.100  Similarly, the net ﬂow rate into the blood and peripheral compartment is dx3 dtK2x2 K3x3K4x4 K5x3 3.101  dx4 dt K5x3 K4x4 3.102 x1DosageAbsorption site Blood Urine x2 x3 x5 x4 Peripheral compartment FIGURE 3.16 Pharmaceutical drug-level concentrations in a humanCase Studies 143WEBC03 10/28/2014 16:50:9 where K4x4 K5x3is the net ﬂow rate into the blood from the peripheral compartment. Finally, the amount of the drug in the urine is increased as the blood releases the drug to the urine at a rate proportional to the concentration of the drug in the blood. Thus, dx5 dtK3x3 3.103  Equations (3.99) through (3.103) are the state equations. The output equation is a vector that contains each of the amounts, xi. Thus, in vector-matrix form, _x K 1 000 0 K1 K 2 00 0 0 K2  K3K5 K40 00 K5  K 40 00 K3 002 66666643 7777775x (3.104a) y10000 010000010000010 000012 66666643 7777775x (3.104b) You may wonder how there can be a solution to these equations if there is no input. In Chapter 4, when we study how to solve the state equations, we will see that initial conditions will yield solutions without forcing functions. For this problem, an initial condition on theamount of dosage, x 1, will generate drug quantities in all other compartments. CHALLENGE: We now give you a problem to test your knowledge of this chapter ’s objectives. The problem concerns the storage of water in aquifers. The principles are similarto those used to model pharmaceutical drug absorption. Underground water supplies, called aquifers, are used in many areas for agricultural, industrial, and residential purposes. An aquifer system consists of a number of interconnectednatural storage tanks. Natural water ﬂows through the sand and sandstone of the aquifer system, changing the water levels in the tanks on its way to the sea. A water conservation policycan be established whereby water is pumped between tanks to prevent its loss to the sea. A model for the aquifer system is shown in Figure 3.17. In this model, the aquifer is represented by three tanks, with water level h icalled the head . Each qnis the natural water q21 = G21(H1–h1) q2 = G2(h2–h1) q3 = G3(h3–h2)q1 = G1h1qi1 qi2 qo2 qi3 qo3 h3 h2 h1 FIGURE 3.17 Aquifer system model144 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:9 Summary This chapter has dealt with the state-space representation of physical systems, which took the form of a state equation, _xAxBu 3.105  and an output equation, yCxDu 3.106  fortt0, and initial conditions x(t0). Vector xis called the state vector and contains variables, called state variables . The state variables can be combined algebraically with the input to form the output equation, Eq. (3.106), from which any other system variables can befound. State variables, which can represent physical quantities such as current or voltage, arechosen to be linearly independent. The choice of state variables is not unique and affectshow the matrices A, B, C , and Dlook. We will solve the state and output equations for xand yin Chapter 4. In this chapter, transfer functions were represented in state space. The form selected was the phase-variable form, which consists of state variables that are successive derivativesof each other. In three-dimensional state space, the resulting system matrix, A,f o rt h e phase-variable representation is of the form 010 001  a 0 a1 a22 435 3.107  where the a i’s are the coef ﬁcients of the characteristic polynomial or denominator of the system transfer function. We also discussed how to convert from a state-space representation to a transfer function. In conclusion, then, for linear, time-invari ant systems, the state-space representation is simply another way of mathematically modeling them. One major advantage of applyingﬂow to the sea and is proportional to the difference in head between two adjoining tanks, orq nGn hn hn 1, where Gnis a constant of proportionality and the units of qnare m3/yr. The engineered ﬂow consists of three components, also measured in m3/yr: (1) ﬂow from the tanks for irrigation, industry, and homes, qon; (2) replenishing of the tanks from wells, qin; and (3) ﬂow, q21, created by the water conservation policy to prevent loss to the sea. In this model, water for irrigation and industry will be taken only from Tank 2 andTank 3. Water conservation will take place only between Tank 1 and Tank 2, as follows. LetH 1be a reference head for Tank 1. If the water level in Tank 1 falls below H1, water will be pumped from Tank 2 to Tank 1 to replenish the head. If h1is higher than H1, water will be pumped back to Tank 2 to prevent loss to the sea. Calling this ﬂow for conservation q21, we can say this ﬂow is proportional to the difference between the head of Tank 1, h1, and the reference head, H1,o rq21G21 H1 h1. The net ﬂow into a tank is proportional to the rate of change of head in each tank. Thus, Cndhn=dtqin qonqn1 qnq n1n qn n 1 (Kandel ,1973 ). Represent the aquifer system in state space, where the state variables and the outputs are the heads of each tank.Summary 145WEBC03 10/28/2014 16:50:9 the state-space representation to such linear systems is that it allows computer simulation. Programming the system on the digital computer and watching the system ’s response is an invaluable analysis and design tool. Simulation is covered in Appendix H located at www.wiley.com/college/nise . Review Questions 1.Give two reasons for modeling systems in state space. 2.State an advantage of the transfer function approach over the state-space approach. 3.Deﬁne state variables . 4.Deﬁne state. 5.Deﬁne state vector . 6.Deﬁne state space . 7.What is required to represent a system in state space? 8.An eighth-order system would be represented in state space with how many stateequations? 9.If the state equations are a system of ﬁrst-order differential equations whose solution yields the state variables, then the output equation performs what function? 10.What is meant by linear independence ? 11.What factors in ﬂuence the choice of state variables in any system? 12.What is a convenient choice of state variables for electrical networks? 13.If an electrical network has three energy-storage elements, is it possible to have a state-space representation with more than three state variables? Explain. 14.What is meant by the phase-variable form of the state equation? Problems 1.Represent the electrical network shown in Figure P3.1 in state space, where vo(t) is the output. [Section: 3.4] 1 Ω + vi(t) 0.5 F vo(t) –+–3 Ω 1 Ω 2 H 1 H FIGURE P3.1 2.Represent the electrical network shown in Figure P3.2 instate space, where i R(t) is the output. [Section: 3.4] 3 Ω 3 Fv1(t) 4v1(t)3 Ω vi(t)2 H iR(t)+– FIGURE P3.23.Find the state-space representation of the network shownin Figure P3.3 if the output is v o(t). [Section: 3.4] vo(t)+ vi(t) 1 F1 H2 Ω 2 Ω –i3(t) i2(t) i1(t)+–1 F FIGURE P3.3 4.Represent the system shown in Figure P3.4 in state spacewhere the output is x 3(t). [Section: 3.4]146 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:10 fv2 = 1 N-s/mfv3 = 1 N-s/m fv1 = 1 N-s/mfv4 = 1 N-s/m fv5 = 1 N-s/ m K = 2 N/mM3 = 1 kg M2 = 1 kg M1 = 2 kg x1(t) x2(t)f (t)x3(t) Frictionless FIGURE P3.4 5.Represent the translational mechanical system shown in Figure P3.5 in state space, where x1(t) is the output. [Section: 3.4] f(t)x2(t) x3(t) x1(t)fv1= 1 N-s/m fv2=1 N - s / m M1=1 k gM2= 2 kgM3= 1 kg K1= 1 N/m K2= 1 N/m fv3= 1 N-s/m FIGURE P3.5 6.Represent the rotational mechanical system shown in Figure P3.6 in state space, where θ1(t) is the output. [Section: 3.4] N2 = 100 100 N-m/rad 100 N-m-s/rad100 kg-m2N1 = 30T(t) θ1(t) 50 kg-m2 FIGURE P3.6 7.Represent the system shown in Figure P3.7 in state space where the output is θL(t). [Section: 3.4] 2 N-m/rad 3 N-m-s/rad N-m/rad 200 N-m-s/radT(t) θL(t) N4= 100N2= 300N1=3 0 N3=1 0 1 10 FIGURE P3.78.Show that the system of Figure 3.7 in the text yields a fourth-order transfer function if we relate the displacement of either mass to the applied force, and athird-order one if we relate the velocity of either mass tothe applied force. [Section: 3.4] 9.Find the state-space representation in phase-variable form for each of the systems shown in Figure P3.8. [Section: 3.5] R(s) 30 s5 + 8s4 + 9s3 + 6s2 + s + 30 C(s) (b)100 s4+2 0s3+1 0s2+7s+ 100C(s) R(s) (a) FIGURE P3.8 10.Repeat Problem 9 using MATLAB.[Section: 3.5] 11.For each system shown in Figure P3.9, write the stateequations and the output equation for the phase-variablerepresentation. [Section: 3.5] s5+9s4+1 3s3+8s2s4+2s3+1 2s2+7s+6C(s) R(s) (b)R(s) 8s + 10 s4 + 5s3 + s2 + 5s + 13C(s) (a) FIGURE P3.9 12.Repeat Problem 11 using MATLAB.[Section: 3.5] 13.Represent the following transfer function in state space. Give your answer in vector-matrix form. [Section: 3.5] T ss s2 s1 s22s5 14.Find the transfer function G sY s=R sfor each of the following systems represented in state space:[Section: 3.6] a._x010 001  3  2  52 66643 7775x0 0 102 66643 7775r y100/C2/C3 xProblems 147WEBC03 10/28/2014 16:50:10 b. _x2 3  8 053  3  5  42 6643 775x1 4 62 6643 775r y136/C2/C3 x c. _x3 52 1 87  3  622 6643 775x5  3 22 6643 775r y1 43/C2/C3 x Use MATLAB to ﬁnd the transfer function, G(s)=Y(s)/R(s), for eachofthefollowingsystemsrepresented in state space: [Section: 3.6] a._x0150 00100001  7  9  2  32 6666643 777775x0 58 22 6666643 777775r y1366/C2/C3 x b. _x31 0 4  2  35  52  1 01  128  76  3 40  60 4 312 6666666643 777777775x2 7 85 42 6666666643 777777775r y1 2  97 6/C2/C3 x Repeat Problem 15 using MATLAB, the Symbolic Math Toolbox, andEq. (3.73). [Section: 3.6] 17.A missile in ﬂight, as shown in Figure P3.10, is subject to four forces: thrust, lift, drag, and gravity. Themissile ﬂies at an angle of attack, α, from its longitu- dinal axis, creating lift. For steering, the body anglefrom vertical, ϕ, is controlled by rotating the engine at the tail. The transfer function relating the body angle,ϕ, to the angular displacement, δ, of the engine is of the form Φ s δ sKasKb K3s3K2s2K1sK0ThrustLift DragVertical Velocity c. g.ϕ α δ FIGURE P3.10 Missile Represent the missile steering control in state space. [Section: 3.5] 18.Given the dc servomotor and load shown in Figure P3.11,represent the system in state space, where the statevariables are the armature current, i a, load displacement, θL, and load angular velocity, ωL. Assume that the output is the angular displacement of the armature. Do notneglect armature inductance. [Section: 3.4] N2 DLArmatureFixed field JLθL(t)N1θm(t)La Ra ea(t) ia(t)+ – FIGURE P3.11 Motor and load 19.Consider the mechanical system of Figure P3.12. If thespring is nonlinear, and the force, F s, required to stretch the spring is Fs2x2 1, represent the system in state space linearized about x11 if the output is x2. [Section: 3.7] 2 N-s/m f(t) 1 kg 2 kgFs = 2x 12 Nx2(t) x1(t) FIGURE P3.12 Nonlinear mechanical system 20.Image-based homing for robots can be implemented by generating heading command inputs to a steering systembased on the following guidance algorithm. Suppose therobot shown in Figure P3.13( a) is to go from point Rto a target, point T, as shown in Figure P3.13( b). IfR x,Ry, and Rzare vectors from the robot to each landmark, X,Y,Z, respectively,and Tx,Ty,andTzarevectorsfromthetarget to each landmark, respectively, then heading commands148 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:11 would drive the robot to minimize Rx Tx;Ry Ty; andRz Tzsimultaneously, since the differences will be zero when the robot arrives at the target ( Hong ,1992 ). If Figure P3.13( c) represents the control system that steers the robot, represent each block —the controller, wheels, and vehicle —in state space. An animation PowerPoint presentation (PPT) demonstrating this system is available for instructors at www.wiley.com/college/nise. SeeRobot . [Section: 3.5] X ZY Heading commandHeading errorSteering commandWheel angleActual headingController + –K1(s + a) (s + b)Wheels c s + cVehicle (c)(b)RT Rx RzRy TzTxTy RobotCameraSpherical mirror (a) 1 s FIGURE P3.13 a.Robot with television imaging system;10 b.vector diagram showing concept behind image-based homing;10 c.heading control system 21.Modern robotic manipulators that act directly upon their target environments must be controlled so that impact forces as well as steady-state forces do not damage thetargets. At the same time, the manipulator must providesufﬁcient force to perform the task. In order to develop a controlsystemtoregulatetheseforces,theroboticmanip-ulator and target environment must be modeled. Assum-ing the model shown in Figure P3.14, represent in statespace the manipulator and its environment under the following conditions ( Chiu ,1997 ). [Section: 3.5] 1 N/m 1 N/m1 N/m 1 N-s/m 1 N-s/m 1 N-s/m 1 N-s/m1 N/m 1 N/m u(t) 1 kg 1 kg 1 kgContact point Manipulator Sensor Internal force modelEnvironment FIGURE P3.14 Robotic manipulator and target environment11a.The manipulator is not in contact with its targetenvironment. b.The manipulator is in constant contact with its target environment. 22.In the past, Type-1 diabetes patients had to injectthemselves with insulin three to four times a day.New delayed-action insulin analogues such as insulinGlargine require a single daily dose. A similar procedure to the one described in the Pharmaceutical Drug Absorption case study of this chapter is used to ﬁnd a model for the concentration-time evolution of plasma for insulinGlargine. For a speci ﬁc patient, state-space model matrices are given by ( Tarín ,2007 ) A 0:435 0 :209 0 :02 0:268  0:394 0 0:227 0  0:022 643 75;B1 002 643 75; C0:0003 0 0/C2/C3 ;D0 where the state vector is given by xx 1 x2 x32 435: The state variables are x 1insulin amount in plasma compartment x2insulin amount in liver compartment x3insulin amount in interstitial in body tissue  compartment The system ’s input is uexternal insulin flow. The system ’s output is yplasma insulin concentration. a.Find the system ’s transfer function. b.Verify your result using MATLAB. 23.A linear, time-invariant model of the hypothalamic-pituitary-adrenal axis of the endocrine system withﬁve state variables has been proposed as follows(Kyrylov ,2005 ): dx0 dta00x0a02x2d0 dx1 dta10x0a11x1a12x2 dx2 dta20x0a21x1a22x2a23x3a24x4 dx3 dta32x2a33x3 dx4 dta42x2a44x410Hong, J.; Tan, X.; Pinette, B.; Weiss, R.; and Riseman, E. M. Image-Based Homing, IEEE Control Systems , Feb. 1992, pp. 38 –45.1992 IEEE. 11Based on Chiu, D. K., and Lee, S. Design and Experimentation of a Jump Impact Controller. IEEE Control Systems , June 1997, Figure 1, p. 99. 1997 IEEE.Problems 149WEBC03 10/28/2014 16:50:12 where each of the state variables represents circulatory concentrations as follows: x0corticotropin-releasing hormone x1corticotropin x2free cortisol x3albumin-bound cortisol x4corticosteroid-binding globulin d0an external generating factor Express the system in the form _xAxBu. 24.In this chapter, we described the state-space representationof single-input, single-output systems. In general, systems can have multiple inputs and multiple outputs. An autopilotis to be designed for a submarine as shown in Figure P3.15to maintain a constant depth under severe wave distur- bances. We will see that this system has two inputs and twooutputs and thus the scaler ubecomes a vector, u,a n dt h e scaler ybecomes a vector, y, in the state equations. FIGURE P3.1512 It has been shown that the system ’s linearized dynamics under neutral buoyancy and at a given constant speedare given by ( Liceaga-Castro, 2009 ): _xAxBu yCx where xw q z θ2 666643 77775;yz θ"# ;uδ B δS"#A 0:038 0 :896 0 0 :0015 0:0017  0:092 0  0:0056 10 0  3:086 01 0 02 66666643 7777775; B 0:0075  0:023 0:0017  0:0022 00 002 66666643 7777775;C0010 0001"# and where wthe heave velocity qthe pitch rate zthe submarine depth θthe pitch angle δ Bthe bow hydroplane angle δSthe stern hydroplane angle Since this system has two inputs and two outputs, four transfer functions are possible. a.Use MATLAB to calculate the system ’s matrix transfer function. b.Using the results from Part a, write the transfer functionz s δB s;z s δS s;θ s δB s;andθ s δS s. 25.Experiments to identify p recision grip dynamics between the index ﬁnger and thumb have been performed using a ball-drop experiment. A subjectholds a device with a small receptacle into which anobject is dropped, and the response is measured(Fagergren ,2000 ). Assuming a step input, it has been found that the response of the motor subsystemtogether with the sensory system is of the form G s Y s R ssc s2asb sd Convert this transfer function to a state-space representation. 26.State-space representations are, in general, not unique. One system can be represented in several possible ways. For example, consider the following systems: a. _x 5x3u y7x12Liceaga-Castro E., van der Molen G.M. Submarine H ∞Depth Control Under Wave Disturbances. IEEE Trans. on Control Systems Technology , Vol. 3 No. 3, 1995. Figure 1, p. 339.150 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:13 b. _x1 _x2"#  50 0 1"# x1 x2"# 31"# u y70/C2/C3 x 1 x2"# c. _x1 _x2"#  50 0 1"# x1 x2"# 30"# u y73/C2/C3 x 1 x2"# Show that these systems will result in the same transfer function. We will explore this phenomenon in more detail in Chapter 5. 27.Figure P3.16 shows a schematic description of the globalcarbon cycle ( Li,). In the ﬁgure, m A(t)r e p r e s e n t st h e amount of carbon in gigatons (GtC) present in theatmosphere of earth; m V(t) the amount in vegetation; ms(t) the amount in soil; mSO(t) the amount in surface ocean; and mIDO(t) the amount in intermediate and deep- ocean reservoirs. Let uE(t) stand for the human generated CO 2emissions (GtC/yr). From the ﬁgure, the atmospheric mass balance in the atmosphere can be expressed as: dmA dt tuE t  kO1kL1mA tkL2mV t kO2mSO tkL4mS t where the k ’s are exchange coefﬁ cients (yr 1). a.Write the remaining reservoir mass balances. Namely, write equations fordmSO t dt;dmIDO t dt;dmV t dt; anddmS t dt b.Express the system in state-space form. Atmosphere Surface ocean Intermediate and deep ocean Ocean sinkVegetation Soil Land sinkmV mSmA mSO mIDOkL2 kL1 kL4 kO1 kO2 kO3 kO4kL3uE (t ) FIGURE P3.16 Global carban cycle1328.Given the photovoltaic system described in Problem 65 in Chapter 2 ( Agee, 2012 ) and de ﬁning the following state variables, system input and output as yx1θm; x2_θm;x3ia,a n du ea, write a state-space representation of the system in the form _xAxBu; yCx. 29.A single-pole oil cylinder valve contains a spool that regulates hydraulic pressure, which is then applied to apiston that drives a load. The transfer function relatingpiston displacement, X p sto spool displacement from equilibrium, Xv s, is given by ( Qu, 2010 ): G sXp s Xv sKqω2 h=A1 s s22ςωhsω2 h where A1effective area of a the valve ’sc h a m b e r , Kqrate of change of the load ﬂow rate with a change in displacement, and ωhthe natural fre- quency of the hydraulic system. Find the state-space representation of the system , where the state variables are the phase variables associated with the piston. 30.Figure P3.17 shows a free-body diagram of aninverted pendulum, mounted on a cart with a mass,M. The pendulum has a point mass, m, concentrated at the upper end of a rod with zero mass, a length, l,a n da frictionless hinge. A motor drives the cart, applying ahorizontal force, u(t). A gravity force, mg,a c t so n mat all times. The pendulum angle relative to the y-axis, θ, its angular speed, _θ ´, the horizontal position of the cart, x,a n di t ss p e e d , x´, were selected to be the state variables. The state-space equations derived wereheavily nonlinear. 14They were then linearized around the stationary point, x0=0andu0=0, and manipulated to yield the following open-loop model written inperturbation form: d dtδxAδxBδu However, since x0=0andu0=0, then let: xx0δx δxanduu0δuδu. Thus the state equation may be rewritten as ( Prasad ,2012 ): _xAxBu where A01 0 0 Mmg Ml000 00 0 1  mg M0002 666643 77775andB0  1 Ml 0 1 M2 6666643 777775 14As noted in the introduction to Section 3.7, the techniques for solving such nonlinear state equations are beyond the scope of this course.13Li, S., Jarvis, A.J., and Leedal, D.T. Are response function representa- tions of the global carbon cycle ever interpretable? Tellus , vol. 61B, 2009, pp. 361 –371. (Fig. 1 p. 363).Problems 151WEBC03 10/28/2014 16:50:16 Assuming the output to be the horizontal position of mxmxlsinθxlθfor a small angle, θ, the output equation becomes: ylθxCxl010/C2/C3θ _θ x _x2 66643 7775 Given that: M=2.4 kg, m=0.23 kg, l=0.36 m, g=9.81 m/s2, use MATLAB to ﬁnd the transfer function, G(s)= Y( s)/U(s)=Xm(s)/U(s). lsinθ lcosθθm mg 0xy x u MPl FIGURE P3.17 Motor-driven inverted pendulum cart system15 PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 31.Control of HIV/AIDS. Problem 67 in Chapter 2 introduced a model for HIV infection. If retroviral drugs, RTIsandPIs asdiscussed in Problem22in Chapter1,areused, the model is modi ﬁed as follows ( Craig ,2004 ): dT dts dT  1 u1βTv dT* dt 1 u1βTv μT* dv dt 1 u2kT* cv where 0 u11, 0u21 represent the effectiveness of the RTI and PI medication, respectively. a.Obtain a state-space representation of the HIV/AIDSmodel by linearizing the equations about the T 0;T* 0;v0cμ βk;s μ cd βk;sk cμ d β/C18/C19equilibrium with u10u200. This equilibrium represents the asymptomatic HIV-infected patient. Note that each one of the above equations is of theform _x ifi xi;u1;u2;i1;2;3. b.If Matrices AandBare given by A@f1 @x1@f1 @x2@f1 @x3 @f2 @x1@f2 @x2@f2 @x3 @f3 @x1@f3 @x2@f3 @x32 6666666643 777777775 T0;T* 0;v0; B@f1 @u1@f1 @u2 @f2 @u1@f2 @u2 @f3 @u1@f3 @u22 6666666643 777777775 T0;T* 0;v0 and we are interested in the number of free HIV viruses as the system ’s output, C001/C2/C3 show that A  dβv0 0 βT0 βv0  μβ T0 0 k  c2 643 75;BβT0v0 0  βT0v0 0 0  kT* 02 643 75 c.Typical parameter values and descriptions for the HIV/AIDS model are shown in the following table. Substitute the values from the table into your model and write as _xAxBu yCx Table of HIV/AIDS Model Parameters16 32.Hybrid vehicle. For Problem 23 in Chapter 1 we developed the functional block diagrams for thecruise control of serial, parallel, and split-powertTime days dDeath of uninfected T cells 0.02/day kRate of free viruses produced per infected T cell100 counts/cell sSource term for uninfected T cells 10/mm3/day βInfectivity rate of free virus particles 2: 410 5/mm3/day cDeath rate of viruses 2.4/day μDeath rate of infected T cells 0.24/day 15Prasad, L., Tyagi, B.,and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Sympo- sium, 2012, pp. 138 –143. Figure 1 p. 139. Reproduced with permission of IEEE in the format Republish in a book via Copyright Clearance Center.16Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education Into the Electrical Engineering Curriculum at the University of Pretoria.IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Table II, p. 67. Modelling Symposium (AMS), 2012 Sixth Asia by IEEE. Reproduced with permission of IEEE in the format Republish in a book via Copyright Clearance Center.152 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:16 hybrid electric vehicles (HEV). Those diagrams showed that the engine or electric motor or bothmay propel the vehicle. When electric motors are thesole providers of the motive force, the forward paths of all HEV topologies are similar. In general, such a forward path can be represented ( Preitl, 2007)b ya block diagram similar to the one of Figure P3.18. Assume the motor to be an armature-controlled dc motor. In this diagram, K Ais the power ampli ﬁer gain; Ge(s) is the transfer function of the motor electric circuit and consists of a series inductor and resistor, LaandRa, respectively; Ktis the motor torque constant; Jtot, is the sum of the motor inertia, Jm, the inertias of the vehicle, Jveh, and the two driven wheels, Jw, both of which are re ﬂected to the motor shaft; kfis the coef ﬁcient of viscous friction; and kbis the back emf constant. The input variables are uc(t), the command voltage from the electronic control unit and Tc(t), the load torque. The output variables in this blockdiagram are the motor angular speed, ω(t), and its armature current, I a(t).a.Write the basic time-domain equations that charac-terize the relationships between the state, input, andoutput variables for the block diagram of FigureP3.18, given that the state variables are the motor armature current, I a(t), and angular speed, ω(t). b.Write the resulting state-space equations and then represent them in matrix form. Regard the loadtorque T c(t) as an extra input to the system. Thus, in your resulting state-space representation, the systemwill have two inputs and two outputs. 33.Parabolic trough collector. A transfer function model fromﬂuidﬂow to ﬂuid temperature for a parabolic trough collector was introduced in Problem 69, Chapter 2. A moredetailed model for the response of this system is givenunder speci ﬁc operation conditions ( Camacho, 2012 )b y : H Q s137:210 6 s20:0224 s19610 6e 39s Find an appropriate state-space representation for thesystem.Angular speed, ω(t)Motive torque, T(t) s Jtot1 +_ _Vehicle dynamics kfLoad torque, Tc(t) kbFrictiontorque, Tf(t)Δu(t) Ge(s) KAControl command, uc(t) KtArmature current, Ia(t) Ia(t)Amplifier output voltage, ua(t) Back emf, eb(t)_+ FIGURE P3.18 Block diagram representation of an HEV forward path17 Cyber Exploration Laboratory Experiment 3.1 Objectives To learn to use MATLAB to (1) generate an LTI state-space representation of a system and (2) convert an LTI state-space representation of a system to an LTI transfer function. Minimum Required Software Packages MATLAB and the Control System Toolbox17Preitl, Z., Bauer, P., and J. Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. 4th International Symposium on Applied Computational Intelligence and Informatics. IEEE, 2007. Adapted from Figure 2, p. 2Cyber Exploration Laboratory 153WEBC03 10/28/2014 16:50:16 Prelab 1.Derive the state-space representation of the translational mechanical system shown in Skill-Assessment Exercise 3.2 if you have not already done so. Consider the output tobex 3(t). 2.Derive the transfer function,X3 s F s, from the equations of motion for the translational mechanical system shown in Skill-Assessment Exercise 3.2. Lab 1.Use MATLAB to generate the LTI state-space representation derived in Prelab 1. 2.Use MATLAB to convert the LTI state-space representation found in Lab 1 to the LTItransfer function found in Prelab 2. Postlab 1.Compare your transfer functions as found from Prelab 2 and Lab 2. 2.Discuss the use of MATLAB to create LTI state-space representations and the use of MATLAB to convert these representations to transfer functions. Experiment 3.2 Objectives To learn to use MATLAB and the Symbolic Math Toolbox to (1) ﬁnd a symbolic transfer function from the state-space representation and (2) ﬁnd a state-space representation from the equations of motion. Minimum Required Software Packages MATLAB, the Symbolic Math Toolbox, and the Control System Toolbox Prelab 1.Perform Prelab 1 and Prelab 2 of Experiment 3.1 if you have not already done so. 2.Using the equation T sC sI A 1Btoﬁnd a transfer function from a state-space representation, write a MATLAB progr am using the Symbolic Math Toolbox to ﬁnd the symbolic transfer function from the state-s pace representation o f the translational mechanical system shown in Skill-Assess ment Exercise 3.2 and found as a step in Prelab 1. 3.Using the equations of motion of the translational mechanical system shown in Skill-Assessment Exercise 3.2 and found in Prelab 1, write a symbolic MATLABprogram to ﬁnd the transfer function, X3 s F s, for this system. Lab 1.Run the programs composed in Prelabs 2 and 3 and obtain the symbolic transferfunctions by the two methods. Postlab 1.Compare the symbolic transfer function obtained from T sC sI A 1Bwith the symbolic transfer function obtained from the equations of motion. 2.Discuss the advantages and disadvantages between the two methods. 3.Describe how you would obtain an LTI state-space representation and an LTI transferfunction from your symbolic transfer function. Experiment 3.3 Objectives To learn to use LabVIEW to (1) generate state-space representations of transfer functions, (2) generate transfer f unctions from state-space representations, and (3) verify that there are mu ltiple state-space representa tions for a transfer function.154 Chapter 3 Modeling in the Time DomainWEBC03 10/28/2014 16:50:16 Bibliography Agee, J. T., and Jimoh, A. A. Flat controller design for hardware-cost reduction in polar-axis photovoltaic systems. Solar Energy , vol. 86, pp. 452 –462, 2012. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Carlson, L. E., and Griggs, G. E. Aluminum Catenary System Quarterly Report . Technical Report Contract Number DOT-FR-9154, U.S. Department of Transportation, 1980. Cereijo, M. R. State Variable Formulations. Instruments and Control Systems , December 1969, pp. 87 –88. Chiu, D. K., and Lee, S. Design and Experimentation of a Jump Impact Controller. IEEE Control Systems , June 1997, pp. 99 –106. Cochin, I. Analysis and Design of Dynamic Systems . Harper & Row, New York, 1980. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no.1, February 2004, pp. 65 –73. Elkins, J. A. A Method for Predicting the Dynamic Response of a Pantograph Running at Constant Speed under a Finite Length of Overhead Equipment . Technical Report TN DA36, British Railways, 1976. Fagergren, A., Ekeberg, Ö., and Forssberg, H. Precision Grip Force Dynamics: A System Identi ﬁcation Approach. IEEE Transactions on Biomedical Engineering , vol. 47, no.10, 2000, pp. 1366 –1375.Minimum Required Software Packages LabVIEW, the LabVIEW Control Design and Simulation Module, and the MathScript RT Module. Prelab 1.Study Appendix D, Sections D.1 through D.4, Example D.1. 2.Solve Skill-Assessment Exercise 3.3. 3.Use your solution to Prelab 2 and convert back to the transfer function. Lab 1.Use LabVIEW to convert the transfer function, G s2s1 s27s9, into a state-space representation using both the graphical and MathScript approaches. The front panel will contain controls for the entry of the transfer function and indicators of the transferfunction and the two state-space results. Functions for this experiment can be found inthe following palettes: (1) Control Design and Simulation/Control Design/Model Construction, (2)Control Design and Simulation/Control Design/Model Conversion, and (3) Programming/Structures Hint: Coef ﬁcients are entered in reverse order when using MathScript with MATLAB. 2.Use LabVIEW to convert all state-space representations found in Lab 1 to a transferfunction. All state-space conversions should yield the transfer function given in Lab 1.The front panel will contain controls for entering state-space representations andindicators of the transfer function results as well as the state equations used. Postlab 1.Describe any correlation found between the results of Lab 1 and calculations made in thePrelab. 2.Describe and account for any differences between the results of Lab 1 and calculationsmade in the Prelab. 3.Explain the results of Lab 2 and draw conclusions from the results.Bibliography 155WEBC03 10/28/2014 16:50:17 F r a n k l i n ,G .F . ,P o w e l l ,J .D . ,a n dE m a m i - N a e i n i ,A . Feedback Control of Dynamic Systems . Addison-Wesley, Reading, MA, 1986. Hong, J., Tan, X., Pinette, B., Weiss, R., and Riseman, E. M. Image-Based Homing. IEEE Control Systems , February 1992, pp. 38 –45. Inigo, R. M. Observer and Controller Desig n for D.C. Positional Control Systems Using State Variables. Transactions, Analog/Hybrid Computer Educational Society , December 1974, pp. 177 –189. Kailath, T. Linear Systems . Prentice Hall, Upper Saddle River, NJ, 1980. Kandel, A. Analog Simulation of Groundwater Mining in Coastal Aquifers. Transactions, Analog/ Hybrid Computer Educational Society , November 1973, pp. 175 –183. Kyrylov, V., Severyanova, L. A., and Vieira, A. Modeling Robust Oscillatory Behavior of the Hypothalamic-Pituitary-Adrenal Axis. IEEE Transactions on Biomedical Engineering , vol. 52, no.12, 2005, pp. 1977 –1983. Li, S., Jarvis, A.J., and Leedal, D.T., Are Response Function Representations of the Global Carbon Cycle Ever Interpretable? Tellus , vol. 61B, 2009, pp. 361 –371. Liceaga-Castro, E., van der Molen, G. M. Submarine H ∞Depth Control Under Wave Disturbances. IEEE Transactions on Control Systems Technology , vol. 3, no.3, 1995, pp. 338 –346. Lordi, N. G. Analog Computer Generated Lecture Demonstrations in Pharmacokinetics. Transactions, Analog/Hybrid Computer Educational Society , November 1972, pp. 217 –222. Philco Technological Center. Servomechanism Fundamentals and Experiments . Prentice Hall, Upper Saddle River, NJ, 1980. Prasad, L., Tyagi, B., and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Symposium, 2012, pp. 138 –143. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics . IEEE . 2007. Qu, S-G., Zhang, Y., Ye, Z., Shao, M., and Xia, W. Modeling and Simulation of the Proportional Valve Control System for the Turbocharger. IEEE , 2010. Riegelman, S. et al. Shortcomings in Pharmacokinetic Analysis by Conceiving the Body to Exhibit Properties of a Single Compartment. Journal of Pharmaceutical Sciences , vol. 57, no.1, 1968, pp. 117 –123. Tarin, C., Teufel, E., Picó, J., Bondia, J., and P ﬂeiderer, H. J. Comprehensive Pharmacokinetic Model of Insulin Glargine and Other Insulin Formulations. IEEE Transactions on Biomedical Engineering , vol. 52, no.12, 2005, pp. 1994 –2005. Timothy, L. K., and Bona, B. E. State Space Analysis: An Introduction . McGraw-Hill, New York, 1968.156 Chapter 3 Modeling in the Time DomainWEBC04 10/28/2014 16:58:7 Time Response Chapter Learning Outcomes After completing this chapter the student will be able to: Use poles and zeros of transfer functions to determine the time response of a control system (Sections 4.1 –4.2) Describe quantitatively the transient response of ﬁrst-order systems (Section 4.3) Write the general response of second-order systems given the pole location (Section 4.4) Find the damping ratio and natural frequency of a second-order system (Section 4.5) Find the settling time, peak time, percent overshoot, and rise time for anunderdamped second-orde r system (Section 4.6) Approximate higher-order systems and systems with zeros as ﬁrst- or second- order systems (Sections 4.7 –4.8) Describe the effects of nonlinearities on the system time response (Section 4.9) Find the time response from the state-space representation (Sections 4.10 –4.11) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to (1) predict, by inspection, the form of theopen-loop angular velocity response of the load to a step voltage input to4 157WEBC04 10/28/2014 16:58:7 the power ampli ﬁer; (2) describe quantitatively the transient response of the open-loop system; (3) derive the expression for the open-loop angular velocity output for a step voltage input; (4) obtain the open-loopstate-space representation; (5) plot the open-loop velocity step responseusing a computer simulation. Given the block diagram for the Unmanned Free-Swimming Submersible (UFSS) vehicle ’s pitch control system shown on the back endpapers, you will be able to predict, ﬁnd, and plot the response of the vehicle dynamics to a step input command. Further, you will be able to evaluate the effect of system zeros and higher-order poles on the response. You also will be able to evaluate the rollresponse of a ship at sea. 4.1 Introduction In Chapter 2, we saw how transfer functions can represent linear, time-invariant systems.In Chapter 3, systems were represented directly in the time domain via the state and output equations. After the engineer obtains a mathematical representation of a subsystem, the subsystem is analyzed for its transient and steady-state responses to see if thesecharacteristics yield the desired behavior. This chapter is devoted to the analysis of systemtransient response. It may appear more logical to continue with Chapter 5, which covers the modeling of closed-loop systems, rather than to break the modeling sequence with the analysispresented here in Chapter 4. However, the student should not continue too far into systemrepresentation without knowing the applicatio n for the effort expended. Thus, this chapter demonstrates applications of the system rep r e s e n t a t i o nb ye v a l u a t i n gt h et r a n s i e n t response from the system model. Logically, this approach is not far from reality, sincethe engineer may indeed want to evaluate the res ponse of a subsystem prior to inserting it into the closed-loop system. After describing a valuable analysis and design tool, poles and zeros, we begin analyzing our models to ﬁnd the step response of ﬁrst- and second-order systems. The order refers to the order of the equivalent differential equation representing the system —the order of the denominator of the transfer function after cancellation of common factors in the numerator or the number of simultaneous ﬁrst-order equations required for the state-space representation. 4.2 Poles, Zeros, and System Response The output response of a system is the sum of two responses: the forced response and the natural response .1Although many techniques, such as solving a differential equation or taking the inverse Laplace transform, enable us to evaluate this output response, these techniques are laborious and time-consuming. Productivity is aided by analysis and design techniques that yield results in a minimum of time. If the technique is so rapid that we feel we derive the desired result by inspection, we sometimes use the attribute qualitative to describe the method. The use of poles and zeros and their relationship to the time response ofa system is such a technique. Learning this relationship gives us a qualitative “handle ”on problems. The concept of poles and zeros, fundamental to the analysis and design of control 1The forced response is also called the steady-state response orparticular solution . The natural response is also called the homogeneous solution .158 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:7 systems, simpli ﬁes the evaluation of a system’ s response. The reader is encouraged to master the concepts of poles and zeros and their application to problems throughout this book. Let us begin with two de ﬁnitions. Poles of a Transfer Function The poles of a transfer function are (1) the values of the Laplace transform variable, s,that cause the transfer function to become in ﬁnite or (2) any roots of the denominator of the transfer function that are common to roots of the numerator. Strictly speaking, the poles of a transfer function satisfy part (1) of the de ﬁnition. For example, the roots of the characteristic polynomial in the denominator are values of sthat make the transfer function inﬁ nite, so they are thus poles. However, if a factor of the denominator can be canceled by the same factor in the numerator, the root of thisfactor no longer causes the transfer function to become in ﬁnite. In control systems, we often refer to the root of the canceled factor in the denominator as a pole even thoughthe transfer function will not be inﬁ nite at this value. Hence, we include part (2) of the deﬁnition. Zeros of a Transfer Function The zeros of a transfer function are (1) the values of the Laplace transform variable, s, that cause the transfer function to become zero, or (2) any roots of the numerator of the transferfunction that are common to roots of the denominator. Strictly speaking, the zeros of a transfer function satisfy part (1) of this de ﬁnition. For example, the roots of the numerator are values of sthat make the transfer function zero and are thus zeros. However, if a factor of the numerator can be canceled by the same factor inthe denominator, the root of this factor no longer causes the transfer function to becomezero. In control systems, we often refer to the root of the canceled factor in the numerator asa zero even though the transfer function will not be zero at this value. Hence, we include part(2) of the de ﬁnition. Poles and Zeros of a First-Order System: An Example Given the transfer function G(s) in Figure 4.1( a), a pole exists at s 5, and a zero exists at  2. These values are plotted on the complex s-plane in Figure 4.1( b), using an ×for the pole and a○for the zero. To show the properties of the poles and zeros, let us ﬁnd the unit step response of the system. Multiplying the transfer function of Figure 4.1( a) by a step function yields C s s2 s s5A sB s52=5 s3=5 s5 4.1 where A s2 s5/C12/C12/C12/C12 s®02 5 B s2 s/C12/C12/C12/C12 s® 53 5 Thus, c t2 535e  5t 4.24.2 Poles, Zeros, and System Response 159WEBC04 10/28/2014 16:58:7 From the development summarized in Figure 4.1(c ), we draw the following conclusions: 1.A pole of the input function generates the form of the forced response (that is, the pole at the origin generated a step function at the output). 2.A pole of the transfer function generates the form of the natural response (that is, the pole at 5 generated e 5t). 3.A pole on the real axis generates an exponential response of the form e αt, where  αis the pole location on the real axis. Thus, the farther to the left a pole is on the negative real axis, the faster the exponential transient response will decay to zero (again, the pole at  5 generated e 5t; see Figure 4.2 for the general case).G(s) C(s)1 s (b) (a)jω s-plane 1 ss + 2 jω jω jωInput pole System zero System pole Output transform2/5+3/5 s + 5 2 535e –5tOutput time response+ Forced response Natural response (c)–5R(s) = s + 2 1 s + 5 C(s) = c(t) =s–2 –5s-plane s-plane s-planes + 5–2 σσ σ σ FIGURE 4.1 a.System showing input and output; b.pole-zero plot of the system; c.evolution of a system response. Follow blue arrows to see the evolution of the response component generated by the pole or zero. Pole at –α generates response Ke –αts-planejω –ασ FIGURE 4.2 Effect of a real-axis pole upon transient response.160 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:8 4.The zeros and poles generate the amplitudes for both the forced and natural responses (this can be seen from the calculation of AandBin Eq. (4.1)). Let us now look at an example that demonstrates the technique of using poles to obtain the form of the system response. We will learn to write the form of the response by inspection. Each pole of the system transfer function that is on the real axis generates anexponential response that is a component of the natural response. The input pole generatesthe forced response. Example 4.1 Evaluating Response Using PolesEvaluating Response Using Poles PROBLEM: Given the system of Figure 4.3, write the output, c(t), in general terms. Specify the forced and natural parts of the solution. SOLUTION: By inspection, each system pole generates an exponential as part of the natural response. The input ’s pole generates the forced response. Thus, Cs K1 s Forced responseK2 s2K3 s4K4 s5 Natural response 4.3 Taking the inverse Laplace transform, we get c t K1 Forced responseK2e 2tK3e 4tK4e 5t Natural response 4.4(s + 2)(s + 4)(s + 5)C(s)1 sR(s) = (s + 3) FIGURE 4.3 System for Example 4.1 Skill-Assessment Exercise 4.1 PROBLEM: A system has a transfer function, G s10 s4 s6 s1 s7 s8 s10. Write, by inspection, the output, c(t), in general terms if the input is a unit step. ANSWER: c tABe tCe 7tDe 8tEe 10t In this section, we learned that poles determine the nature of the time response: Poles of the input function determine the form of the forced response, and poles of the transfer function determine the form of the natural response. Zeros and polesof the input or transfer function contribute to the amplitudes of the componentparts of the total response. Finally, poles on the real axis generate exponentialresponses.4.2 Poles, Zeros, and System Response 161WEBC04 10/28/2014 16:58:8 4.3 First-Order Systems We now discuss ﬁrst-order systems without zeros to de ﬁne a performance speciﬁcation for such a system. A ﬁrst-order system without zeros can be described by the transfer function shown in Figure 4.4(a ). If the input is a unit step, where R s1=s, the Laplace transform of the step response is C(s), where C sR sG sa s sa 4.5 Taking the inverse transform, the step response is given by c tcf tcn t1 e at 4.6 where the input pole at the origin generated the forced response cf t1, and the system pole at  a, as shown in Figure 4.4( b), generated the natural response cn t  e at. Equation (4.6) is plotted in Figure 4.5. Let us examine the signi ﬁcance of parameter a, the only parameter needed to describe the transient response. When t1=a, e atjt1=ae 10:37 4.7 or c tjt1=a1 e atjt1=a1 0:370:63 4.8 We now use Eqs. (4.6), (4.7), and (4.8) to de ﬁne three transient response performance speciﬁcations. Time Constant We call 1/ athetime constant of the response. From Eq. (4.7), the time constant can be described as the time for e atto decay to 37% of its initial value. Alternately, from Eq. (4.8) the time constant is the time it takes for the step response to rise to 63% of its ﬁnal value (see Figure 4.5).a R(s) (a)jω –a (b)s + aG(s) C(s)s-plane σ FIGURE 4.4 a.First-order system; b.pole plot Virtual Experiment 4.1 First-Order Transfer Function Put theory into practice and ﬁnd aﬁrst-order transfer function representing the Quanser Rotary Servo. Then validate the model by simulating it in LabVIEW. Such a servo motoris used in mechatronic gadgetssuch as cameras. Virtual experiments are foundon Learning Space. t1.0 0.90.80.70.60.50.40.30.20.1 0 TsTra1 a2 a3 a4 a5Initial slope =c(t) 1 time constant 63% of final value at t = one time constant= a FIGURE 4.5 First-order system response to a unit step162 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:9 The reciprocal of the time constant has the units (1/seconds), or frequency. Thus, we can call the parameter atheexponential frequency . Since the derivative of e atis awhen t0,ais the initial rate of change of the exponential at t0. Thus, the time constant can be considered a transient response speci ﬁcation for a ﬁrst-order system, since it is related to the speed at which the system responds to a step input. The time constant can also be evaluated from the pole plot (see Figure 4.4( b)). Since the pole of the transfer function is at  a, we can say the pole is located at the reciprocal of the time constant, and the farther the pole from the imaginary axis, the faster the transient response. Let us look at other transient response speci ﬁcations, such as rise time, Tr, and settling time, Ts, as shown in Figure 4.5. Rise Time, Tr Rise time is deﬁned as the time for the waveform to go from 0.1 to 0.9 of its ﬁnal value. Rise time is found by solving Eq. (4.6) for the difference in time at c t0:9 and c t0:1. Hence, Tr2:31 a 0:11 a2:2 a 4.9 Settling Time, Ts Settling time is deﬁned as the time for the response to reach, and stay within, 2% of its ﬁnal value.2Letting c t0:98 in Eq. (4.6) and solving for time, t,weﬁnd the settling time to be Ts4 a 4.10 First-Order Transfer Functions via Testing Often it is not possible or practical to obtain a system ’s transfer function analytically. Perhaps the system is closed, and the component parts are not easily identi ﬁable. Since the transfer function is a representation of the system from input to output, the system’ s step response can lead to a representation even though the inner construction is not known. With a step input, we can measure the time constant and the steady-state value, from which thetransfer function can be calculated. Consider a simple ﬁrst-order system, G sK= sa, whose step response is C sK s saK=a s K=a sa 4.11 If we can identify Kandafrom laboratory testing, we can obtain the transfer function of the system. For example, assume the unit step response given in Figure 4.6. We determine that it has the ﬁrst-order characteristics we have seen thus far, such as no overshoot and nonzero initial slope. From the response, we measure the time constant, that is, the time for the amplitude to reach 63% of its ﬁnal value. Since the ﬁnal value is about 0.72, the time constant is evaluated where the curve reaches 0 :630:720:45, or about 0.13 second. Hence, a1=0:137:7. 2Strictly speaking, this is the de ﬁnition of the 2% setting time . Other percentages, for example 5%, also can be used. We will use settling time throughout the book to mean 2% settling time.4.3 First-Order Systems 163WEBC04 10/28/2014 16:58:9 Toﬁnd K, we realize from Eq. (4.11) that the forced response reaches a steady-state value of K=a0:72. Substituting the value of a,weﬁnd K5:54. Thus, the transfer function for the system is G s5:54= s7:7. It is interesting to note that the response of Figure 4.6 was generated using the transfer function G s5= s7. 4.4 Second-Order Systems: Introduction Let us now extend the concepts of poles and zeros and transient response to second-order systems. Compared to the simplicity of a ﬁrst-order system, a second-order system exhibits a wide range of responses that must be analyzed and described. Whereas varying aﬁrst-order system ’s parameter simply changes the speed of the response, changes in the parameters of a second-order system can change the form of the response. For example, a second-order system can display characteristics much like a ﬁrst-order system, or, depending on component values, display damped or pure oscillations for its transient response. To become familiar with the wide range of responses before formalizing our discussion in the next section, we take a look at numerical examples of the second-ordersystem responses shown in Figure 4.7. All examples are derived from Figure 4.7( a), the general case, which has two ﬁnite poles and no zeros. The term in the numerator is simply a scale or input multiplying factor that can take on any value without affecting the form of the derived results. By assigning appropriate values to parameters aand b,we can show all possible second-order transient responses. The unit step response then can be found using0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.80.10.20.30.40.50.60.70.8 Time (seconds)Amplitude FIGURE 4.6 Laboratory results of a system step response test Skill-Assessment Exercise 4.2 PROBLEM: A system has a transfer function, G s50 s50. Find the time constant, Tc, settling time, Ts, and rise time, Tr. ANSWER: Tc0:02 s;Ts0:08 s;andTr0:044 s : The complete solution is located at www.wiley.com/college/nise .164 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:10 C sR sG s, where R s1=s, followed by a partial-fraction expansion and the inverse Laplace transform. Details are left as an end-of-chapter problem, for which you may want to review Section 2.2. We now explain each response and show how we can use the poles to determine the nature of the response without going through the procedure of a partial-fraction expansion followed by the inverse Laplace transform. Overdamped Response, Figure 4.7( b) For this response, C s9 s s29s99 s s7:854 s1:146 4.12 This function has a pole at the origin that comes from the unit step input and two real poles that come from the system. The input pole at the origin generates the constant forcedresponse; each of the two system poles on the real axis generates an exponential naturalresponse whose exponential frequency is equal to the pole location. Hence, the output initially could have been written as c tK 1K2e 7:854tK3e 1:146t. This response,b s2 + as + b 12345t0.51.0c(t) c(t) = 1 + 0.171e–7.854t – 9G(s) C(s)GeneralSystem (a) (b) (c) (d) (e)OverdampedPole-zero plot G(s) –7.854 –1.146 00.81.2c(t) = 1–e–t(cos 8t + sin 8t) 9G(s) C(s) Underdamped s-plane –10.4=1–1.06e–t cos( 8t –19.47°) 12345t012c(t) c(t) = 1 – cos 3t 9G(s) C(s) Undampedj3 12345t01.0c(t) c(t) = 1 – 3te–3t – e–3t 9G(s) C(s) Critically damped–30.8 0.6 0.4 0.2Response jω jω jω s-plane s-plane s-planes2 + 9s + 9 s2 + 2s + 9 s2 + 9 s2 + 6s + 9jω –j3c(t)C(s) 8 8 0.21.01.4 0.6R(s) =1 s R(s) =1 s R(s) =1 s R(s) =1 s R(s) =1 s 8 8 12345tj j01.171e–1.146t –σ σ σ σ FIGURE 4.7 Second-order systems, pole plots, and step responses4.4 Second-Order Systems: Introduction 165WEBC04 10/28/2014 16:58:10 shown in Figure 4.7( b), is called overdamped .3We see that the poles tell us the form of the response without the tedious calculation of the inverse Laplace transform. Underdamped Response, Figure 4.7 ( c) For this response, C s9 s s22s9 4.13 This function has a pole at the origin that comes from the unit step input and two complex poles that come from the system. We now compare the response of the second-order system to thepoles that generated it. First we will compare the pole location to the time function, and then we will compare the pole location to the plot. From Figure 4.7( c), the poles that generate the natural response are at s 1jﬃﬃﬃ 8p . Comparing these values to c(t) in the same ﬁgure, we see that the real part of the pole matches the exponential decay frequency of the sinusoid ’s amplitude, while the imaginary part of the pole matches the frequency of the sinusoidal oscillation. Let us now compare the pole location to the plot. Figure 4.8 shows a general, damped sinusoidal response for a second-order system. The transient response consists of an exponentially decayingamplitudegeneratedbytherealpartofthesystempoletimesasinusoidal waveform generated by the imaginary part of the system pole. The time constant of the exponential decay is equal to the reciprocal of the realpart of the system pole. The value of the imaginary part is the actualfrequency of the sinusoid, as depicted in Figure 4.8. This sinusoidalfrequency is given the name damped frequency of oscillation ,ω d. Finally, the steady-state response (unit step) was generated by theinput pole located at the origin. We call the type of response shown inFigure 4.8 an underdamped response, one which approaches a steady- state value via a transient response that is a damped oscillation. The following example demonstrates how a knowledge of the relationship between the pole location and the transient responsecan lead rapidly to the response form without calculating the inverseLaplace transform.c(t) Exponential decay generated by real part of complex pole pair Sinusoidal oscillation generated by imaginary part of complex pole pair t FIGURE 4.8 Second-order step response components generated by complex poles Example 4.2 Form of Underdamped Response Using PolesForm of Underdamped Response Using Poles PROBLEM: By inspection, write the form of the step response of the system in Figure 4.9. SOLUTION: First we determine that the form of the forced response is a step. Next we ﬁnd the form of the natural response. Factoring the denominator of the transfer function in Figure 4.9, we ﬁnd the poles to be s 5j13:23. The real part,  5, is the exponential frequency for the damping. It is also the reciprocal of the time constant of the decay of the oscillations. The imaginary part, 13.23, is the radian frequency for the sinusoidal oscillations. Using our previous discussion and Figure 4.7( c) as a guide, we obtain c tK1e 5t K2cos 13 :23tK3sin 13 :23t K1K4e 5t cos 13 :23t ϕ,w h e r e ϕtan 1K3=K2;K4ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ K2 2K23p ,a n d c(t)i sa constant plus an exponentially damped sinusoid.200C(s) s2 + 10s + 2001 sR(s) = FIGURE 4.9 System for Example 4.2 3So named because overdamped refers to a large amount of energy absorption in the system, which inhibits the transient response from overshooting and oscillating about the steady-state value for a step input. As the energy absorption is reduced, an overdamped system will become underdamped and exhibit overshoot.166 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:11 We will revisit the second-order underdamped response in Sections 4.5 and 4.6, where we generalize the discussion and derive some results that relate the pole position to other parameters of the response. Undamped Response, Figure 4.7( d) For this response, C s9 s s29 4.14 This function has a pole at the origin that comes from the unit step input and two imaginarypoles that come from the system. The input pole at the origin generates the constant forcedresponse, and the two system poles on the imaginary axis at j3 generate a sinusoidal natural response whose frequency is equal to the location of the imaginary poles. Hence, the output can be estimated as c tK 1K4cos 3t ϕ. This type of response, shown in Figure 4.7( d), is called undamped . Note that the absence of a real part in the pole pair corresponds to an exponential that does not decay. Mathematically, the exponential is e 0t1. Critically Damped Response, Figure 4.7 ( e) For this response, C s9 s s26s99 s s32 4.15 This function has a pole at the origin that comes from the unit step input and two multiplereal poles that come from the system. The input pole at the origin generates the constantforced response, and the two poles on the real axis at  3 generate a natural response consisting of an exponential and an exponential multiplied by time, where the exponentialfrequency is equal to the location of the real poles. Hence, the output can be estimated asc tK 1K2e 3tK3te 3t. This type of response, shown in Figure 4.7( e), is called critically damped . Critically damped responses are the fastest possible without the over- shoot that is characteristic of the underdamped response. We now summarize our observations. In this section we de ﬁned the following natural responses and found their characteristics: 1.Overdamped responses Poles: Two real at  σ1; σ2 Natural response: Two exponentials with time constants equal to the reciprocal of the pole locations, or c tK1e σ1tK2e σ2t 2.Underdamped responses Poles: Two complex at  σdjωd Natural response: Damped sinusoid with an exponential envelope whose time constant is equal to the reciprocal of the pole ’s real part. The radian frequency of the sinusoid, the damped frequency of oscillation, is equal to the imaginary part of the poles, or c tAe σdtcos ωdt ϕ4.4 Second-Order Systems: Introduction 167WEBC04 10/28/2014 16:58:12 3.Undamped responses Poles: Two imaginary at jω1 Natural response: Undamped sinusoid with radian frequency equal to the imaginary part of the poles, or c tA cos ω1t ϕ 4.Critically damped responses Poles: Two real at  σ1 Natural response: One term is an exponential whose time constant is equal to the reciprocal of the pole location. Another term is the product of time, t, and an exponential with time constant equal to the reciprocal of the pole location, or c tK1e σ1tK2te σ1t The step responses for the four cases of damping discussed in this section are superimposed in Figure 4.10. Notice that the critically damped case is the division betweenthe overdamped cases and the underdamped cases and is the fastest response without overshoot.0.5 1 1.5 2 2.5 3 3.5 4 00.20.40.60.81.01.21.41.61.82.0 Under- damped Critically damped Overdampedc(t) tUndamped FIGURE 4.10 Step responses for second-order system damping cases Skill-Assessment Exercise 4.3 PROBLEM: For each of the following transfer functions, write, by inspection, the general form of the step response: a.G s400 s212s400 b.G s900 s290s900 c.G s225 s230s225 d.G s625 s2625168 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:12 In the next section, we will formalize and generalize our discussion of second- order responses and deﬁ ne two speci ﬁcations used for the analysis and design of second-order systems. In Section 4.6, we will focus on the underdamped case and derive some speci ﬁcations unique to this response that we will use later for analysis and design. 4.5 The General Second-Order System Now that we have become familiar with second-order systems and their responses, we generalize the discussion and establish quantitative speci ﬁcations de ﬁned in such a way that the response of a second-order system can be described to a designer without the need forsketching the response. In this section, we de ﬁne two physically meaningful speci ﬁcations for second-order systems. These quantities can be used to describe the characteristics of thesecond-order transient response just as time constants describe the ﬁrst-order system response. The two quantities are called natural frequency and damping ratio. Let usformally de ﬁne them. Natural Frequency, ωn Thenatural frequency of a second-order system is the frequency of oscillation of the system without damping. For example, the frequency of oscillation of a series RLC circuit with the resistance shorted would be the natural frequency. Damping Ratio, ζ Before we state our next de ﬁnition, some explanation is i n order. We have already seen that a second-order system ’s underdamped step response is characterized by damped oscillations. Our de ﬁnition is derived from the need to quantitatively describe this damped oscillation regardless of the time s cale. Thus, a system whose transient response goes through three cycles in a millisecond before reaching the steady statewould have the same measure as a system that went through three cycles in amillennium before rea ching the steady state. For example, the underdamped curve in Figure 4.10 has an associated measure that de ﬁnes its shape. This measure remains the same even if we change the time base from seconds to microseconds orto millennia. Av i a b l ed e ﬁnition for this quantity is one that compares the exponential decay frequency of the envelope to the natural frequency. This ratio is constant regardless of thetime scale of the response. Also, the recipr ocal, which is proportional to the ratio of the natural period to the exponential time constant, remains the same regardless of thetime base.ANSWERS: a.c tABe 6tcos 19:08tϕ b.c tABe 78:54tCe 11:46t c.c tABe 15tCte 15t d.c tABcos 25tϕ The complete solution is located at www.wiley.com/college/nise .4.5 The General Second-Order System 169WEBC04 10/28/2014 16:58:12 We de ﬁne the damping ratio, ζ,t ob e ζExponential decay frequency Natural frequency rad=second 1 2πNatural period seconds  Exponential time constant Let us now revise our description of the second-order system to re ﬂect the new deﬁnitions. The general second-order system shown in Figure 4.7( a) can be transformed to show the quantities ζandωn. Consider the general system G sb s2asb 4.16 Without damping, the poles would be on the jω-axis, and the response would be an undamped sinusoid. For the poles to be purely imaginary, a0. Hence, G sb s2b 4.17 By de ﬁnition, the natural frequency, ωn, is the frequency of oscillation of this system. Since the poles of this system are on the jω-axis at jﬃﬃﬃ bp , ωnﬃﬃﬃ bp 4.18 Hence, bω2 n 4.19 Now what is the term ain Eq. (4.16)? Assuming an underdamped system, the complex poles have a real part, σ, equal to  a=2. The magnitude of this value is then the exponential decay frequency described in Section 4.4. Hence, ζExponential decay frequency Natural frequency rad=second jσj ωna=2 ωn 4.20 from which a2ζωn 4.21 Our general second-order transfer function ﬁnally looks like this: G sω2 n s22ζωnsω2 n 4.22 In the following example we ﬁnd numerical values for ζandωnby matching the transfer function to Eq. (4.22).170 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:13 Now that we have de ﬁned ζandωn, let us relate these quantities to the pole location. Solving for the poles of the transfer function in Eq. (4.22) yields s1;2 ζωnωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ζ2 1q 4.24 From Eq. (4.24) we see that the various cases of second-order response are a function of ζ; they are summarized in Figure 4.11.4Example 4.3 Finding ζandωnFor a Second-Order System Finding ζandωnFor a Second-Order System PROBLEM: Given the transfer function of Eq. (4.23), ﬁndζandωn. G s36 s24:2s36 4.23 SOLUTION: Comparing Eq. (4.23) to (4.22), ω2 n36, from which ωn6. Also, 2ζωn4:2. Substituting the value of ωn;ζ0:35. Poles Step response FIGURE 4.11 Second-order response as a function of damping ratio 4The student should verify Figure 4.11 as an exercise.4.5 The General Second-Order System 171WEBC04 10/28/2014 16:58:14 In the following example we ﬁnd the numerical value of ζand determine the nature of the transient response. This section de ﬁned two speci ﬁcations, or parameters, of second-order systems: natural frequency, ωn, and damping ratio, ζ. We saw that the nature of the response obtained was related to the value of ζ. Variations of damping ratio alone yield the complete range of overdamped, critically damped, underdamped, and undamped responses.Skill-Assessment Exercise 4.4 PROBLEM: For each of the transfer functions in Skill-Assessment Exercise 4.3, do the following: (1) Find the values of ζandωn; (2) characterize the nature of the response. ANSWERS: a.ζ0:3;ωn20; system is underdamped b.ζ1:5;ωn30; system is overdamped c.ζ1;ωn15; system is critically damped d.ζ0;ωn25; system is undamped The complete solution is located at www.wiley.com/college/nise .Example 4.4 Characterizing Response from the Value of ζ Characterizing Response from the Value of ζ PROBLEM: For each of the systems shown in Figure 4.12, ﬁnd the value of ζand report the kind of response expected. SOLUTION: First match the form of these systems to the forms shown in Eqs. (4.16) and (4.22). Since a2ζωnandωnﬃﬃﬃ bp , ζa 2ﬃﬃﬃbp 4.25 Using the values of aandbfrom each of the systems of Figure 4.12, we ﬁnd ζ1:155 for system ( a), which is thus overdamped, since ζ>1;ζ1 for system ( b), which is thus critically damped; and ζ0:894 for system ( c), which is thus underdamped, since ζ<1.12 (a)16 (b) 20 C(s) (c)s2 + 8s + 12C(s) C(s) R(s)R(s) R(s) s2 + 8s + 16 s2 + 8s + 20 FIGURE 4.12 Systems for Example 4.4172 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:14 4.6 Underdamped Second-Order Systems Now that we have generalized the second-order transfer function in terms of ζandωn, let us analyze the step response of an underdamped second-order system. Not only will this response be found in terms of ζand ωn, but more speci ﬁcations indigenous to the underdamped case will be de ﬁned. The underdamped second-order system, a common model for physical problems, displays unique behavior that must be itemized; a detailed description of the underdamped response is necessary for both analysis and design. Our ﬁrst objective is to de ﬁne transient speci ﬁcations associated with underdamped responses. Next we relate these speci ﬁcations to the pole location, drawing an association between pole location and the form of the underdamped second-order response. Finally, we tie the polelocation to system parameters, thus closing the loop: Desired response generates requiredsystem components. Let us begin by ﬁnding the step response for the general second-order system of Eq. (4.22). The transform of the response, C(s), is the transform of the input times the transfer function, or C s ω2 n s s22ζωnsω2 nK1 sK2sK3 s22ζωnsω2n 4.26 where it is assumed that ζ<1 (the underdamped case). Expanding by partial fractions, using the methods described in Section 2.2, Case 3, yields C s1 s  sζωnζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q sζωn2ω2 n 1 ζ2 4.27 Taking the inverse Laplace transform, which is left as an exercise for the student, produces c t1 e ζωntcosωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p tζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 ζ2p sinωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q t ! 1 1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p e ζωntcos ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q t ϕ 4.28 where ϕtan 1 ζ=ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p . A plot of this response appears in Figure 4.13 for various values of ζ, plotted along a time axis normalized to the natural frequency. We now see the relationship between the value of ζand the type of response obtained: The lower the value of ζ, the more oscillatory the response. The natural frequency is a time-axis scale factor and does not affect the natureof the response other than to scale it in time. We have de ﬁned two parameters associated with second-order systems, ζandω n. Other parameters associated with the underdamped response are rise time, peak time,percent overshoot, and settling time. These speci ﬁcations are de ﬁned as follows (see also Figure 4.14): 1.Rise time ,T r. The time required for the waveform to go from 0.1 of the ﬁnal value to 0.9 of the ﬁnal value. 2.Peak time ,TP. The time required to reach the ﬁrst, or maximum, peak.4.6 Underdamped Second-Order Systems 173WEBC04 10/28/2014 16:58:14 3.Percent overshoot, %OS . The amount that the waveform overshoots the steady-state, or ﬁnal, value at the peak time, expressed as a percentage of the steady-state value. 4.Settling time ,Ts. The time required for the transient ’s damped oscillations to reach and stay within 2%of the steady-state value. Notice that the de ﬁnitions for settling time and rise time are basically the same as the deﬁnitions for the ﬁrst-order response. All de ﬁnitions are also valid for systems of order higher than 2, although analytical expressions for these parameters cannot be found unless the response of the higher-order system can be approximated as a second-order system, which we do in Sections 4.7 and 4.8. Rise time, peak time, and settling time yield information about the speed of the transient response. This information can help a designer determine if the speed and the nature of the response do or do not degrade the performance of the system. Forexample, the speed of an entire computer system depends on the time it takes for a harddrive head to reach steady state and read data; passenger comfort depends in part on the1 2 3 4 5 6 7 8 9 1 01 11 21 31 41 51 61 70.20.40.60.81.01.21.41.61.8c(ωnt) ntζ = .1 0.2 .4 .5 .6 .8 ω FIGURE 4.13 Second-order underdamped responses for damping ratio values Tr Tp Tst0.1c final0.9c final0.98c finalcfinal1.02c finalcmaxc(t) FIGURE 4.14 Second-order underdamped response speci ﬁcations174 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:15 suspension system of a car and the number o f oscillations it goes through after hitting a bump. We now evaluate Tp,%OS , and Tsas functions of ζandωn. Later in this chapter we relate these speci ﬁcations to the location of the system poles. A precise analytical expression for rise time cannot be obtained; thus, we present a plot and a table showing the relationship between ζand rise time. Evaluation of Tp Tpis found by differentiating c(t) in Eq. (4.28) and ﬁnding the ﬁrst zero crossing after t0. This task is simpli ﬁed by “differentiating ”in the frequency domain by using Item 7 of Table 2.2. Assuming zero initial conditions and using Eq. (4.26), we get ℒ_c t sC sω2 n s22ζωnsω2 n 4.29 Completing squares in the denominator, we have ℒ_c t ω2 n sζωn2ω2 n 1 ζ2ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q sζωn2ω2 n 1 ζ2 4.30 Therefore, _c tωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p e ζωntsinωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q t 4.31 Setting the derivative equal to zero yields ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2q tnπ 4.32 or tnπ ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 4.33 Each value of nyields the time for local maxima or minima. Letting n0 yields t0, the ﬁrst point on the curve in Figure 4.14 that has zero slope. The ﬁrst peak, which occurs at the peak time, Tp, is found by letting n1 in Eq. (4.33): Tpπ ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 ζ2p 4.34 Evaluation of % OS From Figure 4.14 the percent overshoot, %OS , is given by %OScmax cfinal cfinal100 4.35 The term cmaxis found by evaluating c(t) at the peak time, c(Tp). Using Eq. (4.34) for Tpand substituting into Eq. (4.28) yields cmaxc Tp1 e  ζπ=ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p cosπζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p sinπ ! 1e  ζπ=ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p  4.36 For the unit step used for Eq. (4.28), cfinal1 4.374.6 Underdamped Second-Order Systems 175WEBC04 10/28/2014 16:58:16 Substituting Eqs. (4.36) and (4.37) into Eq. (4.35), we ﬁnally obtain %OSe  ζπ=ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 100 4.38 Notice that the percent overshoot is a function only of the damping ratio, ζ. Whereas Eq. (4.38) allows one to ﬁnd%OS given ζ, the inverse of the equation allows one to solve for ζgiven %OS . The inverse is given by ζ ln %OS=100ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ π2ln2 %OS=100q 4.39 The derivation of Eq. (4.39) is left as an exercise for the student. Equation (4.38) (or, equivalently, (4.39)) is plotted in Figure 4.15. Evaluation of Ts In order to ﬁnd the settling time, we must ﬁnd the time for which c(t) in Eq. (4.28) reaches and stays within 2%of the steady-state value, cfinal. Using our de ﬁnition, the settling time is the time it takes for the amplitude of the decaying sinusoid in Eq. (4.28) to reach 0.02, or e ζωnt1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 0:02 4.40 T h i se q u a t i o ni sac o n s e r v a t i v ee s t i m a t e ,s i n c ew ea r ea s s u m i n gt h a t cos ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 ζ2p t ϕ1 at the settling time. Solving Eq. (4.40) for t, the settling time is Ts ln 0:02ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 ζ2p  ζωn 4.41 You can verify that the numerator of Eq. (4.41) varies from 3.91 to 4.74 as ζvaries from 0 to 0.9. Let us agree on an approximation for the settling time that will be used for all values ofζ; let it be Ts4 ζωn 4.42 Evaluation of Tr A precise analytical relationship between rise time and damping ratio, ζ, cannot be found. However, using a computer and Eq. (4.28), the rise time can be found. We ﬁrst designate ωnt0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0102030405060708090100 Damping ratio, ζPercent overshoot, %OS FIGURE 4.15 Percent overshoot versus damping ratio176 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:17 as the normalized time variable and select a value for ζ. Using the computer, we solve for the values of ωntthat yield c t0:9 and c t0:1. Subtracting the two values of ωntyields the normalized rise time, ωnTr, for that value of ζ. Continuing in like fashion with other values of ζ, we obtain the results plotted in Figure 4.16.5Let us look at an example. 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 0.11.01.21.41.61.82.02.22.42.62.83.0 Dam ping ratioDamping ratioNormalized rise time 0.1 0.20.30.40.50.60.70.80.91.1041.2031.3211.4631.6381.8542.1262.4672.883Rise time × Natural frequency FIGURE 4.16 Normalized rise time versus damping ratio for a second-order underdamped response Example 4.5 Finding Tp,%OS,Ts, and Trfrom a Transfer Function Finding Tp,%OS,Ts, and Trfrom a Transfer Function PROBLEM: Given the transfer function G s100 s215s100 4.43 ﬁndTp,%OS ,Ts, and Tr. SOLUTION: ωnandζare calculated as 10 and 0.75, respectively. Now substitute ζandωninto Eqs. (4.34), (4.38), and (4.42) and ﬁnd, respectively, that Tp0:475 second, %OS2:838, and Ts0:533 second. Using the table in Figure 4.16, the normalized rise time is approximately 2.3 seconds. Dividing by ωnyields Tr0:23 second. This problem demonstrates that we can ﬁndTp,%OS ,Ts,a n dT rwithout the t e d i o u st a s ko ft a k i n ga ni n v e r s eL a p l a c et r a nsform, plotting the output response, and taking measurements from the plot.Virtual Experiment 4.2 Second-Order System Response Put theory into practice studying the effect that natural frequencyand damping ratio have oncontrolling the speed response of the Quanser Linear Servo in LabVIEW. This concept isapplicable to automobile cruisecontrols or speed controls of subways or trucks. Virtual experiments are found on Learning Space. 5Figure 4.16 can be approximated by the following polynomials: ωnTr1:76ζ3 0:417ζ21:039ζ1 (maximum error less than1 2%for 0 <ζ<0:9), and ζ0:115 ωnTr3 0:883 ωnTr22:504 ωnTr 1:738 (maximum error less than 5% for 0 :1<ζ<0:9). The polynomials were obtained using MATLAB ’spolyﬁtfunction.4.6 Underdamped Second-Order Systems 177WEBC04 10/28/2014 16:58:17 We now have expressions that relate peak time, percent overshoot, and settling time to the natural frequency and the damping ratio. Now let us relate these quantities to the location of the poles that generate thesecharacteristics. The pole plot for a general, underdamped second-order system, previously shown in Figure 4.11, is reproduced and expanded inFigure 4.17 for focus. We see from the Pythagorean theorem that theradial distance from the origin to the pole is the natural frequency, ω n, and the cos θζ. Now, comparing Eqs. (4.34) and (4.42) with the pole location, we evaluate peak time and settling time in terms of the pole location. Thus, Tpπ ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p π ωd 4.44 Ts4 ζωnπ σd 4.45 where ωdis the imaginary part of the pole and is called the damped frequency of oscillation ,a n dσ dis the magnitude of the real part of the pole and is the exponential damping frequency . Equation (4.44) shows that Tpis inversely proportional to the imaginary part of the pole. Since horizontal lines on the s-plane are lines of consta nt imaginary value, they are also lines of constant peak time. Simila rly, Eq. (4.45) tells us that settling time is inversely proportional to the real part of the pole. Since vertical lines on the s-plane are lines of constant real value, th ey are also lines of constant settling time. Finally, since ζcosθ, radial lines are lines of constant ζ. Since percent overshoot is only a function ofζ, radial lines are thus lines of constant percent overshoot, %OS. These concepts a r ed e p i c t e di nF i g u r e4 . 1 8, where lines of constant Tp,Ts,a n d %OS are labeled on the s-plane. At this point, we can understand the signi ﬁcance of Figure 4.18 by examining the actual step response of comparative systems. Depicted in Figure 4.19( a) are the step responses as the poles are moved in a vertical direction, keeping the real part the same.n dσωn θ ζ– –jω1 –ζ2njω1 –ζ2n σjω s-plane+ = – = –jωd= jωd ω FIGURE 4.17 Pole plot for an underdamped second-order system %OS 2 %OS 1jω s-plane Ts2Ts1Tp2 Tp1 σ FIGURE 4.18 Lines of constant peak time, Tp, settling time, Ts, and percent overshoot, %OS . Note: Ts2<Ts1; Tp2<Tp1;%OS1<%OS 2.178 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:17 As the poles move in a vertical direction, the frequency increases, but the envelope remains the same since the real part of the pole is not changing. The ﬁgure shows a constant exponential envelope, even though the sinusoidal response is changing frequency. Since allcurves ﬁt under the same exponential decay curve, the settling time is virtually the same for all waveforms. Note that as overshoot increases, the rise time decreases. Let us move the poles to the right or left. Since the imaginary part is now constant, movement of the poles yi elds the responses of Figure 4.19( b). Here the frequency is constant over the range of variation of the real part. As the poles move tothe left, the response damps out more rapidly, while the frequency remains the same.Notice that the peak time is the same for all waveforms because the imaginary partremains the same. Moving the poles along a constant radial line yields the responses shown in Figure 4.19( c). Here the percent overshoot remains the same. Notice also that the responses look exactly alike, except for their speed. The farther the poles are from the origin, the morerapid the response. We conclude this section with some exampl es that demonstrate the relationship between the pole location and the speci ﬁcations of the second-order underdamped response. The ﬁrst example covers analysis. The second example is a simple design problem consisting of a physical system whose component values we want to design to meet a transientFrequency the same 12tc(t) Pole motion tc(t) Pole motion tc(t) Same overshoot Pole motions-plane s-plane s-plane(a) (c)jω jω jω(b) 1233 2 1 12 121 2 3 1 2 3123Envelope the same 123 σ σ σFIGURE 4.19 Step responses of second-order underdamped systems as poles move: a.with constant real part; b.with constant imaginary part; c.with constant damping ratio4.6 Underdamped Second-Order Systems 179WEBC04 10/28/2014 16:58:19 response speci ﬁcation. An animation PowerPoint presentation (PPT) demonstrating second-order principles is available for instructors at www.wiley.com/college/nise .S e e Second-Order Step Response. Example 4.6 Finding Tp,%OS, and Tsfrom Pole Location Finding Tp,%OS, and Tsfrom Pole Location PROBLEM: Given the pole plot shown in Figure 4.20, ﬁnd ζ;ωn;Tp;%OS, and Ts. SOLUTION: The damping ratio is given by ζcosθcosarctan 7=3  0:394. The natural frequency, ωn, is the radial distance from the origin to the pole, or ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 7232p 7:616. The peak time is Tpπ ωdπ 70:449 second 4.46 The percent overshoot is %OSe  ζπ=ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 10026% 4.47 The approximate settling time is Ts4 σd4 31:333 seconds 4.48 Students who are using MATLAB should now run ch4p1 in Appendix B. You will learn how to generate a second-order polynomial from twocomplex poles as well as extract and use the coef ﬁcients of the polynomial to calculate T p,%OS,a n d Ts. This exercise uses MATLAB to solve the problem in Example 4.6.s-plane θ dj7 = jωd –j7 = –jωdjω 3–= –σ σ FIGURE 4.20 Pole plot for Example 4.6 Example 4.7 Transient Response Through Component DesignTransient Response Through Component Design PROBLEM: Given the system shown in Figure 4.21, ﬁndJand Dto yield 20% overshoot and a settling time of 2 se conds for a step input of torque T(t). J DT(t) θ K = 5 N-m/rad(t) FIGURE 4.21 Rotational mechanical system for Example 4.7180 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:19 Second-Order Transfer Functions via Testing Just as we obtained the transfer function of a ﬁrst-order system experimentally, we can do the same for a system that exhibits a typical underdamped second-order response. Again, we can measure the laboratory response curve for percent overshoot and settling time, from which we can ﬁnd the poles and hence the denominator. The numerator can be found, as in theﬁrst-order system, from a knowledge of the measured and expected steady-state values. A problem at the end of the chapter illustrates the estimation of a second-order transfer function from the step response.SOLUTION: First, the transfer function for the system is G s1=J s2D JsK J 4.49 From the transfer function, ωnﬃﬃﬃﬃ K Jr 4.50 and 2ζωnD J 4.51 But, from the problem statement, Ts24 ζωn 4.52 orζωn2. Hence, 2ζωn4D J 4.53 Also, from Eqs. (4.50) and (4.52), ζ4 2ωn2ﬃﬃﬃﬃ J Kr 4.54 From Eq. (4.39), a 20% overshoot implies ζ0:456. Therefore, from Eq. (4.54), ζ2ﬃﬃﬃﬃ J Kr 0:456 4.55 Hence, J K0:052 4.56 From the problem statement, K5 N-m/rad. Combining this value with Eqs. (4.53) and (4.56), D=1.04 N-m-s/rad, and J0:26 kg-m2.4.6 Underdamped Second-Order Systems 181WEBC04 10/28/2014 16:58:20 Now that we have analyzed systems with two poles, how does the addition of another pole affect the response? We answer this question in the next section. 4.7 System Response with Additional Poles In the last section, we analyzed systems with one or two poles. It must be emphasized that the formulas describing percent overshoot, settling time, and peak time were derived only for a system with two complex poles and no zeros. If a system such as that shown inFigure 4.22 has more than two poles or has zeros, we cannot use the formulas to calculate theperformance speci ﬁcations that we derived. However, under certain conditions, a system with more than two poles or with zeros can be approximated as a second-order system thathas just two complex dominant poles . Once we justify this approximation, the formulas for percent overshoot, settling time, and peak time can be applied to these higher-order systemsby using the location of the dominant poles. In this section, we investigate the effect of an additional pole on the second-order response. In the next section, we analyze the effect of adding a zero to a two-pole system. Let us now look at the conditions that would have to exist in order to approximate the behavior of a three-pole system as that of a two-pole system. Consider a three-pole systemwith complex poles and a third pole on the real axis. Assuming that the complex poles are at  ζω njωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p and the real pole is at  αr, the step response of the system can be determined from a partial-fraction expansion. Thus, the output transform is C sA sB sζωnCωd sζωn2ω2 dD sαr 4.57 or, in the time domain, c tAu te ζωnt BcosωdtCsinωdtDe αrt 4.58 The component parts of c(t) are shown in Figure 4.23 for three cases of αr. For Case I, αrαr1and is not much larger than ζωn; for Case II, αrαr2and is much larger than ζωn; and for Case III, αr∞:Skill-Assessment Exercise 4.5 PROBLEM: Find ζ;ωn;Ts;Tp;Tr,a n d%OS for a system whose transfer function is G s361 s216s361. ANSWERS: ζ0:421;ωn19;Ts0:5s;Tp0:182 s ;Tr0:079 s ;and%OS23:3%: The complete solution is located at www.wiley.com/college/nise .TryIt 4.1 Use the following MATLAB statements to calculate the answers to Skill-Assessment Exercise 4.5. Ellipses meancode continues on next line. numg=361; deng=[1 16 361] ; omegan =sqrt(deng(3) ... /deng(1) ) zeta=(deng(2) /deng(1) ) ... / (2*omegan) Ts=4/ (zeta*omegan) Tp=pi/ (omegan*sqrt... (1-zeta^2) ) pos=100*exp(-zeta* ... pi/sqrt(1-zeta^2) ) Tr=(1.768*zeta^3 - ... 0.417*zeta^2 +1.039* ... zeta +1) /omegan182 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:20 FIGURE 4.22 Robot follows input commands from a human trainer Au(t) + e– nt(B cos dt + C sin dt)α–r1–n p2p1 p3s-plane Case I Case II (a)Case IIIα–r2ζ–n p2p1 p3 ζ–n p2p1 s-plane s-plane II Case IIII II Case IResponse Time (b)0jω jω jω De–αritζωω ω ζωωωσσ σ FIGURE 4.23 Component responses of a three-polesystem: a.pole plot; b.component responses: Nondominant pole is neardominant second-orderpair (Case I), far from the pair (Case II), and at in ﬁnity (Case III)4.7 System Response with Additional Poles 183WEBC04 10/28/2014 16:58:21 Let us direct our attention to Eq. (4.58) and Figure 4.23. If αr ζωn(Case II), the pure exponential will die out much more rapidly than the second-order underdamped step response. If the pure exponential term decays to an insigni ﬁcant value at the time of the ﬁrst overshoot, such parameters as percent overshoot, settling time, and peak time will be generated by the second-order underdamped step response component. Thus, the totalresponse will approach that of a pure second-order system (Case III). Ifα ris not much greater than ζωn(Case I), the real pole’ s transient response will not decay to insigni ﬁcance at the peak time or settling time generated by the second-order pair. In this case, the exponential decay is signi ﬁcant, and the system cannot be represented as a second-order system. The next question is, How much farther from the dominant poles does the third pole have to be for its effect on the second-order response to be negligible? The answer of coursedepends on the accuracy for which you are looking. However, this book assumes that theexponential decay is negligible after ﬁve time constants. Thus, if the real pole is ﬁve times farther to the left than the dominant poles, we assume that the system is represented by itsdominant second-order pair of poles. What about the magnitude of the exponential decay? Can it be so large that its contribution at the peak time is not negligible? We can show, through a partial-fractionexpansion, that the residue of the third po le, in a three-pole system with dominant second-order poles and no zeros, will actuall y decrease in magnitude as the third pole is moved farther into the left half-plane. Assume a step response, C(s), of a three-pole system: C s bc s s2asb scA sBsC s2asbD sc 4.59 where we assume that the nondominant pole is located at  con the real axis and that the steady-state response approaches unity. Evaluating the constants in the numerator ofeach term, A1; Bca c2 c2b ca(4.60a) Cca2 c2a bc c2b ca;D b c2b ca(4.60b) As the nondominant pole approaches ∞;orc®∞, A1;B 1;C a;D0 4.61 Thus, for this example, D, the residue of the nondominant pole and its response, becomes zero as the nondominant pole approaches in ﬁnity. The designer can also choose to forgo extensive residue analysis, since all system designs should be simulated to determine ﬁnal acceptance. In this case, the control systems engineer can use the “ﬁve times ”rule of thumb as a necessary but not suf ﬁcient condition to increase the con ﬁdence in the second-order approximation during design, but then simulate the completed design. Let us look at an example that compares the responses of two different three-pole systems with that of a second-order system.184 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:22 Example 4.8 Comparing Responses of Three-Pole SystemsComparing Responses of Three-Pole Systems PROBLEM: Find the step response of each of the transfer functions shown in Eqs. (4.62) through (4.64) and compare them. T1 s24:542 s24s24:542(4.62) T2 s245:42 s10 s24s24:542 4.63 T3 s73:626 s3 s24s24:542 4.64 SOLUTION: The step response, Ci s, for the transfer function, Ti s,c a nb ef o u n db y multiplying the transfer function by 1/ s, a step input, and using par tial-fraction expansion followed by the inverse Laplace transform to ﬁnd the response, ci t. With the details left as an exercise for the student, the results are c1 t1 1:09e 2tcos 4:532t 23:8° 4.65 c2 t1 0:29e 10t 1:189e 2tcos 4:532t 53:34° 4.66 c3 t1 1:14e 3t0:707e 2tcos 4:532t78:63° 4.67 The three responses are plotted in Figure 4.24. Notice that c2 t, with its third pole at  10 and farthest from the dominant poles, is the better approximation of c1 t,t h ep u r e second-order system response; c3 t, with a third pole close to the dominant poles, yields the most error. 1.4 1.21.00.80.60.40.2 0 0.5 2.0 2.5 3.0 Time (seconds)Normalized responsec1(t) c2(t) c3(t) 1.0 1.5 FIGURE 4.24 Step responses of system T1 s, system T2 s, and system T3 s4.7 System Response with Additional Poles 185WEBC04 10/28/2014 16:58:22 4.8 System Response with Zeros Now that we have seen the effect of an additional pole, let us add a zero to the second-order system. In Section 4.2, we saw that the zeros of a response affect the residue, or amplitude,of a response component but do not affect the nature of the response —exponential, damped sinusoid, and so on. In this section, we add a real-axis zero to a two-pole system. The zeroStudents who are using MATLAB should now run ch4p2 in Appendix B.You will learn how to generate a step response for a transferfunction and how to plot the response directly or collect the points for future use. The example shows how to collect the points and then use them to create a multiple plot, title the graph, andlabel the axes and curves to produce the graph in Figure 4.24 tosolve Example 4.8. System responses can alternately be obtained using Simulink.Simulink is a software package that is integrated with MATLABto provide a graphical user interface (GUI) for de ﬁning systems and generating responses. The reader is encouraged to studyAppendix C, which contains a tutorial on Simulink as well as someexamples. One of the illustrative examples, Example C.1, solvesExample 4.8 using Simulink. Another method to obtain systems responses is through the use ofMATLAB's LTI Viewer. An advantage of the LTI Viewer is that itdisplays the values of settling time, peak time, rise time, maximumresponse, and the ﬁnal value on the step response plot. The reader is encouraged to study Appendix E at www.wiley.com/college/nise , which contains a tutorial on the LTI Viewer as well as someexamples. Example E.1 solves Example 4.8 using the LTI Viewer. Skill-Assessment Exercise 4.6 PROBLEM: Determine the validity of a second-order approximation for each of these two transfer functions: a.G s700 s15 s24s100 b.G s360 s4 s22s90 ANSWERS: a.The second-order approximation is valid. b.The second-order approximation is not valid. The complete solution is located at www.wiley.com/college/nise .TryIt 4.2 Use the following MATLAB and Control System Toolboxstatements to investigate the effect of the additional pole in Skill-AssessmentExercise 4.6( a). Move the higher-order pole originally at 15 to other values by changing “a”in the code. a=15 numga =100*a; denga =conv( [1 a] , ... [1 4 100] ) ; Ta=tf (numga,denga) ; numg=100; deng=[1 4 100] ; T=tf (numg,deng) ; step(Ta, '.',T,'-')186 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:22 will be added ﬁrst in the left half-plane and then in the right half-plane and its effects noted and analyzed. We conclude the section by talking about pole-zero cancellation. Starting with a two-pole system with poles at  1j2:828, we consecutively add zeros at  3, 5, and  10. The results, normalized to the steady-state value, are plotted in Figure 4.25. We can see that the closer the zero is to the dominant poles, the greater its effect on the transient response. As the zero moves away from the dominant poles, the responseapproaches that of the two-pole system. This analysis can be reasoned via the partial-fractionexpansion. If we assume a group of poles and a zero far from the poles, the residue of each polewill be affected the same by the zero. Hence, the relative amplitudes remain appreciably the same. For example, assume the partial-fraction expansion shown in Eq. (4.68): T s sa sb scA sbB sc   ba=  bc sb  ca=  cb sc 4.68 If the zero is far from the poles, then ais large compared to bandc, and T s≈a1=  bc sb1=  cb sc/C20/C21 a sb sc 4.69 Hence, the zero looks like a simple gain factor and does not change the relative amplitudes of the components of the response. Another way to look at the effect of a zero, which is more general, is as follows (Franklin ,1991 ): Let C(s) be the response of a system, T(s), with unity in the numerator. If we add a zero to the transfer function, yielding saT s, the Laplace transform of the response will be saC ssC saC s 4.70 Thus, the response of a system with a zero consists of two parts: the derivative of the originalresponse and a scaled version of the original response. If a, the negative of the zero, is very large, the Laplace transform of the response is approximately aC(s), or a scaled version of the original response. If ais not very large, the response has an additional component consisting of the derivative of the original response. As abecomes smaller, the derivative term contributes more to the response and has a greater effect. For step responses, thederivative is typically positive at the start of a step response. Thus, for small values of a, we can expect more overshoot in second-order systems because the derivative term will beadditive around the ﬁrst overshoot. This reasoning is borne out by Figure 4.25. TryIt 4.3 Use the following MATLAB and Control System Toolboxstatements to generate Figure 4.25. deng=[1 2 9] ; Ta=tf( [1 3] *9/3,deng) ; Tb=tf( [1 5] *9/5,deng) ; Tc=tf( [1 10] *9/10,deng) ; T=tf(9,deng) ; step(T,Ta,Tb,Tc) text(0.5,0.6, 'no zero' ) text(0.4,0.7, ... 'zero at  10') text(0.35,0.8, ... ' zero at  5 ') text(0.3,0.9, 'zero at  3 ')1.4 1.2 1.0 0.80.60.40.2 0 2.0 4.0 6.0 Time (seconds)1.6 zero at –3 zero at –5 zero at –10 no zero Normalized c(t) FIGURE 4.25 Effect of adding a zero to a two-pole system4.8 System Response with Zeros 187WEBC04 10/28/2014 16:58:24 An interesting phenomenon occurs if ais negative, placing the zero in the right half-plane. From Eq. (4.70) we see that the derivative term, which is typically positive initially, will be of opposite sign from the scaled response term. Thus, if the derivative term,sC(s), is larger than the scaled response, aC(s), the response will initially follow the derivative in the opposite direction from the scaled response. The result for a second-ordersystem is shown in Figure 4.26, where the sign of the input was reversed to yield a positive steady-state value. Notice that the response begins to turn toward the negative direction even though the ﬁnal value is positive. A system that exhibits this phenomenon is known as a nonminimum-phase system. If a motorcycle or airplane was a nonminimum-phase system, it would initially veer left when commanded to steer right. Let us now look at an example of an electrical nonminimum-phase network.1.5 1.0 3.0 4.0 5.0 Time (seconds)c(t) –0.52.0 6.01.0 0.5 0 FIGURE 4.26 Step response of a nonminimum-phase system Example 4.9 Transfer Function of a Nonminimum-Phase SystemTransfer Function of a Nonminimum-Phase System PROBLEM: a.Find the transfer function, Vo s=Vi sfor the operational ampli ﬁer circuit shown in Figure 4.27. b.IfR1R2, this circuit is known as an all-pass ﬁlter, since it passes sine waves of a wide range of frequencies without attenuating or amplifying their magnitude ( Dorf,1993 ). We will learn more about frequency response in Chapter 10. Fornow, let R 1R2;R3C1=10, and ﬁnd the step response of the ﬁlter. Show that component parts of the response can beidenti ﬁed with those in Eq. (4.70). SOLUTION: a.Remembering from Chapter 2 that the operational ampli ﬁer has a high input impedance, the current, I(s), through R 1andR2, is the same and is equal to I sVi s Vo s R1R2 4.71Vi(s)R2V1(s)R1 I(s) R3V2(s)Vo(s) C+– FIGURE 4.27 Nonminimum-phase electric circuit6 6Adapted from Dorf, R. C. Introduction to Electric Circuits, 2nd ed. (New York: John Wiley & Sons, 1989, 1993), p. 583. 1989, 1993 John Wiley & Sons. Reprinted by permission of the publisher.188 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:25 Also, Vo sAV 2 s V1 s  4.72 But, V1 sI sR1Vo s 4.73 Substituting Eq. (4.71) into (4.73), V1 s1 R1R2R1Vi sR2V0 s  4.74 Using voltage division, V2 sVi s1=Cs R31 Cs 4.75 Substituting Eqs. (4.74) and (4.75) into Eq. (4.72) and simplifying yields Vo s Vi sA R2 R1R3Cs R3Cs1 R1R2 1A 4.76 Since the operational ampli ﬁer has a large gain, A, letAapproach in ﬁnity. Thus, after simpli ﬁcation Vo s Vi sR2 R1R3Cs R2R3CsR2 R1 R2s R2 R1R3C/C18/C19 s1 R3C/C18/C19 4.77 b.Letting R1R2andR3C1=10, Vo s Vi ss 1 R3C/C18/C19 s1 R3C/C18/C19   s 10 s10 4.78 For a step input, we evaluate the response as suggested by Eq. (4.70): C s  s 10 s s10 1 s10101 s s10sCo s 10Co s 4.79 where Co s 1 s s10 4.80 is the Laplace transform of the response without a zero. Expanding Eq. (4.79) into partial fractions, C s 1 s10101 s s10 1 s101 s 1 s101 s 2 s10 4.814.8 System Response with Zeros 189WEBC04 10/28/2014 16:58:26 We conclude this section by talking about pole-zero cancellation and its effect on our ability to make second-order approximations to a system. Assume a three-pole system with a zero as shown in Eq. (4.85). If the pole term, sp3, and the zero term, sz, cancel out, we are left with T sK sz sp3 s2asb 4.85 as a second-order transfer function. From another perspective, if the zero at  zis very close to the pole at  p3, then a partial-fraction expansion of Eq. (4.85) will show that the residue of the exponential decay is much smaller than the amplitude of the second-order response.Let us look at an example.or the response with a zero is c t  e 10t1 e 10t1 2e 10t 4.82 Also, from Eq. (4.80), Co s 1=10 s1=10 s10 4.83 or the response without a zero is co t 1 101 10e 10t 4.84 The normalized responses are plotted in Figure 4.28. Notice the immediate reversalof the nonminimum-phase response, c(t). –0.5 –1.00.1 0.2 0.3 0.4 0.5 Time (seconds)Response–10c o(t) c (t)1.0 0.5 0 0 FIGURE 4.28 Step response of the nonminimum-phase network of Figure 4.27 ( c(t)) and normalized step response of an equivalent network without the zero ( 10 co t) Example 4.10 Evaluating Pole-Zero Cancellation Using ResiduesEvaluating Pole-Zero Cancellation Using Residues PROBLEM: For each of the response functions in Eqs. (4.86) and (4.87), determine whether there is cancellation between the zero and the pole closest to the zero. For any function for which pole-zero cancellation is valid, ﬁnd the approximate response. C1 s26:25 s4 s s3:5 s5 s6 4.86190 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:27 In this section, we have examined the effects of additional transfer function poles and zeros upon the response. In the next section we add nonlinearities of the type discussed in Section 2.10 and see what effects they have on system response.C2 s26:25 s4 s s4:01 s5 s6 4.87 SOLUTION: The partial-fraction expansion of Eq. (4.86) is C1 s1 s 3:5 s53:5 s6 1 s3:5 4.88 The residue of the pole at  3.5, which is closest to the zero at  4, is equal to 1 and is not negligible compared to the other residues . Thus, a second-order step response approxi- mation cannot be made for C1 s. The partial-fraction expansion for C2 sis C2 s0:87 s 5:3 s54:4 s60:033 s4:01 4.89 The residue of the pole at  4.01, which is closest to the zero at  4, is equal to 0.033, about two orders of magnitude below any of the other residues. Hence, we make a second-orderapproximation by neglecting the response generated by the pole at  4.01: C 2 s≈0:87 s 5:3 s54:4 s6 4.90 and the response c2 tis approximately c2 t≈0:87 5:3e 5t4:4e 6t 4.91TryIt 4.4 Use the following MATLAB and Symbolic Math Toolbox statements to evaluate the effect of higher-order poles by ﬁnding the component parts of the time response of c1 tandc2 tin Example 4.10. syms s C1=26.25* (s+4) /... (s* (s +3.5)*... (s+5) *(s+6) ) ; C2=26.25* (s+4) /... (s* (s+4.01) *... (s+5) *(s+6)) ; c1=ilaplace(C1) ; 'c1' c1=vpa(c1,3)c2=ilaplace(C2) ; 'c2'c2=vpa(c2,3) Skill-Assessment Exercise 4.7 PROBLEM: Determine the validity of a second-order step-response approximation for each transfer function shown below. a.G s185:71 s7 s6:5 s10 s20 b.G s197:14 s7 s6:9 s10 s20 ANSWERS: a.A second-order approximation is not valid. b.A second-order approximation is valid. The complete solution is located at www.wiley.com/college/nise .4.8 System Response with Zeros 191WEBC04 10/28/2014 16:58:27 4.9 Effects of Nonlinearities upon Time Response In this section, we qualitatively examine the effects of nonlinearities upon the time response of physical systems. In the following examples, we insert nonlinearities, such as saturation,dead zone, and backlash, as shown in Figure 2.46, into a system to show the effects of thesenonlinearities upon the linear responses. The responses were obtained using Simulink, a simulation software package that is integrated with MATLAB to provide a graphical user interface (GUI). Readers who wouldlike to learn how to use Simulink to generate nonlinear responses should consult the Simulink tutorial in Appendix C. Simulink block diagrams are included with all responses that follow. Let us assume the motor and load from the Antenna Control Case Study of Chapter 2 and look at the load angular velocity, ω o s, where ωo s0:1sθm s0:2083 E a s= s1:71from Eq. (2.208). If we drive the motor with a step input through an ampli ﬁer of unity gain that saturates at 5 volts, Figure 4.29 shows that the effect of ampli ﬁer saturation is to limit the obtained velocity. Load angular velocity (rad/second) 0 2 468 1 000.511.5 With saturationWithout saturation Time (seconds) (a) Step 10 voltsSaturation ±5 voltsMotor, load, & gears MuxScope Motor, load, & gears(b)0.2083 s + 1.71 0.2083 s + 1.71 FIGURE 4.29 a.Effect of ampli ﬁer saturation on load angular velocity response; b.Simulink block diagram192 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:27 The effect of dead zone on the output shaft driven by a motor and gears is shown in Figure 4.30. Here we once again assume the motor, load, and gears from Antenna Control Case Study of Chapter 2. Dead zone is present when the motor cannot respond to small voltages.The motor input is a sinusoidal waveform chosen to allow us to see the effects of dead zonevividly. The response begins when the input voltage to the motor exceeds a threshold. Wenotice a lower amplitude when dead zone is present. The effect of backlash on the output shaft driven by a motor and gears is shown in Figure 4.31. Again we assume the motor, load, and gears from the Antenna Control CaseStudy of Chapter 2. The motor input is again a sinusoidal waveform, which is chosen to allow us to see vividly the effects of backlash in the gears driven by the motor. As the motor reverses direction, the output shaft remains stationary while the motor begins to reverse. When thegears ﬁnally connect, the output shaft itself begins to turn in the reverse direction. The resulting response is quite different from the linear response without backlash.0 5 10 15 20 2500.20.40.60.811.2 Time (seconds) (a)Load angular displacement (radians)Without dead zone With dead zone MuxScopeSine wave Amplitude = 5 Frequency = 1 rad/sDead zone –2 to +2 (b)Motor, load, & gears Motor, load, & gearsIntegrator Integrator1 s 1 s0.2083 s + 1.71 0.2083 s + 1.71 FIGURE 4.30 a.Effect of dead zone on load angular displacement response; b.Simulink block diagram4.9 Effects of Nonlinearities upon Time Response 193WEBC04 10/28/2014 16:58:28 Now that we have seen the effects of nonlinearities on the time response, let us return to linear systems. Our coverage so far for linear systems has dealt with ﬁnding the time response by using the Laplace transform in the frequency domain. Another way to solve for the response is to use state-space techniques in the time domain. This topic is the subject ofthe next two sections. 4.10 Laplace Transform Solution of State Equations In Chapter 3, systems were modeled in state space, where the state-space representationconsisted of a state equation and an output equation. In this section, we use the Laplacetransform to solve the state equations for the state and output vectors.0 5 10 15 20 2500.050.10.150.20.25 Time (seconds) (a)Load angular displacement (radians)With backlashWithout backlash (b)0.2083 s + 1.71 0.2083 s + 1.71Motor, load, and gears Motor, load, and gearsScope1 s 1 sIntegrator IntegratorSine wave Amplitude = 5 Frequency = 1 rad/sBacklash deadband width 0.15Mux FIGURE 4.31 a.Effect of backlash on load angular displacement response; b.Simulink block diagram Skill-Assessment Exercise 4.8 PROBLEM: Use MATLAB's Simulink to reproduce Figure 4.31. ANSWER: See Figure 4.31.194 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:28 Consider the state equation _xAxBu 4.92 and the output equation yCxDu 4.93 Taking the Laplace transform of both sides of the state equation yields sX s x 0AX sBU s 4.94 In order to separate X(s), replace sX(s)w i t h sIX(s), where Iis an nnidentity matrix, and n is the order of the system. Combining all of the X(s) terms, we get sI AX sx 0BU s 4.95 Solving for X(s) by premultiplying both sides of Eq. (4.95) by sI A 1, theﬁnal solution forX(s)i s X s sI A 1x 0 sI A 1BU s adj sI A det sI Ax 0BU s 4.96 Taking the Laplace transform of the output equation yields Y sCX sDU s 4.97 Eigenvalues and Transfer Function Poles We saw that the poles of the transfer function determine the nature of the transient response of the system. Is there an equivalent quantity in the state-space representation that yields the same information? Section 5.8 formally de ﬁn e st h er o o t so fd e t sI A0 (see the denominator of Eq. (4.96) to be eigenvalues of the system matrix, A.7Let us show that the eigenvalues are equal to the poles of the system ’s transfer function. Let the output, Y(s), and the input, U(s), be scalar quantities Y(s)a n d U(s), respectively. Further, to conform to the de ﬁnition of a transfer function, let x(0), the initial state vector, equal 0, the null vector. Substituting Eq. (4.96) into Eq. (4.97) and solving for the transferfunction, Y s=U s,y i e l d s Y s U sCadj sI A det sI A/C20/C21 BD Cadj sI ABDdet sI A det sI A 4.98 The roots of the denominator of Eq. (4.98) are the poles of the system. Since the denominatorsof Eqs. (4.96) and (4.98) are identical, the system poles equal the eigenvalues. Hence, if asystem is represented in state-space, we can ﬁnd the poles from det sI A0. We will be more formal about these facts when we discuss stability in Chapter 6. The following example demonstrates solving the state equations using the Laplace transform as well as ﬁnding the eigenvalues and system poles. 7Sometimes the symbol λis used in place of the complex variable swhen solving the state equations without using the Laplace transform. Thus, it is common to see the characteristic equation also written as det λI A 0.4.10 Laplace Transform Solution of State Equations 195WEBC04 10/28/2014 16:58:30 Example 4.11 Laplace Transform Solution; Eigenvalues and PolesLaplace Transform Solution; Eigenvalues and Poles PROBLEM: Given the system represented in state space by Eqs. (4.99), _x01 0 00 1  24  26  92 435x0 012 435e  t(4.99a) y110 x (4.99b) x 01 022 435 (4.99c) do the following: a.Solve the preceding state equation and obtain the output for the given exponential input. b.Find the eigenvalues and the system poles. SOLUTION: a.We will solve the problem by ﬁnding the component parts of Eq. (4.96), followed by substitution into Eq. (4.97). First obtain AandBby comparing Eq. (4.99a) to Eq. (4.92). Since sIs00 0s0 00 s2 435 4.100  then sI As 10 0 s  1 24 26 s92 435 4.101  and sI A  1 s29s26 s9 1  24 s29ss  24s   26s24s22 643 75 s39s226s24 4.102  Since U(s)i s1 = s1(the Laplace transform for e t),X scan be calculated. Rewriting Eq. (4.96) as X s sI A 1x 0BU s 4.103  and using Bandx(0) from Eqs. (4.99a) and (4.99c), respectively, we get X1 s s310s237s29 s1 s2 s3 s4(4.104a)196 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:31 X2 s 2s2 21s 24 s1 s2 s3 s4(4.104b) X3 ss 2s2 21s 24 s1 s2 s3 s4(4.104c) The output equation is found from Eq. (4.99b). Performing the indicated addition yields Y s 110/C2/C3X1 s X2 s X3 s2 435X 1 sX2 s 4.105  or Y s s312s216s5 s1 s2 s3 s4  6:5 s219 s3 11:5 s4 4.106  where the pole at  1 canceled a zero at  1. Taking the inverse Laplace transform, y t  6:5e 2t19e 3t 11:5e 4t 4.107  b.The denominator of Eq. (4.102), which is det sI A, is also the denominator of the system ’s transfer function. Thus, det sI A0 furnishes both the poles of the system and the eigenvalues  2; 3, and  4. Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB's Symbolic Math Toolboxshould now run ch4sp1 in Appendix F at www.wiley.com/college/ nise . You will learn how to solve state equations for the output response using the Laplace transform. Example 4.11 will be solved using MATLAB and the Symbolic Math Toolbox. Skill-Assessment Exercise 4.9 PROBLEM: Given the system represented in state space by Eqs. (4.108), _x02  3  5/C20/C21 x0 1/C20/C21 e t(4.108a) y13 x (4.108b) x 021/C20/C21 (4.108c) do the following: a.Solve for y(t) using state-space and Laplace transform techniques. b.Find the eigenvalues and the system poles.TryIt 4.5 Use the following MATLAB and Symbolic Math Toolbox statements to solve Skill-Assessment Exercise 4.9 . syms s A= [0 2;  3 5] ; B= [0 ;1] ; C=[1 3] ;X0 =[2;1] ; U=1/ (s+1) ; I=[1 0;0 1] ; X=( (s*I-A)^  1) *... (X0+B*U) ; Y=C*X; Y=simplify(Y) ; y=ilaplace(Y) ; pretty(y) eig(A)4.10 Laplace Transform Solution of State Equations 197WEBC04 10/28/2014 16:58:32 4.11 Time Domain Solution of State Equations We now look at another technique for solving the state equations. Rather than using the Laplace transform, we solve the equations directly in the time domain using a method closely allied to the classical solution of differential equations. We will ﬁnd that the ﬁnal solution consists of two parts that are different from the forced and natural responses. The solution in the time domain is given directly by x teAtx 0Zt 0eA t τBu τdτ Φ tx 0Zt 0Φ t τBu τdτ 4.109  where Φ teAtby de ﬁnition, and which is called the state-transition matrix . Eq. (4.109) is derived in Appendix I located at www.wiley.com/college/nise . Readers who are not familiar with this equation or who may want to refresh their memory should consult Appendix I before proceeding. Notice that the ﬁrst term on the right-hand side of the equation is the response due to the initial state vector, x(0). Notice also that it is the only term dependent on the initial state vector and not the input. We call this part of the response the zero-input response , since it is the total response if the input is zero. The second term, called the convolution integral ,i s dependent only on the input, u, and the input matrix, B, not the initial state vector. We call this part of the response the zero-state response , since it is the total response if the initial state vector is zero. Thus, there is a partitioning of the response different from the forced/natural response we have seen when solving differential equations. In differential equations,the arbitrary constants of the natural response are evaluated based on the initial conditionsand the initial values of the forced response and its derivatives. Thus, the natural response ’s amplitudes are a function of the initial conditions of the output and the input. In Eq. (4.109), the zero-input response is not dependent on the initial values of the input and its derivatives. It is dependent only on the initial conditions of the state vector. The next example vividlyshows the difference in partitioning. Pay close attention to the fact that in the ﬁnal result the zero-state response contains not only the forced solution but also pieces of what wepreviously called the natural response. We will see in the solution that the natural response isdistributed through the zero-input response and the zero-state response. Before proceeding with the example, let us examine the form the elements of Φ t take for linear, time-invariant systems. The ﬁrst term of Eq. (4.96), the Laplace transform of the response for unforced systems, is the transform of Φ tx 0, the zero-input response from Eq. (4.109). Thus, for the unforced system ℒx t ℒΦ tx 0  sI A  1x 0 4.110  from which we can see that sI A 1is the Laplace transform of the state-transition matrix ,Φ t. We have already seen that the denominator of sI A 1is a polynomialANSWERS: a.y t  0:5e t 12e 2t17:5e 3t b. 2; 3 The complete solution is located at www.wiley.com/college/nise .198 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:34 inswhose roots are the system poles. This polynomial is found from the equation det sI A0. Since ℒ 1 sI A 1ℒ 1adj sI A det sI A/C20/C21 Φ t 4.111  each term of Φ twould be the sum of exponentials generated by the system ’s poles. Let us summarize the concepts with two numerical examples. The ﬁrst example solves the state equations directly in the time domain. The second example uses the Laplace transform to solve for the state-transition matrix by ﬁnding the inverse Laplace transform of sI A 1. Example 4.12 Time Domain SolutionTime Domain Solution PROBLEM: For the state equation and initial state vector shown in Eqs. (4.112), where u(t) is a unit step, ﬁnd the state-transition matrix and then solve for x(t). _x t01  8  6/C20/C21 x t0 1/C20/C21 u t (4.112a) x 010/C20/C21 (4.112b) SOLUTION: Since the state equation is in the form _x tAx tBu t 4.113  ﬁnd the eigenvalues using det sI A0. Hence, s 26s80, from which s1 2a n ds 2 4. Since each term of the state-transition matrix is the sum of responses generated by the poles (eigenvalues), we assume a state-transition matrix of the form Φ t K1e 2tK2e 4t K3e 2tK4e 4t K5e 2tK6e 4t K7e 2tK8e 4t"# 4.114  In order to ﬁnd the values of the constants, we make use of the properties of the state-transition matrix derived in Appendix J located at www.wiley.com/college/nise . Since Φ 0I 4.115  then K1K21 (4.116a) K3K40 (4.116b) K5K60 (4.116c) K7K81 (4.116d)4.11 Time Domain Solution of State Equations 199WEBC04 10/28/2014 16:58:35 And, since _Φ 0A 4.117  then  2K1 4K20 (4.118a)  2K3 4K41 (4.118b)  2K5 4K6 8 (4.118c)  2K7 4K8 6 (4.118d) The constants are solved by taking two simultaneous equations four times. For example, Eq. (4.116a) can be solved simultaneously with Eq. (4.118 a) to yield the values of K1andK2. Proceeding similarly, all of the constants can be found. Therefore, Φ t 2e 2t e 4t1 2e 2t 12e  4t/C18/C19  4e 2t4e 4t   e 2t2e 4t2 435 4.119  Also, Φ t τB 1 2e 2 t τ 12e  4 t τ/C18/C19 /C16  e 2 t τ2e 4 t τ/C172 643 75 4.120  Hence, the ﬁrst term of Eq. (4.109) is Φ tx 0 2e 2t e 4t  4e 2t4e 4t/C20/C21 4.121  The last term of Eq. (4.109) is Zt 0Φ t τBu τdτ1 2e 2tZt 0e2τdτ 12e  4tZt 0e4τdτ  e 2tZt 0e2τdτ2e 4tZt 0e4τdτ2 66643 7775 1 8 14e  2t18e  4t 12e  2t 12e  4t2 6643 775 4.122  Notice, as promised, that Eq. (4.122), the zero-state response, contains not only the forced response, 1/8, but also terms of the form Ae  2tand Be 4tthat are part of what we previously called the natural response. However, the coef ﬁcients, Aand B, are not dependent on the initial conditions. Theﬁnal result is found by adding Eqs. (4.121) and (4.122). Hence, x tΦ tx 0Zt 0Φ t τBu τdτ1 874e  2t 78e  4t  72e  2t72e  4t2 6643 775 4.123 200 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:36 Systems represented in state space can be simulated on the digital computer. Programs such as MATLAB can be used for this purpose. Alternately, the user can write specialized programs, as discussed in Appendix H.1 at www.wiley.com/college/nise . Students who are using MATLAB should now run ch4p3 in Appendix B.This exercise uses MATLAB to simulate the step response of systemsrepresented in state space. In addition to generating the stepresponse, you will learn how to specify the range on the time axisfor the plot.Example 4.13 State-Transition Matrix via Laplace TransformState-Transition Matrix via Laplace Transform PROBLEM: Find the state-transition matrix of Example 4.12, using sI A 1. SOLUTION: We use the fact that Φ tis the inverse Laplace transform of sI A 1. Thus, ﬁrstﬁnd sI Aas sI As  1 8 s6"# 4.124  from which sI A 1s61  8 s"# s26s8s6 s26s81 s26s8  8 s26s8s s26s82 6643 775 4.125  Expanding each term in the matrix on the right by partial fractions yields sI A  12 s2 1 s4/C18/C191=2 s2 1=2 s4/C18/C19  4 s24 s4/C18/C19 1 s22 s4/C18/C192 66643 7775 4.126  Finally, taking the inverse Laplace transform of each term, we obtain Φ t 2e  2t e 4t1 2e 2t 12e  4t/C18/C19  4e 2t4e 4t   e 2t2e 4t2 643 75 4.127  Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB's Symbolic Math Toolbox should now run ch4sp2 in Appendix F at www.wiley.com/college/ nise . You will learn how to solve state equations for the output response using the convolution integral. Examples 4.12 and 4.13 will be solved using MATLAB and the Symbolic Math Toolbox.4.11 Time Domain Solution of State Equations 201WEBC04 10/28/2014 16:58:40 Skill-Assessment Exercise 4.10 PROBLEM: Given the system represented in state space by Eqs. (4.128a): _x02  2  5/C20/C21 x0 1/C20/C21 e 2t(4.128a) y21/C2/C3 x (4.128b) x 012/C20/C21 (4.128c) do the following: a.Solve for the state-transition matrix. b.Solve for the state vector using the convolution integral. c.Find the output, y(t). ANSWERS: a.Φ t4 3e t 13e  4t/C18/C1923e  t 23e  4t/C18/C19  23e  t23e  4t/C18/C19  13e  t43e  4t/C18/C192 66643 7775 b.x t10 3e t e 2t 4 3e 4t/C18/C19  53e  te 2t83e  4t/C18/C192 66643 7775 c.y t5e  t e 2t The complete solution is located at www.wiley.com/college/nise . Case Studies Antenna Control: Open-Loop ResponseAntenna Control: Open-Loop Response In this chapter, we have made use of the transfer functions derived in Chapter 2 and the state equations derived in Chapter 3 to obtain the output response of an open-loop system.We also showed the importance of the poles of a system in determining the transientresponse. The following case study uses these concepts to analyze an open-loop portion ofthe antenna azimuth position control system. The open-loop function that we will dealwith consists of a power ampli ﬁer and motor with load. PROBLEM: For the schematic of the azimuth positi on control system shown on the front endpapers, Con ﬁguration 1, assume an open-loop system (feedback path disconnected).202 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:41 a.Predict, by inspection, the form of the open-loop angular velocity response of the load to a step-voltage input to the power ampli ﬁer. b.Find the damping ratio and natural frequency of the open-loop system. c.Derive the complete analytical expression for the open-loop angular velocity responseof the load to a step-voltage input to the power ampli ﬁer, using transfer functions. d. Obtain the open-loop state and output equations. e.Use MATLAB to obtain a plot of the open-loop angular velocityresponse to a step-voltage input. SOLUTION: The transfer functions of the power ampli ﬁer, motor, and load as shown on the front endpapers, Con ﬁguration 1, were discussed in the Chapter 2 case study. The two subsystems are shown interconnected in Figure 4.32( a). Differentiating the angular position ofthemotorandloadoutputbymultiplyingby s,weobtaintheoutputangularvelocity, ω o,as shown in Figure 4.32( a). The equivalent transfer function representing the three blocks in Figure 4.32( a) is the product of the individual transfer functions and is shown in Figure 4.32(b).8 a.Using the transfer function shown in Figure 4.32( b), we can predict the nature of the step response. The step response consists of the steady-state response generated by thestep input and the transient response, which is the sum of two exponentials generatedby each pole of the transfer function. Hence, the form of the response is ω o tABe 100tCe 1:71t 4.129  b.The damping ratio and natural frequency of the open-loop system can be found byexpanding the denominator of the transfer function. Since the open-loop transferfunction is G s 20:83 s2101:71s171 4.130  ωnﬃﬃﬃﬃﬃﬃﬃﬃ 171p 13:08;andζ3:89 (overdamped). c.In order to derive the angular velocity response to a step input, we multiply the transfer function of Eq. (4.130) by a step input, 1/ s, and obtain ωo s20:83 s s100 s1:71 4.131  Motor and load sPower ampConvert to angular velocity Vp(s) 0.2083 s(s+1.71) ( ) ( )θ a bEa(s) o(s) ωo(s) 100 (s+100) 20.83 ( s+100)(s +1.71)Vp(s) ωo(s) FIGURE 4.32 Antenna azimuth position control system for angular velocity: a.forward path; b.equivalent forward path 8This product relationship will be derived in Chapter 5.Case Studies 203WEBC04 10/28/2014 16:58:43 Expanding into partial fractions, we get ωo s0:122 s2:1210 3 s100 0:124 s1:71 4.132  Transforming to the time domain yields ωo t0:122 2:1210 3e 100t 0:124e 1:71t 4.133  d.First convert the transfer function into the state-space representation. Using Eq. (4.130), we have ωo s Vp s20:83 s2101:71s171 4.134  Cross-multiplying and taking the inver se Laplace transform with zero initial conditions, we have _ωo101:71_ωo171ωo20:83vp 4.135  Deﬁning the phase variables as x1ωo (4.136a) x2_ωo (4.136b) and using Eq. (4.135), the state equations are written as _x1x2 (4.137a) _x2 171x1 101:71x220:83vp (4.137b) where vp1, a unit step. Since x1ωois the output, the output equation is yx1 4.138  Equations (4.137) and (4.138) can be programmed to obtain the step responseusing MATLAB or alternative methods described in Appendix H.1 at www.wiley .com/college/nise . e. Students who are using MATLAB should now run ch4p4 in Appendix B. This exercise uses MATLAB to plot the step response. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. Refer to the antenna azimuth pos ition control system shown on the front endpapers, Conﬁ guration 2. Assume an open-loop system (feedback path disconnected) a n dd ot h ef o l l o w i n g : a.Predict the open-loop angular velocity response of the power ampli ﬁer, motor, and load to a step voltage at the input to the power ampli ﬁer. b.Find the damping ratio and natural frequency of the open-loop system.204 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:44 c.Derive the open-loop angular velocity response of the power ampli ﬁer, motor, and load to a step-voltage input using transfer functions. d.Obtain the open-loop state and output equations. e.Use MATLAB to obtain a plot of the open-loop angular velocity response to a step-voltage input. Unmanned Free-Swimming Submersible Vehicle: Open-Loop Pitch ResponseUnmanned Free-Swimming Submersible Vehicle: Open-Loop Pitch Response An Unmanned Free-Swimming Submersible (UFSS) vehicle is shown in Figure 4.33. The depth of the vehicle is controlled as follows. During forward motion, an elevator surface on the vehicle is de ﬂected by a selected amount. This de ﬂection causes the vehicle to rotate about the pitch axis. The pitch of the vehicle creates a vertical force that causes thevehicle to submerge or rise. The pitch control system for the vehicle is used here and insubsequent chapters as a case study to demonstrate the covered concepts. The blockdiagram for the pitch control system is shown in Figure 4.34 and on the back endpapers forfuture reference ( Johnson ,1980 ). In this case study, we investigate the time response of the vehicle dynamics that relate the pitch angle output to the elevator de ﬂection input. Courtes y of the Naval Research Laborator y. FIGURE 4.33 Unmanned Free-Swimming Submersible (UFSS) vehicle Pitch gain –K1Pitch command θc(s)Commanded elevator deflection ec(s) 2 s+2Elevator actuatorElevator deflection e(s)Vehicle dynamics –0.125(s +0.435) (s+1.23)(s2+ 0.226s + 0.0169)Pitch θ(s) Pitch rate sensor –K2s+ –+ –δ δ FIGURE 4.34 Pitch control loop for the UFSS vehicleCase Studies 205WEBC04 10/28/2014 16:58:45 PROBLEM: The transfer function relating pitch angle, θ s, to elevator surface angle, δe s, for the UFSS vehicle is θ s δe s 0:125 s0:435 s1:23 s20:226s0:0169  4.139  a.Using only the second-order poles shown in the transfer function, predict percent overshoot, rise time, peak time, and settling time. b.Using Laplace transforms, ﬁnd the analytical expression for the response of the pitch angle to a step input in elevator surface de ﬂection. c.Evaluate the effect of the additional pole and zero on the validity of the second-orderapproximation. d.Plot the step response of the vehicle dynamics and verify your conclusions found in (c). An animation PowerPoint presentation (PPT) demonstrating this system is available for instructors at www.wiley.com/college/nise .S e e UFSS Vehicle . SOLUTION: a.Using the polynomial s 20:226s0:0169, we ﬁnd that ω2 n0:0169 and 2 ζωn0:226. Thus, ωn0:13 rad/s and ζ0:869. Hence, %OSe ζπ=ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 100 0:399%. From Figure 4.16, ωnTr2:75, or Tr21:2s . T o ﬁnd peak time, we use Tpπ=ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 48:9 s. Finally, settling time is Ts4=ζωn35:4s . b.In order to display a positive ﬁnal value in Part d.w e ﬁnd the response of the system to a negative unit step, compensating for the negative sign in the transfer function. Using partial-fraction expansion, the Laplace transform of the response, θ s,i s θs 0:125s0:435  ss1:23  s20:226s0:0169  2:6161 s0:06451 s1:23  2:68s0:113   3:478ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 0:00413p s0:113 20:00413 4.140  Taking the inverse Laplace transform, θ t2:6160:0645 e 1:23t  e 0:113t 2:68 cos 0 :0643 t3:478 sin 0 :0643 t 2:6160:0645 e 1:23t 4:39e 0:113tcos 0:0643 t52:38° 4.141  c.Looking at the relative amplitudes between the coef ﬁcient of the e 1:23tterm and the cosine term in Eq. (4.165), we see that there is pole-zero cancellation between the pole at  1.23 and the zero at  0.435. Further, the pole at  1.23 is more than ﬁve times farther from the jωaxis than the second-order dominant poles at  0:113j0:0643. We conclude that the response will be close to that predicted. d.Plotting Eq. (4.141) or using a computer simulation, we obtain the step response shownin Figure 4.35. We indeed see a response close to that predicted.206 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:45 Students who are using MATLAB should now run ch4p5 in Appendix B. This exercise uses MATLAB to ﬁndζ,ω,Ts,Tp, and Trand plot a step response. Table lookup is used to ﬁndTr. The exercise applies the concepts to the problem above. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. This problem uses the same principles that were applied to the Unmanned Free-Swimming Submersible ve hicle: Ships at sea undergo motion about their roll axis, as shown in Figure 4.36. Finscalled stabilizers are used to reduce this rolling motion. The stabilizers can be positioned by a closed-loop roll controlsystem that consists of components, such as ﬁn actuators and sensors, as well as the ship ’s roll dynamics. Assume the roll dynamics, which relates the roll-angle output, θ s, to a disturbance-torque input, T D(s), is θ s TD s2:25 s20:5s2:25 4.142  Do the following: a.Find the natural frequency, damping ratio, peak time, settling time, rise time, and percentovershoot. b.Find the analytical expression for the output response to a unit step input in voltage. c. Use MATLAB to solve aandband to plot the response found in b.51 0 1 5 20 25 30 35 40 45 5000.51.01.52.02.53.0Negative pitch angle response (radians) Time (seconds) FIGURE 4.35 Negative step response of pitch control for UFSS vehicle θ TD(t) Roll axis(t) FIGURE 4.36 A ship at sea, showing roll axisCase Studies 207WEBC04 10/28/2014 16:58:45 Summary In this chapter, we took the system models developed in Chapters 2 and 3 and found the output response for a given input, usually a step. The step response yields a clear picture of the system ’s transient response. We performed this analysis for two types of systems, ﬁrst order andsecond order , which are representative of many physical systems. We then formalized our ﬁndings and arrived at numerical speci ﬁcations describing the responses. Forﬁrst-order systems having a single pole on the real axis, the speci ﬁcation of transient response that we derived was the time constant , which is the reciprocal of the real-axis pole location. This speci ﬁcation gives us an indication of the speed of the transient response. In particular, the time constant is the time for the step response to reach 63% of itsﬁnal value. Second-order systems are more complex. Depending on the values of system components, a second-order system can exhibit four kinds of behavior: 1.Overdamped 2.Underdamped 3.Undamped 4.Critically damped We found that the poles of the input generate the forced response, whereas the system poles generate the transient response. If the system poles are real, the system exhibits overdamped behavior. These exponential responses have time constants equal to the reciprocals of the pole locations. Purely imaginary poles yield undamped sinusoidal oscillations whose radian frequency is equal to the magnitude of the imaginary pole. Systems with complex poles display underdamped responses. The real part of the complex pole dictates the exponential decay envelope, and the imaginary part dictates the sinusoidal radian frequency. The exponentialdecay envelope has a time constant equal to the reciprocal of the real part of the pole, and thesinusoid has a radian frequency equal to the imaginary part of the pole. For all second-order cases, we developed speci ﬁcations called the damping ratio ,ζ, andnatural frequency ,ω n. The damping ratio gives us an idea about the nature of the transient response and how much overshoot and oscillation it undergoes, regardless of timescaling. The natural frequency gives an indication of the speed of the response. We found that the value of ζdetermines the form of the second-order natural response: Ifζ0, the response is undamped. Ifζ<1, the response is underdamped. Ifζ1, the response is critically damped. Ifζ>1, the response is overdamped. The natural frequency is the frequency of oscillation if all damping is removed. It acts as a scaling factor for the response, as can be seen from Eq. (4.28), in which the independentvariable can be considered to be ω nt. For the underdamped case we de ﬁned several transient response speci ﬁcations, including these: Percent overshoot, %OS Peak time, Tp Settling time, Ts Rise time, Tr208 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:46 The peak time is inversely proportional to the imaginary part of the complex pole. Thus, horizontal lines on the s-plane are lines of constant peak time. Percent overshoot is a function of only the damping ratio. Consequently, radial lines are lines of constant percent overshoot. Finally, settling time is inversely proportional to the real part of the complexpole. Hence, vertical lines on the s-plane are lines of constant settling time. We found that peak time, percent overshoot, and settling time are related to pole location. Thus, we can design transient responses by relating a desired response to a pole location and thenrelating that pole location to a transfer function and the system ’s components. The effects of nonlinearities, such as saturation, dead zone, and backlash, were explored using MATLAB’ s Simulink. In this chapter, we also evaluated the time response using the state-space approach. The response found in this way was separated into the zero-input response ,a n dt h e zero-state response , whereas the frequency response method yielded a total response divided into natural response andforced response components. In the next chapter we will use the transient response speci ﬁcations developed here to analyze and design systems that consist of the interconnection of multiple subsystems.We will see how to reduce these systems to a single transfer function in order to apply the concepts developed in Chapter 4. Review Questions 1.Name the performance speci ﬁcation for ﬁrst-order systems. 2.What does the performance speci ﬁcation for a ﬁrst-order system tell us? 3.In a system with an input and an output, what poles generate the steady-state response? 4.In a system with an input and an output, what poles generate the transient response? 5.The imaginary part of a pole generates what part of a response? 6.The real part of a pole generates what part of a response? 7.What is the difference between the natural frequency and the damped frequency of oscillation? 8.If a pole is moved with a constant imaginary part, what will the responses have incommon? 9.If a pole is moved with a constant real part, what will the responses have in common? 10.If a pole is moved along a radial line extending from the origin, what will the responseshave in common? 11.Listﬁve speci ﬁcations for a second-order underdamped system. 12.For Question 11 how many speci ﬁcations completely determine the response? 13.What pole locations characterize (1) the underdamped system, (2) the overdampedsystem, and (3) the critically damped system? 14.Name two conditions under which the response generated by a pole can be neglected. 15.How can you justify pole-zero cancellation? Does the solution of the state equation yield the output response of the system? Explain. 17.What is the relationship between sI A, which appeared during the Laplace transfor- mation solution of the state equations, and the state-transition matrix, which appearedduring the classical solution of the state equation? Name a major advantage of using time-domain techniques for the solution of the response. 19.Name a major advantage of using frequency-domain techniques for the solution of the response.Review Questions 209WEBC04 10/28/2014 16:58:46 20.What three pieces of information must be given in order to solve for the output response of a system using state-space techniques? 21.How can the poles of a system be found from the state equations? Problems 1.Derive the output responses for all parts of Figure 4.7. [Section: 4.4] 2.Find the output response, c(t), for each of the systems shown in Figure P4.1. Also ﬁnd the time constant, rise time, and settling time for each case. [Sections: 4.2, 4.3] (a)5 s + 51 C(s) 20 s + 201 ss C(s) (b)– – FIGURE P4.1 3.Plot the step responses for Problem 2 using MATLAB. 4.Find the capacitor voltage in the network shown in Figure P4.2 if the switch closes at t0. Assume zero initial conditions. Also ﬁnd the time constant, rise time, and settling time for the capacitor voltage.[Sections: 4.2, 4.3] 5 Vt= 02 Ω 0.5 F FIGURE P4.2 5.Plot the step response for Problem 4 using MATLAB. Fromyour plots, ﬁnd the time constant, rise time, and settling time. 6.For the system shown in Figure P4.3, (a) ﬁnd an equation that relates settling time of the velocity of the mass to M; (b)ﬁnd an equation that relates rise time of the velocity of the mass to M. [Sections: 4.2, 4.3]f(t)x(t) M6 N-s/m FIGURE P4.3 7.Plot the step response for Problem 6 using MATLAB. From yourplots, ﬁnd the time constant, rise time, and settling time. Use M= 1 and M=2 . 8.For each of the transfer functions shown below, ﬁnd the locations of the poles and zeros, plot them on thes-plane, and then write an expression for the general form of the step response without solving for theinverse Laplace transform. State the nature of eachresponse (overdamped, underdamped, and so on). [Sections: 4.3, 4.4] a.T s 2 s2 b.T s5 s3 s6 c.T s10 s7 s10 s20 d.T s20 s26s144 e.T ss2 s29 f.T s s5 s102 9.Use MATLAB to ﬁnd the poles of [Section: 4.2] T ss22s2 s46s34s27s2 10.Find the transfer function and poles of the system represented in state space here. [Section: 4.10]210 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:47 _x3 42  201 47  52 6643 775x 1  2 32 6643 775u t y171 x;x 00 0 02 66643 7775 Repeat Problem 10 using MATLAB. [Section: 4.10] 12.Write the general form of the capacitor voltage for the electrical network shown in Figure P4.4.[Section: 4.4] R1 = 10 kΩ L = 200 H C = 10 μF v(t) = u(t) R2 = 10 kΩ+– FIGURE P4.4 13.Use MATLAB to plot the capacitor voltage in Problem 12.[Section: 4.4] 14.Solve for x(t) in the system shown in Figure P4.5 iff(t) is a unit step. [Section: 4.4] ( ) Ks fvM Ks fv ft( )2 kg = 6 N/m 2 N-s/m ut( ) Nft( ) Mxt == = FIGURE P4.5 15.The system shown in Figure P4.6 has a unit step input. Find the output response as a function of time. Assumethe system is underdamped. Notice that the result will beEq. (4.28). [Section: 4.6] ωn2 ωn2 s2 + 2ζωns + R(s) C(s) FIGURE P4.6 16.Derive the relationship for damping ratio as a function of percent overshoot, Eq. (4.39). [Section: 4.6] 17.Calculate the exact response of each system ofProblem 8 using Laplace tr ansform techniques, andcompare the results to those obtained in that problem. [Sections: 4.3, 4.4] 18.Find the damping ratio and natural frequency for each second-order system of Problem 8 and show that thevalue of the damping ratio conforms to the type ofresponse (underdamped, overdamped, and so on) predicted in that problem. [Section: 4.5] 19.A system has a damping ratio of 0.15, a natural f r e q u e n c yo f2 0r a d / s ,a n dad cg a i no f1 .U s ei n v e r s eLaplace transforms to ﬁnd an analytic expression of the response of the system to a unit-step input.[Section: 4.6] 20.For each of the second-order systems that follow, ﬁnd ζ;ω n;Ts;Tp;Tr, and %OS . [Section: 4.6] a.T s16 s23s16 b.T s0:04 s20:02s0:04 c.T s1:05107 s21:6103s1:05107 21.Repeat Problem 20 using MATLAB. Have the computerprogram estimate the given speciﬁ ca- tions and plot the step responses.Estimate the rise time from the plots. [Section: 4.6] Use MATLAB ’s LTI Viewer and obtain settling time, peak time, rise time, and percent overshoot for each of the systems in Problem 20. [Section: 4.6] 23.For each pair of second-order system speci ﬁcations that follow, ﬁnd the location of the second-order pair of poles. [Section: 4.6] a.%OS12%;Ts0:6 second b.%OS10%;Tp5 seconds c.Ts7 seconds ;Tp3 seconds 24.Find the transfer function of a second-order systemthat yields a 15% overshoot and a settling time of0.7 second. [Section: 4.6] 25.For the system shown in Figure P4.7, do the following:[Section: 4.6] a.Find the transfer function G sX s=F s. b.Find ζ;ω n;%OS;Ts;Tp,Tr, and Cﬁnalfor a unit-step input.Problems 211WEBC04 10/28/2014 16:58:48 20 N/m 2 N-s/mf(t)x(t) 5 kg FIGURE P4.7 26.For the system shown in Figure P4.8, a step torque is applied at θ1 t. Find: a.The transfer function, G sθ2 s=T s b.The percent overshoot, settling time, and peak timeforθ 2 t. [Section: 4.6] 2 kg-m 2T(t)1(t) 2(t) 1 N-m-s/rad 1 N-m/radθ θ FIGURE P4.8 27.The derivation of Eq. (4.42) to calculate the settling time for a second-order system assumed an under-damped system ζ<1. In this problem you will calculate a similar result for a critically damped system ζ1. a.Show that the unit-step response for a system with transfer functionC s R sa2 sa2isc t1 e at 1at. (Note:ℒ1 sa2/C26/C27 te at. Optional: You can derive this result similarly to Example 2.2.) b.Show that the settling time can be found by solving forTsine aTs 1aTs0:02. c.Use MATLAB to plot e x 1x 0:02 vs. x. Use the plot to show that Ts5:834 a. 28.An autonomous robot to pick asparagus ( Dong, 2011 ) capable of following planting rows has an orientation system with transfer function θ θref53:176 4:6s231:281s53:176 Make a sketch of θ tin response to θref t3u t. Indicate in your plot Cfinal;Cmax;Tp, and Ts. (Hint: You may use the result of Problem 27 c).29.Figure P4.9 shows ﬁve step responses of an auto- matic voltage regulation system as one of the system parameters varies ( Gozde, 2011). Assume for all ﬁve responses that they are those of a second-ordersystem with an overshoot of 20%. Make a sketchof the positions of the poles in the complex plane foreach one of the responses. Label the curves A throughE from left to right. 0 0.5 1 .0 1 .51. 4 2 0 0.8 0.6 0.4 0.2 0 Time (seconds)Voltage change Vt(s) (V) FIGURE P4.9 Time responses for an automatic voltage regulation system 30.Derive the unit step response for each transfer function in Example 4.8. [Section: 4.7] 31.Find the percent overshoo t, settling time, rise time, and peak time for T s14:65 s20:842s2:93 s5 [Section: 4.7] 32.For each of the three unit step responses shown inFigure P4.10, ﬁnd the transfer function of the system. [Sections: 4.3, 4.6] 0.05 0 0.1 0.15 0.2 0.25 Time (seconds)Response (a)0123 FIGURE P4.10 (ﬁgure continues )212 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:48 1 02 3 4 50510152025 Time (seconds)Response (b) 5 01 0 1 5 2 0 2 5 Time (seconds)Response (c)0.2 00.40.60.81.01.21.4 FIGURE P4.10 (Continued ) 33.For the following response functions, determine if pole- zero cancellation can be approximated. If it can, ﬁnd percent overshoot, settling time, rise time, and peak time. [Section: 4.8]. a.C s s4 s s2 s23s10 b.C s s2:5 s s2 s24s20 c.C s s2:2 s s2 s2s5 d.C s s2:01 s s2 s25s20 34.Using MATLAB, plot the time response of Problem 33 aand from the plot determine percent overshoot, settling time, rise time, and peak time.[Section: 4.8] 35.Find peak time, settling time, and percent overshoot foronly those responses below that can be approximated as second-order responses. [Section: 4.8]a.c t0:003500  0:001524 e  4t  0:001976 e 3tcos 22:16t  0:0005427 e 3tsin 22:16t b.c t0:05100  0:007353 e 8t  0:007647 e 6tcos 8t  0:01309 e 6tsin 8t c.c t0:009804  0:0001857 e 5:1t  0:009990 e 2tcos 9:796t  0:001942 e 2tsin 9:796t d.c t0:007000  0:001667 e 10t  0:008667 e 2tcos 9:951t  0:0008040 e 2tsin 9:951t 36.For each of the following transfer functions with zeros, ﬁnd the component parts of the unit step response:(1) the derivative of the response without a zero and (2) the response without a zero, scaled to the negative of the zero value. Also, ﬁnd and plot the total response. Describe any nonminimum-phase behavior. [Section: 4.8] a.G ss2 s23s36 b.G ss 2 s23s36 37.Use MATLAB ’s Simulink to obtain the step response of a system, G s1 s23s10 under the following conditions: [Sec-tion: 4.9] a.The system is linear and driven by anampli ﬁer whose gain is 10. b.An ampli ﬁer whose gain is 10 drives the system. The ampli ﬁer saturates at 0:25 volts. Describe the effect of the saturation on the system’ s output. c.An ampli ﬁer whose gain is 10 drives the system. The ampli ﬁer saturates at 0:25 volts. The system drives a 1:1 gear train that has backlash. The dead-band width of the backlash is 0.02 rad.Describe the effect of saturation andbacklash on the system ’s output. A system is represented by the state and output equations that follow. Without solving the state equation, ﬁnd the poles of the system. [Section: 4.10] (Problem continues )Problems 213WEBC04 10/28/2014 16:58:49 (Continued ) _x 13  4 2"# x3 1"# u t y51/C2/C3 x 39.A system is represented by the state and output equations that follow. Withoutsolving the state equation, ﬁnd [Section: 4.10] a.the characteristic equation; b.the poles of the system _x023 0651422 6643 775x0 112 6643 775u t y120 x Given the following state-space representation of a system, ﬁndY(s): [Section: 4.10] _x12  3 1"# x1 1"# sin 3t y12/C2/C3 x;x 03 1"# 41.Given the following system represented in state space, solve for Y(s) using the Laplace transform method for solution of the stateequation: [Section: 4.10] _x010  2  41 00  62 6643 775x0 012 6643 775e  t y001/C2/C3 x;x 00 002 6643 775 Solve the following state equation and output equation for y(t), where u(t) is the unit step. Use the Laplace transform method. [Section: 4.10] _x 30  1 1"# x2 1"# u t y10/C2/C3 x;x 02 0/C20/C21 43.Solve for y(t) for the following system represented in state space, where u(t) is the unit step. Use theLaplace transform approach to solve the state equation. [Section: 4.10] _x 310 0 61 00  52 6643 775x0 112 6643 775u t y011/C2/C3 x;x 00 002 66643 7775 Use MATLAB to plot the step response of Problem 43. [Section: 4.10] 45.Repeat Problem 43 usingMATLAB ’s Symbolic Math Toolbox and Eq. (4.96). In addition, runyour program with an initial condition, x 01 102 435:Section : 4 :10 Using classical (not Laplace) methods only, solve for the state-transition matrix, the statevector, and the output of the system represented here.[Section: 4.11] _x01  1  5"# x;y12/C2/C3 x; x 01 0"# Using classical (not Laplace) methods only, solve for the state-transition matrix, the statevector, and the output of the system represented here,where u(t) is the unit step: [Section: 4.11] _x01  10"# x0 1"# u t y34/C2/C3 x;x 000"# Solve for y(t)f o rt h ef o l l o w i n gs y s t e m represented in state space, where u(t)i s214 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:50 the unit step. Use the classical approach to solve the state equation. [Section: 4.11] _x 210 001 0 6  12 6643 775x1 0 02 6643 775u t y100/C2/C3 x;x 00 002 66643 7775 Repeat Problem 48 using MATLAB’ s Symbolic Math Toolbox and Eq.(4.109) . In addition, run your programwith an initial condition, x 01 1 02 435:Section : 4 :11 Using methods described in Appendix H.1 located at www.wiley.com/college/nise , simulate the following system and plot the stepresponse. Verify the expected values of percent over-shoot, peak time, and settling time. T s 1 s20:8s1 51.Use MATLAB to simulate thefollowing system and plot theoutput, y(t), for a step input. Mark on the plot the steady-state value, percent overshoot, and the rise time, peak time, and settling time._x010  12  81 00  22 643 75x0 012 643 75u t y t 11 0/C2/C3 x;x 00 0 02 643 75 52.Ahuman responds to a visual cue with a physical re sponse, as shown in Figure P 4.11. The transfer function that relates the output physical response, P(s), to the input visual command, V(s), is ( Stefani ,1973 ). G sP s V s s0:5 s2 s5 Do the following: a.Evaluate the output response for a unit step input using the Laplace transform. b.Represent the transfer function in statespace. c. Use MATLAB to simulate thesystem and obtain a plot ofthe step response. 53.Upper motor neuron disorder patients can bene ﬁta n d regain useful function through the use of functionalneuroprostheses. The design requires a good under-standing of muscle dynamics. In an experiment todetermine muscle responses, the identi ﬁed transfer function was ( Zhou ,1995) M s 2:5e 0:008s 10:172s 10:008s 10:07s2 10:05s2 Find the unit step response of this transfer function. Step 1: Li ght source on Ste p 2: Reco gnize li ght source Ste p 3: Res pond to li ght sourceP(t) FIGURE P4.11 Steps in determining the transfer function relating output physical response to the input visual commandProblems 215WEBC04 10/28/2014 16:58:50 54.When electrodes are attached to the mastoid bones (right behind the ears) and current pulses are applied, a person will sway forward and backward. It has been foundthat the transfer function from the current to thesubject ’s angle (in degrees) with respect to the vertical is given by ( Nashner ,1974 ) θ s I s5:8 0:3s1e 0:1s s1 s2=1:220:6s=1:21 a.Determine whether a dominant pole approximationcan be applied to this transfer function. b.Find the body sway caused by a 250 μA pulse of 150 msec duration. 55.A MOEMS (optical MEMS) is a MEMS (MicroElectromechanical Systems) with an optical ﬁber channel that takes light generated from a laser diode.It also has a photodetector that measures light intensityvariations and outputs voltage variations proportionalto small mechanical device de ﬂections. Additionally, a voltage input is capable of de ﬂecting the device. The apparatus can be used as an optical switch or as a variable optical attenuator, and it does not exceed 2000 μm in any dimension. Figure P4.12 shows input-output signal pairs used to identify the parametersof the system. Assume a second-order transfer functionandﬁnd the system ’s transfer function ( Borovic ,2005).Open-Loop Responses 10 8 6 4 2 0–2V olt.x[nm]: V[V]Open-Loop Response (simulated, d = 0.8) 0 500 1000 1500t[us]Open-Loop Response(experimental) FIGURE P4.129 56.The response of the de ﬂection of a ﬂuid- ﬁlled catheter to changes in pressure can be modeled using a second-order model. Knowledge of the parameters of the model isimportant because in cardiovascular applications theundamped natural frequency should be close to ﬁve times the heart rate. However, due to sterility and otherconsiderations, measurement of the parameters isdifﬁcult. A method to obtain transfer functions using measurementsoftheamplitudesoftwoconsecutivepeaksof the response and their timing has been developed(Glantz ,1979 ). Assume that Figure P4.13 is obtained from catheter measurements. Using the informationshown and assuming a second-order model excited by a unit step input, ﬁnd the corresponding transfer function. System: T Time (sec): 0.0505 Amplitude: 1.15Step Response Time (sec)Amplitude 0 0.05 0.1 0.1500.20.40.60.811.21.41.6 System: TTime (sec): 0.0674 Amplitude: 0.923 FIGURE P4.13 9Borovic B., Liu A.Q., Popa D., Lewis F.L. Open-loop versus closed-loop control of MEMS devices: choices and issues J. Micromech. Microeng . Vol. 15, 2005. Figure 4, p. 1919.216 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:50 57.Several factors affect the workings of the kidneys. For example, Figure P4.14 shows how a step change in arterial ﬂow pressure affects renal blood ﬂow in rats. In the“hot tail ”part of the experiment, peripheral thermal receptor stimulation is achieved by inserting the rat’ s tail in heated water. Variations between different test subjectsare indicated by the vertical lines. It has been argued thatthe“control ”and“hot tail ”responses are identical except for their steady-state values ( DiBona ,2005 ). a.Using Figure P4.14, obtain the normalized C final1 transfer functions for both responses. b.Use MATLAB to prove or disprovethe assertion about the“control ”and“hot tail ”responses. HOT TAIL CONTROL Time (sec)0.030 0.0250.0200.0150.0100.0050.000Step response –1 0 1 2 3 4 5 6 FIGURE P4.1410 58.The transfer function of a nano-positioning device capable of translating biological samples within a fewμm uses a piezoelectric actuator and a linear variable differential transformer (LDVT) as a displacement sensor.The transfer function from input to displacement has beenfound to be (Salapaka ,2002) G s9:7104 s2 14400 s106:6106 s23800 s23:86106 s2240s2324 :8103 Use a dominant-pole argument to ﬁnd an equivalent transfer function with the same numerator but only threepoles. Use MATLAB to ﬁnd the actual size and approximate systemunit step responses, plottingthem on the same graph. Explain the differences between both responses given that both pairs of poles are so far apart.59.Atsomepoint intheir livesmost peoplewillsufferfrom at least one onset of low back pain. This disorder can trigger excruciating pain and temporary disability, but its causesare hard to diagnose. It is well known that low back painalters motor trunk patterns; thus it is of interest to studythe causes for these alterations and their extent. Due to thedifferent possible causes of this type of pain, a “control ” group of people is hard to obtain for laboratory studies.However, pain can be stimulated in healthy people and muscle movement ranges can be compared. Controlled back pain can be induced by injecting saline solutiondirectly into related muscles or ligaments. The transferfunction from infusion rate to pain response wasobtained experimentally by injecting a 5% saline solutionat six different infusion rates over a period of 12 minutes.Subjects verbally rated their pain every 15 seconds on ascale from 0 to 10, with 0 indicating no pain and 10 unbearable pain. Several trials were averaged and the data was ﬁtted to the following transfer function: G s 9:7210 8 s0:0001  s0:0092 s20:018s0:0001  For experimentation, it is desired to build an automaticdispensing system to make the pain level constant asshown in Figure P4.15. It follows that ideally the injection system transfer function has to be M s 1 G s to obtain an overall transfer function M sG s≈1. However, for implementation purposes M(s)m u s t have at least one more pole than zeros ( Zedka ,1999 ). Find a suitable transfer function, M(s) by inverting G(s) and adding poles that are far from the imaginary axis. ()GsConstant infusion rate Constant back painHuman Response Infusion Pump ()Ms FIGURE P4.15 60.An arti ﬁcial heart works in closed loop by varying its pumping rate according to changes in signals from the recipient ’s nervous system. For feedback compensation design it is important to know the heart ’s open-loop transfer function. To identify this transfer function, an artiﬁ cial heart is implanted in a calf while the main parts of theoriginal heart are left in place. Then the atrial pumping ratein the original heart is measured while step input changes are effected on the arti ﬁcial heart. It has been found that, in general, the obtained response closely resembles that of a second-order system. In one such experiment it wasfound that the step response has a %OS =30% and a time of ﬁrst peak T p127 sec ( Nakamura ,2002 ). Find the corresponding transfer function.10DiBona, G.F. Physiology in perspective: The Wisdom of the Body. Neural control of the kidney. Am. J. Physiol. Regul. Integr. Comp. Physiol Vol. 289, 2005. Fig. 6, p. R639. Used with permission.Problems 217WEBC04 10/28/2014 16:58:51 61.An observed transfer function from voltage potential to force in skeletal muscles is given by ( Ionescu ,2005 ) T s450 s5 s20 a.Obtain the system ’s impulse response. b.Integrate the impulse response to ﬁnd the step response. c.Verify the result in Part bby obtaining the step response using Laplace transform techniques. 62.In typical conventional aircraft, longitudinal ﬂight model linearization results in transfer functions with two pairs of complex conjugate poles. Consequently,the natural response for these airplanes has two modesin their natural response. The “short period ”mode is relatively well-damped and has a high-frequency oscilla-tion. The “plugoid mode ”is lightly damped and its oscillation frequency is relatively low. For example, inas p e c i ﬁc aircraft the transfer function from wing elevator deﬂection to nose angle (angle of attack) is (McRuer ,1973) θ s δe s  26:12 s0:0098  s1:371 s28:9910 3s3:9710 3 s24:21s18:23 a.Find which of the poles correspond to the shortperiod mode and which to the phugoid mode. b.Peform a “phugoid approximation ”(dominant-pole approximation), retaining the two poles and the zeroclosest to the; ω-axis. c. Use MATLAB to compare the stepresponses of the original transfer function and the approximation. A crosslapper is a machine that takes as an input a light ﬁber fabric and produces a heavier fabric bylaying the original fabric in layersrotated by 90 degrees. A feedbacksystem is required in order to maintain consistent product width and thickness by controlling its carriage velocity.The transfer function from servomotortorque, T m(s), to carriage velocity, Y(s) , was developed for such a machine (Kuo, 2008 ). Assume that the transfer function is: G sY s Tm s 33s4202s310061 s224332 s170704 s78s6464s52411 s452899 s3167829 s2913599 s1076555 a.Use MATLAB to ﬁnd the partial fraction residues and poles of G(s).b.Find an approximation to G(s)b y neglecting the second-order termsfound in a. c.Use MATLAB to plot on one graph thestep response of the transfer functiongiven above and the approximationfound in b.Explain the differences between the two plots. Although the use of fractional calculus in control systems isnot new, in the last decade there isincreased interest in its use forseveral reasons. The most relevant arethat fractional calculus differentialequations may model certain systemswith higher accuracy than integer differential equations, and that fractional calculus compensators mightexhibit advantageous properties forcontrol system design. An example of atransfer function obtained throughfractional calculus is: G s 1 s2:54s1:73s0:55 This function can be approximated withan integer rational transfer function(integer powers of s) using Oustaloup ’s method ( Xue, 2005 ). We ask you now to do a little research and consult the afore-mentioned reference to ﬁnd and run an M-ﬁle that will calculate the integer rational transfer function approxima- tion to G(s) and plot its step response. 65.Mathematical modeling and control of pH processes are quite challenging since the processes are highlynonlinear, due to the logarithmic relationship betweenthe concentration of hydrogen ions [H +] and pH level. The transfer function from input pH to output pH is G a sYa s Ya s14:49e 3:3s 1478 :26s1, where we assumea delay of 3.3 seconds. Ga sis a model for the anaerobic process in a wastewater treatment system in which methane bacteria need the pH to be maintained in its optimal range from 6.8 to 7.2 ( Jiayu, 2009 ). Similarly, ( Elara ﬁ,2008) used empirical techniques to model a pH neutralization plant as a second-order system with a pure delay, yieldingthe following transfer function relating output pH toinput pH: G p sYp s Xp s1:71610 5e 25s s26:98910 3s1:18510 6 where we assume a delay of 25 seconds.218 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:52 a.Find analytical expressions for the unit-step responses ya(t) and yp(t) for the two processes, Ga(s) and Gp(s). (Hint: Use the time shift theorem in Table 2.2). b.Use Simulink to plot ya(t) and yp(t) on a single graph. 66.Using wind tunnel tests, insect ﬂight dynamics can be studied in a very similar fashion to that of man-made aircraft. Linearized longitudinal ﬂight equations for a bumblebee have been found in the unforced case to be _u _w _q _θ2 666643 77775 8:79210  30:5610 3 1:010 3 13:7910 3  0:34710 3 11:710 3 0:34710 30 0:261  20:810 3 96:610 30 001 02 666643 77775u w q θ2 666643 77775 where u=forward velocity; w=vertical velocity, q= a n g u l a rp i t c hr a t ea tc e n t e ro fm a s s ,a n d θpitch angle between the ﬂight direction and the horizontal ( Sun,2005 ). a.Use MATLAB to obtain the system ’s eigenvalues. b.Write the general form of thestate-transition matrix. How manyconstants would have to be found? A dc-dc converter is a device that takes as aninput an unregulated dc voltage and provides a regulated dc voltage as its output. The output voltage may be lower (buck converter), higher (boost converter),or the same as the input voltage. Switching dc-dcconverters have a semiconductor active switch (BJT orFET) that is closed periodically with a duty cycle din a pulse width modulated (PWM) manner. For a boostconverter, averaging techniques can be used to arriveat the following state equations ( Van Dijk ,1995 ): L diL dt  1 ducEs CduC dt 1 diL uC R where LandCare, respectively, the values of internal inductance and capacitance; iLis the current through the internal inductor; Ris the resistive load connected to the converter; Esis the dc input voltage; and the capacitor voltage, uC, is the converter ’s output. a.Write the converter ’s equations in the form _xAxBu yCx assuming dis a constant. b.Using the A,B, and Cmatrices of Part a, obtain the converter ’s transfer functionUC s Es s: 68.An IPMC (ionic polymer-metal composite)is a Na ﬁon sheet plated with gold on both sides. An IPMC bends when an electric ﬁeld is appliedacross its thickness. IPMCs have been used as robotic actuators in several applications and as active catheters in biomedical applications. With the aim of improvingactuator settling times, a state-space model has beendeveloped for a 20 mm 10 mm 0:2 mm polymer sample ( Mallavarapu ,2001 ): _x 1 _x2"#  8:34  2:26 10"# x1 x2"# 1 0"# u y12:54 2 :26/C2/C3 x1 x2"# where uis the applied input voltage and yis the de ﬂection at one of the material ’s tips when the sample is tested in a cantilever arrangement. a.Find the state-transition matrix for the system. b.From Eq. (4.109) in the text, it follows that if a system has zero initial conditions, the system output for anyinput can be directly calculated from the state-spacerepresentation and the state-transition matrix using y tCx tZ CΦ t τBu τdτ Use this equation to ﬁnd the zero initial condition unit step response of the IPMC material sample. c. Use MATLAB to verify that yourstep response calculation inPart b is correct. 69.Figure P4.16 shows the step response of an electricvehicle ’s mechanical brakes when the input is the drive torque (N-m) and the output is the hydraulic brakepressure (bar) ( Ringdorfer, 2011 ). 40600 0200400 Traction motor drive torque TEM [Nm] 20 0 0.8 0.9 1 .1 1 .2 t [s]Hydraulic brake pressure p (bar) 3 1. 4 1. 5 1. 6 1 FIGURE P4.16 Step response of an electric vehicle ’s mechanical brake11 11Ringdorfer M., and Horn M. Development of a Wheel Slip Actuator Controller for Electric Vehicles using Energy Recuperation and Hydraulic Brake Control, 2011 IEEE International Conference on Control Applica- tions (CCA) , Denver, CO, USA. September 28 –30, 2011, pp. 313 –318. Figure 4, p. 315. Modelling Symposium (AMS), 2012 Sixth Asia by IEEE. Reproduced with permission of IEEE in the format Republish in a book via Copyright Clearance Center.Problems 219WEBC04 10/28/2014 16:58:52 a.Find the transfer function of the system. b.Use the values of the parameters for the transfer function obtained in Part atoﬁnd an expression for the brake pressure as a function of time. c.Find the output in bars of the system 0.2 sec after the input is applied. Check your result against Figure P4.16. 70.Figure P4.17 shows the free-body diagrams for planetarygear components used in the variable valve timing (VVT)system of an internal combustion engine ( Ren,2011 ). Here an electric motor is used to drive the carrier. Analysisshowed that the electric motor with planetary gearload (Figure P4.17) may be represented by the followingequation: Ω c sGe sEa sGm sTcam s where Ωc sis the output carrier angular speed in rad/s, Ea(s) is the input voltage applied to the armature, and Tcam sis the input load torque. The voltage input transfer function, Ge(s), is Ge s≅Kτ Rm JsDKτKm45 0:2s1 and the load torque input transfer function, Gm(s), is Gm s≅ Rmk Rm JsDKτKm 5 0:2s1 Find an analytical expression for the output carrier angular speed, ωc t,i fas t e pv o l t a g eo f1 0 0v o l t si s applied at t=0 followed by an equivalent load torque of 10 N-m, applied at t=0.4 sec. 23rp Tcam TloadF34 F13 F23F32 F43θ=20° θθα αωr ωpωs ωcrp rs1 (a) Planetary System (b) Sun Gear 4 (d) Carrier 2 (c) Planet Gear 34 FIGURE P4.17 Free-body diagrams of planetary gear system components1271.A drive system with elastically coupled load (Figure P4.18) has a motor that is connected to the load via a gearbox and a long shaft. The system parameters are: JM=drive-side inertia = 0.0338 kg-m2,JL=load-side inertia =0.1287 kg-m2, K=CT=torsional spring constant =1700 N-m/rad, and D=damping coef ﬁcient=0.15 N-m-s/rad. This system can be reduced to a simple two- inertia model that may be represented by the following transfer function, relating motor shaft speed output, Ω s, to electromagnetic torque input ( Thomsen, 2011 ): G sΩ s Tem s1 s JMJLJL CTs2D CTs1 JMJL CT JMJLs2D CTs1 Assume the system is at standstill att=0, when the electromagnetic torque, Tem, developed by the motor changes from zero to 50 N-m. Find and ploton one graph, using MATLAB or any otherprogram, the motor shaft speed, ω t, rad/sec, for the following two cases: a.No load torque is applied and, thus,ωω nl. b.A load torque, TL0:2ω tN-m is applied and ωωL. Drive motorGear box Speed signalInertia Load Torsional driveshaftStator currents SM FIGURE P4.18 Partial topology of a typical motor drive system13 72.An inverted pendulum mounted on a motor-driven cartwas presented in Problem 30 of Chapter 3. The nonlinearstate-space equations representing that system werelinearized (Prasad, 2012) around a stationary point corresponding to the pendulum point-mass, m, being in the upright position x 00a t t=0), when the force 12Ren Z., and Zhu G. G. Modeling and Control of an Electric Variable Valve Timing System for SI and HCCI Combustion Mode Transition. American Control Conference , San Francisco, CA, 2011, pp. 979 –984. Figure 2, p. 980. Reproduced with permission of IEEE in the formatRepublish in a book via Copyright Clearance Center.13Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model-Based Predictive Control for DriveSystems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions On Industrial Electronics , Vol. 58, No. 8, August 2011, pp. 3647 –3657. Portion of Figure 1, p. 3648. American Control Conference (ACC), 2011 by IEEE. Reproduced with permission of IEEE in the formatRepublish in a book via Copyright Clearance Center.220 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:53 applied to the cart was zero ( u00). The state-space model developed in that problem is _xAxBu The state variables are the pendulum angle relative to the y-axis, θ, its angular speed, θ´, the horizontal position of the cart, x, and its speed, x´. The horizontal position ofm(for a small angle, θ),xmxlsinθxlθ, was selected to be the output variable. Given the state-space model developed in that problem alongwith the output equation you developed inthat problem, use MATLAB (or any other com- puter program) to ﬁnd and plot the output, x m(t) , in meters, for an input force, u(t), equal to a unit impulse, δ(t),in Newtons.14 DESIGN PROBLEMSDESIGN PROBLEMS 73.Find an equation that relates 2% settling time to the value of fvfor the translational mechanical system shown in Figure P4.19. Neglect the mass of all compo- nents. [Section: 4.6] fv 2 N/mf(t) FIGURE P4.19 74.Consider the translational mechanical system shown in Figure P4.20. A 1-pound force, f(t), is applied at t0. Iffv1,ﬁndKandMsuch that the response is character- ized by a 4-second settling time and a 1-second peak time. Also, what is the resulting percent overshoot? [Section: 4.6] fv Kf(t)x(t) M FIGURE P4.20 75.Given the translational mechanical system of Figure P4.20, where K1 and f(t) is a unit step, ﬁnd the values ofMandfvto yield a response with 17% overshoot and a settling time of 10 seconds. [Section: 4.6] 76.Find Jand Kin the rotational system shown in Figure P4.21 to yield a 30% overshoot and a settlingtime of 3 seconds for a step input in torque. [Section: 4.6] 1 KT(t) J FIGURE P4.2177.Given the system shown in Figure P4.22, ﬁnd the damping, D, to yield a 30% overshoot in output angular displacement for a step input in torque. [Section: 4.6] Dθ 2T(t) 1 N2 = 5N1 = 25 N4 = 5N3 = 10 1 4N-m/rad1 kg-m (t) FIGURE P4.22 78.For the system shown in Figure P4.23, ﬁnd N1=N2so that the settling time for a step torque input is 16 seconds. [Section: 4.6] T(t) 1 N-m/rad 1 N-m-s/rad 1 kg-m2N1 N2 1 kg-m2 FIGURE P4.23 79.Find MandK, shown in the system of Figure P4.24, to yield x(t)with16%overshootand20secondssettlingtime for a step input in motor torque, Tm t. [Section: 4.6] For the motor: Ja= 1 kg -m2 Da= 1 N-m-s/rad Ra=1 Ω Kb= 1 V-s/rad Kt= 1 N-m/AN2 = 20N1 = 10 K J = 1 kg-m2 Ideal gear 1:1 fv = 1 N-s/mM x(t)MotorTm(t) Radius = 2 m FIGURE P4.24 80.Ifvi tis a step voltage in the network shown in Figure P4.25, ﬁnd the value of the resistor such that a 20% overshoot in voltage will be seen across the capacitor if C10 6F and L1 H. [Section: 4.6] R CL +– vi(t) FIGURE P4.2514Hint: Use the command “impulseplot ”over a time period from 0 to 11.0 seconds with a step of 0.1 seconds.Problems 221WEBC04 10/28/2014 16:58:53 81.Ifvi tis a step voltage in the network shown in Figure P4.25, ﬁnd the values of RandCto yield a 20% overshoot and a 1 ms settling time for vc tifL1H . [Section: 4.6] 82.Given the circuit of Figure P 4.25, where C10μF,ﬁnd RandLto yield 15% overshoot with a settling time of 7msforthecapacitorvoltage.Theinput, v(t),isaunitstep. [Section: 4.6] 83.For the circuit shown in Figure P4.26, ﬁnd the values of R2andCto yield 8% overshoot with a settling time of 1 ms for the voltage across the capacitor, with vi tas a step input. [Section: 4.6] 1 H + + ––R2 1 MΩ vi(t) vc(t) C FIGURE P4.26 PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 84.Control of HIV/AIDS . In Chapter 3, Problem 31, we developed a linearized state-space model of HIV infection. The model assumedthat two different drugs were used to combat the spread ofthe HIV virus. Since this book focuses on single-input,single-output systems, only one of the two drugs will be considered. We will assume that only RTIs are used as an input. Thus, in the equations of Chapter 3, Problem 31,u 20(Craig, 2004 ). a.Show that when using only RTIs in the linearizedsystem of Problem 31, Chapter 3, and substitutingthe typical parameter values given in the table ofProblem 31 c, Chapter 3, the resulting state-space representation for the system is given by _T _T * _v2 6643 775 0:04167 0  0:0058 0:0217  0:24 0 :0058 0 100  2:42 643 75 T T* v2 643 755:2  5:2 02 643 75u1 y001/C2/C3T T* v2 643 75 b.Obtain the transfer function from RTI ef ﬁciency to virus count; namely, ﬁndY s U1 s.c.Assuming RTIs are 100% effective, what will be the steady-state change of virus count in a given infected patient? Express your answer in virus copies per mlof plasma. Approximately how much time will themedicine take to reach its maximum possibleeffectiveness? 85.Hybrid vehicle. Assume that the car motive dynamics for a hybrid electric vehicle (HEV) can be described bythe transfer function ΔV s ΔFe s1 1908 s10 where AVis the change of velocity in m/sec and ΔFeis the change in excess motive force in Nnecessary to propel the vehicle. a.Find an analytical expression for Δv(t)for a step change in excess motive force ΔFe=2650 N. b.Simulate the system usingMATLAB. Plot the expressionfound in Part atogether with your simulated plot. 86.Parabolic trough collector. Figure P4.27 illustrates the results of an open-loop step-response experimentperformed on a parabolic trough collector setup(Camacho, 2012 ). In this experiment, the ﬂuid ﬂow on the system is suddenly decreased 1 liter/sec at t=0 hours, resulting in a temperature increase as shown inFigure P4.27. Use the ﬁgure to ﬁnd an approximate transfer function for the system. (Note: Since no furtherinformation is given on the system dynamics and due tovisual approximations, several solutions are possible.) 8 7 6 5 4 3 2 1 00 0.02 0.04 0.06 0.08 0.1 0.12 0.14 Time (hours)Outlet Oil Temperature Change (C) FIGURE P4.27222 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:54 Cyber Exploration Laboratory Experiment 4.1 Objective To evaluate the effect of pole and zero location upon the time response of ﬁrst- and second-order systems. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.Given the transfer function G sa sa, evaluate settling time and rise time for the following values of a: 1, 2, 3, 4. Also, plot the poles. 2.Given the transfer function G sb s2asb: a.Evaluate percent overshoot, settling time, peak time, and rise time for the following values: a4;b25. Also, plot the poles. b.Calculate the values of aandbso that the imaginary part of the poles remains the same but the real part is increased two times over that of Prelab 2 a, and repeat Prelab 2a . c.Calculate the values of aandbso that the imaginary part of the poles remains the same but the real part is decreased by one half over that of Prelab 2 a, and repeat Prelab 2a . a. For the system of Prelab 2a , calculate the values of aandbso that the real part of the poles remains the same but the imaginary part is increased two times over that of Prelab 2a , and repeat Prelab 2 a. b.For the system of Prelab 2a , calculate the values of aandbso that the real part of the poles remains the same but the imaginary part is increased four times over that ofPrelab 2a , and repeat Prelab 2 a. a. For the system of Prelab 2 a, calculate the values of aandbso that the damping ratio remains the same but the natural frequency is increased two times over that of Prelab2a, and repeat Prelab 2 a. b.For the system of Prelab 2 a, calculate the values of aandbso that the damping ratio remains the same but the natural frequency is increased four times over that of Prelab2a, and repeat Prelab 2 a. 5.Brieﬂy describe the effects on the time response as the poles are changed in each of Prelabs 2, 3, and 4. Lab 1.Using Simulink, set up the systems of Prelab 1 and plot the step response of each of thefour transfer functions on a single graph by using the Simulink LTI Viewer (See Appendix E.6 online for tutorial). Also, record the values of settling time and rise time for each step response. 2.Using Simulink, set up the systems of Prelab 2 . Using the Simulink LTI Viewer, plot thestep response of each of the three transfer functions on a single graph. Also, record thevalues of percent overshoot, settling time, peak time, and rise time for each step response. 3.Using Simulink, set up the systems of Prelab 2a and Prelab 3. Using the Simulink LTI Viewer, plot the step response of each of the three transfer functions on a single graph.Also, record the values of percent overshoot, settling time, peak time, and rise time foreach step response.Cyber Exploration Laboratory 223WEBC04 10/28/2014 16:58:54 4.Using Simulink, set up the systems of Prelab 2a and Prelab 4. Using the Simulink LTI Viewer, plot the step response of each of the three transfer functions on a single graph. Also, record the values of percent overshoot, settling time, peak time, and rise time foreach step response. Postlab 1.For the ﬁrst-order systems, make a table of calculated and experimental values of settling time, rise time, and pole location. 2.For the second-order systems of Prelab 2, make a table of calculated and exper-imental values of percent overshoot, se ttling time, peak time, rise time, and pole location. 3.For the second-order systems of Prelab 2 aand Prelab 3, make a table of calculated and experimental values of percent overshoot, settling time, peak time, rise time, and polelocation. 4.For the second-order systems of Prelab 2 aand Prelab 4, make a table of calculated and experimental values of percent overshoot, settling time, peak time, rise time, and polelocation. 5.Discuss the effects of pole location upon the time response for both ﬁrst- and second- order systems. Discuss any discrepancies between your calculated and experimentalvalues. Experiment 4.2 Objective To evaluate the effect of additional poles and zeros upon the time response of second-order systems. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.a.Given the transfer function G s25 s24s25, evaluate the percent overshoot, settling time, peak time, and rise time. Also, plot the poles. b.Add a pole at  200 to the system of Prelab 1 a. Estimate whether the transient response in Prelab 1 awill be appreciably affected. c.Repeat Prelab 1b with the pole successively placed at  20; 10, and  2. 2.A zero is added to the system of Prelab 1 aat 200 and then moved to  50; 20; 10; 5, and  2. List the values of zero location in the order of the greatest to the least effect upon the pure second-order transient response. 3.Given the transfer function G s 25b=a sa sb s24s25, let a3 and b3:01, 3.1, 3.3, 3.5, and 4.0. Which values of bwill have minimal effect upon the pure second-order transient response? 4.Given the transfer function G s 2500 b=a sa sb s240s2500 , leta30 and b30:01, 30.1, 30.5, 31, 35, and 40. Which values of bwill have minimal effect upon the pure second-order transient response? Lab 1.Using Simulink, add a pole to the second-order system of Prelab 1 aand plot the step responses of the system when the higher-order pole is nonexistent, at  200 ; 20; 10,224 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:54 and  2. Make your plots on a single graph, using the Simulink LTI Viewer. Normalize all plots to a steady-state value of unity. Record percent overshoot, settling time, peak time, and rise time for each response. 2.Using Simulink, add a zero to the second-order system of Prelab 1 aand plot the step responses of the system when the zero is nonexistent, at  200 ; 50; 20; 10; 5, and  2. Make your plots on a single graph, using the Simulink LTI Viewer. Normalize all plots to a steady-state value of unity. Record percent overshoot, settling time, peak time, and rise time for each response. 3.Using Simulink and the transfer function of Prelab 3 with a3, plot the step responses of the system when the value of bis 3, 3.01, 3.1, 3.3, 3.5, and 4.0. Make your plots on a single graph using the Simulink LTI Viewer. Record percent overshoot, settling time, peak time, and rise time for each response. 4.Using Simulink and the transfer function of Prelab 4 with a30, plot the step responses of the system when the value of bis 30, 30.01, 30.1, 30.5, 31, 35, and 40. Make your plots on a single graph, using the Simulink LTI Viewer. Record percent overshoot,settling time, peak time, and rise time for each response. Postlab 1.Discuss the effect upon the transient response of the proximity of a higher-order pole tothe dominant second-order pole pair. 2.Discuss the effect upon the transient response of the proximity of a zero to the dominantsecond-order pole pair. Explore the relationship between the length of the vector fromthe zero to the dominant pole and the zero ’s effect upon the pure second-order step response. 3.Discuss the effect of pole-zero cancellation upon the transient response of a dominant second-order pole pair. Allude to how close the canceling pole and zero should be and the relationships of (1) the distance between them and (2) the distance between the zeroand the dominant second-order poles. Experiment 4.3 Objective To use LabVIEW Control Design and Simulation Module for time performance analysis of systems. Minimum Required Software Packages LabVIEW with the Control Design and Simulation Module Prelab One of the experimental direct drive robotic arms built at the MTT Arti ﬁcial Intelligence Laboratory and the CMU Robotics Institute can be represented as a feedback control system with a desired angular position input for the robot ’s joint position and an angular position output representing the actual robot ’s joint position. The forward path consists of three transfe r functions in cascade; (1) a compensator, Gcs , to improve performance; (2) a power ampli ﬁer of gain, Ka=1; and (3) the transfer function of the motor and load, Gs  2292 =ss75:6  . Assume a unity-feedback system. Initially the system will be controlled with Gcs =0.6234, which is called a proportional controller ( McKerrow ,1991 ). 1.Obtain the closed-loop system transfer function and use MATLAB to make a plot ofthe resulting unit step response. 2.Repeat with G c s3:050:04s, which is called a PD controller. 3.Compare both responses and draw conclusions regarding their time domainspeciﬁcations.Cyber Exploration Laboratory 225WEBC04 10/28/2014 16:58:55 Lab Create a LabVIEW VI that uses a simulation loop to implement both controllers given in the Prelab. Plot the responses on the same graph for comparison purposes. Postlab Compare the responses obtained using your LabVIEW VI with those obtained in the Prelab. Experiment 4.4 Objective To use the LabVIEW Control Design and Simulation Module to evaluate the effect of pole location upon the time response of second-order systems. Minimum Required Software Packages LabVIEW with the Control Design and Simulation Module. Prelab Solve the Cyber Exploration Laboratory Experiment 4.1 Prelab, Part 2. Lab Build a LabVIEW VI to implement the functions studied in the Prelab of Cyber Exploration Laboratory 4.1, Part 2. Speci ﬁcally for Prelab Part 2a , your front panel will have the coef ﬁcients of the second- order transfer function as inputs. The front panel will also have the following indicators: (1) the transfer function; (2) the state-space representation; (3) the pole locations; (4) the stepresponse graph; (5) the time response of the two states on the same graph; (6) the timeresponse parametric data including rise time, peak time, settling time, percent overshoot,peak value, and ﬁnal value. For Prelab, Part 2 b, your front panel will also have the following indicators: (1) the step response graph, and (2) the parametric data listed above for Prelab, Part 2 a, but speci ﬁct o Part 2 b. For Prelab, Part 2c , your front panel will also have the following indicators: (1) the step response graph, and (2) the parametric data listed above for Prelab, Part 2 a, but speci ﬁct o Part 2 c. Run the VI to obtain the data from the indicators. Postlab Use your results to discuss the effect of pole location upon the step response. Hardware Interface Laboratory Experiment 4.5 Open-Loop Speed Control of a Motor Objectives To control the speed of a motor in open-loop fashion and verify the functions of the motor control setup as preparation for future experiments. Material Required Computer with LabVIEW Installed; myDAQ; dc brushed gear- motor with Hall Sensor quadrature encoder ( –10 V to +10 V normal operation range); and motor control chip BA6886N or a transistor circuit substitute. (Note: For simplicity the input to the motor will be analog. PWM will be avoided as it adds an additional layer of complexity to these experiments. Plan accordingly if you decide to substitute the motor control chip.) File Provided at www.wiley.com/college/nise Open Loop Control.vi Prelab Plan how you will wire your motor to the breadboard. A possibility is to solder a header to six matching color wires that will allow you to connect and disconnect the motorfrom the myDAQ in an ef ﬁcient manner. You can also solder wires to the motor ’s cables.226 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:55 Lab Software: The front panel for the Open Loop Control VI is shown in Figure P4.28( a). The input to the system is the voltage applied to the motor. The output is the motor speed in revolutions per second (rps). The corresponding block diagram is shown inFigure P4.28( b). Note the value indicated by the blue arrow in Figure P4.28( b). In order to get a meaningful reading for the speed of the motor, this value needs to be modi ﬁed depending on the gear ratio of your motor and the counts of your encoder. To understand how this value is calculated, notethat the DAQ Assistant block on top of the diagram reads the encoder input from the myDAQ.One would reasonably assume that the frequency of this signal is proportional to the speed ofthe motor, which is theoretically true. However, at very low speeds the DAQ assistant “times out”and fails to provide a reading if frequency is measured directly. To avoid this problem, a different method is used to calculate the signal frequency. The DAQ assistant measures therising edges of the encoder signal every 100 msec and subtracts that number from the onesaccumulated during the previous 100 msec period. The frequency of the encoder signal(in edges/msec) is found by dividing the value of this subtraction by the period (100 msec).See the Block Diagram to understand how this algorithm was implemented. We use an example to illustrate the calculation of the constant pointed to with the red arrow. If a 9.7:1 gear ratio is used with a 48 CPR encoder, with each revolution the encoder will (b) FIGURE P4.28 Open loop control.vi: a.Front Panel; b.Block DiagramHardware Interface Laboratory 227WEBC04 10/28/2014 16:58:55 generate a total of 48 edges in each of the encoder channels. Using one channel only and positive edges, there are 12 positive edges/rev of the motor shaft. The total number of counts (positive edges) generated by each revolution of the external shaft is 9.7 ×12=116.4 positive edges/rev. In order to ﬁnd the rotational speed, the frequency (edges/msec) of the signal is divided by the total number of counts generated by the external shaft, adjusting the units for time from msec to sec: Rotational Speed (rps) =Freq×1000/(9.7 ×12)=Freq×8.591. This value has to be set as illustrated in the Block Diagram. The DAQ Assistant2 block transmits the voltage from the control slider to the myDAQ and to the motor control chip. The DAQ Assistant3 block makes sure that the output to the chip is zeroed when the VI terminates. Hardware: Connect the myDAQ, the motor, and the motor controller as shown in Figure P4.29. Procedure: 1.Verify the operation of your circuit by running the VI and changing the position of the slider. If everything is correct, the motor speed will vary as the slider ’s position changes. 2.Verify that you are using the correct scaling factor for your motor by setting yourmotor to rotate at 0.5 rps. Count the number of rotations in the shaft of the motor over 10 sec using a stopwatch. Repeat by setting the rotational speed at 1 rps. Your measurements must be consistent. MyDAQ12 34567 8 9 10BA6886N 10Ω 9VMotor white FIGURE P4.29 Wiring diagram15 15MyDAQ right slot shown on left is taken from Multisim program module NI myDAQ design and also reproduced in White-Paper 11423, Figure 2. Both Multisim and the White Paper are from National Instruments.228 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:55 3.Perform the following measurements moving the slider: a.Increase the voltage starting at zero and record the minimum voltage for the motor to start rotating. b.Starting the slider at a rotating speed, reduce the voltage until the motor stops.Record this voltage.Are these values equal? These values are important and will be used in future labs.Keep them in a safe place so that you don ’t have to repeat these measurements again. 4.Make a graph where the x-axis is the input voltage, and the y-axis is the speed in rps. Include the results in Part 3. 5.Draw a functional block diagram of the system (similar to Chapter 1), labeling eachof the components in the diagram. 6.The circuit and the VI above allow the motor to rotate in one direction only. Modifythe VI and the circuit so that the motor direction and speed can be controlledfrom the VI. Note that the reference input to the chip can only accept positive voltage values. The motor control data sheet indicates that direction of rotation must be changed byﬂipping the logical values of Pin 2 and Pin 10 on the motor control chip. However, a careful reading of the data sheet indicates that there must be an instant of time (ofunspeci ﬁed duration) in which both inputs must be False before switching direction. You may want to use a LabVIEW ring to simulate a three-way switch. Use two of theselections of the ring to control the motor ’s rotation direction. The third selection in the ring should provide low inputs to the motor controller logical inputs to be able to stopthe motor before switching direction. Experiment 4.6 Transfer Function Identi ﬁcation Objective To identify the transfer function of a motor from voltage input to angular motor speed using myDAQ and LabView. Material Required Computer with LabVIEW Installed; myDAQ; dc brushed gearmotor with Hall sensor quadrature encoder ( –10 to+10 V normal operation range); and motor control chip B6886N (or a transistor circuit substitute). File Provided at www.wiley.com/college/nise Plant Identi ﬁcation 2.vi Prelab Answer the following questions: 1.What is the unit-step response of a system with transfer function G sK sτ1, where Kandτare constants >0? 2.Make a hand-sketch of the response of the unit-step response of the system in Part 1. 3.What is the value of the step response of the system in Part 1 when t=τ? 4.Find or derive the expression for the transfer function from voltage to angular speedof an unloaded permanent magnet dc motor. Compare this transfer function to theﬁrst-order system in Part 1. Lab Connect the myDAQ, the motor, and the motor controller as shown in Figure P4.30. This setup is identical to the one that was used initially in Experiment 4.5, except that wehave connected the two analog input channels to the two analog output channels. This willallow us to use the myDAQ oscilloscope for measurements. If you decide to use an externaloscilloscope, these connections are not necessary. 1.Open the Oscilloscope and Plant Identi ﬁcation 2.vi shown in Figures P4.31 and P4.32, respectively. You can also choose to use an external oscilloscope. Usesettings similar to the ones shown in Figure P4.31.Hardware Interface Laboratory 229WEBC04 10/28/2014 16:58:55 MyDAQ12345678 9 10BA6886N 10Ω 9VMotor white FIGURE P4.30 Wiring diagram16 FIGURE P4.31 LabVIEW Oscilloscope —NI ELVISmx 16MyDAQ right slot shown on left is taken from Multisim program module NI myDAQ design and also reproduced in White-Paper 11423, Figure 2. Both Multisim and the White Paper are from National Instruments.230 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:55 2.In your Plant Identi ﬁcation 2.vi choose the value of amplitude and offset shown in Figure P4.32. A LabView error will be generated if the square wave generates negative values as these are not allowed as inputs to the chip. The value of thefrequency is irrelevant; you just have to make sure the input is slow enough so thatthe motor speed reaches steady state as shown in Figure P4.32. 3.Run the Plant Identi ﬁcation 2.vi and the Oscilloscope. Press the Stop button on the Oscilloscope as soon as it shows a full semi-cycle of positive speed, similar to Figure P4.31. 4.Click on the Log button in the Oscilloscope, give the ﬁle a name, and save it to disk. Open the ﬁle using a spreadsheet program. 5.Note that the response of the system in the Oscilloscope is in all likelihood that of aﬁrst-order system, consistent with theoretical expectations. Thus, the transfer function will be of the form: Ω s Ei sK sτ1. Kcan readily be found from the Oscilloscope or the Plant Identi ﬁcation 2.vi. In the example shown, K9:71 91:079. We will use the spreadsheet data to ﬁnd the time constant, τ. 6.Use your spreadsheet data to ﬁnd the time constant. For help on completing this task, go to www.wiley.com/college/nise . 7.Repeat the experiment for input voltages of 2 V, 5 V, and 9 V. Postlab 1.Is your system linear? How do you know? 2.If your system is linear for a range of inputs, ﬁnd a judicious interpolation between the three transfer functions you found in Part 7 of the lab. Write down your ﬁnal transfer function result and save it for use in subsequent experiments. Bibliography Borovic, B., Liu, A. Q., Popa, D., and Lewis, F. L. Open-loop versus closed-loop control of MEMS devices: choices and issues. Journal of Micromechanics, Microengineering , vol. 15, 2005, pp. 1917 –1924. FIGURE P4.32 Plant Identi ﬁcation 2.vi Front PanelBibliography 231WEBC04 10/28/2014 16:58:56 Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W.; Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. DiBona, G. F. Physiology in perspective: The Wisdom of the Body. Neural control of the kidney. American Journal of Physiology –Regulatory, Integrative and Comparative Physiology , vol. 289, 2005, pp. R633 –R641. Dong, F., Heinemann, W., and Kasper, R. Development of a Row Guidance System for an Autonomous Robot for White Asparagus Harvesting. Computers and Electronics in Agriculture, vol. 79, pp. 216 –225, 2011. Dorf, R. C. Introduction to Electric Circuits , 2d ed. Wiley, New York, 1993. Elaraﬁ, M. G. M. K., and Hisham, S. B. Modeling and Control of pH Neutralization Using Neural Network Predictive Controller. International Conference on Control, Automation and Systems 2008, Seoul, Korea. Oct. pp. 14 –17, 2008. Franklin, G. F., Powell, J. D., and Emami-Naeini, A. Feedback Control of Dynamic Systems , 2d ed. Addison-Wesley, Reading, MA, 1991. Glantz, A. S., and Tyberg, V. J. Determination of Frequency Response from Step Response: Application to Fluid-Filled Catheters. American Journal of Physiology , vol. 2, 1979, pp. H376 –H378. Good, M. C., Sweet, L. M., and Strobel, K. L. Dynamic Models for Control System Design of Integrated Robot and Drive Systems. Journal of Dynamic Systems, Measurement, and Control , March 1985, pp. 53 –59. Gozde, H., and Taplamacioglu, M. C. Comparative performance analysis of arti ﬁcial bee colony algorithm for automatic voltage regulator (AVR) system. Journal of the Franklin Institute , vol. 348, pp. 1927 –1946, 2011. Ionescu, C., and De Keyser, R. Adaptive Closed-Loop Strategy for Paralyzed Skeletal Muscles. Proceedings of the IASTED International Conference on Biomedical Engineering , 2005. Jiayu, K., Mengxiao, W., Linan, M., and Zhongjun, X. Cascade Control of pH in an Anaerobic Waste Water Treatment System, 3d International Conference on Bioinformatics and Biomedical Engineering , 2009. Johnson, H. et al. Unmanned Free-Swimming Submersible (UFSS) System Description . NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C. 1980. Kuo, B. C. Automatic Control Systems , 5th ed. Prentice Hall, Upper Saddle River, NJ, 1987. Kuo, C-F. J., Tsai, C-C., and Tu, H-M. Carriage Speed Control of a Cross-lapper System for Nonwoven Web Quality. Fibers and Polymers , vol. 9, no. 4, 2008, pp. 495 –502. Mallavarapu, K., Newbury, K., and Leo, D. J. Feedback Control of the Bending Response of Ionic Polymer-Metal Composite Actuators. Proceedings of the SPIE, vol. 4329, 2001, pp. 301 –310. McKerrow, P. J. Introduction to Robotics. Addison-Wesley, Singapore, 1991. McRuer, D., Ashkenas, I., and Graham, D. Aircraft Dynamics and Automatic Control . Princeton University Press, 1973. Nakamura, M. et al. Transient Response of Remnant Atrial Heart Rate to Step Changes in Total Artiﬁcial Heart Output. Journal of Artiﬁcial Organs , vol. 5, 2002, pp. 6– 12. Nashner, L. M., and Wolfson, P. In ﬂuence of Head Position and Proprioceptive Cues on Short Latency Postural Re ﬂexes Evoked by Galvanic Stimulation of the Human Labyrinth. Brain Research, vol. 67, 1974, pp. 255 –268. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Philips, C. L., and Nagle, H. T. Digital Control Systems Analysis and Design . Prentice Hall, Upper Saddle River, NJ, 1984. Prasad, L., Tyagi, B., and Gupta, H. Modelling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Symposium , 2012, pp. 138 –143.232 Chapter 4 Time ResponseWEBC04 10/28/2014 16:58:56 Ren, Z., and Zhu, G. G. Modeling and Control of an Electric Variable Valve Timing System for SI and HCCI Combustion Mode Transition. American Control Conference, San Francisco, CA, 2011, pp. 979 –984. Ringdorfer M., and Horn M. Development of a Wheel Slip Actuator Controller for Electric Vehicles using Energy Recuperation and Hydraulic Brake Control. 2011 IEEE International Conference on Control Applications (CCA), Denver, CO, September 28 –30, 2011, pp. 313 –318. Salapaka, S., Sebastian, A., Cleveland, J. P., and Salapaka, M. V. High Bandwidth Nano-Positioner: A Robust Control Approach. Review of Scienti ﬁc Instruments , vol. 73, No. 9, 2002, pp. 3232 –3241. Sawusch, M. R., and Summers, T. A. 1001 Things to Do with Your Macintosh . TAB Books, Blue Ridge Summit, PA, 1984. Stefani, R. T. Modeling Human Response Characteristics . COED Application Note No. 33. Computers in Education Division of ASEE, 1973. Sun, M., and Xiong, Y. Dynamic Flight Stability of a Hovering Bumblebee. Journal of Experimental Biology , vol. 208, 2005, pp. 447 –459. Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model-Based Predictive Control for Driv e Systems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions on Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Timothy, L. K., and Bona, B. E. State Space Analysis: An Introduction . McGraw-Hill, New York, Van Dijk, E., Spruijt, J. N., O ’Sullivan, D. M., and Klaasens, J. B. PWM-Switch Modeling of DC-DC Converters. IEEE Transactions on Power Electronics , vol. 10, 1995, pp. 659 –665. X u e ,D . ,a n dC h e n ,Y .D .S u b - O p t i m u m H2Rational Approximations to Fractional Order Linear Systems. Proceedings of IDET/CIE 2005 . ASME 2005 International Design Engineering Technical Conferences & Computers and Information in Engineering Conference, Long Beach. CA, 2005. pp. 1 –10. Zedka, M., Prochazka, A., Knight, B., Gillard, D., and Gauthier, M. Voluntary and Re ﬂex Control of Human Back Muscles During Induced Pain. Journal of Physiology , vol. 520, 1999, pp. 591 –604. Zhou, B. H., Baratta, R. V., Solomonow, M., and D ’Ambrosia, R. D. The Dynamic Response of the Cat Ankle Joint During Load-Moving Contractions. IEEE Transactions on Biomedical Engineering , vol. 42, no. 4, 1995, pp. 386 –393.Bibliography 233WEBC04 10/28/2014 16:58:56 Page 234WEBC05 10/28/2014 17:35:46 Reduction of Multiple Subsystems Chapter Learning Outcomes After completing this chapter the student will be able to: Reduce a block diagram of multiple subsystems to a single block representing the transfer function from input to output (Sections 5.1 –5.2) Analyze and design transient response for a system consisting of multiple subsystems (Section 5.3) Convert block diagrams to signal-ﬂ ow diagrams (Section 5.4) Find the transfer function of multiple subsystems using Mason ’sr u l e( S e c t i o n5 . 5 ) Represent state equations as signal- ﬂow graphs (Section 5.6) Represent multiple subsystems in state space in cascade, parallel, controllercanonical, and observer canonical forms (Section 5.7) Perform transformations between similar systems using transformationmatrices; and diagonalize a system matrix (Section 5.8) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the front endpapers, you will be able to (a) ﬁnd the closed-loop transfer function that represents the system from input to output; (b) ﬁnd a state-space representation for the closed-loop system; (c) predict, for a simpli ﬁed system5 235WEBC05 10/28/2014 17:35:46 model, the percent overshoot, settling time, and peak time of the closed-loop system for a step input; (d) calculate the step response for the closed-loop system; and (e) for the simpli ﬁed model, design the system gain to meet a transient response requirement. Given the block diagrams for the Unmanned Free-Swimming Submersible(UFSS) vehicle ’s pitch and heading control systems on the back endpapers, you will be able to represent each control system in state space. 5.1 Introduction We have been working with individual subsystems represented by a block with its input andoutput. More complicated systems, however, are represented by the interconnection of many subsystems. Since the response of a single transfer function can be calculated, we want to represent multiple subsystems as a single transfer function. We can then apply theanalytical techniques of the previous chapters and obtain transient response informationabout the entire system. In this chapter, multiple subsystems are represented in two ways: as block diagrams and as signal-ﬂ ow graphs. Although neither representation is limited to a particular analysis and design technique, block diagrams are usually used for frequency-domain analysis anddesign, and signal- ﬂow graphs for state-space analysis. Signal- ﬂow graphs represent transfer functions as lines, and signals as small-circular nodes. Summing is implicit. To show why it is convenient to use signal- ﬂow graphs for state-space analysis and design, consider Figure 3.10. A graphical representation of a system ’s transfer function is as simple as Figure 3.10( a). However, a graphical representation of a system in state space requires representation of each state variable, as in Figure 3.10( b). In that example, a single-block transfer function requires seven blocks and a summingjunction to show the state variables explicitly. Thus, signal- ﬂow graphs have advantages over block diagrams, such as Figure 3.10( b): They can be drawn more quickly, they are more compact, and they emphasize the state variables. We will develop techniques to reduce each representation to a single transfer function. Block diagram algebra will be used to reduce block diagrams and Mason ’s rule to reduce signal- ﬂow graphs. Again, it must be emphasized that these methods are typically used as described. As we shall see, however, either method can be used for frequency-domain orstate-space analysis and design. 5.2 Block Diagrams As you already know, a subsystem is represented as a block with an input, an output, anda transfer function. Many systems are composed of multiple subsystems, as in Figure 5.1.When multiple subsystems are interconnected, a few more schematic elements must beadded to the block diagram. These new elements are summing junctions and pickoff points . All component parts of a block diagram f or a linear, time-invariant system are shown in Figure 5.2. The characteristic of the summing junction shown in Figure 5.2( c) is that the output signal, C(s), is the algebraic sum of the input signals, R 1(s),R2(s), and R3(s). The ﬁgure shows three inputs, but any number can be present. A pickoff point, as shown in Figure 5.2( d), distributes the input signal, R(s), undiminished, to several output points. We will now examine some common topologies for interconnecting subsystems and derive the single transfer function representation for each of them. These common topologies will form the basis for reducing more complicated systems to a single block.236 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:47 Cascade Form Figure 5.3( a) shows an example of cascaded subsystems. Intermediate signal values are shown at the output of each subsystem. Each signal is derived from the product of the input times the transfer function. The equivalent transfer function, Ge(s), shown in Figure 5.3( b), is the output Laplace transform divided by the input Laplace transform from Figure 5.3( a), or Ge sG3 sG2 sG1 s (5.1) which is the product of the subsystems ’transfer functions. Equation (5.1) was derived under the assumption that interconnected subsystems do not load adjacent subsystems. That is, a subsystem ’s output remains the same whether or notR1(s)R(s) Signals System Summing junction (c)Pickoff point (d)+ + –(a) (b)C(s) C(s) = R 1(s) + R2(s) – R3(s) R2(s) R3(s)R(s) C(s)G(s) R(s)R(s) R(s) R(s)Input Output FIGURE 5.2 Components of a block diagram for a linear, time-invariant system Pressurized crewcompartmentForwardreactioncontrolsystem FlightdeckCryogenic oxygen/hydrogentanks and fuel cells (oxygen for crew and compartment) Deployable radiator panels Payload bay doors Payload bay FixedradiatorpanelsVertical tail Elevon rub panels Rudder/speed brake Elevons Space shuttlemain engines(3) OMSengines (2)Bodyflap RCS engines (38 primary, 6 vernier) SRB nozzle SRB separation motorsSRB holddownposts (4)Wing OMSfueltankOMSoxidizertankRCSoxidizertankRCSfueltankSRBpropellantand casingRemotemanipulatorsystemLiquidhydrogentankSRBrecoverysystemSRBseparationmotorsMid-deckand crewside hatchET liquidoxygen tank NASA-Houston. FIGURE 5.1 The recently retired space shuttle consisted of multiple subsystems. Can you identify those that are control systems or parts of control systems?5.2 Block Diagrams 237WEBC05 10/28/2014 17:35:47 the subsequent subsystem is connected. If there is a change in the output, the subsequent subsystem loads the previous subsystem, and the equivalent transfer function is not theproduct of the individual transfer functions. The network of Figure 5.4( a) demonstrates this concept. Its transfer function is G 1 sV1 s Vi s1 R1C1 s1 R1C1(5.2) Similarly, the network of Figure 5.4( b) has the following transfer function: G2 sV2 s V1 s1 R2C2 s1 R2C2(5.3) If the networks are placed in cascade, as in Figure 5.4( c), you can verify that the transfer function found using loop or node equations is G sV2 s Vi s1 R1C1R2C2 s21 R1C11 R2C21 R2C1/C18/C19 s1 R1C1R2C2(5.4) (a)Vi(s)R1 G1(s)=V1(s) V1(s)C1+ (c)R1 R2 C1 C2 V2(s) = G 2(s)G 1(s) GT(s) = V2(s) Vi(s) Vi(s)Vi(s) Vi(s)+(b)R2 V1(s) V2(s) G2(s) = V2(s) V1(s)C2+ = KG 2(s)G 1(s)K (d)R1 R2 C1 C2 V2(s) GT(s) = V2(s)Vi(s)+ ––+ – –+ – – + –+– FIGURE 5.4 Loading in cascaded systems(a)G1(s)R(s) X2(s) = G1(s)R(s) G2(s)X1(s) = G2(s)G 1(s)R(s) G3(s)C(s) = G3(s)G 2(s)G 1(s)R(s) R(s) G3(s)G 2(s)G 1(s)C(s) (b)FIGURE 5.3 a.Cascaded subsystems; b.equivalent transfer function238 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:47 But, using Eq. (5.1), G sG2 sG1 s1 R1C1R2C2 s21 R1C11 R2C2/C18/C19 s1 R1C1R2C2(5.5) Equations (5.4) and (5.5) are not the same: Eq. (5.4) has one more term for the coef ﬁcient of sin the denominator and is correct. One way to prevent loading is to use an ampli ﬁer between the two networks, as s h o w ni nF i g u r e5 . 4 ( d). The ampli ﬁer has a high-impedance input, so that it does not load the previous network. At the same time it has a low-impedance output, so that it looks like a pure voltage source to the subsequent network. With the ampliﬁ er included, the equivalent transfer function is the product of the transfer functions and the gain, K,o f the ampli ﬁer. Parallel Form Figure 5.5 shows an example of parallel subsystems. Again, by writing the output of each subsystem, we can ﬁnd the equivalent transfer function. Parallel subsystems have a common input and an output formed by the algebraic sum of the outputs from all of the subsystems.The equivalent transfer function, G e(s), is the output transform divided by the input transform from Figure 5.5( a), or Ge sG1 sG2 sG3 s (5.6) which is the algebraic sum of the subsystems ’transfer functions; it appears in Figure 5.5( b). ± (a) (b)R(s)G1(s) G2(s) G3(s)X1(s) = R(s)G 1(s) X2(s) = R(s)G 2(s) X3(s) = R(s)G 3(s)C(s) = [ ± G1(s) ± G2(s) ± G3(s)]R(s) C(s)± G1(s) ± G2(s) ± G3(s)± R(s)± FIGURE 5.5 a.Parallel subsystems; b.equivalent transfer function5.2 Block Diagrams 239WEBC05 10/28/2014 17:35:48 Feedback Form The third topology is the feedback form, which will be seen repeatedly in subsequent chapters. The feedback system forms the basis for our study of control systems engineering. In Chapter 1, we de ﬁned open-loop and closed-loop systems and pointed out the advantage of closed-loop, or feedback control, systems over open-loop systems. As we move ahead,we will focus on the analysis and design of feedback systems. Let us derive the transfer function that represents the system from its input to its output. The typical feedback system, described in detail in Chapter 1, is shown inFigure 5.6( a); a simpli ﬁed model is shown in Figure 5.6( b). 1Directing our attention to the simpli ﬁed model, E sR sC sH s (5.7) But since C sE sG s, E sC s G s(5.8) InputR(s) ++ –Actuating signal (error)Controller Plant Output Output transducerFeedback (a) Input++ –Actuating signal (error)Plant and controller Output Feedback (b) Output Input (c)Input transducer G1(s)E(s)G2(s) G3(s)C(s) H2(s) H1(s) R(s) E(s)G(s)C(s) H(s) R(s) G(s) C(s) 1 G(s)H(s)+–FIGURE 5.6 a.Feedback control system; b.simpli ﬁed model; c.equivalent transfer function 1The system is said to have negative feedback if the sign at the summing junction is negative and positive feedback if the sign is positive.240 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:48 Substituting Eq. (5.8) into Eq. (5.7) and solving for the transfer function, C s=R sGe s, we obtain the equivalent, or closed-loop , transfer function shown in Figure 5.6( c), Ge sG s 1G sH s(5.9) The product, G(s)H(s), in Eq. (5.9) is called the open-loop transfer function,o r loop gain . So far, we have explored three different con ﬁgurations for multiple subsystems. For each, we found the equivalent transfer function. Since these three forms are combined into complex arrangements in physical systems, recognizing these topologies is aprerequisite to obtaining the equivalent transfer function of a complex system. In thissection, we will reduce complex systems composed of multiple subsystems to singletransfer functions. Moving Blocks to Create Familiar Forms Before we begin to reduce block diagrams, it must be explained that the familiar forms (cascade, parallel, and feedback) are not always apparent in a block diagram. For example, in the feedback form, if there is a pickoff point after the summing junction,you cannot use the feedback formula to reduce the feedback system to a single block.That signal disappears, and there is no place to reestablish the pickoff point. This subsection will discuss basic block moves that can be made in order to establish familiar forms when they almost exist. In particular, it will explain how to move blocks leftand right past summing junctions and pickoff points. Figure 5.7 shows equivalent block diagrams formed when transfer functions are moved left or right past a summing junction, and Figure 5.8 shows equivalent blockdiagrams formed when transfer functions are moved left or right past a pickoff point. Inthe diagrams the symbol means “equivalent to.” These equivalences, along with the forms studied earlier in this section, can be used to reduce a block diagram to a singletransfer function. In each case of Figures 5.7 and 5.8, the equivalence can be veriﬁ ed by tracing the signals at the input through to the output and recognizing that the output R(s) ++ –+ +– (a)X(s)G(s)C(s) R(s) G(s)C(s) G(s) X(s) ++ – 1 (b)++ –R(s) G(s)C(s) R(s) G(s)C(s) G(s)X(s) X(s)FIGURE 5.7 Block diagram algebra for summing junctions —equivalent forms for moving a block a.to the left past a summing junction; b.to the right past a summing junction5.2 Block Diagrams 241WEBC05 10/28/2014 17:35:48 signals are identical. For example, in Figure 5.7( a), signals R(s)a n d X(s) are multiplied by G(s) before reaching the output. Hence, both block diagrams are equivalent, with C sR sG sX sG s.I nF i g u r e5 . 7 ( b),R(s) is multiplied by G(s) before reaching the output, but X(s) is not. Hence, both block diagrams in Figure 5.7( b)a r ee q u i v a l e n t , with C sR sG sX s. For pickoff points, similar reasoning yields similar results for the block diagrams of Figure 5.8(a )a n d( b). Let us now put the whole story together with examples of block diagram reduction.(b)G(s)R(s)G(s) R(s) R(s) R(s) G(s)R(s)G(s) R(s)G(s) R(s)G(s)(a) R(s) R(s)R(s) G(s) G(s) G(s)R(s)G(s) R(s)G(s) R(s)G(s)R(s)G(s) R(s) R(s)G(s)G(s)1 G(s)1 FIGURE 5.8 Block diagram algebra for pickoff points — equivalent forms for moving a block a.to the left past a pickoff point; b.to the right past a pickoff point Example 5.1 Block Diagram Reduction via Familiar FormsBlock Diagram Reduction via Familiar Forms PROBLEM: Reduce the block diagram shown in Figure 5.9 to a single transfer function. SOLUTION: We solve the problem by following the steps in Figure 5.10. First, the three summing junctions can be collapsed in to a single summing junction, as shown in Figure 5.10( a).+ –+ ++ –R(s)G1(s) G2(s) H1(s) H2(s) H3(s)G3(s)C(s) FIGURE 5.9 Block diagram for Example 5.1242 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:49 Second, recognize that the three feedback functions, H1(s),H2(s), and H3(s), are connected in parallel. They are fed from a common signal source, and their outputs are summed. The equivalent function is H1 s H2 sH3 s. Also recognize that G2(s) andG3(s) are connected in cascade. Thus, the equivalent transfer function is the product, G3(s)G2(s). The results of these steps are shown in Figure 5.10( b). Finally, the feedback system is reduced and multiplied by G1(s) to yield the equivalent transfer function shown in Figure 5.10( c). (c)R(s) G3(s)G 2(s)G 1(s) C(s) 1 + G3(s)G 2(s)[H 1(s) – H2(s) + H3(s)]+ – (b)R(s)G1(s) G3(s)G 2(s)C(s) H1(s) – H2(s) + H3(s)+– (a)R(s) +G1(s) G2(s) G3(s) H1(s) H2(s) H3(s)+ C(s) – FIGURE 5.10 Steps in solving Example 5.1: a.Collapse summing junctions; b.form equivalent cascaded system in the forward path andequivalent parallel system in thefeedback path; c.form equivalent feedback system and multiply by cascaded G 1(s) Example 5.2 Block Diagram Reduction by Moving BlocksBlock Diagram Reduction by Moving Blocks PROBLEM: Reduce the system shown in Figure 5.11 to a single transfer function. R(s) V1(s) V2(s) V3(s) V4(s) V5(s) V8(s) V7(s) V6(s)G1(s) G2(s) G3(s) H3(s) H2(s) H1(s)C(s) + –+ –+ –+ FIGURE 5.11 Block diagram for Example 5.25.2 Block Diagrams 243WEBC05 10/28/2014 17:35:49 SOLUTION: In this example we make use of the equivalent forms shown in Figures 5.7 a n d5 . 8 .F i r s t ,m o v e G2(s) to the left past the pickoff point to create parallel subsystems, and reduce the feedback system consisting of G3(s)a n d H3(s). This result is shown in Figure 5.12(a ). Second, reduce the parallel pair consisting of 1/ G2(s) and unity, and push G1(s)t o the right past the summing junction, creating parallel subsystems in the feedback. These results are shown in Figure 5.12( b). Third, collapse the summing junctions, add the two feedback elements together, and combine the last two cascaded blocks. Figure 5.12( c) shows these results. Fourth, use the feedback formula to obtain Figure 5.12( d). Finally, multiply the two cascaded blocks and obtain the ﬁnal result, shown in Figure 5.12(e ). (e)R(s) [1 + G2(s)H 2(s) + G1(s)G 2(s)H 1(s)][1 + G3(s)H 3(s)]G1(s)G 3(s)[1 + G2(s)] C(s)(d)R(s) G1(s)G 2(s) V4(s) 1 + G3(s)H 3(s)1 + 1 G2(s)G3(s) 1 + G2(s)H 2(s) + G1(s)G 2(s)H 1(s)C(s) + H1(s)+ –1 + G3(s)H 3(s) (c)V4(s) 1 + 1 G2(s)G3(s) H2(s) G1(s)+ –R(s) C(s)G1(s)G 2(s)1 + 1+ –+ – (b)V1(s)G1(s)G 2(s)V4(s) G2(s) 1 + G3(s)H 3(s)G3(s) C(s) H2(s) G1(s) H1(s)R(s)1 + G3(s)H 3(s)+ –+ –+ R(s) (a)V2(s) V3(s) V7(s) V6(s)G3(s)G1(s) H1(s)H2(s)1 G2(s) G2(s)V1(s) V4(s) C(s)+ FIGURE 5.12 Steps in the block diagram reduction for Example 5.2244 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:49 Students who are using MATLAB should now run ch5p1 in Appendix B to perform block diagram reduction. In this section, we examined the equivalence of several block diagram con ﬁgurations containing signals, systems, summing junctions, and pickoff points. These con ﬁgurations were the cascade, parallel, and feedback forms. During block diagram reduction, we attempt to produce these easily recognized forms and then reduce the block diagram to a single transferfunction. In the next section, we will examine some applications of block diagram reduction. 5.3 Analysis and Design of Feedback Systems An immediate application of the principles of Section 5.2 is the analysis anddesign of feedback systems that reduce to second-order systems. Percentovershoot, settling time, peak time, and rise time can then be found from theequivalent transfer function. Consider the system shown in Figure 5.14, which can model a control system such as the antenna azimuth position control system. For example, thetransfer function, K=s sa, can model the ampli ﬁers, motor, load, and gears. From Eq. (5.9), the closed-loop transfer function, T(s), for this system is T s K s2asK(5.10) where Kmodels the ampli ﬁer gain, that is, the ratio of the output voltage to the input voltage. AsKvaries, the poles move through the three ranges of operation of a second-order system:Skill-Assessment Exercise 5.1 PROBLEM: Find the equivalent transfer function, T sC s=R s, for the system shown in Figure 5.13. ANSWER: T ss31 2s4s22s The complete solution is at www.wiley.com/college/nise .++ + ––R(s) sssC(s) 1 s1 s FIGURE 5.13 Block diagram for Skill-Assessment Exercise 5.1TryIt 5.1 Use the following MATLAB and Control System Toolbox statements to ﬁnd the closed- loop transfer function of thesystem in Example 5.2 if all G i s1= s1and all Hi s1=s. G1=tf (1, [1 1] ) ; G2=G1;G3=G1;H1=tf (1, [1 0] ) ; H2=H1;H3=H1; System=append... (G1,G2,G3,H1,H2,H3) ; input=1;output=3; Q= [1  4000 21  500 321  5 6 42000 5200063000 ] ; T=connect(System,... Q,input,output) ; T=tf(T) ;T=minreal (T) K + –s(s + a)R(s) C(s) FIGURE 5.14 Second-order feedback control system5.3 Analysis and Design of Feedback Systems 245WEBC05 10/28/2014 17:35:50 overdamped, critically damped, and underdamped. For example, for Kbetween 0 and a2=4, the poles of the system are real and are located at s1;2 a 2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ a2 4Kp 2(5.11) AsKincreases, the poles move along the real axis, and the system remains overdamped until Ka2=4. At that gain, or ampli ﬁcation, both poles are real and equal, and the system is critically damped. For gains above a2=4, the system is underdamped, with complex poles located at s1;2 a 2jﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 4K a2p 2(5.12) Now as Kincreases, the real part remains constant and the imaginary part increases. Thus, the peak time decreases and the percent overshoot increases, while the settling time remains constant. Let us look at two examples that apply the concepts to feedback control systems. In theﬁrst example, we determine a system ’s transient response. In the second example, we design the gain to meet a transient response requirement. Example 5.3 Finding Transient ResponseFinding Transient Response PROBLEM: For the system shown in Figure 5.15, ﬁnd the peak time, percent overshoot, and settling time. SOLUTION: The closed-loop transfer function found from Eq. (5.9) is T s25 s25s25(5.13) From Eq. (4.18), ωnﬃﬃﬃﬃﬃ 25p 5 (5.14) From Eq. (4.21), 2ζωn5 (5.15) Substituting Eq. (5.14) into (5.15) and solving for ζyields ζ0:5 (5.16) Using the values for ζand ωnalong with Eqs (4.34), (4.38), and (4.42), we ﬁnd, respectively, Tpπ ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 0:726 second (5.17) %OSe ζπ=ﬃﬃﬃﬃﬃﬃﬃ ﬃ 1 ζ2p 10016:303 (5.18) Ts4 ζωn1:6 seconds (5.19)–25 + s(s + 5)R(s) C(s) FIGURE 5.15 Feedback system for Example 5.3246 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:51 MATLAB ’s Simulink provides an alternative method of simulating feedback systems to obtain the time response. Students who are performing the MATLAB exercises and want to explore the addedcapability of MATLAB ’s Simulink should now consult Appendix C. Example C.3 includes a discussion about, and an example of, the useof Simulink to simulate feedback systems with nonlinearities.Students who are using MATLAB should now run ch5p2 in Appendix B.You will learn how to perform block diagram reduction followed byan evaluation of the closed-loop system's transient response by ﬁnding, T p,%OS , and Ts. Finally, you will learn how to use MATLAB to generate a closed-loop step response. This exercise uses MATLAB to do Example 5.3. Example 5.4 Gain Design for Transient ResponseGain Design for Transient Response PROBLEM: Design the value of gain. K, for the feedback control system of Figure 5.16 so that the system will respond with a 10% overshoot. SOLUTION: The closed-loop transfer function of the system is T sK s25sK(5.20) From Eq. (5.20), 2ζωn5 (5.21) and ωnﬃﬃﬃﬃ Kp (5.22) Thus, ζ5 2ﬃﬃﬃﬃ Kp (5.23) Since percent overshoot is a function only of ζ, Eq. (5.23) shows that the percent overshoot is a function of K. A 10% overshoot implies that ζ0:591. Substituting this value for the damping ratio into Eq. (5.23) and solving for Kyields K17:9 (5.24) Although we are able to design for percent overshoot in this problem, we could not have selected settling time as a design criterion because, regardless of the value of K, the real parts,  2.5, of the poles of Eq. (5.20) remain the same.–s(s + 5)K + R(s) C(s) FIGURE 5.16 Feedback system for Example 5.4Virtual Experiment 5.1 Gain Design Put theory into practice designing the position control gain for theQuanser Linear Servo and simulating its closed-loop response in LabVIEW. Thisconcept is used, for instance, tocontrol a rover exploring the terrain of a planet. Virtual experiments are found on Learning Space.5.3 Analysis and Design of Feedback Systems 247WEBC05 10/28/2014 17:35:52 5.4 Signal-Flow Graphs Signal- ﬂow graphs are an alternative to block diagrams. Unlike block diagrams, which consist of blocks, signals, summing junctions, and pickoff points, a signal-ﬂow graph consists only of branches , which represent systems, and nodes , which represent signals. These elements are shown in Figures 5.17( a) and ( b), respectively. A system is represented by a line with an arrow showing the direction of signal ﬂow through the system. Adjacent to the line we write the transfer function. A signal is a node with the signal ’s name written adjacent to the node. Figure 5.17(c ) shows the interconnection of the systems and the signals. Each signal is the sum of signals ﬂowing into it. For example, we see that the signal V sR1 sG1 s R2 sG2 sR3 sG3 s; the signal C2 sV sG5 sSkill-Assessment Exercise 5.2 PROBLEM: For a unity feedback control system with a forward-path transfer function G s16 s sa, design the value of ato yield a closed-loop step response that has 5% overshoot. ANSWER: a5:52 The complete solution is at www.wiley.com/college/nise . TryIt 5.2 Use the following MATLAB and Control System Toolbox statements to ﬁndζ,ωn,%OS , Ts,Tp, and Trfor the closed-loop unity feedback system described in Skill-Assessment Exercise 5.2. Start with a2 and try some other values. A step response for the closed-loop system willalso be produced. a=2; numg=16; deng=poly ( [0  a] ) ; G=tf (numg, deng) ; T=feedback (G, 1) ;[numt, dent] =... tfdata (T, 'v') ; wn=sqrt (dent (3) ) z=dent(2) / (2*wn) Ts=4/ (z*wn) Tp=pi/ (wn*... sqrt (1 -z^2) ) pos=exp (-z*pi... /sqrt (1 -z^2) ) *100 Tr=(1.76*z^3-... 0.417*z^2 +1.039*... z+1) /wn step (T) R1(s) R2(s)G1(s) –G2(s) R3(s)G3(s) –G6(s)G5(s)G4(s) V(s)C1(s) C2(s) C3(s) (c) (b)V(s) (a)G(s) FIGURE 5.17 Signal- ﬂow graph components: a.system; b.signal; c.interconnection of systems and signals248 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:53 R1 sG1 sG5 s R2 sG2 sG5 sR3 sG3 sG5 s; and the signal C3 s  V sG6 s  R1 sG1 sG6 sR2 sG2 sG6 s R3 sG3 sG6 s. Notice that in summing negative signals we associate the negative sign with the system and not with a summing junction, as in t h ec a s eo fb l o c kd i a g r a m s . To show the parallel between block diagrams and signal- ﬂow graphs, we will take some of the block diagram forms from Section 5.2 and convert them to signal- ﬂow graphs in Example 5.5. In each case, we will ﬁrst convert the signals to nodes and then interconnect the nodes with system branches. In Example 5.6, we will convert an intricate block diagramto a signal- ﬂow graph. Example 5.5 Converting Common Block Diagrams to Signal-Flow GraphsConverting Common Block Diagrams to Signal-Flow Graphs PROBLEM: Convert the cascaded, parallel, and feedback forms of the block diagrams shown in Figures 5.3( a), 5.5( a), and 5.6( b), respectively, into signal- ﬂow graphs. SOLUTION: In each case, we start by drawing the signal nodes for that system. Next we interconnect the signal nodes with system branches. The signal nodes for the cascaded, parallel, and feedback forms are shown in Figure 5.18( a), (c), and (e ), respectively. The interconnection of the nodes with branches that represent the subsystems is shown in Figure 5.18( b), (d), and (f ) for the cascaded, parallel, and feedback forms, respectively. 1 ( f)R(s) E(s)G(s) C(s) –H(s) (e)R(s) E(s)C(s)(d)1 11V1(s)G1(s) V2(s)R(s) C(s)G2(s) V3(s)G3(s) (c)V2(s)R(s) C(s) V3(s)(b)R(s)G1(s) V2(s)G2(s) V1(s)G3(s) C(s) (a)V2(s) V1(s)C(s) R(s) V1(s) FIGURE 5.18 Building signal- ﬂow graphs: a.cascaded system nodes (from Figure 5.3(a ));b.cascaded system signal- ﬂow graph; c.parallel system nodes (from Figure 5.5(a ));d.parallel system signal- ﬂow graph; e.feedback system nodes (from Figure 5.6( b)); f.feedback system signal-ﬂ ow graph5.4 Signal-Flow Graphs 249WEBC05 10/28/2014 17:35:53 Example 5.6 Converting a Block Diagram to a Signal-Flow GraphConverting a Block Diagram to a Signal-Flow Graph PROBLEM: Convert the block diagram of Figure 5.11 to a signal- ﬂow graph. SOLUTION: Begin by drawing the signal nodes, as shown in Figure 5.19( a). Next, interconnect the nodes, showing the direction of signal ﬂow and identifying each transfer function. The result is shown in Figure 5.19( b). Notice that the negative signs at the summing junctions of the block diagram are represented by the negative transfer functions of the signal- ﬂow graph. Finally, if desired, simplify the signal- ﬂow graph to the one shown in Figure 5.19( c) by eliminating signals that have a single ﬂow in and a single ﬂow out, such as V2(s),V6(s),V7(s), and V8(s). (b)1111 –1R(s)G1(s) V2(s) V6(s) H1(s)V7(s)G2(s) V5(s)G3(s) V8(s)H3(s) –1V4(s)C(s) V3(s) V1(s) –1H2(s)(a)R(s) V1(s) V2(s) V3(s) V4(s) V5(s)C(s) V8(s) V7(s) V6(s) (c)111 R(s)G1(s) V3(s)G2(s) V5(s)G3(s) –H2(s) –H3(s) –H1(s)V1(s)C(s) V4(s) FIGURE 5.19 Signal- ﬂow graph development: a.signal nodes; b.signal- ﬂow graph; c.simpli ﬁed signal- ﬂow graph250 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:53 5.5 Mason ’s Rule Earlier in this chapter, we discussed how to reduce block diagrams to single transfer functions. Now we are ready to discuss a technique for reducing signal-ﬂ ow graphs to single transfer functions that relate the output of a system to its input. The block diagram reduction technique we studied in Section 5.2 requires successive application of fundamental relationships in order to arrive at the system transfer function. On the other hand, Mason ’s rule for reducing a signal- ﬂow graph to a single transfer function requires the application of one formula. The formula was derived by S. J. Mason when herelated the signal- ﬂow graph to the simultaneous equations that can be written from the graph ( Mason ,1953 ). In general, it can be complicated to implement the formula without making mistakes. Speci ﬁcally, the existence of what we will later call nontouching loops increases the complexity of the formula. However, many systems do not have non-touching loops. For these systems, you may ﬁnd Mason’ s rule easier to use than block diagram reduction. Mason ’s formula has several components that must be evaluated. First, we must be sure that the de ﬁnitions of the components are well understood. Then we must exert care in evaluating the components. To that end, we discuss some basic de ﬁnitions applicable to signal- ﬂow graphs; then we state Mason ’s rule and do an example. Definitions Loop gain . The product of branch gains found by traversing a path that starts at a node and ends at the same node, following the direction of the signal ﬂow, without passing through any other node more than once. For examples of loop gains, see Figure 5.20. There are four loop gains: 1.G2 sH1 s (5.25a) 2.G4 sH2 s (5.25b) 3.G4 sG5 sH3 s (5.25c) 4.G4 sG6 sH3 s (5.25d) Forward-path gain . The product of gains found by traversing a path from the input node to the output node of the signal-ﬂow graph in the direction of signal ﬂow. Examples of forward-path gains are also shown in Figure 5.20. There are two forward-path gains: 1.G1 sG2 sG3 sG4 sG5 sG7 s (5.26a) 2.G1 sG2 sG3 sG4 sG6 sG7 s (5.26b) Nontouching loops . Loops that do not have any nodes in common. In Figure 5.20, loop G2(s)H1(s) does not touch loops G4(s)H2(s),G4(s)G5(s)H3(s), and G4(s)G6(s)H3(s). Nontouching-loop gain . The product of loop gains from nontouching loops taken two, three, four, or more at a time. In Figure 5.20 the product of loop gain G2(s)H1(s) and loop gainSkill-Assessment Exercise 5.3 PROBLEM: Convert the block diagram of Figure 5.13 to a signal- ﬂow graph. ANSWER: The complete solution is at www.wiley.com/college/nise . R(s)G1(s) G2(s) G3(s) G4(s) V5(s) V4(s) H1(s) H2(s)V3(s)G5(s) V2(s)G6(s) G7(s) V1(s)C(s) H3(s) FIGURE 5.20 Signal- ﬂow graph for demonstrating Mason’ s rule5.5 Mason ’s Rule 251WEBC05 10/28/2014 17:35:55 G4(s)H2(s) is a nontouching-loop gain taken two at a time. In summary, all three of the nontouching-loop gains taken two at a time are 1.G2 sH1 sG4 sH2 s (5.27a) 2.G2 sH1 sG4 sG5 sH3 s (5.27b) 3.G2 sH1 sG4 sG6 sH3 s (5.27c) The product of loop gains G4 sG5 sH3 sG4 sG6 sH3 sis not a nontouching-loop gain since these two loops have nodes in common. In our example there are no nontouching- loop gains taken three at a time since three nontouching loops do not exist in the example. We are now ready to state Mason ’s rule. Mason ’s Rule The transfer function, C s=R s, of a system represented by a signal-ﬂ ow graph is G sC s R sP kTkΔk Δ(5.28) where knumber of forward paths Tkthekth forward-path gain Δ1 Σloop gains Σnontouching-loop gains taken two at a time  Σ nontouching-loop gains taken three at a time Σnontouching-loop gains taken four at a time  ... ΔkΔ Σloop gain terms in Δthat touch the kth forward path: In other words ;Δk is formed by eliminating from Δthose loop gains that touch the kth forward path : Notice the alternating signs for the components of Δ. The following example will help clarify Mason ’s rule. Example 5.7 Transfer Function via Mason ’sRule T ransfer Function via Mason ’s Rule PROBLEM: Find the transfer function, C(s)/R(s), for the signal- ﬂow graph in Figure 5.21. R(s)G1(s) G2(s) V4(s) H1(s)G3(s) V3(s) G8(s)V2(s)G4(s) V1(s)G5(s) H2(s)C(s) G6(s) G7(s) H4(s)V5(s) V6(s) FIGURE 5.21 Signal- ﬂow graph for Example 5.7252 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:57 SOLUTION: First, identify the forward-path gains . In this example there is only one: G1 sG2 sG3 sG4 sG5 s (5.29) Second, identify the loop gains . There are four, as follows: 1.G2 sH1 s (5.30a) 2.G4 sH2 s (5.30b) 3.G7 sH4 s (5.30c) 4.G2 sG3 sG4 sG5 sG6 sG7 sG8 s (5.30d) Third, identify the nontouching loops taken two at a time . From Eqs. (5.30) and Figure 5.21, we can see that loop 1 does not touch loop 2, loop 1 does not touch loop 3, and loop 2 does not touch loop 3. Notice that loops 1, 2, and 3 all touch loop 4.Thus, the combinations of nontouching l oops taken two at a time are as follows: Loop 1 and loop 2 :G 2 sH1 sG4 sH2 s (5.31a) Loop 1 and loop 3 :G2 sH1 sG7 sH4 s (5.31b) Loop 2 and loop 3 :G4 sH2 sG7 sH4 s (5.31c) Finally, the nontouching loops taken three at a time are as follows: Loops 1; 2;and 3 :G2 sH1 sG4 sH2 sG7 sH4 s (5.32) Now, from Eq. (5.28) and its de ﬁnitions, we form ΔandΔk. Hence, Δ1 G2 sH1 sG4 sH2 sG7 sH4 s G2 sG3 sG4 sG5 sG6 sG7 sG8 s G2 sH1 sG4 sH2 sG2 sH1 sG7 sH4 s G4 sH2 sG7 sH4 s  G2 sH1 sG4 sH2 sG7 sH4 s (5.33) We form Δkby eliminating from Δthe loop gains that touch the kth forward path: Δ11 G7 sH4 s (5.34) Expressions (5.29), (5.33), and (5.34) are now substituted into Eq. (5.28), yielding the transfer function: G sT1Δ1 ΔG1 sG2 sG3 sG4 sG5 s1 G7 sH4 s Δ(5.35) Since there is only one forward path, G(s) consists of only one term, rather than a sum of terms, each coming from a forward path. Skill-Assessment Exercise 5.4 PROBLEM: Use Mason ’s rule to ﬁnd the transfer function of the signal-ﬂ ow diagram shown in Figure 5.19( c). Notice that this is the same system used in Example 5.2 to ﬁnd the transfer function via block diagram reduction. ANSWER: T sG1 sG3 s1G2 s 1G2 sH2 sG1 sG2 sH1 s  1G3 sH3 s The complete solution is at www.wiley.com/college/nise .5.5 Mason ’s Rule 253WEBC05 10/28/2014 17:35:57 5.6 Signal-Flow Graphs of State Equations In this section, we draw signal- ﬂow graphs from state equations. At ﬁrst this process will help us visualize state variables. Later we will draw signal- ﬂow graphs and then write alternate representations of a system in state space. Consider the following state and output equations: _x12x1 5x23x32r (5.36a) _x2 6x1 2x22x35r (5.36b) _x3x1 3x2 4x37r (5.36c) y 4x16x29x3 (5.36d) First, identify three nodes to be the three state variables, x1,x2, and x3; also identify three nodes, placed to the left of each respective state variable, to be the derivatives of the state variables, as in Figure 5.22( a). Also identify a node as the input, r, and another node as the output, y. Next interconnect the state variables and their derivatives with the de ﬁning integration, 1/ s, as shown in Figure 5.22( b). Then using Eqs. (5.36), feed to each node the indicated signals. For example, from Eq. (5.36 a),_x1receives 2 x1 5x23x32r,a s shown in Figure 5.22( c). Similarly, _x2receives  6x1 2x22x35r, as shown in Figure 5.22( d), and _x3receives x1 3x2 4x37r, as shown in Figure 5.22( e). Finally, using Eq. (5.36 d), the output, y, receives  4x16x29x3, as shown in Figure 5.19( f), the ﬁnal phase-variable representation, where the state variables are the outputs of theintegrators. R(s)R(s) Y(s) sX3(s) sX2(s) sX1(s) X3(s) X2(s) X1(s)Y(s) (a)sX3(s) sX2(s) sX1(s) X3(s) X2(s) X1(s) (b)1 s1 s1 s (c)sX3(s) sX2(s) sX1(s) X3(s) X2(s) X1(s) 2 32 Y(s) R(s)1s1s –51s FIGURE 5.22 Stages of development of a signal- ﬂow graph for the system of Eqs. (5.36): a.Place nodes; b.interconnect state variables and derivatives; c.form dx1/dt;(ﬁgure continues )254 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:57 Y(s) sX3(s) (f)sX2(s) sX1(s) X3(s) X2(s) X1(s)69 R(s)72 –5 –4 32 –6–45 –2 –3 121 s1 s1 sY(s) sX3(s) (e)sX2(s) sX1(s) X3(s) X2(s) X1(s) 32 –6–45 –2 –3 1R(s)72 –5 21 s1 s1 sY(s) sX3(s) (d)sX2(s) sX1(s) X3(s) X2(s) X1(s) 2 32 –65 –2R(s)–51s1s1s 2 FIGURE 5.22 (Continued )d.form dx2/dt;e.form dx3/dt;f.form output5.6 Signal-Flow Graphs of State Equations 255WEBC05 10/28/2014 17:35:57 In the next section, the signal- ﬂow model will help us visualize the process of determining alternative representations in state space of the same system. We will see that even though a system can be the same with respect to its input and output terminals, the state-space representations can be many and varied. 5.7 Alternative Representations in State Space In Chapter 3, systems were represented in state space in phase-variable form. However, system modeling in state space can take on many representations other than the phase-variable form. Although each of these models yields the same output for a given input, an engineer may prefer a particular one for several reasons. For example, one set of state variables, with its unique representation, can model actual physical variables of a system,such as ampli ﬁer and ﬁlter outputs. Another motive for choosing a particular set of state variables and state-space model is ease of solution. As we will see, a particular choice of state variables can decouple thesystem of simultaneous differential equations. Here each equation is written in terms of onlyone state variable, and the solution is effected by solving nﬁrst-order differential equations individually. Ease of modeling is another reason for a particular choice of state variables. Certain choices may facilitate converting the subsystem to the state-variable representation by usingrecognizable features of the model. The engineer learns quickly how to write the state andoutput equations and draw the signal- ﬂow graph, both by inspection. These converted subsystems generate the de ﬁnition of the state variables. We will now look at a few representative forms and show how to generate the state- space representation for each. Cascade Form We have seen that systems can be represented in state space with the state variables chosento be the phase variables, that is, variables that are successive derivatives of each other. Thisis by no means the only choice. Returning to the system of Figure 3.10( a), the transfer function can be represented alternately as C s R s24 s2 s3 s4(5.37) Figure 5.23 shows a block diagram representation of this system formed by cascading each term of Eq. (5.37). The output of each ﬁrst-order system block has been labeled as a state variable. These state variables are not the phase variables. We now show how the signal-ﬂ ow graph can be used to obtain a state-space representation of this system. In order to write the state equations with our new set ofSkill-Assessment Exercise 5.5 PROBLEM: Draw a signal- ﬂow graph for the following state and output equations: _x 210 0 31  3 4 52 643 75x0 0 12 643 75r y010 x ANSWER: The complete solution is at www.wiley.com/college/nise .256 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:58 state variables, it is helpful to draw a signal- ﬂow graph ﬁrst, using Figure 5.23 as a guide. The signal ﬂow for each ﬁrst-order system of Figure 5.23 can be found by transforming each block into an equivalent differential equation. Each ﬁrst-order block is of the form Ci s Ri s1 sai(5.38) Cross-multiplying, we get saiCi sRi s (5.39) After taking the inverse Laplace transform, we have dci t dtaici tri t (5.40) Solving for dci(t)/dtyields dci t dt aici tri t (5.41) Figure 5.24( a) shows the implementation of Eq. (5.41) as a signal-ﬂow graph. Here again, a node was assumed for ci(t) at the output of an integrator, and its derivative was formed at the input. Cascading the transfer functions shown in Figure 5.24( a), we arrive at the system representation shown in Figure 5.24( b).2Now write the state equations for the new representation of the system. Remember that the derivative of a state variable will be at the input to each integrator: _x1 4x1x2 (5.42a) _x2  3x2x3 (5.42b) _x3  2x324r (5.42c) –2 –3 –424 1 1 1 (b)R(s) C(s)1 s1 s1 s X3(s) X2(s) X1(s)–aiRi(s)1 (a)1 s sCi(s)Ci(s) FIGURE 5.24 a.First-order subsystem; b.Signal- ﬂow graph for Figure 5.23 systemR(s) X3(s)C(s) s + 211124s + 3 s + 4 X2(s) X1(s)FIGURE 5.23 Representation of Figure 3.10 system as cascaded ﬁrst-order systems 2Note that node X3(s) and the following node cannot be merged, or else the input to the ﬁrst integrator would be changed by the feedback from X2(s), and the signal X3(s) would be lost. A similar argument can be made for X2(s) and the following node.5.7 Alternative Representations in State Space 257WEBC05 10/28/2014 17:35:58 The output equation is written by inspection from Figure 5.24( b): yc tx1 (5.43) The state-space representation is completed by rewriting Eqs. (5.42) and (5.43) in vector- matrix form: _x 410 0 31 00  22 435x0 0 242 435r (5.44a) y100/C2/C3 x (5.44b) Comparing Eqs. (5.44) with Figure 5.24( b), you can form a vivid picture of the meaning of some of the components of the state equation. For the following discussion, please refer back to the general form of the state and output equations, Eqs. (3.18) and (3.19). For example, the Bmatrix is the input matrix since it contains the terms that couple the input, r(t), to the system. In particular, the constant 24 appears in both the signal- ﬂow graph at the input, as shown in Figure 5.24( b), and the input matrix in Eqs. (5.44). The Cmatrix is the output matrix since it contains the constant that couples the state variable, x 1, to the output, c(t). Finally, the Amatrix is the system matrix since it contains the terms relative to the internal system itself. In the form of Eqs. (5.44), the system matrix actually contains the system poles along the diagonal. Compare Eqs. (5.44) to the phase-variable representation in Eqs. (3.59). In that representation, the coef ﬁcients of the system ’s characteristic polynomial appeared along the last row, whereas in our current representation, the roots of the characteristic equation, the system poles, appear along the diagonal. Parallel Form Another form that can be used to represent a system is the parallel form. This form leads toanAmatrix that is purely diagonal, provided that no system pole is a repeated root of the characteristic equation. Whereas the previous form was arrived at by cascading the individual ﬁrst-order subsystems, the parallel form is derived fro m a partial-fraction ex pansion of the system transfer function. Performing a partial-fraction expansion on our example system,we get C s R s24 s2 s3 s412 s2 24 s312 s4(5.45) Equation (5.45) represents the sum of the individual ﬁrst-order subsystems. To arrive at a signal- ﬂow graph, ﬁrst solve for C(s), C sR s12 s2 R s24 s3R s12 s4(5.46) and recognize that C(s) is the sum of three terms. Each term is a ﬁrst- order subsystem with R(s) as the input. Formulating this idea as a signal-ﬂow graph renders the representation shown in Figure 5.25. Once again, we use the signal- ﬂow graph as an aid to obtaining the state equations. By inspection the state variablesare the outputs of each integrator, where the derivatives of the statevariables exist at the integrator inputs. We write the state equations–2 –3 –4R(s)–24 112 121 1C(s)1 s 1 sX1(s) X2(s) X3(s)1 s FIGURE 5.25 Signal- ﬂow representation of Eq. (5.45)258 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:35:59 by summing the signals at the integrator inputs: _x1 2x1 12r (5.47a) _x2  3x2  24r (5.47b) _x3  4x312r (5.47c) The output equation is found by summing the signals that give c(t): yc tx1x2x3 (5.48) In vector-matrix form, Eqs. (5.47) and (5.48) become _x 200 0 30 00  42 435x12  24 122 435r (5.49) and y111 x (5.50) Thus, our third representation of the system of Figure 3.10( a) yields a diagonal system matrix. What is the advantage of this representation? Each equation is a ﬁrst-order differential equation in only one variable. Thus, we would solve these equations independently. The equations are said to be decoupled . Students who are using MATLAB should now run ch5p3 in Appendix B.You will learn how to use MATLAB to convert a transfer function tostate space in a speci ﬁed form. The exercise solves the previous example by representing the transfer function in Eq.(5.45)by thestate-space representation in parallel form of Eq.(5.49) . If the denominator of the transfer function has repeated real roots, the parallel form can still be derived from a partial-fraction expansion. However, the system matrix will notbe diagonal. For example, assume the system C s R s s3 s12 s2(5.51) which can be expanded as partial fractions: C s R s2 s12 1 s11 s2(5.52) Proceeding as before, the signal-ﬂ ow graph for Eq. (5.52) is shown in Figure 5.26. The term  1= s1was formed by creating the signal ﬂow from X2(s)t oC(s). Now the state and output equations can be written by inspection from Figure 5.26 as follows: _x1 x1x2 (5.53a) _x2  x2 2r (5.53b) _x3  2x3r (5.53c) yc t x1 1 2x2x3 (5.53d)–1 –11 1 2–21 1 1 –2R(s) C(s) X3(s)1 s X2(s) X1(s) 1 s1 s FIGURE 5.26 Signal- ﬂow representation of Eq. (5.52)5.7 Alternative Representations in State Space 259WEBC05 10/28/2014 17:35:59 or, in vector-matrix form, _x 110 0 10 00  22 435x0 212 435r (5.54a) y1  1 21/C20/C21 x (5.54b) This system matrix, although not diagonal, has the system poles along the diagonal. Notice the 1 off the diagonal for the case of the repeated root. The form of the system matrix isknown as the Jordan canonical form . Controller Canonical Form Another representation that uses phase variables is called the controller canonical form ,s o named for its use in the design of controllers, which is covered in Chapter 12. This form isobtained from the phase-variable form simply by ordering the phase variables in the reverseorder. For example, consider the transfer function G s C s R ss27s2 s39s226s24(5.55) The phase-variable form was derived in Example 3.5 as _x1 _x2 _x32 643 7501 0 00 1  24  26  92 643 75x1 x2 x32 643 750 0 12 643 75r (5.56a) y271/C2/C3x1 x2 x32 435 (5.56b) where yc t. Renumbering the phase variables in reverse order yields _x 3 _x2 _x12 643 7501 0 00 1  24  26  92 643 75x3 x2 x12 643 750 0 12 643 75r (5.57a) y271/C2/C3x3 x2 x12 435 (5.57b) Finally, rearranging Eqs. (5.57) in ascending numerical order yields the controller canonical form 3as _x1 _x2 _x32 643 75 9 26  24 100 0102 643 75x1 x2 x32 643 751 0 02 643 75r (5.58a) y172/C2/C3x1 x2 x32 435 (5.58b)TryIt 5.3 Use the following MATLAB and Control System Toolboxstatements to convert the transferfunction of Eq. (5.55) to the controller canonical state-space representation of Eqs. (5.58). numg= [1 7 2] ; deng= [1 9 26 24] ;[Acc, Bcc, Ccc, Dcc] ... =tf2ss (numg, deng) 3Students who are using MATLAB to convert from transfer functions to state space using the command tf2ss will notice that MATLAB reports the results in controller canonical form.260 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:0 Figure 5.27 shows the steps we have taken on a signal-ﬂow graph. Notice that the controller canonical form is obtained simply by renumbering the phase variables in the opposite order.Equations (5.56) can be obtained from Figure 5.27( a), and Eqs. (5.58) from Figure 5.27( b). Notice that the phase-variable form and the controller canonical form contain the coefﬁcients of the characteristic polynomial in the bottom row and in the top row, respectively. System matrices that contain the coef ﬁcients of the characteristic polynomial are called companion matrices to the characteristic polynomial. The phase-variable and controller canonical forms result in a lower and an upper companion system matrix,respectively. Companion matrices can also have the coef ﬁcients of the characteristic polynomial in the left or right column. In the next subsection, we discuss one of theserepresentations. Observer Canonical Form Theobserver canonical form , so named for its use in the design of observers (covered in Chapter 12), is a representation that yields a left companion system matrix. As an example,the system modeled by Eq. (5.55) will be represented in this form. Begin by dividing allterms in the numerator and denominator by the highest power of s,s 3, and obtain C s R s1 s7 s22 s3 19 s26 s224 s3(5.59) Cross-multiplying yields 1 s7 s22 s3/C20/C21 R s 19 s26 s224 s3/C20/C21 C s (5.60) Combining terms of like powers of integration gives C s1 sR s 9C s 1 s27R s 26C s 1 s32R s 24C s (5.61) or C s1 sR s 9C s 1 s7R s 26C s 1 s2R s 24C s/C18/C19 /C20/C21 (5.62)R(s) C(s)1 X3(s) X2(s) X1(s)1 21 7 –9 –26 –24R(s) C(s) X1(s) X2(s) X3(s)1 21 7 –9 –26 –24 (a)( b)s1 s1 s1 s1 s1 s FIGURE 5.27 Signal- ﬂow graphs for obtaining forms for G sC s=R s s27s2= s39s226s24:a.phase-variable form; b.controller canonical form5.7 Alternative Representations in State Space 261WEBC05 10/28/2014 17:36:0 Equation (5.61) or (5.62) can be used to draw the signal- ﬂow graph. Start with three integrations, as shown in Figure 5.28( a). Using Eq. (5.61), the ﬁrst term tells us that output C(s) is formed, in part, by integrating R s 9C s. We thus form R s 9C sat the input to the integrator closest to the output, C(s), as shown in Figure 5.28( b). The second term tells us that the term 7R s 26C smust be integrated twice. Now form 7R s 26C sat the input to the second integrator. Finally, the last term of Eq. (5.61) says 2R s 24C smust be integrated three times. Form 2R s 24C sat the input to the ﬁrst integrator. Identifying the state variables as the outputs of the integrators, we write the following state equations: _x1  9x1x2 r (5.63a) _x2 26x1 x37r (5.63b) _x3 24x1 2r (5.63c) The output equation from Figure 5.28( b)i s yc tx1 (5.64) In vector-matrix form, Eqs. (5.63) and (5.64) become _x 910  26 0 1  24 0 02 435x1 722 435r (5.65a) y100 x (5.65b) Notice that the form of Eqs. (5.65) is similar to the phase-variable form, except that the coefﬁcients of the denominator of the transfer function are in the ﬁrst column, and the coefﬁcients of the numerator form the input matrix, B. Also notice that the observer canonical form has an Amatrix that is the transpose of the controller canonical form, a B vector that is the transpose of the controller canonical form ’sCvector, and a Cvector that is the transpose of the controller canonical form ’sBvector. We therefore say that these two forms are duals . Thus, if a system is described by A, B, andC, its dual is described by–9 –26111 –24271 (b)X3(s) X2(s) X1(s)C(s)111 (a)R(s) R(s)X3(s) X2(s) X1(s)C(s)1 s1 s1 s 1 s1 s1 s FIGURE 5.28 Signal- ﬂow graph for observer canonical form variables: a.planning; b.implementation TryIt 5.4 Use the following MATLAB and Control System Toolbox statements to convert the transfer function of Eq. (5.55) to theobserver canonical state-spacerepresentation of Eqs. (5.65). numg= [1 7 2] ; deng= [1 9 26 24] ; [Acc, Bcc, Ccc, Dcc] ... =tf2ss (numg, deng) ; Aoc=transpose(Acc) Boc=transpose(Ccc) Coc=transpose(Bcc)262 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:1 ADAT;BDCT;CDBT. You can verify the signi ﬁcance of duality by comparing the signal- ﬂow graphs of a system and its dual, Figures 5.27( b) and 5.28( b), respectively. The signal- ﬂow graph of the dual can be obtained from that of the original by reversing all arrows, changing state variables to their derivatives and vice versa, and interchanging C(s) andR(s), thus reversing the roles of the input and the output. We conclude this section with an example that demonstrates the application of the previously discussed forms to a feedback control system. Example 5.8 State-Space Representation of Feedback SystemsState-Space Representation of Feedback Systems PROBLEM: Represent the feedback control system shown in Figure 5.29 in state space. Model the forward tr ansfer function in cascade form. SOLUTION: First we model the forward transfer function in cascade form. The gain of 100, the pole at  2, and the pole at  3 are shown cascaded in Figure 5.30( a). The zero at  5 was obtained using the method for implementing zeros for a system represented in phase-variable form, as discussed in Section 3.5. Next add the feedback and input paths, as shown in Figure 5.30( b). Now, by inspection, write the state equations: _x1 3x1x2 (5.66a) _x2  2x2100 r c (5.66b) But, from Figure 5.30 (b), c5x1 x2 3x12x1x2 (5.67) Substituting Eq. (5.67) into Eq. (5.66b), we ﬁnd the state equations for the system: _x1  3x1 x2 (5.68a) _x2 200x1 102x2100r (5.68b) R(s)100 11 5 C(s) –1 (b)1 s1 s –2 –31 X1(s) X2(s) E(s)E(s)100 –21 –351 1 s ( )(a)1 s C(s) X2(s) X1(s) FIGURE 5.30 Creating a signal- ﬂow graph for the Figure 5.29 system: a.forward transfer function; b.complete systemR(s) + –E(s) C(s) (s + 2)(s + 3)100(s + 5) FIGURE 5.29 Feedback control system for Example 5.85.7 Alternative Representations in State Space 263WEBC05 10/28/2014 17:36:2 In this section, we used transfer functions and signal-ﬂow graphs to represent systems in parallel, cascade, controller canonical, and observer canonical forms, in addition to the phase-variable form. Using the transfer function C s=R s s3= s4 s6as an example, Figure 5.31 compares the aforementioned forms. Notice the duality of the controllerand observer canonical forms, as demonstrated by their respective signal- ﬂow graphs and stateThe output equation is the same as Eq. (5.67), or yc t2x1x2 (5.69) In vector-matrix form _x 31  200  102/C20/C21 x0 100/C20/C21 r (5.70a) y21 x (5.70b) Skill-Assessment Exercise 5.6 PROBLEM: Represent the feedback control system shown in Figure 5.29 in state space. Model the forward transfer function in controller canonical form. ANSWER: _x 105  506 10/C20/C21 x1 0/C20/C21 r y100 500 x The complete solution is at www.wiley.com/college/nise . R(s) C(s) X2(s)1 s X1(s)1 –10 –24Phase variableForm Transfer function Signal-flow diagram State equations 31 s1 (s2 + 10s + 24)(s + 3) Parallel1 –62 X2(s)X1(s) C(s) R(s)1 1–41 s 1 s1 2– 23(s + 4) s + 6+* x = y = [1 1] xx + –41 2 00 – 6x = r ry = [3 1] xx + 00 –241 . .1 – 10 3 2– FIGURE 5.31 State-space forms for C s=R s s3= s4 s6. Note: yc t(ﬁgure continues )264 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:2 equations. In the next section, we will explore the possibility of transforming between representations without using transfer functions and signal- ﬂow graphs. 5.8 Similarity Transformations In Section 5.7, we saw that systems can be represented with different state variables eventhough the transfer function relating the output to the input remains the same. The variousforms of the state equations were found by manipulating the transfer function, drawing asignal- ﬂow graph, and then writing the state equations from the signal-ﬂ ow graph. These systems are called similar systems . Although their state-space representations are different, similar systems have the same transfer function and hence the same poles and eigenvalues. We can make transformations between similar systems from one set of state equations to another without using the transfer function and signal-ﬂ ow graphs. The results are presented in this section along with examples. Students who have not broached this subjectin the past or who wish to refresh their memories are encouraged to study Appendix L atwww.wiley.com/college/nise for the derivation. The result of the derivation states: A system represented in state space as xAxBu (5.71a) yCxDu (5.71b) can be transformed to a similar system, zP 1APz P 1Bu (5.72a) yCPz Du (5.72b)C(s) X1(s) X2(s) –4 –6 131 1 s1 s C(s) X1(s)R(s) X2(s)s1 1 3 1 s1 –10 –241 C(s) R(s) X2(s)3 s1 –241 1 s1 1 X1(s) –10Cascade1 (s + 4) (s + 6)(s + 3) * Observer canonicalController canonical1 (s2 + 10s + 24)(s + 3)*. . .x = r y = [–3 1] xx + –6 0 01 1 –4 x = r y = [1 3] xx + –10 1 1–24 0 0 x = r y = [1 0] xx + –10 1 –241 3 0Form Transfer function Signal-flow diagram State equations s10 s241 +2+s1 s3 2+R(s)1 FIGURE 5.31 (Continued )5.8 Similarity Transformations 265WEBC05 10/28/2014 17:36:3 where, for 2-space, PUz1Uz2p11p12 p21p22"# (5.72c) xp11p12 p21p22"# z1 z2"# Pz (5.72d) and zP 1x (5.72e) Thus, Pis a transformation matrix whose columns are the coordinates of the basis vectors of the z1z2space expressed as linear combinations of the x1x2space. Let us look at an example. Example 5.9 Similarity Transformations on State EquationsSimilarity Transformations on State Equations PROBLEM: Given the system represented in state space by Eqs. (5.73), _x010 001  2 5 72 435x0 012 435u (5.73a) y100 x (5.73b) transform the system to a new set of state variables, z, where the new state variables are related to the original state variables, x, as follows: z 12x1 (5.74a) z23x12x2 (5.74b) z3x14x25x3 (5.74c) SOLUTION: Expressing Eqs. (5.74) in vector-matrix form, z200 3201452 435xP  1x (5.75) Using Eqs. (5.72) as a guide, P 1AP200 3201452 643 75010 001  2  5  72 643 750:500  0:75 0 :50 0:5  0:40 :22 643 75  1:51 0  1:25 0 :70 :4  2:50 :4  6:22 643 75 (5.76)266 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:4 Thus far we have talked about transforming systems between basis vectors in a different state space. One major advantage of ﬁnding these similar systems is apparent in the transformation to a system that has a diagonal matrix. Diagonalizing a System Matrix In Section 5.7, we saw that the parallel form of a signal- ﬂow graph can yield a diagonal system matrix. A diagonal system matrix has the advantage that each state equation is a function of only one state variable. Hence, each differential equation can be solved independently of the other equations. We say that the equations are decoupled. Rather than using partial fraction expansion and signal- ﬂow graphs, we can decouple a system using matrix transformations. If we ﬁnd the correct matrix, P, the transformed system matrix, P 1AP, will be a diagonal matrix. Thus, we are looking for a transformation to another state space that yields a diagonal matrix in that space. This new state space also has basisvectors that lie along its state variables. We give a special name to any vectors that are collinearwith the basis vectors of the new system that yields a diagonal system matrix: they are called eigenvectors . Thus, the coordinates of the eigenvectors form the columns of the transformation matrix, P, as we demonstrate in Eq. L.7 in Appendix L at www.wiley.com/college/nise . First, let us formally de ﬁne eigenvectors from another perspective and then show that they have the property just described. Then we will de ﬁne eigenvalues. Finally, we will show how to diagonalize a matrix. Deﬁnitions Eigenvector . The eigenvectors of the matrix Aare all vectors, xi60, which under the transformation Abecome multiples of themselves; that is, Axiλixi (5.80) where λi’s are constants. Figure 5.32 shows this de ﬁnition of eigenvectors. If Axis not collinear with xafter the transformation, as in Figure 5.32( a),xis not an eigenvector. If Axis collinear with xafter the transformation, as in Figure 5.32( b),xis an eigenvector.P 1B200 320 1452 643 750 0 12 643 750 0 52 643 75 (5.77) CP100/C2/C30:50 0  0:75 0 :50 0:5  0:40 :22 643 750:500/C2/C3 (5.78) Therefore, the transformed system is _z 1:51 0  1:25 0 :70 :4  2:55 0 :4  6:22 643 75z0 0 52 643 75u (5.79a) y0:50 0z (5.79b) Students who are using MATLAB should now run ch5p4 in Appendix B. You will learn how to perform similarity transformations. This exercise uses MATLAB to do Example 5.9.5.8 Similarity Transformations 267WEBC05 10/28/2014 17:36:5 Eigenvalue . The eigenvalues of the matrix Aare the values of λithat satisfy Eq. (5.80) for xi60. Toﬁnd the eigenvectors, we rearrange Eq. (5.80). Eigenvectors, xi, satisfy 0 λiI Axi (5.81) Solving for xiby premultiplying both sides by λiI A 1yields xi λiI A 10adj λiI A det λiI A0 (5.82) Since xi60, a nonzero solution exists if det λiI A0 (5.83) from which λi, the eigenvalues, can be found. We are now ready to show how to ﬁnd the eigenvectors, xi. First we ﬁnd the eigenvalues, λi, using det λiI A0, and then we use Eq. (5.80) to ﬁnd the eigenvectors.(b)Axxx2 x1x2 Ax x (a)x1FIGURE 5.32 To be an eigenvector, the transformation Axmust be collinear with x; thus, in (a), xis not an eigenvector; in (b), it is. Example 5.10 Finding EigenvectorsFinding Eigenvectors PROBLEM: Find the eigenvectors of the matrix A 31 1 3/C20/C21 (5.84) SOLUTION: The eigenvectors, xi, satisfy Eq. (5.81). First, use det λiI A0t oﬁnd the eigenvalues, λi, for Eq. (5.81): det λI A/C12/C12/C12/C12/C12λ0 0λ"#   31 1 3"# /C12/C12/C12/C12/C12 /C12/C12/C12/C12/C12λ3  1  1 λ3/C12/C12/C12/C12/C12 λ 26λ8 (5.85) from which the eigenvalues are λ 2, and  4. Using Eq. (5.80) successively with each eigenvalue, we have Axiλxi  31 1 3"#x1 x2"#  2"x1 x2# (5.86)268 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:6 We now show that if the eigenvectors of the matrix Aare chosen as the basis vectors of a transformation, P, the resulting system matrix will be diagonal. Let the transformation matrix Pconsist of the eigenvectors of A, x i. Px1;x2;x3;... ;xn (5.91) Since xiare eigenvectors, Axiλixi, which can be written equivalently as a set of equations expressed by APPD (5.92) where Dis a diagonal matrix consisting of λi’s, the eigenvalues, along the diagonal, and Pis as de ﬁned in Eq. (5.91). Solving Eq. (5.92) for Dby premultiplying by P 1, we get DP 1AP (5.93) which is the system matrix of Eq. (5.72). In summary, under the transformation P, consisting of the eigenvectors of the system matrix, the transformed system is diagonal, with the eigenvalues of the system along the diagonal. The transformed system is identical to that obtained using partial-fraction expansion of the transfer function with distinct real roots. In Example 5.10, we found eigenvectors of a second-order system. Let us continue with this problem and diagonalize the system matrix.or  3x1x2 2x1 (5.87a) x1 3x2 2x2 (5.87b) from which x1x2. Thus, xc c/C20/C21 (5.88) Using the other eigenvalue,  4, we have x" c  c# (5.89) Using Eqs. (5.88) and (5.89), one choice of eigenvectors is x11 1"# and x21  1"# (5.90) Example 5.11 Diagonalizing a System in State SpaceDiagonalizing a System in State Space PROBLEM: Given the system of Eqs. (5.94), ﬁnd the diagonal system that is similar. _x 31 1 3/C20/C21 x1 2/C20/C21 u (5.94a) y23 x (5.94b)5.8 Similarity Transformations 269WEBC05 10/28/2014 17:36:7 Students who are using MATLAB should now run ch5p5 in Appendix B. This problem, which uses MATLAB to diagonalize a system, is similar (but not identical)to Example 5.11.SOLUTION: Firstﬁnd the eigenvalues and the eigenvectors. This step was performed in Example 5.10. Next form the transformation matrix P, whose columns consist of the eigenvectors. P11 1 1/C20/C21 (5.95) Finally, form the similar system ’s system matrix, input matrix, and output matrix, respectively. P 1AP1=21 =2 1=2 1=2/C20/C21 31 1 3/C20/C21111 1/C20/C21  20 0 4/C20/C21 (5.96a) P  1B1=21 =2 1=2 1=2/C20/C2112/C20/C21 3=2  1=2/C20/C21 (5.96b) CP23/C2/C3 111 1/C20/C21 5 1/C2/C3 (5.96c) Substituting Eqs. (5.96) into Eqs. (5.72), we get _z 20 0 4"# z3=2  1=2"# u (5.97a) y5 1z (5.97b) Notice that the system matrix is diagonal, with the eigenvalues along the diagonal. Skill-Assessment Exercise 5.7 PROBLEM: For the system represented in state space as follows: _x13  4  6"# x1 3"# u y14/C2/C3 x convert the system to one where the new state vector, z,i s z3 2 1 4/C20/C21 x ANSWER: _z6:5 8:5 9:5 11 :5"# z 3  11"# u y0:8 1:4/C2/C3 z The complete solution is at www.wiley.com/college/nise .270 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:7 In this section, we learned how to move between different state-space representations of the same system via matrix transformations rather than transfer function manipulation and signal- ﬂow graphs. These different representations are called similar . The characteristics of similar systems are that the transfer functions relating the output to the input are the same,as are the eigenvalues and poles. A particularly useful transformation was converting asystem with distinct, real eigenvalues to a diagonal system matrix. We now summarize the concepts of block diagram and signal- ﬂow representations of systems, ﬁrst through case study problems an dt h e ni naw r i t t e ns u m m a r y .O u r case studies include the antenna azimuth position control system and the UnmannedFree-Swimming Submersible vehicle (UFSS). B lock diagram reduction is important for the analysis and design of these systems as well as the control systems on board Alvin (Figure 5.33), used to explore the wreckage of the Titanic 13,000 feet under the Atlantic in July 1986 ( Ballard ,1987 ).Skill-Assessment Exercise 5.8 PROBLEM: For the original system of Skill-Assessment Exercise 5.7, ﬁnd the diagonal system that is similar. ANSWER: _z 20 0 3"# z18:39 20"# u y  2:121 2 :6/C2/C3 z The complete solution is at www.wiley.com/college/nise .TryIt 5.5 Use the following MATLAB and Control System Toolbox statementsto do Skill-Assessment Exercise 5.8. A=[1 3;  4 6] ; B=[1; 3] ; C=[1 4] ; D=0;S=ss(A, B, C, D) ; Sd=canon(S, 'modal ' )© Rob Catanach, Woods Hole Oceano graphic Institution. FIGURE 5.33 Alvin , a manned submersible, explored the wreckage of the Titanic with a tethered robot, Jason Junior.5.8 Similarity Transformations 271WEBC05 10/28/2014 17:36:11 Case Studies Antenna Control: Designing a Closed-Loop ResponseAntenna Control: Designing a Closed-Loop Response This chapter has shown that physical subsystems can be modeled mathematically with transfer functions and then interconnected to form a feedback system. The interconnectedmathematical models can be reduced to a single transfer function representing the systemfrom input to output. This transfer function, the closed-loop transfer function, is then usedto determine the system response. The following case study shows how to reduce the subsystems of the antenna azimuth position control system to a single, closed-loop transfer function in order toanalyze and design the transient response characteristics. PROBLEM: Given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 1, do the following: a.Find the closed-loop transfer function using block diagram reduction. b.Represent each subsystem with a signal- ﬂow graph and ﬁnd the state-space representation of the closed-loop system from the signal- ﬂow graph. c.Use the signal- ﬂow graph found in balong with Mason ’s rule to ﬁnd the closed-loop transfer function. d.Replace the power ampli ﬁer with a transfer function of unity and evaluate the closed-loop peak time, percent overshoot, and settling time for K1000. e.For the system of d, derive the expression for the closed-loop step response of the system. f.For the simpli ﬁed model of d,ﬁnd the value of Kthat yields a 10% overshoot. SOLUTION: Each subsystem ’s transfer function was evaluated in the case study in Chapter 2. We ﬁrst assemble them into the closed-loop, feedback control system block diagram shown in Figure 5.34( a). a.The steps taken to reduce the block diagram to a single, closed-loop transfer function relating the output angular displacement to the input angular displacement are shown inFigure 5.34( a–d). In Figure 5.34( b), the input potentiometer was pushed to the right past the summing junction, creating a unity feedback system. In Figure 5.34( c), all the blocks of the forward transfer function are multiplied together, forming the equivalentforward transfer function. Finally, the feedback formula is applied, yielding the closed-loop transfer function in Figure 5.34( d). b.In order to obtain the signal- ﬂow graph of each subsystem, we use the state equations derived in the case study of Chapter 3. The signal- ﬂow graph for the power ampli ﬁer is drawn from the state equations of Eqs. (3.87) and (3.88), and the signal-ﬂow graph of the motor and load is drawn from the state equation of Eq. (3.98). Other subsystems arepure gains. The signal- ﬂow graph for Figure 5.34( a) is shown in Figure 5.35 and consists of the interconnected subsystems. The state equations are written from Figure 5.35. First de ﬁne the state variables as the outputs of the integrators. Hence, the state vector is xx 1 x2 ea2 435 (5.98)272 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:17 Using Figure 5.35, we write the state equations by inspection: _x1 x2 (5.99a) _x2  1:71x22:083ea (5.99b) _ea 3:18Kx1  100ea31:8Kθi (5.99c) along with the output equation, yθo0:1x1 (5.100) where 1 =π0:318. In vector-matrix form, _x01 0 0  1:71 2 :083  3:18K 0  1002 643 75x0 0 31:8K2 643 75θi (5.101a) y0:100 x (5.101b)K Vp(s)100 s1 s1 s1 0.1 –100 –1.71 1X1(s)2.083 –θo (s) θi (s) Ea(s) X2(s) π1 π FIGURE 5.35 Signal- ﬂow graph for the antenna azimuth position control system(d)6.63 K s3 + 101.71s2 + 171s + 6.63 K–+ (c)6.63 K s(s + 1.71)(s + 100)(b)–+ KPreamplifier and potentiometersPower amplifierMotor, load, and gears 100 s + 1000.2083 s(s + 1.71)Ea(s) Vp(s)1 –+Input potentiometer KPreamplifier 100 s + 100Power amplifier 0.2083Motor, load, and gears 1 Output potentiometer (a)s(s + 1.71)Ea(s) Vp(s) θi(s) θi(s) θi(s)θo(s) θo(s) θi(s) θo(s)θo(s) ππ π FIGURE 5.34 Block diagram reduction for the antennaazimuth position controlsystem: a.original; b.pushing input potentiometer to the rightpast the summing junction;c.showing equivalent forward transfer function; d.ﬁnal closed-loop transfer functionCase Studies 273WEBC05 10/28/2014 17:36:18 c.We now apply Mason ’s rule to Figure 5.35 to derive the closed-loop transfer function of the antenna azimuth position control system. First ﬁnd the forward-path gains. From Figure 5.35 there is only one forward-path gain: T11 π/C18/C19 K 1001 s/C18/C19 2:0831 s/C18/C191 s/C18/C19 0:16:63K s3(5.102) Next identify the closed-loop gains. There are three: the power ampli ﬁer loop, GL1(s), with eaat the output; the motor loop, GL2(s), with x2at the output; and the entire system loop, GL3(s), with θ0at the output. GL1 s 100 s(5.103a) GL2 s 1:71 s(5.103b) GL3 s K 1001 s/C18/C19 2:0831 s/C18/C191 s/C18/C19 0:1 1 π/C18/C19  6:63K s3(5.103c) Only GL1(s) and GL2(s) are nontouching loops. Thus, the nontouching-loop gain is GL1 sGL2 s171 s2(5.104) Forming ΔandΔkin Eq. (5.28), we have Δ1 GL1 sGL2 sGL3 s   GL1 sGL2 s 1100 s1:71 s6:63K s3171 s2(5.105) and Δ11 (5.106) Substituting Eqs. (5.102), (5.105), and (5.106) into Eq. (5.28), we obtain the closed- loop transfer function as T sC s R sT1Δ1 Δ6:63K s3101 :71s2171s6:63K(5.107) d.Replacing the power ampli ﬁer with unity gain and letting the preampli ﬁer gain, K,i n Figure 5.34( b) equal 1,000 yield a forward transfer function, G(s), of G s66:3 s s1:71(5.108) Using the feedback formula to evaluate the closed-loop transfer function, we obtain T s66:3 s21:71s66:3(5.109) From the denominator, ωn8:14;ζ0:105. Using Eqs. (4.34), (4.38), and (4.42), the peak time 0:388 second, the percent overshoot 71:77%, and the settling time 4:68 seconds.274 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:19 e.The Laplace transform of the step response is found by ﬁrst multiplying Eq. (5.109) by 1/ s, a unit-step input, and expanding into partial fractions: C s66:3 s s21:71s66:31 s s1:71 s21:71s66:3 1 s  s0:8550:106 8:097 s0:8552 8:0972(5.110) Taking the inverse Laplace transform, we ﬁnd c t1 e 0:855r cos 8 :097t0:106 sin 8 :097t (5.111) f.For the simpli ﬁed model we have G s0:0663 K s s1:71(5.112) from which the closed-loop transfer function is calculated to be T s0:0663 K s21:71s0:0663 K(5.113) From Eq.(4.39) a 10% overshoot yields ζ0:591. Using the denominator of Eq. (5.113), ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 0:0663 Kp and 2 ζωn1:71. Thus, ζ1:71 2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 0:0663 Kp 0:591 (5.114) from which K31:6. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives: Referring to the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 2, do the following: a.Find the closed-loop transfer function using block diagram reduction. b.Represent each subsystem with a signal- ﬂow graph and ﬁnd the state-space representation of the closed- loop system from the signal- ﬂow graph. c.Use the signal- ﬂow graph found in (b) along with Mason ’s rule to ﬁnd the closed-loop transfer function. d.Replace the power ampli ﬁer with a transfer function of unity and evaluate the closed-loop percent overshoot, settling time, and peak time for K5. e.For the system used for (d), derive the expression for the closed-loop step response. f.For the simpli ﬁed model in (d), ﬁnd the value of preampli ﬁer gain, K, to yield 15% overshoot. UFSS Vehicle: Pitch-Angle Control RepresentationUFSS Vehicle: Pitch-Angle Control Representation We return to the Unmanned Free-Swimming Submersible (UFSS) vehicle introduced in the case studies in Chapter 5 ( Johnson ,1980 ). We will represent in state space the pitch- angle control system that is used for depth control. PROBLEM: Consider the block diagram of the pitch control loop of the UFSS vehicle shown on the back endpapers. The pitch angle, θ, is controlled by a commanded pitch angle, θe, which along with pitch-angle and pitch-rate feedback determines the elevatorCase Studies 275WEBC05 10/28/2014 17:36:21 deﬂection, δe, which acts through the vehicle dynamics to determine the pitch angle. Let K1K21 and do the following: a.Draw the signal-ﬂ ow graph for each subsystem, making sure that pitch angle, pitch rate, and elevator de ﬂection are represented as state variables. Then interconnect the subsystems. b.Use the signal-ﬂ ow graph obtained in ato represent the pitch control loop in state space. SOLUTION: a.The vehicle dynamics are split into two transfer functions, from which the signal- ﬂow graph is drawn. Figure 5.36 shows the division along with the elevator actuator. Each block is drawn in phase-variable form to meet the requirement thatparticular system variables be state vari ables. This result is shown in Figure 5.37( a). The feedback paths are then added to complete the signal- ﬂow graph, which is shown in Figure 5.37( b). –1 21s1s 11s1s –2 –1.23–0.226 –0.0169 –1 21 s1s 11 s1 s11 1(a) (b)X1(s) –2 –1.23–0.226 –0.0169X1(s)ec0.435 0.435–0.125 –0.1251 (s)X2(s) X3(s) X4(s) X4(s) X3(s) X2(s)θc(s) θc(s)δ ec(s)δ FIGURE 5.37 Signal- ﬂow graph representation of the UFSS vehicle ’s pitch control system: a.without position and rate feedback; b.with position and rate feedback.(Note: Explicitly required variables are x 1θ; x2dθ=dt, and x4δe.)ec 2 s + 2eElevator actuator 1Vehicle dynamics (s + 1.23)–0.125(s + 0.435) s2 + 0.226s + 0.0169(s) (s) θ(s) δ δFIGURE 5.36 Block diagram of the UFSS vehicle's elevator and vehicle dynamics, from which a signal- ﬂow graph can be drawn276 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:22 b.By inspection, the derivatives of state variables x1through x4are written as _x1 x2 (5.115a) _x2 0:0169 x1 0:226x20:435x3 1:23x3 0:125x4 (5.115b) _x3  1:23x3 0:125x4 (5.115c) _x4 2x1 2x2  2x4 2θc (5.115d) Finally, the output yx1. In vector-matrix form the state and output equations are _x01 0 0  0:0169  0:226  0:795  0:125 00  1:23  0:125 22 0  22 666643 77775x0 00  22 666643 77775θ c (5.116a) y1000 x (5.116b) CHALLENGE: We now give you a problem to test your knowledge of this chapter’ s objectives. The UFSS vehicle steers via the heading control system shown in Figure 5.38 and repeated on the back endpapers. A heading command is the input.The input and feedback from the submersible ’s heading and yaw rate are used to generate a rudder command that steers the submersible ( Johnson ,1980). Let K 1 K21 and do the following: a.Draw the signal- ﬂow graph for each subsystem, making sure that heading angle, yaw rate, and rudder de ﬂection are represented as state variables. Then interconnect the subsystems. b.Use the signal-ﬂow graph obtained in ato represent the heading control loop in state space. c.Use MATLAB to represent the closed-loop UFSS heading controlsystem in state space in controller canonical form. Heading gainHeading commandCommanded rudder deflectionRudder actuatorVehicle dynamics Yaw rate sensorHeadingHeading (yaw) rate –K1 – –K2s2 s + 2+ –+ –0.125(s + 0.437) (s + 1.29)( s + 0.193)ψc(s) δrc(s) δr(s) ψ(s) ψ(s)Rudder deflection 1s FIGURE 5.38 Block diagram of the heading control system for the UFSS vehicleCase Studies 277WEBC05 10/28/2014 17:36:22 Summary One objective of this chapter has been for you to learn how to represent multiple subsystems via block diagrams or signal- ﬂow graphs. Another objective has been to be able to reduce either the block diagram representation or the signal- ﬂow graph representation to a single transfer function. We saw that the block diagram of a linear, time-invariant system consisted of four elements: signals ,systems ,summing junctions , and pickoff points . These elements were assembled into three basic forms: cascade ,parallel , and feedback . Some basic operations were then derived: moving systems across summing junctions and across pickoff points. Once we recognized the basic forms and operations, we could reduce a complicated block diagram to a single transfer function relating input to output. Then we applied themethods of Chapter 4 for analyzing and designing a second-order system for transientbehavior. We saw that adjusting the gain of a feedback control system gave us partial controlof the transient response. The signal- ﬂow representation of linear, time-invariant systems consists of two elements: nodes, which represent signals, and lines with arrows, which represent subsystems. Summing junctions and pickoff points are implicit in signal- ﬂow graphs. These graphs are helpful in visualizing the meaning of the state variables. Also, they can be drawn ﬁrst as an aid to obtaining the state equations for a system. Mason ’s rule was used to derive the system’ s transfer function from the signal-ﬂow graph. This formula replaced block diagram reduction techniques. Mason ’s rule seems complicated, but its use is simpli ﬁed if there are no nontouching loops. In many of these cases, the transfer function can be written by inspection, with less labor than in the blockdiagram reduction technique. Finally, we saw that systems in state space can be represented using different sets of variables. In the last three chapters, we have covered phase-variable ,cascade ,parallel , controller canonical, and observer canonical forms. A particular representation may be chosen because one set of state variables has a different physical meaning than another set,or because of the ease with which particular state equations can be solved. In the next chapter, we discuss system stability. Without stability we cannot begin to design a system for the desired transient response. We will ﬁnd out how to tell whether a system is stable and what effect parameter values have on a system’ s stability. Review Questions 1.Name the four components of a block diagram for a linear, time-invariant system. 2.Name three basic forms for interconnecting subsystems. 3.For each of the forms in Question 2, state (respectively) how the equivalent transferfunction is found. 4.Besides knowing the basic forms as discussed in Questions 2 and 3, what otherequivalents must you know in order to perform block diagram reduction? 5.For a simple, second-order feedback control system of the type shown in Figure 5.14,describe the effect that variations of forward-path gain, K, have on the transient response. 6.For a simple, second-order feedback control system of the type shown in Figure 5.14, describe the changes in damping ratio as the gain, K, is increased over the underdamped region. 7.Name the two components of a signal- ﬂow graph. 8.How are summing junctions shown on a signal- ﬂow graph?278 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:22 9.If a forward path touched all closed loops, what would be the value of Δk? 10.Name ﬁve representations of systems in state space. 11.Which two forms of the state-space representation are found using the same method? 12.Which form of the state-space representation leads to a diagonal matrix? 13.When the system matrix is diagonal, what quantities lie along the diagonal? 14.What terms lie along the diagonal for a system represented in Jordan canonical form? 15.What is the advantage of having a system represented in a form that has a diagonal system matrix? 16.Give two reasons for wanting to represent a system by alternative forms. 17.For what kind of system would you use the observer canonical form? 18.Describe state-vector transformations from the perspective of different bases. 19.What is the de ﬁnition of an eigenvector? 20.Based upon your de ﬁnition of an eigenvector, what is an eigenvalue? 21.What is the signi ﬁcance of using eigenvectors as basis vectors for a system transformation? Problems 1.Reduce the block diagram shown in Figure P5.1 to a single transfer function, T sC s=R sUse the following methods: a.Block diagram reduction [Section: 5.2] b.MATLAB s+ –R(s) + 2C(s)s s21 s + 150 + 2– – FIGURE P5.1 2.Find the closed-loop transfer function, T sC s=R s for the system shown in Figure P5.2, using block diagramreduction. [Section: 5.2]H1 R(s) + + +– G1 G2 G3 C(s) FIGURE P5.2 3.Find the equivalent transfer function, T sC s=R s, for the system shown in Figure P5.3. [Section: 5.2] G1 G4+– –R(s) + ++– +G2 G3G5 G6C(s) G7++ FIGURE P5.3Problems 279WEBC05 10/28/2014 17:36:23 4.Reduce the system shown in Figure P5.4 to a single transfer function, T sC s=R s. [Section: 5.2] + –R(s) + ++ –G2 G1G3 G4 HC(s) FIGURE P5.4 5.Find the transfer function, T sC s=R s,f o rt h e system shown in Figure P5.5. Use the following methods: a.Block diagram reduction [Section: 5.2] b.MATLAB. Use the followingtransfer functions:G 1 s1= s7;G2 s1= s22s3, G3 s1= s4;G4 s1=s, G5 s5= s7;G6 s1= s25s10, G7 s3= s2;G8 s1= s6. Hint: Use the append andconnect com- mands in MATLAB’ s Control System Toolbox. + –R(s)+ G1+ +++ ++– G2G3 G4 G5G8 G6 G7C(s) FIGURE P5.56.Reduce the block diagram shown in Figure P5.6 to a single block, T sC s=R s. [Section: 5.2] + –R(s)C(s) G1 G5 G3– G6 G2 G4 G7 ++ ++G8 FIGURE P5.6 7.Find the unity feedback system that is equivalent to the system shown in Figure P5.7. [Section: 5.2] R(s) +– –s 2s+ +s ++ 1– –+s+1C(s) 4 FIGURE P5.7 8.Given the block diagram of a system shown in Figure P5.8, ﬁnd the transfer function G sθ22 s= θ11 s. [Section: 5.2] +– G1(s) G2(s) –G3(s) +G7(s) + ++G4(s) G5(s) G6(s)(s)θ21 θ22 θ12θ11 (s) (s) (s) FIGURE P5.8280 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:23 9.Reduce the block diagram shown in Figure P5.9 to a single transfer function, T s C s=R s. [Section: 5.2] R(s) +– G2 G5 G6 G3G1 –+ G4+ G7+ +–C(s) FIGURE P5.9 10.Reduce the block diagram shown in Figure P5.10 to a single block representing the transfer function,T sC s=R s. [Section: 5.2] + ––– R(s) + ––G2(s) G3(s) G1(s)H1(s)H3(s) H2(s) H4(s)C(s) FIGURE P5.10 11.For the system shown in Figure P5.11, ﬁnd the percent overshoot, settling time, and peak time for a step input ifthe system ’s response is underdamped. (Is it? Why?) [Section: 5.3] R(s) + E(s) –225 s(s + 15)C(s) FIGURE P5.11 12.For the system shown in Figure P5.12, ﬁnd the output, c(t), if the input, r(t), is a unit step. [Section: 5.3] R(s) + E(s) –4 s(s + 3)C(s) FIGURE P5.1213.For the system shown in Figure P5.13, ﬁnd the poles of the closed-loop transfer function, T sC s=R s. [Section: 5.3] R(s)3 C(s) + ––+ –5ss +1 4 FIGURE P5.13 14.For the system of Figure P5.14, ﬁnd the value of Kthat yields 10% overshoot for a step input. [Section: 5.3] R(s) C(s) + –s(s+30)K FIGURE P5.14 15.For the system shown in Figure P5.15, ﬁndKandα to yield a settling time of 0.12 second and a 20% overshoot. [Section: 5.3] R(s) + E(s) –K s(s + α)C(s) FIGURE P5.15 16.For the system of Figure P5.16, ﬁnd the values of K1 andK2to yield a peak time of 1 second and a settling time of 2 seconds for the closed-loop system ’s step response. [Section: 5.3] + + – –R(s) C(s) 50 s(s+1) K2sK1 FIGURE P5.16 17.Find the following for the system shown in Figure P5.17:[Section: 5.3] a.The equivalent single block th at represents the transfer function, T sC s=R s. (problem continues )Problems 281WEBC05 10/28/2014 17:36:24 (Continued ) b.The damping ratio, natural frequency, percent overshoot, settling time, peak time, rise time, and damped frequency of oscillation. R(s) +– + s+121C(s) –+10 10 0.2ss20 FIGURE P5.17 18.For the system shown in Figure P5.18, ﬁndζ,ωn, percent overshoot, peak time, rise time, and settling time. [Section: 5.3] R(s) 7350 s(s + 100)E(s) C(s) –+ FIGURE P5.18 19.A motor and generator are set up to drive a load as shownin Figure P5.19. If the generator output voltage ise g tKfif t, where if(t) is the generator ’sﬁeld current, ﬁnd the transfer function G sθo s=Ei s. For the generator, Kf2Ω. For the motor, Kt2 N-m/A, andKb2 V-s/rad. 1 Ω if(t) ei(t) 1 HGenerator Ja = 0.75 kg-m2eg(t) 10 20 4 kg-m2 4 N-m-s/rado(t)1 Ω 1 ΩMotor + –+ –θ FIGURE P5.19 20.Find G sE0 s=T sfor the system shown in Figure P5.20. J Buffer amplifier gain = 1e1(t)N2N1T(t) 10 V 1 Turn pot + e0(t) RC FIGURE P5.2021.Find the transfer function G sEo s=T sfor the system shown in Figure P5.21. +Buffer amplifier gain = 1J1 = 0.25 kg-m 2 J2 = 32 kg-m 2K = 5 N-m/rad D=2 N-m-s/rad5 20 401025 V –25 V10 Turn pot 10 μF eo(t)200K ΩT(t) FIGURE P5.21 22.Label signals and draw a signal-ﬂ ow graph for each of the block diagrams shown in the following problems:[Section: 5.4] a.Problem 1 b.Problem 3 c.Problem 5 Draw a signal- ﬂow graph for each of the following state equations: [Section: 5.6] a. _x010 001  2  4  62 6643 775x0 012 6643 775r y110/C2/C3 x b. _x010 0 31  3  4  52 6643 775x0 112 6643 775r y120/C2/C3 x c. _x71 0  32  1  10 22 6643 775x1 212 6643 775r y13 2/C2/C3 x Given the system below, draw a signal- ﬂow graph and represent the system in state space in the following forms: [Section: 5.7] a.Phase-variable form b.Cascade form G s200 s10 s20 s30282 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:25 25.Repeat Problem 24 for G s20 s s 2 s5 s8 [Section: 5.7] 26.Using Mason ’s rule, ﬁnd the transfer function, T sC s=R s, for the system represented in Figure P5.22. [Section: 5.5] G1(s) R(s)G2(s) G3(s) G4(s) C(s) –1 –1–1–1 FIGURE P5.22 27.Using Mason ’s rule, ﬁnd the transfer function, T sC s=R s, for the system represented by Figure P5.23. [Section: 5.5] G1(s) R(s)G2(s) G4(s) G6(s) G7(s) 1 C(s) H2(s) H1(s) G5(s) G3(s) H3(s) FIGURE P5.23 28.Use Mason ’s rule to ﬁnd the transfer function of Figure 5.13 in the text. [Section: 5.5] 29.Use block diagram reduction to ﬁnd the transfer function of Figure 5.21 in the text, and compare your answer with that obtained by Mason ’s rule. [Section: 5.5] 30.Represent the following systems in statespace in Jordan canonical form. Draw thesignal- ﬂow graphs. [Section: 5.7] a.G s s1 s2 s32 s4 b.G s s2 s52 s72 c.G s s4 s22 s5 s6 31.Represent the systems below in state spacein phase-variable form. Draw the signal- ﬂow graphs. [Section: 5.7] a.G ss3 s22s7 b.G ss22s6 s35s22s1 c.G ss32s27s1 s43s35s26s432.Repeat Problem 31 and represent each system in controller canonical and observer canonical forms. [Section: 5.7] 33.Represent the feedback control systemsshown in Figure P5.24 in state space. Whenpossible, represent the open-loop transfer functions sep- aratelyincascadeandcompletethefeedbackloopwiththe signal path from output to input. Draw your signal-ﬂowgraph to be in one-to-one correspondence to the blockdiagrams (as close as possible). [Section: 5.7] R(s) + E(s) –16(s + 2) C(s) (d)(s + 1)2R(s) + E(s) –1 s(s + 1)C(s) (c)160+ – sR(s) + –10 s(s2 + 6s + 24)C(s) (b)R(s) + E(s) –50 (s + 9)(s + 8)(s + 2)C(s) (a) FIGURE P5.24 34.You are given the system shown inFigure P5.25. [Section: 5.7] a.Represent the system in state space in phase-variable form. b.Represent the system in state space in any other form besides phase-variable. R(s) + E(s) –30 s(s + 3)(s + 5)C(s) FIGURE P5.25Problems 283WEBC05 10/28/2014 17:36:26 35.Repeat Problem 34 for the system shown in Figure P5.26. [Section: 5.7] + –R(s) C(s) 10(s + 2)(s +3 ) (s+1)(s + 4)(s + 5)(s +6 ) FIGURE P5.26 36.Use MATLAB to solve Problem 35. 37.Represent the system shown in Figure P5.27 in state space where x1 t;x3 t;andx4 t,a s shown, are among the state variables, c(t) is the output, andx2 tis internal to X1 s=X3 s. [Section: 5.7] R(s) + E(s) –C(s) X4(s) X3(s) X1(s) 1s1s1 s2+2s–5 FIGURE P5.27 38.Consider the rotational mechanical systemshown in Figure P5.28. a.Represent the system as a signal-ﬂ ow graph. b.Represent the system in state space if the outputisθ 2 t. 1 kg-m21(t) 2(t) 2 N-m-s/rad 3 N-m-s/rad 2 N-m/rad 4 N-m/radT(t) 1 N-m/rad2 N-m-s/rad 1 kg-m2θ θ FIGURE P5.28 39.Given a unity feedback system with the forward-path transfer function G s8 s s8 s10 use MATLAB to represent the closed-loopsystem in state space in a.phase-variable form; b.parallel form. 40.Consider the cascaded subsystems shownin Figure P5.29. If G 1(s) is represented in state space as _x1A1x1B1r y1C1x1andG2(s) is represented in state space as _x2A2x2B2y1 y2C2x2 show that the entire system can be represented in statespace as _x 1∙∙∙ _x2"# A1 0 B2C1A22 643 75x1∙∙∙ x2"# B1∙∙∙ 0"# r y2 /C20 0... ?C2/C21x1∙∙∙ x2"# G1(s) G2(s)Y2(s) Y1(s) R(s) FIGURE P5.29 41.Consider the parallel subsystems shown in Figure P5.30. If G1(s) is represented in state space as _x1A1x1B1r y1C1x1 andG2(s) is represented in state space as _x2A2x2B2r y2C2x2 show that the entire system can be represented in statespace as _x 1∙∙∙ _x2"# A1 0 0A 22 643 75x1∙∙∙ x2"# B1∙∙∙ B2"# r y C1... ?C2/C20/C21x1∙∙∙ x2"# G2(s)G1(s) Y(s) ++Y1(s) Y2(s)R(s) FIGURE P5.30 42.Consider the subsystems shown in F i g u r eP 5 . 3 1a n dc o n n e c t e dt of o r ma284 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:27 feedback system. If G(s) is represented in state space as _x1A1x1B1e yC1x1 andH2(s) is represented in state space as _x2A2x2B2y ρC2x2 show that the closed-loop system can be represented in state space as _x1∙∙∙ _x2"# A1 B1C2 B2C1A22 6643 775x1∙∙∙ x2"# B1∙∙∙ 0"# r y C1... ?0/C20/C21x1∙∙∙ x2"# G(s)E(s) + R(s) – H(s)P(s)Y(s) FIGURE P5.31 43.Given the system represented in state space as follows: [Section: 5.8] _x 1 76  848 47  82 6643 775x 5  7 52 6643 775r y  9 9 8/C2/C3 x convert the system to one where the new state vector, z,i s z 49  3 0 47  1 4 92 435x Repeat Problem 43 for the following system: [Section: 5.8] _x 511 9 9 9  9 182 6643 775x9  4 02 6643 775r y  2 41/C2/C3 xand the following state-vector transformation: z5 49 6 76 6 5 32 435x Diagonalize the following system: [Section: 5.8] _x 5  54 20  2 0 2  12 6643 775x 1 2  22 6643 775r y  112/C2/C3 x 46.Repeat Problem 45 for the following system: [Section: 5.8] _x 10  37 18:25 6 :25  11:75  7:25  2:25 5 :752 6643 775x1 322 6643 775r y1 24/C2/C3 x Diagonalize the system in Problem 46 using MATLAB. 48.Find the closed-loop transfer function of theUnmanned Free-Swimming Submersible vehicle ’s pitch control system shown on the back endpapers(Johnson, 1980 ). Repeat Problem 48 using MATLAB. 50.Use Simulink to plot the effectsof nonlinearities upon the closed-loop step response of the antennaazimuth position control system shownon the front endpapers, Con ﬁguration 1. In particular, consider individuallyeach of the following nonlinearities: saturation 5 volts , backlash (dead- band width 0.15), deadzone (  2t o +2), as well as the linear response. Assume the preampli ﬁer gain is 100 and the step input is 2 radians. 51.Problem 8 in Chapter 1 describes a high-speed pro- portional solenoid valve. A subsystem of the valve is the solenoid coil shown in Figure P5.32. Currentthrough the coil, L, generates a magnetic ﬁeld that produces a force to operate the valve. Figure P5.32 canbe represented as a block diagram (Vaughan ,1996).Problems 285WEBC05 10/28/2014 17:36:27 + RL vg(t)i(t)vL(t) vR(t)+– –+ – FIGURE P5.32 Solenoid coil circuit a.Derive a block diagram of a feedback system that represents the coil circuit, where the applied voltage, vg(t), is the input, the coil voltage, vL(t), is the error voltage, and the current, i(t), is the output. b.For the block diagram found in Part a,ﬁnd the Laplace transform of the output current, I(s). c.Solve the circuit of Figure P5.32 for I(s), and com- pare to your result in Part b. 52.Figure P5.33 shows a noninverting operational ampli ﬁer. vov1 v1 viviRi Rf (a) (b) –+ voA i fi R RR ++– FIGURE P5.33 a.Noninverting ampli ﬁer;b.block diagram Assuming the operational ampli ﬁer is ideal, a.Verify that the system can be described by thefollowing two equations: v oA vi vo v1Ri RiRfvo b.Check that these equations can be described by the block diagram of Figure P5.33( b). c.Use Mason ’s rule to obtain the closed-loop system transfer functionVo s Vi s: d.Show that when A®∞;Vo s Vi s1Rf Ri: 53.Figure P5.34 shows the diagram of an inverting operational ampliﬁ er. vov1 viRi Rf +– + – FIGURE P5.34 Inverting operational ampli ﬁera.Assuming an ideal operational ampli ﬁer, use a simi- lar procedure to the one outlined in Problem 52 toﬁnd the system equations. b.Draw a corresponding block diagram and obtain the transfer functionVo s Vi s: c.Show that when A®∞;Vo s Vi s Rf Ri. 54.Figure P5.35( a) shows an n-channel enhancement-mode MOSFET source follower circuit. Figure P5.35( b) shows its small-signal equivalent (where RiR1jjR2) (Neamen ,2001 ). a.Verify that the equations governing this circuit are vin viRi RiRs;vgsvin vo;vogm Rsjjrovgs b.Draw a block diagram showing the relations between the equations. c.Use the block diagram in Part btoﬁndVo s Vi s. vo RsVDD R2R1 +–viRs (a)( b)+vo– vgsvin gmVgs roRs RiRs vi+– FIGURE P5.35 a.Ann-channel enhancement-mode MOSFET source follower circuit; b.small-signal equivalent 55.A car active suspension system adds an active hydraulicactuator in parallel with the passive damper and springto create a dynamic impedance that responds to roadvariations. The block diagram of Figure P5.36 depictssuch an actuator with closed-loop control. Kte r++– +1 s2 + ω x1 = x3 x3Mus mr1 02 s + εεζ1 FIGURE P5.364 In the ﬁgure, Ktis the spring constant of the tire, MUS is the wheel mass, ris the road disturbance, x1is 4Lin, J.-S., Kanellakopoulos, I. “Nonlinear Design of Active Suspensions. ” IEEE Control Systems Magazine , Vol. 17, Issue 3, June 1997 pp. 45 –59. Figure 3, p. 48. IEEE Control Systems by IEEE Control Systems Society. Reproduced with permission of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.286 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:28 the vertical car displacement, x3is the wheel vertical displacement, ω2 0Kt MUSis the natural frequency of the unsprung system and εis aﬁltering parameter to be judiciously chosen ( Lin,1997 ). Find the two transfer functions of interest: a.X3 s R s b.X1 s R s 56.The basic unit of skeletal and cardiac muscle cells is a sarcomere, which is what gives such cells a striated (parallel line) appearance. For example, one bicep cell has about 105sarcomeres. In turn, sarcomeres are composed of protein complexes. Feedback mechanismsplay an important role in sarcomeres and thus musclecontraction. Namely, Fenn ’s law says that the energy liberated during muscle contraction depends on the initialconditions and the load encountered. The followinglinearized model describing sarcomere contraction has been developed for cardiac muscle: _A _T _U _SL2 666643 77775 100 :2 20:7 30:7 200 :3 40  20:22 49 :95 526 :1 01 0 :22 59:95 526 :1 00 0 02 666643 77775A T U SL2 666643 77775208  208  108 :8  12 666643 77775u t y 0157 0 1570 59400/C2/C3A T U SL2 666643 77775 6240 u t where Adensity of regulatory units with bound calcium and adjacent weak cross bridges μM Tdensity of regulatory units with bound calciumand adjacent strong cross bridges M Udensity of regulatory units without boundcalcium and adjacent strong cross bridges M SLsarcomere length m The system ’s input is u tthe shortening muscle velocity in meters/second and the output is y t muscle force output in Newtons ( Yaniv ,2006 ). Do the following: a. Use MATLAB to obtain the transfer functionY s U s. b.Use MATLAB to obtain a partial-fraction expansion for Y s U s.c.Draw a signal-ﬂ ow diagram of the system in parallel form. d.Use the diagram of Part cto express the system in state-variable form with decoupled equations. 57.An electric ventricular assist device (EVAD) has beendesigned to help patients with diminished but stillfunctional heart pumping action to work in parallel with the natural heart. The device consists of a brushless dc electric motor that actuates on a pusherplate. The plate movements help the ejection of bloodin systole and sac ﬁlling in diastole. System dynamics during systolic mode have been found to be: _x _v _P ao2 43501 0 0 68 :3 7:2 03 :2 0:72 435x v P ao2 4350 425 :4 02435e m The state variables in this model are x, the pusher plate position, v, the pusher plate velocity, and Pao, the aortic blood pressure. The input to the system is em, the motor voltage ( Tasch ,1990 ). a.Use MATLAB to ﬁnd a similarity transformation to diagonalize the system. b.Use MATLAB and the obtainedsimilarity transformation ofPart a to obtain a diagonalized expres- sion for the system. 58.In an experiment to measure and identify postural arm reﬂexes, subjects hold in their hands a linear hydraulic manipulator. A load cell is attached to the actuatorhandle to measure resulting forces. At the application of a force, subjects try to maintain a ﬁxed posture. Figure P5.37 shows a block diagram for the combinedarm-environment system. D(s)He(s)Xh(s) Xa(s)Hh(s) Hi(s) Hr(s) Hact(s)A(s)Fh(s) Fint(s) Fref(s)+ + +– – Arm Environment– FIGURE P5.37 In the diagram, Hr(s) represents the re ﬂexive length and velocity feedback dynamics; Hact(s) the activation dynamics, Hi(s) the intrinsic act dynamics; Hh(s) the hand dynamics; He(s) the environmental dynam- ics;Xa(s) the position of the arm; Xh(s) the measuredProblems 287WEBC05 10/28/2014 17:36:29 position of the hand; Fh(s) the measured interaction force applied by the hand; Fint(s) the intrinsic force; Fref(s)t h er e ﬂexive force; A(s)t h er e ﬂexive activation; and D(s) the external force perturbation ( de Vlugt , 2002). a.Obtain a signal-ﬂ ow diagram from the block diagram. b.FindFh s D s. 59.Use LabVIEW ’s Control Design and Simulation Module to obtain the controller and the observercanonical forms for: G ss27s2 s39s226s24 60.A virtual reality simulator with haptic (sense of touch)feedback was developed to simulate the control of asubmarine driven through a joystick input. Operatorhaptic feedback is provided through joystick positionconstraints and simulator movement ( Karkoub ,2010). Figure P5.38 shows the block diagram of the hapticfeedback system in which the input u his the force exerted by the muscle of the human arm; and theoutputs are y s, the position of the simulator, and yj,t h e position of the joystick. Ths Tes Tej ThjKej- -- +++- Fj1/s 1/s Khs Csys KhFhyj uhCjKesFs FIGURE P5.385 a.Find the transfer functionYs s Uh s: b.Find the transfer functionYj s Uh s: 61.Some medical procedures require the insertion of a needle under a patient’ s skin using CT scan monitoringguidance for precision. CT scans emit radiation, posing some cumulative risks for medical personnel. To avoid this problem, a remote control robot has been developed(Piccin ,2009 ). The robot controls the needle in position and angle in the constraint space of a CT scan machineand also provides the physician with force feedbackcommensurate with the insertion opposition encounteredby the type of tissue in which the needle is inserted. Therobot has other features that give the operator the similar sensations and maneuverability as if the needle was inserted directly. Figure P5.39 shows the block diagramof the force insertion mechanism, where F his the input force and Xhis the output displacement. Summing junction inputs are positive unless indicated with anegative sign. By way of explanation, Z=impedance; G=transfer function; C i=communication channel transfer functions; F=force; X=position. Subscripts h andmrefer to the master manipulator. Subscripts sand erefer to the slave manipulator. a.Assuming Zh0;C1Cs;C21C6andC4  C muse Mason ’s Rule to show that the transfer function from the operators force input Fhto needle displacement Xhis given by Y sXh s Fh sZ 1 mC2 1GsCs 1GsCsZ 1 m cmC2ZeGsCs b.Now with Zh≠0 show thatXh s Fh sY s 1Y sZh Fe Ze Gs Cs Zm–1 ZhXh Fm FhVsc C4 C2C1 Cm C6XeSlave manipulator –– – Master manipulato r FIGURE P5.396 5Karkoub, M., Her, M-G., and Chen, J. M. Design and Control of a Haptic Interactive Motion Simulator for Virtual Entertainment Systems. Robotica , vol. 28, 2010, Figure 8, p. 53. Reproduced by permission of Cambridge University Press.6Piccin, O., Barbé, L., Bayle, B., and Mathelin, M. A Force Feedback Teleoperated Needle Insertion Device for Percutaneous Procedures. Int. J. of Robotics Research , vol. 28, p. 1154. Figure 14. Copyright 2009. Reprinted by Permission of SAGE.288 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:29 1 Lfs Rf1 Cfs VLoad−IDist+ + −++ + − −Ki1Kp1 +sKp21 ˆCfsICfˆ ˆ Lfs + Rf FIGURE P5.40 62.A hybrid solar cell and diesel power distribution system has been proposed and tested ( Lee, 2007 ). The system has been shown to have a very good uninterruptible power supply as well as line voltage regulation capabilities. Figure P5.40 shows a signal-ﬂow diagram of the system. The output, V Load,i st h e voltage across the load. The two inputs are ICf,t h e reference current, and IDist, the disturbance represent- ing current changes in the supply. a.Refer to Figure P5.40 and ﬁnd the transfer function VLoad s ICf s: b.Find the transfer functionVLoad s IDist s: 63.Continuous casting in steel production is essentially asolidi ﬁcation process by which molten steel is solidi ﬁed into a steel slab after passing through a mold, as shownin Figure P5.41( a). Final product dimensions depend mainly on the casting speed V p(in m/min), and on the stopper position X(in %) that controls the ﬂow of molten material into the mold ( Kong ,1993 ). A simpli ﬁed model of a casting system is shown in Figure P5.41(b)(Kong ,1993 )a n d( Graebe ,1995 ). In the model, H m=mold level (in mm); Ht=assumed constant height of molten steel in the tundish; Dz=mold thickness = depth of nozzle immerged into molten steel; and Wt= weight of molten steel in the tundish. For a speci ﬁc setting let Am=0.5 and Gx s0:63 s0:926 Also assume that the valve positioning loop may be modeled by the following second-order transfer function: GV sX s YC s100 s210s100and the controller is modeled by the following transfer function: GC s1:6 s21:25s0:25 s LADLE SLABTUNDISH Ht Dz HmHm 11 12M1Vp Vs M2X HYDRAULIC UNIT ELECTRONIC UNITNKK MOLD SEGMENT 1 SEGMENT 2 SEGMENT 3REGULATOR UNITSET- POINT r (a) ++ ––E(s)GC(s) GV(s)Qo(s) Qi(s)Vp(s) Hm(s) R(s)YC(s) X(s)Gx(s) m(s) FIGURE P5.41 Steel mold process: a.process;7b.block diagram The sensitivity of the mold level sensor is β=0.5 and the initial values of the system variables at t=0  are: R 0   0;YC 0   X 0   41:2;ΔHm 0   0; (problem continues ) 7Kong, F., and de Keyser, R. Identi ﬁcation and Control of the Mould Level in a Continuous Casting Machine. Second IEEE Conference on Control Applications , Vancouver, B.C., 1993. pp. 53 –58. Figure 1. p. 53.Problems 289WEBC05 10/28/2014 17:36:30 (Continued ) Hm 0    75 ;ΔVp 0   0;andVp 0   0. Do the following: a.Assuming vp tis constant Δvp0/C2/C3 ,ﬁnd the closed-loop transfer function T sΔHm s=R s. b.Forr t5u t;vp t0:97u t; andHm 0     75 mm, use Simulink to simulate the system. Record the time and mold level (in arrayformat) by connecting them to Work- space sinks, each of which should carry the respective variable name. Afterthe simulation ends, utilize MATLABplot commands to obtain and edit the graph of h m(t) from t=0 to 80 seconds. 64.A simpliﬁed second-order transfer function model for bicycle dynamics is given by φ s δ saV bhsV a/C18/C19 s2 g h/C16/C17 The input is δ(s), the steering angle, and the output is φ(s), the tilt angle (between the ﬂoor and the bicycle longitudinal plane). In the model parameter ais the hori- zontal distance from the center of the back wheel to the bicycle center of mass; bis the horizontal distance between the centers of both wheels; his the vertical distance from the c e n t e ro fm a s st ot h e ﬂoor;Vis the rear wheel velocity (assumed constant); and gis the gravity constant. It is also assumed that the rider remains at a ﬁxed position with respect to the bicycle so that the steer axis is vertical and thatall angle deviations are small ( Åstrom ,2005 ). a.Obtain a state-space representation for the bicyclemodel in phase-variable form. b.Find system eigenvalues and eigenvectors. c.Find an appropriate similarity transformation matrixto diagonalize the system and obtain the state-spacesystem ’s diagonal representation. 65.It is shown in Figure 5.6( c) that when negative feedback is used, the overall transfer function for the system ofFigure 5.6( b)i s C s R sG s 1G sH s Develop the block diagram of an alternative feedbacksystem that will result in the same closed-looptransfer function, C s=R s, with G(s) unchanged and unmoved. In addition, your new block diagram must have unity gain in the feedback path. You can add input transducers and/or controllers in the mainforward path as required. 66.The purpose of an Automatic Voltage Regulator is tomaintain constant the voltage generated in an electricalpower system, despite load and line variations, in an electrical power distribution system ( Gozde ,2011 ). Figure P5.42 shows the block ΔVref(s) ΔVt(s) ΔVe(s) ΔVs(s)u(s)GPID(s)Ka Ke Kg Ta Te Tg 1 TaPlant s + Amplifier, Exciter, GeneratorController + – SensorFeedbackPID Compensator1 Tes +1 Tgs + Ks Ts 1 Tss + FIGURE P5.42 diagram of such a system. Assuming Ka=10,Ta=0.1, Ke=1,Te=0.4,Kg=1,Tg=1,Ks=1,Ts=0.001, and the controller, GPID s1:60:4 s0:3s,ﬁnd the closed-loop transfer function, T sΔVt s ΔVref s, of the system, expressing it as a rational function. 67.A drive system with an elastically coupled load was presented in Problem 71, Chapter 4. The mechanicalpart of this drive (Thomsen ,2011) was reduced to a two-inertia model. Using slightly different parameters,the following transfer function results: G s ΩL s T s25 s21:2s12500  s s25:6s62000  Here, T(s)=Tem(s) TL(s), where Tem(s)=the electro- magnetic torque developed by the motor, TL(s)=the load torque, and ΩL sthe load speed. The drive is shown in Figure P5.43 as the con- trolled unit in a feedback control loop, where Ωr sthe desired reference speed. The controller transfer function is GC sKpKI s40:5 sand provides an output voltage =0–5.0 volts. The motor and its power ampli ﬁer have a gain, KM=10 N-m/volt. a.Find the minor-loop transfer function, D sΩL s Tem s analytically or using MATLAB. b.Given that at t=0, the load speed ωL(t)=0 rad/sec and a step reference input ωr(t)=260 u(t) , rad/sec, is applied, use MATLAB (or any other pro- gram) to ﬁnd and plot ωL t. Mark on the graph all of the important character- istics, such as percent overshoot,peak time, rise time, settling time,andﬁnal steady-state value.290 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:30 Ωr(s)+ +ΩL(s) –– GC(s)Tem(s)TL G(s) KM0.1 FIGURE P5.43 68.Integrated circuits are manufactured through a litho- graphic process on a semiconductor wafer. In lithography,similarly to chemical photography, a semiconductorwafer is covered with a photosensitive emulsion andthen selectively exposed to light to form the electronic components. Due to miniaturization, this process is to be performed with nanometer accuracy and at the highestpossible speed. Sophisticated apparatus and methodshave been developed for this purpose. Figure P5.44 showsthe block diagram of a scanner dedicated to this purpose(Butler, 2011 ). Use Mason ’sR u l et o ﬁnd: a.The transfer function Xss s R s. b.The transfer functionXls s R s. ++++ + – – + –Css(s)mssmss + mls Esss2 RHss(s) XssCls(s)ElsHls(s) DiffXls FIGURE P5.44869.A boost converter is a dc-to-dc switched power supply in which the voltage output is larger than the voltage input. A block diagram for a peak current mode controlledconverter ( Chen ,2013 ) is shown in Figure P5.45. Find the transfer function^vo s ^vi s. 70.In Problem 64 of Chapter 2, a three-phase ac/dc converterthat supplies dc to a battery charging system ( Graovac , 2001 ) was introduced. Each phase had an ac ﬁlter represented by the equivalent circuit of Figure P2.38.Youwereasked toshowthatthefollowingequationgivesthes-domain relationship between the inductor current, I acF(s), and two active sources: a current source, IacR(s), representing a phase of the ac/dc converter, and thesupply phase voltage, V a(s): IacF sIacF1 sIacF2 s1RCs LCs2RCs 1IacR s Cs LCs2RCs 1Va s a.Derive an s-domain equation for Vc(s). b.Given that R1Ω;L1 mH, and C=20μF,i acR(t)=10u(t)amps, va(t)=20t u(t) volts,10and assuming zero initial conditions, use Simulinkto model this system and plottheinduc-tor current, i acF(t) , and the capacitor voltage, vc(t), over a period from 0 to 15 ms. DESIGN PROBLEMSDESIGN PROBLEMS The motor and load shown in Figure P5.46( a)a r eu s e d as part of the unity feedback system shown in Figure P5.46( b). Find the value of the coef ﬁcient of FmTpa(s)Tfa(s) vo viiℓKf Tpi(s) Tma(s) Hc(s) Ri Kr++ ++ +++ – FIGURE P5.459 8Butler, H. Position Control in Lithographic Equipment. IEEE Control Systems Magazine , October 2011, pp. 28 –47. Figure 18, p. 37. 9Chen, S.-Y. Block diagrams and transfer functions of control-to-output and line-to-output for peak current-mode controlled boost converters. IET Power Electron , Vol. 6, Iss. 1, pp. 60 –66, 2013. Figure 4, p. 62. The Institution of Engineering and Technology.10Noting that a ramp is the integration of a step, we used an integrator with limits.Problems 291WEBC05 10/28/2014 17:36:31 viscous damping, DL, that must be used in order to yield a closed-loop transient response having a 20% overshoot. R(s) + E(s) –1000Motor & loadGear trainθM(s) θL(s) (b)Kt = 2 N-m/A Kb = 2 V-s/rad Ja = 2 kg-m2 Da = 2 N-m-s/rad Ra = 2Ω1θM(s) 1 2θL(s) JL = 800 kg-m2 (a)DL10 FIGURE P5.46 Position control: a.motor and load; b.block diagram Assume that the motor whose transfer function isshown in Figure P5.47( a)i su s e da st h ef o r w a r d path of a closed-loop, unity feedback system. a.Calculate the percent overshoot and settling time that could be expected. b.You want to improve the response found in Part a. Since the motor and the motor constants cannot be changed, an ampli ﬁer and a tachometer (voltage generator) are inserted into the loop, as shown inFigure P5.47. Find the values of K 1and K2to yield a 20% overshoot and a settling time of0.25 second. R(s) + E(s) –25K1AmpMotor s(s + 1)C(s) + – K2s Tachometer (b)R(s) + E(s) –251s(s + 1)C(s) (a)Motor FIGURE P5.47 a.Position control; b.position control with tachometer The system shown in Figure P5.48 will have its transientresponse altered by adding a tachometer. Design KandK 2in the system to yield a damping ratio of 0.69. The natural frequency of the system before the addition of thetachometer is 10 rad/s. R(s) + E(s) –1 s(s + 1)C(s)K+K2s –Tachometer Power amplifier and motorPreamplifier FIGURE P5.48 Position control Themechanical system shownin Figure P5.49( a) isused as part of the unity feedback system shown inFigure P5.49( b). Find the values of MandDto yield 20% overshoot and 2 seconds settling time. R(s) X(s) E(s) Ea(s) + –500Motor & loadGearFor the motor: Ja= 1 kg-m 2 Da= 1 N-m-s/rad Ra=1 Ω Kb= 1 V-s/rad Kt= 1 N-m/AN2 = 20N1 = 10 D J = 1 kg-m 2Ideal gear 1:1 fv=1 N-s/mx(t)ea(t)Motor Radius = 2 m+ – (a) (b)M FIGURE P5.49 a.Motor and load; b.motor and load in feedback system Assume ideal operational ampli ﬁers in the circuit of Figure P5.50. a.Show that the leftmost operational ampli ﬁer works as a subtracting ampli ﬁer. Namely, v1vo vin. b.Draw a block diagram of the system, with the subtracting ampli ﬁer represented with a summing junction, and the circuit of the rightmost operationalampli ﬁer with a transfer function in the forward path. Keep Ras a variable. c.Obtain the system ’s closed-loop transfer function. d.For a unit step input, obtain the value of Rthat will result in a settling time T s1 msec.292 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:31 e.Using the value of Rcalculated in Part d, make a sketch of the resulting unit step response. vovinv1 10 k0.1 F R10 k 10 k– + –+10 k FIGURE P5.50 Given the rotational system shown in Figure P4.23 (Problem 78 of Chapter 4), do the following: a.Using the transfer function you derived for thatsystem, G(s)=Θ 1(s)/T(s), where Θ1(s)i st h e angular displacement of the ﬁrst shaft, ﬁnd the value of n=N1/N2that yields a settling time of 10 seconds for a step input in torque. b.If this rotational system is the controlled unit, G(s), in the feedback system of Figure P5.51, ﬁnd the values of ζ;ωn,%O.S., and Tsfor a controller gain K=4 N-m/rad and r(t)=u(t) radians. R(s) E(s) + –KC(s) G(s) FIGURE P5.51 A process is simulated by the second-order passivecircuit, shown in Figure P5.52, where the feedbackampli ﬁer, controller, and ﬁnal control element are r e p r e s e n t e db yo p - a m pc i r c u i t s . a.Denoting the input and output as R(s)=V i(s) and C(s)=Vo(s), with R(s) C(s)=E(s), and noting that the feedback ampli ﬁer has a unity gain, draw a block diagram for this feedback control system, whereG C(s),GF(s), and GP(s) are the transfer functions of the controller, ﬁnal control element, and the process, respectively. b.Find the value of RPthat makes the circuit repre- senting the process critically damped. c.Noting that the proportional controller is simply anampli ﬁer,G C(s)=KP,ﬁnd the value of its gain KPthat results in dominant closed-loop poles with a dampingratio, ζ0:5, and a settling time, T s=4 ms. Verify that the other pole is nondominant. What would be theappropriate value of the controller potentiometer, R F, given that its tolerance is ±10%?+–+– +–Vo(t) VC(t)–Vo(t)VR(t) Vf(t)Proportional controllerFinal contr o l element Feedback amplifierProcess 100 mH 10 μF0.018 μF 10 KΩ 10 KΩ10 KΩ 10 KΩ 100 KΩ 100 KΩ4.7 KΩRPRF FIGURE P5.52 PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 78.Control of HIV/AIDS. Given the HIV system of Problem 84 in Chapter 4 and repeated here for convenience ( Craig ,2004 ): _T _T* _v2 6643 775 0:04167 0  0:0058 0:0217  0:24 0 :0058 0 100  2:42 643 75T T* v2 643 75 5:2  5:2 02 6643 775u1 y001/C2/C3T T* v2 643 75 Express the system in the following forms: a.Phase-variable form b.Controller canonical form c.Observer canonical form Finally, d.Use MATLAB to obtain the system ’s diagonalized representation. 79.Hybrid vehicle. Figure P5.53 shows the block diagram of a possible cascade control scheme for an HEV drivenby a dc motor ( Preitl ,2007 ). Let the speed controller G SC s10040 s, the torque controller and power amp KAGTC s106 s, the current sensor sensitivity KCS=0.5, the speed sensor sensitivity KSS=0.0433. Also, following the development in previous chapters1 Ra1;ηtotKt1:8; kb2;Dkf0:1;1 Jtot1 7:226;r itot0:0615 ; andρCwAv0r itot0:6154.Problems 293WEBC05 10/28/2014 17:36:32 a.Substitute these values in the block diagram, and ﬁnd the transfer function, T(s)=V(s)/Rv(s), using block- diagram reduction rules. [Hint: Start by moving the lastr itotblock to the right past the pickoff point.] b.Develop a Simulink model for the original system inFigure P5.53. Set the reference signal input, r v(t)=4u(t), as a step input with a zero initial value, a step time =0 seconds, and a ﬁnal value of 4 volts. Use X-Y graphs to display (over the periodfrom 0 to 8 seconds) the response ofthe following variables to the stepinput: (1) change in car speed (m/s), (2) car acceleration (m/s 2), and (3) motor armature current (A). To record the time and the above three variables (in array format) , connect them to four Workspace sinks, each of which carries the respective variable name. After the simulation ends, uti-lize MATLAB plot commands to obtainand edit the three graphs of interest. 80.Parabolic trough collector. Effective controller design for parabolic trough collector setups is an active area of research. One of the techniques used for controller design ( Camacho ,2012) is Internal Model Control (IMC). Although complete details of IMC will notbe presented here, Figure P5.54( a)s h o w sab l o c k diagram for the IMC setup. Use of IMC assumes avery good knowledge of the plant dynamics. InFigure P5.54( a), the actual plant is P(s).~P sis a software model that mimics the plant functions. G(s)is the controller to be designed. It is also assumed thatall blocks represent linear time-invariant systems andthus the superposition theorem applies to the system. a.Use superposition (by assuming D(s)=0) and Mason ’sg a i nf o r m u l at o ﬁnd the transfer function C s R sfrom command input to system output. b.Use superposition (by assuming R(s)=0) and Mason ’s gain formula to ﬁnd the transfer function C s D sfrom disturbance input to system output. c.Use the results of Parts aandbtoﬁnd the combined output C(s) due to both system inputs. d.Show that the system of Figure P5.54( a)h a s the same transfer function as the system in Figure P5.54( b)w h e n GC sG s 1 G s~P s. +++ +–G(s) P(s) P~(s)C(s)D(s) R(s) – (a) +++ –Gc(s) P(s) C(s)D(s) R(s) (b) FIGURE P5.54Ω(s)Ev(s) Eb(s) Ia(s)RaGSC(s) GTC(s)UC(s)Ua(s) Ia(s)TL(s) Tf(s)T(s)GTC(s)Angular speed, Ω(s)Vehicle speed, V (s)Rv(s) FIGURE P5.53294 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:32 Cyber Exploration Laboratory Experiment 5.1 Objectives To verify the equivalency of the basic forms, including cascade, parallel, and feedback forms. To verify the equivalency of the basic moves, including moving blocks past summing junctions, and moving blocks past pickoff points. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.Find the equivalent transfer function of three cascaded blocks, G1 s1 s1. G2 s1 s4, and G3 ss3 s5. 2.Find the equivalent transfer function of three parallel blocks, G1 s1 s4. G2 s1 s4, and G3 ss3 s5. 3.Find the equivalent transfer function of the negative feedback system of Figure P5.55 if G ss1 s s2, and H ss3 s4. 4.For the system of Prelab 3, push H(s) to the left past the summing junction and draw the equivalent system. 5.For the system of Prelab 3, push H(s) to the right past the pickoff point and draw the equivalent system. Lab 1.Using Simulink, set up the cascade system of Prelab 1 and the equivalent single block. Make separate plots of the step response of the cascaded system and its equivalent singleblock. Record the values of settling time and rise time for each step response. 2.Using Simulink, set up the parallel system of Prelab 2 and the equivalent single block.Make separate plots of the step response of the parallel system and its equivalent singleblock. Record the values of settling time and rise time for each step response. 3.Using Simulink, set up the negative feedback system of Prelab 3 and the equivalent single block. Make separate plots of the step response of the negative feedback system and its equivalent single block. Record the values of settling time and rise time for eachstep response. 4.Using Simulink, set up the negative feedback systems of Prelabs 3, 4, and 5. Makeseparate plots of the step response of each of the systems. Record the values of settlingtime and rise time for each step response. Postlab 1.Using your lab data, verify the equivalent transfer function of blocks in cascade. 2.Using your lab data, verify the equivalent transfer function of blocks in parallel. 3.Using your lab data, verify the equivalent transfer function of negative feedbacksystems. 4.Using your lab data, verify the moving of blocks past summing junctions and pickoffpoints. 5.Discuss your results. Were the equivalencies veri ﬁed?R(s) + C(s)G(s) H(s)– FIGURE P5.55Cyber Exploration Laboratory 295WEBC05 10/28/2014 17:36:32 Bibliography Åstrom, K., Klein, R. E., and Lennartsson, A. Bicycle Dynamics and Control. IEEE Control Systems , August 2005, pp. 26 –47. Ballard, R. D. The Discovery of the Titanic , Warner Books, New York, 1987. Also, ﬁgure caption source for Figure 5.33. Butler, H. Position Control in Lithographic Equipment. IEEE Control Systems , October 2011, pp. 28 –47. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems. Springer-Verlag, London, 2012. Chen, S.-Y. Block diagrams and transfer functions of control-to-output and line-to-output for peak current-mode controlled boost converters. IET Power Electron. , vol. 6, no. 1, pp. 60 –66, 2013. Craig, I. K., Xia, X., and Venter, J. W., Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. de Vlugt, E., Schouten, A. C., and van derHelm, F.C.T. Adaptation of Re ﬂexive Feedback during Arm Posture to Different Environments. Biological Cybernetics , vol. 87, 2002, pp. 10 –26.Experiment 5.2 Objective To use the various functions within LabVIEW ’s Control Design and Simulation Module to implement block diagram reduction. Minimum Required Software Packages LabVIEW with the Control Design Simulation Module Prelab Given the block diagram from Example 5.2, replace G 1,G2,G3,H1,H2,H3with the following transfer functions and obtain an equivalent transfer function. G11 s10;G21 s1;G3s1 s24s4;H1s1 s2;H22;H31 Lab Use LabVIEW to implement the block diagram from Example 5.2 using the transfer functions given in the Prelab. Postlab Verify your calculations from the Prelab with that of the equivalent transfer function obtained with LabVIEW. Experiment 5.3Objective To use the various functions within LabVIEW ’s Control Design and Simulation Module and the Mathematics/Polynomial palette to implement Mason ’s rule for block diagram reduction. Minimum Required Software Packages LabVIEW with Control Design and Simulation Module, Math Script RT Module, and the Mathematics/Polynomial palette. Prelab Given the block diagram created in the Prelab of Cyber Exploration Laboratory 5.2, use Mason ’s rule to obtain an equivalent transfer function. Lab Use LabVIEW ’s Control Design and Simulation Module as well as the Mathematics/ Polynomial functions to implement block diagram reduction using Mason ’s rule. Postlab Verify your calculations from the Prelab with that of the equivalent transfer function obtained with LabVIEW.296 Chapter 5 Reduction of Multiple SubsystemsWEBC05 10/28/2014 17:36:32 Ballard, R. D The Discovery of the Titanic (New York: Warner Books, Inc 1987). Gozde, H., and Taplamacioglu, M. C. Comparative performance analysis of arti ﬁcial bee colony algorithm for automatic voltage regulator (AVR) system. Journal of the Franklin Institute , vol. 348, pp. 1927 –1946, 2011. Graebe, S. F., Goodwin, G. C., and Elsley, G. Control Design and Implementation in Continuous Steel Casting. IEEE Control Systems , August 1995, pp. 64 –71. Hostetter, G. H., Savant, C. J., Jr. and Stefani, R. T. Design of Feedback Control Systems . 2d ed. Saunders College Publishing, New York, 1989. Johnson, H. et al. Unmanned Free-Swimming Submersible (UFSS) System Description . NRL Memorandum Report 4393. Naval Research Laboratory, Washington, DC, 1980. Karkoub, M., Her, M.-G., and Chen, J. M. Design and Control of a Haptic Interactive Motion Simulator for Virtual Entertainment Systems. Robonica , vol. 28, 2010, pp. 47 –56. Kong, F., and de Keyser, R. Identi ﬁcation and Control of the Mould Level in a Continuous Casting Machine. Second IEEE Conference on Control Application , Vancouver, B.C., 1993. pp. 53 –58. Lee, S.-R., Ko, S.-H., Dehbonei, H., Jeon, C.-H., and Kwon, O.-S., Operational Characteristics of PV/ Diesel Hybrid Distributed Generation System Using Dual Voltage Source Inverter for Weak Grid, ISIS 2007 Proceedings , Eighth Symposium on Advanced Intelligent Systems. 2007. Lin, J.-S., and Kanellakopoulos, I., Nonlinear Design of Active Suspensions. IEEE Control Systems , vol. 17, issue 3, June 1997, pp. 45 –59. Mason, S. J. Feedback Theory —Some Properties of Signal-Flow Graphs. Proc. IRE , September 1953, pp. 1144 –1156. Neamen, D. A. Electronic Circuit Analysis and Design . McGraw-Hill, 2d ed., 2001, p. 334. Piccin, O., Barbé L., Bayle B., and de Mathelin, M. A Force Feedback Teleoperated Needle Insertion Device for Percutaneous Procedures. Int. J. of Robotics Research , vol. 28, 2009, p. 1154. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics . IEEE, 2007, pp. 157 –162. Tasch, U., Koontz, J. W., Ignatoski, M. A., and Geselowitz, D. B. An Adaptive Aortic Pressure Observer for the Penn State Electric Ventricular Assist Device. IEEE Transactions on Biomedical Engineering , vol. 37, 1990, pp. 374 –383. Timothy, L. K., and Bona, B. E. State Space Analysis: An Introduction . McGraw-Hill, New York, Vaughan, N. D., and Gamble, J. B. The Modeling and Simulation of a Proportional Solenoid Valve. Journal of Dynamic Systems, Measurements, and Control , vol. 118, March 1996, pp. 120 –125. Yaniv, Y., Sivan, R., and Landesberg, A. Stability, Controllability and Observability of the “Four State” Model for the Sarcomeric Control of Contraction. Annals of Biomedical Engineering , vol. 34, 2006, pp. 778 –789.Bibliography 297WEBC05 10/28/2014 17:36:32 Page 298WEBC06 10/28/2014 17:42:16 Stability Chapter Learning Outcomes After completing this chapter the student will be able to: Make and interpret a basic Routh table to determine the stability of a system (Sections 6.1 –6.2) Make and interpret a Routh table where either the ﬁrst element of a row is zero or an entire row is zero (Sections 6.3 –6.4) Use a Routh table to determine the stability of a system represented in statespace (Section 6.5) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to ﬁnd the range of preampliﬁ er gain to keep the system stable. Given the block diagrams for the UFSS vehicle ’s pitch and heading control systems on the back endpapers, you will be able to determine the range of gainfor stability of the pitch or heading control system.6 299WEBC06 10/28/2014 17:42:17 6.1 Introduction In Chapter 1, we saw that three requirements enter into the design of a control system: transient response, stability, and steady-state errors. Thus far we have covered transientresponse, which we will revisit in Chapter 8. We are now ready to discuss the nextrequirement, stability. Stability is the most important system speci ﬁcation. If a system is unstable, transient response and steady-state errors are moot points. An unstable system cannot be designed fora speci ﬁc transient response or steady-state error requirement. What, then, is stability? There are many de ﬁnitions for stability, depending upon the kind of system or the point of view. In this section, we limit ourselves to linear, time-invariant systems. In Section 1.5, we discussed that we can control the output of a system if the steady- state response consists of only the forced response. But the total response of a system is thesum of the forced and natural responses, or c tc forced tcnatural t (6.1) Using these concepts, we present the following de ﬁnitions of stability, instability, and marginal stability: A linear, time-invariant system is stable if the natural response approaches zero as time approaches in ﬁnity. A linear, time-invariant system is unstable if the natural response grows without bound as time approaches in ﬁnity. A linear, time-invariant system is marginally stable if the natural response neither decays nor grows but remains constant or oscillates as time approaches in ﬁnity. Thus, the de ﬁnition of stability implies that only the forced response remains as the natural response approaches zero. These de ﬁnitions rely on a description of the natural response. When one is looking at the total response, it may be difﬁ cult to separate the natural response from the forced response. However, we realize that if the input is bounded and the total response is not approaching in ﬁnity as time approaches in ﬁnity, then the natural response is obviously not approaching in ﬁnity. If the input is unbounded, we see an unbounded total response, and we cannot arrive at any conclusion about the stability of the system; we cannot tell whether the total response is unbounded because the forced response is unbounded or because thenatural response is unbounded. Thus, our alternate de ﬁnition of stability , one that regards the total response and implies the ﬁrst de ﬁnition based upon the natural response, is this: A system is stable if every bounded input yields a bounded output. We call this statement the bounded-input, bounded-output (BIBO) de ﬁnition of stability. Let us now produce an alternate de ﬁnition for instability based on the total response rather than the natural response. We realize that if the input is bounded but the total response isunbounded, the system is unstable, since we can conclude that the natural responseapproaches in ﬁnity as time approaches in ﬁnity. If the input is unbounded, we will see an unbounded total response, and we cannot draw any conclusion about the stability of thesystem; we cannot tell whether the total response is unbounded because the forced response isunbounded or because the natural response is unbounded. Thus, our alternate de ﬁnition of instability , one that regards the total response, is this: A system is unstable if anybounded input yields an unbounded output.300 Chapter 6 StabilityWEBC06 10/28/2014 17:42:17 These de ﬁnitions help clarify our previous de ﬁnition of marginal stability , which really means that the system is stable for some bounded inputs and unstable for others. For example, we will show that if the natural response is undamped, a bounded sinusoidal inputof the same frequency yields a natural response of growing oscillations. Hence, the systemappears stable for all bounded inputs except this one sinusoid. Thus, marginally stablesystems by the natural response de ﬁnitions are included as unstable systems under the BIBO deﬁnitions. Let us summarize our de ﬁnitions of stability for linear, time-invariant systems. Using the natural response: 1.A system is stable if the natural response approaches zero as time approaches in ﬁnity. 2.A system is unstable if the natural response approaches in ﬁnity as time approaches inﬁnity. 3.A system is marginally stable if the natural response neither decays nor grows but remains constant or oscillates. Using the total response (BIBO): 1.A system is stable if every bounded input yields a bounded output. 2.A system is unstable if anybounded input yields an unbounded output. Physically, an unstable system whose natural response grows without bound can cause damage to the system, to adjacent property, or to human life. Many times systems are designed with limited stops to prevent total runaway. From the perspective of the timeresponse plot of a physical system, instability is displayed by transients that grow withoutbound and, consequently, a total response that does not approach a steady-state value or other forced response. 1 How do we determine if a system is stable? Let us focus on the natural response deﬁnitions of stability. Recall from our study of system poles that poles in the left half-plane (lhp) yield either pure exponential decay or damped sinusoidal natural responses. These natural responses decay to zero as time approaches in ﬁnity. Thus, if the closed-loop system poles are in the left half of the plane and hence have a negative real part, the systemis stable. That is, stable systems have closed-loop transfer functions with poles only in the left half-plane . Poles in the right half-plane (rhp) yield either pure exponentially increasing or exponentially increasing sinusoidal natural responses. These natural responses approachinﬁnity as time approaches in ﬁnity. Thus, if the closed-loop system poles are in the right half of the s-plane and hence have a positive real part, the system is unstable. Also, poles of multiplicity greater than 1 on the imaginary axis lead to the sum of responses of the formAt ncos ωtϕ, where n1;2;...;where the amplitude approaches in ﬁnity as time approaches in ﬁnity. Thus, unstable systems have closed-loop transfer functions with at least one pole in the right half-plane and/or poles of multiplicity greater than 1 on the imaginary axis . Finally, a system that has imaginary axis poles of multiplicity 1 yields pure sinusoidal oscillations as a natural response. These responses neither increase nor decrease in amplitude. Thus, marginally stable systems have closed-loop transfer functions with only imaginary axis poles of multiplicity 1 and poles in the left half-plane . As an example, the unit step response of the stable system of Figure 6.1( a)i s compared to that of the unstable system of Figure 6.1( b). The responses, also shown in 1Care must be taken here to distinguish between natural responses growing without bound and a forced response, such as a ramp or exponential increase, that also grows without bound. A system whose forced response approaches in ﬁnity is stable as long as the natural response approaches zero.6.1 Introduction 301WEBC06 10/28/2014 17:42:17 Figure 6.1, shows that while the oscillations for the stable system diminish, those for the unstable system increase without bound. Also notice that the stable system ’s response in this case approaches a steady-state value of unity. It is not always a simple matter to determine if a feedback control system is stable. Unfortunately, a typical problem that arises is shown in Figure 6.2. Although we know thepoles of the forward transfer function in Figure 6.2( a), we do not know the location of the poles of the equivalent closed-loop system of Figure 6.2( b) without factoring or otherwise solving for the roots. However, under certain conditions, we can draw some conclusions about the stability of the system. First, if the closed-loop transfer function has only left-half-plane poles, thenthe factors of the denominator of the closed-loop system transfer function consist ofproducts of terms such as sa i, where aiis real and positive, or complex with a positive real part. The product of such terms is a polynomial with all positive coef ﬁcients.2No term of the polynomial can be missing, since that would imply cancellation between positive and negative coef ﬁcients or imaginary axis roots in the factors, which is not the case. Thus, a01c(t) 15 30 0 Time (seconds) 1 0 –115c(t) Time (seconds)–3 s(s +1)(s + 2) Stable system jω j 1.047s-plane –j 1.047–0.164 –2.672 Stable system's closed-loop poles (not to scale) –7 s(s +1)(s + 2) Unstable system σσ jω j 1.505 s-plane –j 1.5050.0434 –3.087 Unstable system's closed-loop poles (not to scale)C(s) C(s) (b)(a)E(s) E(s)+1 R(s) = +s 1 s 30= R(s) 0 FIGURE 6.1 Closed-loop poles and response: a.stable system; b.unstable system 2The coef ﬁcients can also be made all negative by multiplying the polynomial by  1. This operation does not change the root location.302 Chapter 6 StabilityWEBC06 10/28/2014 17:42:17 sufﬁcient condition for a system to be unstable is that all signs of the coef ﬁcients of the denominator of the closed-loop transfer function are not the same. If powers of sare missing, the system is either unstable or, at best, marginally stable. Unfortunately, if all coef ﬁcients of the denominator are positive and not missing, we do not have de ﬁnitive information about the system ’s pole locations. If the method described in the previous paragraph is not suf ﬁcient, then a computer can be used to determine the stability by calculating the root locations of the denominator of the closed-loop transfer function. Today some hand-held calculators can evaluate the roots of a polynomial. There is, however, another method to test for stability without having tosolve for the roots of the denominator. We discuss this method in the next section. 6.2 Routh-Hurwitz Criterion In this section, we learn a method that yields stability information without the need to solvefor the closed-loop system poles. Using this method, we can tell how many closed-loopsystem poles are in the left half-plane, in the right half-plane, and on the jω-axis. (Notice that we say how many , not where .) We can ﬁnd the number of poles in each section of the s-plane, but we cannot ﬁnd their coordinates. The method is called the Routh-Hurwitz criterion for stability ( Routh ,1905 ). The method requires two steps: (1) Generate a data table called a Routh table and (2) interpret the Routh table to tell how many closed-loop system poles are in the left half-plane, the right half-plane, and on the jω-axis. You might wonder why we study the Routh-Hurwitz criterion when modern calculators and computers can tell us the exact location of system poles. The power of the method lies in design rather than analysis. For example, if you havean unknown parameter in the denominator of a transfer function, it isdifﬁcult to determine via a calculator the range of this parameter to yield stability. You would probably rely on trial and error to answer the stabilityquestion. We shall see later that the Routh-Hurwitz criterion can yield aclosed-form expression for the range of the unknown parameter. In this section, we make and interpret a basic Routh table. In the next section, we consider two special cases that can arise when generating thisdata table. Generating a Basic Routh Table Look at the equivalent closed-loop transfer function shown in Figure 6.3. Since we areinterested in the system poles, we focus our attention on the denominator. We ﬁrst create the Routh table shown in Table 6.1. Begin by labeling the rows with powers of sfrom the highest power of the denominator of the closed-loop transfer function to s Next start with the coef ﬁcient of the highest power of sin the denominator and list, horizontally in the ﬁrst row, every other coefﬁ cient. In the second row, list horizontally, starting with the next highest power of s, every coef ﬁcient that was skipped in the ﬁrst row.C(s) R(s) (b)C(s) R(s) (a)–+ E(s) s(s + 4)(s + 6)(s + 8)(s + 10)10(s + 2) 10(s + 2) s5 + 28s4 + 284s3 + 1232s2 + 1930s + 20FIGURE 6.2 Common cause of problems in ﬁnding closed- loop poles: a.original system; b.equivalent system N(s) C(s) R(s) a4s4 + a 3s3 + a 2s2 + a 1s + a 0 FIGURE 6.3 Equivalent closed-loop transfer function TABLE 6.1 Initial layout for Routh table s4a4 a2 a0 s3a3 a1 0 s2 s1 s06.2 Routh-Hurwitz Criterion 303WEBC06 10/28/2014 17:42:19 The remaining entries are ﬁlled in as follows. Each entry is a negative determinant of entries in the previous two rows divided by the entry in the ﬁrst column directly above the calculated row. The left-hand column of the determinant is always the ﬁrst column of the previous two rows, and the right-hand column is the elements of the column above and to the right. The table is complete when all of the rows are completed down to s0. Table 6.2 is the completed Routh table. Let us look at an example.TABLE 6.2 Completed Routh table s4a4 a2 a0 s3a3 a1 0 s2 /C12/C12/C12/C12a 4a2 a3a1/C12/C12/C12/C12 a 3b1 /C12/C12/C12/C12a 4a0 a30/C12/C12/C12/C12 a 3b2 /C12/C12/C12/C12a 40 a30/C12/C12/C12/C12 a 30 s1 /C12/C12/C12/C12a 3a1 b1b2/C12/C12/C12/C12 b 1c1 /C12/C12/C12/C12a 30 b10/C12/C12/C12/C12 b 10 /C12/C12/C12/C12a 30 b10/C12/C12/C12/C12 b 10 s0 /C12/C12/C12/C12b 1b2 c10/C12/C12/C12/C12 c 1d1 /C12/C12/C12/C12b 10 c10/C12/C12/C12/C12 c 10 /C12/C12/C12/C12b 10 c10/C12/C12/C12/C12 c 10 Example 6.1 Creating a Routh TableCreating a Routh Table PROBLEM: Make the Routh table for the system shown in Figure 6.4( a). SOLUTION: Theﬁrst step is to ﬁnd the equivalent closed-loop system because we want to test the denominator of this function, not the given forward transfer function, for pole location. Using the feedback formula, we obtain the equivalent system of Figure 6.4( b). The Routh-Hurwitz criterion will b e applied to this denominator. First label the rows with powers of sfrom s3down to s0in a vertical column, as shown in Table 6.3. Next form the ﬁrst row of the table, using the coef ﬁcients of the denominator of the closed-loop transfer function. Start with the coef ﬁcient of the highest power and skip every other power of s. Now form the second row with the coef ﬁcients of the denominator skipped in the previ ous step. Subsequent rows are formed with determinants, as shown in Table 6.2. For convenience, any row of the Routh table can be multiplied by a positive constant without changing the values of the rows below. This can be proved by examining the expressions for the entries and verifying that any multiplicative constant from a previousrow cancels out. In the second row of Table 6.3, for example, the row was multiplied by1/10. We see later that care must be taken not to multiply the row by a negative constant.1000 R(s) (b)1000 C(s) R(s) (a)–+ E(s) C(s)(s + 2)(s + 3)(s + 5) s3 + 10s2 + 31s + 1030FIGURE 6.4 a.Feedback system for Example 6.1; b.equivalent closed-loop system304 Chapter 6 StabilityWEBC06 10/28/2014 17:42:20 Interpreting the Basic Routh Table Now that we know how to generate the Routh table, let us see how to interpret it. The basic Routh table applies to systems with poles in the left and right half-planes. Systems with imaginary poles and the kind of Routh table that results will be discussed in the nextsection. Simply stated, the Routh-Hurwitz criterion declares that the number of roots of the polynomial that are in the right half-plane is equal to the number of sign changes intheﬁrst column . If the closed-loop transfer function has all poles in the left half of the s-plane, the system is stable. Thus, a system is stable if there are no sign changes in the ﬁrst column of the Routh table. For example, Table 6.3 has two sign changes in the ﬁrst column. The ﬁrst sign change occurs from 1 in the s 2row to  72 in the s1row. The second occurs from  72 in thes1row to 103 in the s0row. Thus, the system of Figure 6.4 is unstable since two poles exist in the right half-plane. Now that we have described how to generate and interpret a basic Routh table, let us look at two special cases that can arise. 6.3 Routh-Hurwitz Criterion: Special Cases Two special cases can occur: (1) The Routh table sometimes will have a zero only in the ﬁrst column of a row, or (2) the Routh table sometimes will have an entire row that consists of zeros. Let us examine the ﬁrst case.TABLE 6.3 Completed Routh table for Example 6.1 s313 1 0 s210 1 1030 103 0 s1 /C12/C12/C12/C1213 1 1 103/C12/C12/C12/C12 1 72 /C12/C12/C12/C1210 00/C12/C12/C12/C12 10  /C12/C12/C12/C1210 10/C12/C12/C12/C12 10 s 0 /C12/C12/C12/C121 103  72 0/C12/C12/C12/C12  72103  /C12/C12/C12/C1210  72 0/C12/C12/C12/C12  720  /C12/C12/C12/C1210  72 0/C12/C12/C12/C12  720 Skill-Assessment Exercise 6.1 PROBLEM: Make a Routh table and tell how many roots of the following polynomial are in the right half-plane and in the left half-plane. P s3s79s66s54s47s38s22s6 ANSWER: Four in the right half-plane (rhp), three in the left half-plane (lhp). The complete solution is at www.wiley.com/college/nise .6.3 Routh-Hurwitz Criterion: Special Cases 305WEBC06 10/28/2014 17:42:25 Zero Only in the First Column If the ﬁrst element of a row is zero, division by zero would be required to form the next row. To avoid this phenomenon, an epsilon, ϵ,i sa s s i g n e dt or e p l a c et h ez e r oi nt h e ﬁrst column. The value ϵis then allowed to approach zero from either the positive or the negative side, after which the signs of the entries in the ﬁrst column can be determined. L e tu sl o o ka ta ne x a m p l e . Example 6.2 Stability via Epsilon MethodStability via Epsilon Method PROBLEM: Determine the stability of the closed-loop transfer function T s10 s52s43s36s25s3(6.2) SOLUTION: The solution is shown in Table 6.4. We form the Routh table by using the denominator of Eq. (6.2). Begin by assembling the Routh table down to the row where a zero appears only in the ﬁrst column (the s3row). Next replace the zero by a small number, ϵ, and complete the table. To begin the interpretation, we must ﬁrst assume a sign, positive or negative, for the quantity ϵ. Table 6.5 shows the ﬁrst column of Table 6.4 along with the resulting signs for choices of ϵpositive and ϵnegative. Ifϵis chosen positive, Table 6.5 will show a sign change from the s3row to the s2 row, and there will be another sign change from the s2row to the s1row. Hence, the system is unstable and has two poles in the right half-plane. Alternatively, we could choose ϵnegative. Table 6.5 would then show a sign change from the s4row to the s3row. Another sign change would occur from the s3row to the s2 row. Our result would be exactly the same as that for a positive choice for ϵ. Thus, the system is unstable, with two poles in the right half-plane. Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch6sp1 in Appendix F at www.wiley.com/college/nise .Y o u will learn how to use the Symbolic Math Toolbox to calculate thevalues of cells in a Routh table even if the table contains symbolicobjects, such as ϵ. You will see that the Symbolic Math Toolbox and MATLAB yield an alternate way to generate the Routh table forExample 6.2.TryIt 6.1 Use the following MATLAB statement to ﬁnd the poles of the closed-loop transfer function in Eq. (6.1). roots( [ 123653 ] ) TABLE 6.4 Completed Routh table for Example 6.2 s513 5 s426 3 s30ϵ7 20 s2 6ϵ 7 ϵ30 s1 42ϵ 49 6ϵ2 12ϵ 1400 s030 0TABLE 6.5 Determining signs in ﬁrst column of a Routh table with zero as ﬁrst element in a row Label First column ϵ ϵ  s51 ++ s42 ++ s30ϵ +   s2 6ϵ 7 ϵ  + s1 42ϵ 49 6ϵ2 12ϵ 14++ s03 ++306 Chapter 6 StabilityWEBC06 10/28/2014 17:42:27 Another method that can be used when a zero appears only in the ﬁrst column of a row is derived from the fact that a polynomial that has the reciprocal roots of the original polynomial has its roots distributed the same —right half-plane, left half-plane, or imaginary axis—because taking the reciprocal of the root value does not move it to another region. Thus, if we can ﬁnd the polynomial that has the reciprocal roots of the original, it is possible that the Routh table for the new polynomial will not have a zero in the ﬁrst column. This method is usually computationally easier than the epsilon method just described. We now show that the polynomial we are looking for, the one with the reciprocal roots, is simply the original polynomial with its coef ﬁcients written in reverse order (Phillips, 1991 ). Assume the equation snan 1sn 1∙∙∙a1sa00 (6.3) Ifsis replaced by 1= d, then dwill have roots which are the reciprocal of s. Making this substitution in Eq. (6.3), 1 d/C18/C19n an 11 d/C18/C19n 1 ∙∙∙a11 d/C18/C19 a00 (6.4) Factoring out 1=dn, 1 d/C18/C19n 1an 11 d/C18/C19 1 ∙∙∙a11 d/C18/C191 n  a01 d/C18/C19 n"# 1 d/C18/C19n 1an 1d∙∙∙a1d n 1a0dn0 (6.5) Thus, the polynomial with reciprocal roots is a polynomial with the coef ﬁcients written in reverse order. Let us redo the previous example to show the computational advantage ofthis method. Example 6.3 Stability via Reverse Coefﬁ cients Stability via Reverse Coefﬁ cients PROBLEM: Determine the stability of the closed-loop transfer function T s10 s52s43s36s25s3(6.6) SOLUTION: First write a polynomial that has the reciprocal roots of the denominator of Eq. (6.6). From our discussion, this polynomial is formed by writing the denominator of Eq. (6.6) in reverse order. Hence, D s3s55s46s33s22s1 (6.7) We form the Routh table as shown in Table 6.6 using Eq. (6.7). Since there are two signchanges, the system is unstable and has two right-half-plane poles. This is the same asthe result obtained in Example 6.2. Notice that Table 6.6 does not have a zero in theﬁrst column.TABLE 6.6 Routh table for Example 6.3 s536 2 s453 1 s34.2 1.4 s21.33 1 s1 1.75 s016.3 Routh-Hurwitz Criterion: Special Cases 307WEBC06 10/28/2014 17:42:29 Entire Row is Zero We now look at the second special case. Sometimes while making a Routh table, we ﬁnd that an entire row consists of zeros because there is an even polynomial that is a factor of the original polynomial. This case must be handled differently from the case of a zero inonly the ﬁrst column of a row. Let us look at an example that demonstrates how to construct and interpret the Routh table when an entire row of zeros is present. Example 6.4 Stability via Routh Table with Row of ZerosStability via Routh Table with Row of Zeros PROBLEM: Determine the number of right-half-plane poles in the closed-loop transfer function T s10 s57s46s342s28s56(6.8) SOLUTION: Start by forming the Routh table for the denominator of Eq. (6.8) (see Table 6.7). At the second row we multiply through by 1/7 for convenience. We stop at the third row, since the entire row consists of zeros, and use the following procedure.First we return to the row immediately above the row of zeros and form an auxiliarypolynomial, using the entries in that row as coef ﬁcients. The polynomial will start with the power of sin the label column and continue by skipping every other power of s.T h u s , the polynomial formed for this example is P ss 46s28( 6 . 9 ) Next we differentiate the polynomial with respect to sand obtain dP s ds4s312s0 (6.10) Finally, we use the coef ﬁcients of Eq. (6.10) to replace the row of zeros. Again, for convenience, the third row is multiplied by 1/4 after replacing the zeros. The remainder of the table is formed in a straightforward manner by following the standard form shown in Table 6.2. Table 6.7 shows that all entries in the ﬁrst column are positive. Hence, there are no right-half-plane poles. TABLE 6.7 Routh table for Example 6.4 s516 8 s471 42 6 56 8 s30 41 0 12 3 0 00 s238 0 s11 300 s080 0308 Chapter 6 StabilityWEBC06 10/28/2014 17:42:29 Let us look further into the case that yields an entire row of zeros. An entire row of zeros will appear in the Routh table when a purely even or purely odd polynomial is a factor of the original polynomial. Forexample, s 45s27 is an even polynomial; it has only even powers ofs. Even polynomials only have roots that are symmetrical about the origin.3This symmetry can occur under three conditions of root position: (1) The roots are symmetrical and real, (2) the roots are symmetrical andimaginary, or (3) the roots are quadrantal. Figure 6.5 shows examples ofthese cases. Each case or combination of these cases will generate an even polynomial. It is this even polynomial that causes the row of zeros to appear. Thus, the row of zeros tells us of the existence of an even polynomial whose roots are symmetric about the origin. Some of these roots could beon the jω-axis. On the other hand, since jωroots are symmetric about the origin, if we do not have a row of zeros, we cannot possibly have jωroots. Another characteristic of the Routh table for the case in question is that the row previous to the row of zeros contains the even polynomial that is a factor of the original polynomial. Finally, everything from the row containing the even polynomial down to the end of the Routh tableis a test of only the even polynomial. Let us put these facts together in anexample.CC CC AAjω s-plane A: Real and symmetrical about the origin B: Imaginary and symmetrical about the origin C: Quadrantal and s ymmetrical about the ori ginBB σ FIGURE 6.5 Root positions to generate even polynomials: A,B,C, or any combination 3The polynomial s55s37sis an example of an odd polynomial; it has only odd powers of s. Odd polynomials are the product of an even polynomial and an odd power of s. Thus, the constant term of an odd polynomial is always missing.Example 6.5 Pole Distribution via Routh Table with Row of ZerosPole Distribution via Routh Table with Row of Zeros PROBLEM: For the transfer function T s20 s8s712s622s539s459s348s238s20(6.11) tell how many poles are in the right half-plane, in the left half-plane, and on the jω-axis. SOLUTION: Use the denominator of Eq. (6.11) and form the Routh table in Table 6.8. For convenience the s6row is multiplied by 1/10, and the s5row is multiplied by 1/20. At the s3row we obtain a row of zeros. Moving back one row to s4, we extract the even polynomial, P(s), as P ss43s22( 6 . 1 2 ) This polynomial will divide evenly into the denominator of Eq. (6.11) and thus is a factor. Taking the derivative with respect to sto obtain the coef ﬁcients that replace the row of zeros in the s3row, we ﬁnd dP s ds4s36s0( 6.13) Replace the row of zeros with 4, 6, and 0 and multiply the row by 1/2 for convenience.Finally, continue the table to the s 0row, using the standard procedure.6.3 Routh-Hurwitz Criterion: Special Cases 309WEBC06 10/28/2014 17:42:35 How do we now interpret this Routh table? Since all entries from the even polynomial at the s4row down to the s0row are a test of the even polynomial, we begin to draw some conclusions about the roots of the even polynomial. No sign changes exist from the s4row down to the s0row. Thus, the even polynomial does not have right-half- plane poles. Since there are no right-half-plane poles, no left-half-plane poles are presentbecause of the requirement for symmetry. Hence, the even polynomial, Eq. (6.12), musthave all four of its poles on the jω-axis. 4These results are summarized in the ﬁrst column of Table 6.9. The remaining roots of the total polynomial are evaluated from the s8row down to thes4row. We notice two sign changes: one from the s7row to the s6row and the other from the s6row to the s5row. Thus, the other polynomial must have two roots in the right half-plane. These results are included in Table 6.9 under Other . The ﬁnal tally is the sum of roots from each component, the even polynomial and the other polynomial, as shownunder Total in Table 6.9. Thus, the system has two poles in the right half-plane, two poles in the left half-plane, and four poles on the jω-axis; it is unstable because of the right-half- plane poles.TABLE 6.8 Routh table for Example 6.5 s811 2 3 9 4 8 2 0 s712 2 5 9 3 8 0 s6 10 1  20 2 10 1 20 2 0 s520 1 60 3 40 2 0 0 s413 2 0 0 s30 42 063 0 00 0 0 s23 23 24 0 0 0 s11300 0 0 s 040 0 0 0 4A necessary condition for stability is that the jωroots have unit multiplicity. The even polynomial must be checked for multiple jωroots. For this case, the existence of multiple jωroots would lead to a perfect, fourth-order square polynomial. Since Eq. (6.12) is not a perfect square, the four jωroots are distinct.TABLE 6.9 Summary of pole locations for Example 6.5 Polynomial LocationEven (fourth-order)Other (fourth-order)Total (eighth-order) Right half-plane 0 2 2 Left half-plane 0 2 2 jω 404310 Chapter 6 StabilityWEBC06 10/28/2014 17:42:35 We now summarize what we have learned about polynomials that generate entire rows of zeros in the Routh table. These polynomials have a purely even factor with roots that are sy mmetrical about the origin. The even polynomial appears in the Routh table in the row directly above the row ofzeros. Every entry in the table from the even polynomial ’s row to the end of the chart applies only to the even polynomial. Therefore, the number of signchanges from the even polynomial to the end of the table equals the numberof right-half-plane roots of the even polynomial. Because of the symmetryof roots about the origin, the even polynomial must have the same number of left-half-plane roots as it does right-half-plane roots. Having accounted for the roots in the right and left half-planes, we know the remaining rootsmust be on the jω-axis. Every row in the Routh table from the beginning of the chart to the row containing the even polynomial applies only to the other factor of theoriginal polynomial. For this factor, the number of sign changes, from thebeginning of the table down to the even polynomial, equals the number ofright-half-plane roots. The remaining roots are left-half-plane roots. There can be no jωroots contained in the other polynomial. Let us demonstrate the usefulness of the Routh-Hurwitz criterion with a few additional examples. 6.4 Routh-Hurwitz Criterion: Additional Examples The previous two sections have introduced the Routh-Hurwitz criterion. Now we need todemonstrate the method ’s application to a number of analysis and design problems.Virtual Experiment 6.1 Stability Put theory into practice and evaluate the stability of the Quanser Linear Inverted Pendulum in LabVIEW. When in the upward balancedposition, this system addresses the challenge ofstabilizing a rocket during take-off. In the downward position it emulates the construction gantry crane. Virtual experiments are found onLearning Space. Skill-Assessment Exercise 6.2 PROBLEM: Use the Routh-Hurwitz criterion to ﬁnd how many poles of the following closed-loop system, T(s), are in the rhp, in the lhp, and on the jω-axis: T ss37s2 21s10 s6s5 6s40s3 s2 s6 ANSWER: Two rhp, two lhp, and two jω The complete solution is at www.wiley.com/college/nise . Example 6.6 Standard Routh-HurwitzStandard Routh-Hurwitz PROBLEM: Find the number of poles in the left half-plane, the right half-plane, and on thejω-axis for the system of Figure 6.6.6.4 Routh-Hurwitz Criterion: Additional Examples 311WEBC06 10/28/2014 17:42:37 The next example demonstrates the occurrence of a zero in only the ﬁrst column of a row.SOLUTION: First, ﬁnd the closed-loop transfer function as T s200 s46s311s26s200(6.14) The Routh table for the denominator of Eq. (6.14) is shown as Table 6.10. For clarity, we leave most zero cells blank. At the s1row there is a negative coef ﬁcient; thus, there are two sign changes. The system is unstable, since it has two right-half-plane poles and two left-half-plane poles. The system cannot have jωpoles since a row of zeros did not appear in the Routh table.200 C(s) R(s) + E(s) s(s3 + 6s2 + 11s + 6)–FIGURE 6.6 Feedback control system for Example 6.6 TABLE 6.10 Routh table for Example 6.6 s41 11 200 s361 61 s210 1 200 20 s1 19 s020 Example 6.7 Routh-Hurwitz with Zero in First ColumnRouth-Hurwitz with Zero in First Column PROBLEM: Find the number of poles in the left half-plane, the right half-plane, and on thejω-axis for the system of Figure 6.7. SOLUTION: The closed-loop transfer function is T s1 2s53s42s33s22s1(6.15) Form the Routh table shown as Table 6.11, using the denominator of Eq. (6.15). A zero appears in the ﬁrst column of the s3row. Since the entire row is not zero, simply replace1 C(s) R(s) –+ s(2s4 + 3s3 + 2s2 + 3s + 2)E(s) FIGURE 6.7 Feedback control system for Example 6.7312 Chapter 6 StabilityWEBC06 10/28/2014 17:42:40 In the next example, we see an entire row of zeros appear along with the possibility of imaginary roots.the zero with a small quantity, ϵ, and continue the table. Permitting ϵto be a small, positive quantity, we ﬁnd that the ﬁrst term of the s2row is negative. Thus, there are two sign changes, and the system is unstable, with two poles in the right half-plane. The remaining poles are in the left half-plane. We also can use the alternative approach, where we produce a polynomial whose roots are the reciprocal of the original. Using the denominator of Eq. (6.15), we form a polynomial by writing the coef ﬁcients in reverse order, s52s43s32s23s2 (6.16) The Routh table for this polynomial is shown as Table 6.12. Unfortunately, in this casewe also produce a zero only in the ﬁrst column at the s 2row. However, the table is easier to work with than Table 6.11. Table 6.12 yields the same results as Table 6.11:three poles in the left half-plane and two p oles in the right-half-plane. The system is unstable. Students who are using MATLAB should now run ch6p1 in Appendix B. You will learn how to perform block diagram reduction to ﬁnd T(s), followed by an evaluation of the closed-loop system’ s poles to determine stability. This exercise uses MATLAB to do Example 6.7.TABLE 6.11 Routh table for Example 6.7 s522 2 s433 1 s30 ϵ4 3 s23ϵ 4 ϵ1 s1 12ϵ 16 3ϵ2 9ϵ 12 s01 TABLE 6.12 Alternative Routh table for Example 6.7 s513 3 s422 2 s322 s20 ϵ 2 s12ϵ 4 ϵ s026.4 Routh-Hurwitz Criterion: Additional Examples 313WEBC06 10/28/2014 17:42:44 Example 6.8 Routh-Hurwitz with Row of ZerosRouth-Hurwitz with Row of Zeros PROBLEM: Find the number of poles in the left half-plane, the right half-plane, and on thejω-axis for the system of Figure 6.8. Draw conclusions about the stability of the closed-loop system. SOLUTION: The closed-loop transfer function for the system of Figure 6.8 is T s128 s83s710s624s548s496s3128s2192s128(6.17) Using the denominator, form the Routh table shown as Table 6.13. A row of zeros appears in the s5row. Thus, the closed-loop transfer function denominator must have an even polynomial as a factor. Return to the s6row and form the even polynomial: P ss68s432s264 (6.18) Differentiate this polynomial with respect to sto form the coef ﬁcients that will replace the row of zeros: dP s ds6s532s364s0 (6.19) Replace the row of zeros at the s5row by the coef ﬁcients of Eq. (6.19) and multiply through by 1/2 for convenience. Then complete the table. We note that there are two sign changes from the even polynomial at the s6row down to the end of the table. Hence, the even polynomial has two right-half-plane poles.Because of the symmetry about the origin, the even polynomial must have an equal number of left-half-plane poles. Therefore, the even polynomial has two left-half-plane128 R(s) –+ C(s) s(s7 + 3s6 + 10s5 + 24s4 + 48s3 + 96s2 + 128s + 192)E(s) FIGURE 6.8 Feedback control system for Example 6.8 TABLE 6.13 Routh table for Example 6.8 s81 10 48 128 128 s731 24 8 96 32 192 64 s621 16 8 64 32 128 64 s5063 032 16 064 32 0 00 s48 3164 38 64 24 s3 8 1  40 5 s231 24 8 s13 s08TryIt 6.2 Use MATLAB, The Control System Toolbox, and the following statements to ﬁnd the closed-loop transfer function,T(s), for Figure 6.8 and the closed-loop poles. numg=128; deng=[1 3 10 24 ... 48 96 128 192 0] ; G=tf(numg, deng) ; T=feedback(G, 1) poles =pole(T)314 Chapter 6 StabilityWEBC06 10/28/2014 17:42:46 The Routh-Hurwitz criterion gives vivid proof that changes in the gain of a feedback control system result in differences in transient response because of changes in closed-loop pole locations. The next example demonstrates this concept. We will see that for controlsystems, such as those shown in Figure 6.9, gain variations can move poles from stableregions of the s-plane onto the jω-axis and then into the right half-plane.poles. Since the even polynomial is of sixth order, the two remaining poles must be onthejω-axis. There are no sign changes from the beginning of the table down to the even polynomial at the s 6row. Therefore, the rest of the polynomial has no right-half-plane poles. The results are summarized in Table 6.14. The system has two poles in theright half-plane, four poles in the left half-plane, and two poles on the jω-axis, which are of unit multiplicity. The clo sed-loop system is unstable because of the right-half- plane poles. TABLE 6.14 Summary of pole locations for Example 6.8 Polynomial LocationEven (sixth-order)Other (second-order)Total (eighth-order) Right half-plane 2 0 2 Left half-plane 2 2 4 jω 20 2 Fiber-optic tetherSyntactic flotation module (1200 Ibs)Thrusters (1 of 7)Lifting bailLong baseline & emergency beacon Emergency flasher Video camera Video camera Flash for still photography250-watt lamps (1 of 8) Electronic compassSide-scan sonar electronics housingTelemetry housing w/lasers Manipulator electronics housing Computer housing w/gyroAltimeterWiring junction box (1 of 2)Aluminum tubular frameSide-scan transceiver array (1 of 2) Still film camera Manipulator with coring toolPan & till unit FIGURE 6.9 Jason is an underwater, remote-controlled vehicle that has been used to explore the wreckage of the Lusitania . The manipulator and cameras comprise some of the vehicle ’s control systems (Courtesy of Woods Hole Oceanographic Institution)6.4 Routh-Hurwitz Criterion: Additional Examples 315WEBC06 10/28/2014 17:42:48 Example 6.9 Stability Design via Routh-HurwitzStability Design via Routh-Hurwitz PROBLEM: Find the range of gain, K, for the system of Figure 6.10 that will cause the system to be stable, unstable, and marginally stable. Assume K>0. SOLUTION: Firstﬁnd the closed-loop transfer function as T sK s318s277sK(6.20) Next form the Routh table shown as Table 6.15. Since Kis assumed positive, we see that all elements in the ﬁrst column are always positive except the s1row. This entry can be positive, zero, or negative, depending upon the value of K.I f K<1386, all terms in the ﬁrst column will be positive, and since there are no sign changes, the system will have three poles in the left half-plane and be stable . IfK>1386, the s1term in the ﬁrst column is negative. There are two sign changes, indicating that the system has two right-half-plane poles and one left-half-plane pole, which makes the system unstable . IfK1386, we have an entire row of zeros, which could signify jωpoles. Returning to the s2row and replacing Kwith 1386, we form the even polynomial P s18s21386 (6.21) Differentiating with respect to s, we have dP s ds36s0 (6.22) Replacing the row of zeros with the coef ﬁcients of Eq. (6.22), we obtain the Routh-Hurwitz table shown as Table 6.16 for the case of K1386.K C(s) E(s) R(s) s(s + 7)(s + 11)–+ FIGURE 6.10 Feedback control system for Example 6.9 TABLE 6.16 Routh table for Example 6.9 with K=1386 s317 7 s218 1386 s103 6 s01386TABLE 6.15 Routh table for Example 6.9 s317 7 s218 K s11386  K 18 s0K316 Chapter 6 StabilityWEBC06 10/28/2014 17:42:49 The Routh-Hurwitz criterion is often u sed in limited applications to factor polynomials containing even factors. Let us look at an example.Since there are no sign changes from the even polynomial ( s2row) down to the bottom of the table, the even polynomial has its two roots on the jω-axis of unit multiplicity. Since there are no sign changes above the even polynomial, the remaining root is in the left half-plane. Therefore the system is marginally stable . Students who are using MATLAB should now run ch6p2 in Appendix B. You will learn how to set up a loop to search for the range of gainto yield stability. This exercise uses MATLAB to do Example 6.9. Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch6sp2 in Appendix F at www.wiley.com/college/ nise . You will learn how to use the Symbolic Math Toolbox to calcu- late the values of cells in a Routh table even if the table containssymbolic objects, such as a variable gain, K. You will see that the Symbolic Math Toolbox and MATLAB yield an alternative way to solve Example 6.9. Example 6.10 Factoring via Routh-HurwitzFactoring via Routh-Hurwitz PROBLEM: Factor the polynomial s43s330s230s200 (6.23) SOLUTION: Form the Routh table of Table 6.17. We ﬁnd that the s1row is a row of zeros. Now form the even polynomial at the s2row: P ss210 (6.24) This polynomial is differentiated with respect to sin order to complete the Routh table. However, since this polynomial is a factor of the original polynomial in Eq. (6.23), dividing Eq. (6.23) by (6.24) yields s23s20as the other factor. Hence, s43s330s230s200 s210 s23s20  sj3:1623  s j3:1623   s1:5j4:213 s1:5 j4:213 (6.25)TABLE 6.17 Routh table for Example 6.10 s41 30 200 s331 30 10 s220 1 200 10 s102 00 s0106.4 Routh-Hurwitz Criterion: Additional Examples 317WEBC06 10/28/2014 17:42:50 6.5 Stability in State Space Up to this point we have examined stability from the s-plane viewpoint. Now we look at stability from the perspective of state space. In Section 4.10, we mentioned that the values of the system ’s poles are equal to the eigenvalues of the system matrix, A. We stated that the eigenvalues of the matrix Awere solutions of the equation det sI A0, which also yielded the poles of the transfer function. Eigenvalues appeared again in Section 5.8, wherethey were formally de ﬁned and used to diagonalize a matrix. Let us now formally show that the eigenvalues and the system poles have the same values. Reviewing Section 5.8, the eigenvalues of a matrix, A, are values of λthat permit a nontrivial solution (other than 0) for xin the equation Axλx (6.26) In order to solve for the values of λthat do indeed permit a solution for x, we rearrange Eq. (6.26) as follows: λx Ax0 (6.27) or λI Ax0 (6.28) Solving for xyields x λI A  10 (6.29) or xadj λI A det λI A0 (6.30) We see that all solutions will be the null vector except for the occurrence of zero in the denominator. Since this is the only condition where elements of xwill be 0 =0, or indeterminate, it is the only case where a nonzero solution is possible. The values of λare calculated by forcing the denominator to zero: det λI A0 (6.31)Skill-Assessment Exercise 6.3 PROBLEM: For a unity feedback system with the forward transfer function G sK s20 s s2 s3 ﬁnd the range of Kto make the system stable. ANSWER: 0<K<2 The complete solution is at www.wiley.com/college/nise .318 Chapter 6 StabilityWEBC06 10/28/2014 17:42:52 This equation determines the values of λfor which a nonzero solution for xin Eq. (6.26) exists. In Section 5.8, we de ﬁnedxaseigenvectors and the values of λas the eigenvalues of the matrix A. Let us now relate the eigenvalues of the system matrix, A, to the system ’s poles. In Chapter 3 we derived the equation of the system transfer function, Eq. (3.73), from the state equations. The system transfer function has det sI Ain the denominator because of the presence of sI A 1. Thus, det sI A0 (6.32) is the characteristic equation for the system from which the system poles can be found. Since Eqs. (6.31) and (6.32) are identical apart from a change in variable name, we conclude that the eigenvalues of the matrix Aare identical to the system ’s poles before cancellation of common poles and zeroes in the transfer function. Thus, we can determinethe stability of a system represented in state space by ﬁnding the eigenvalues of the system matrix, A, and determining their locations on the s-plane. Example 6.11 Stability in State SpaceStability in State Space PROBLEM: Given the system _x031 281  10  5  22 643 75x10 0 02 643 75u (6.33a) y100 x (6.33b) ﬁnd out how many poles are in the left half-plane, in the right half-plane, and on the jω-axis. SOLUTION: First form sI A: sI As00 0s0 00 s2 643 75 031 281  10  5 22 643 75s 3  1  2 s 8 1 10 5 s22 643 75 (6.34) Now ﬁndthe det sI A: det sI As3 6s2 7s 52 (6.35) Using this polynomial, form the Routh table of Table 6.18. TABLE 6.18 Routh table for Example 6.11 s31  7 s2 6 3  52  26 s1 47 3 1 00 s0 266.5 Stability in State Space 319WEBC06 10/28/2014 17:42:52 In this section, we have evaluated the st ability of feedback control systems from the state-space perspective. Since the closed-loop poles and the eigenvalues of a system are the same, the stability requirement of a s ystem represented in state space dictates that the eigenvalues cannot be in the right half of the s-plane or be multiple on the jω-axis. We can obtain the eigenvalues from the state equations without ﬁr s tc o n v e r t i n gt oa transfer function to ﬁnd the poles: The equation det sI A0 yields the eigenvalues directly. If det sI A, a polynomial in s, cannot be factored easily, we can apply the Routh-Hurwitz criterion to it to evaluate how many eigenvalues are in each region of thes-plane. We now summarize this chapter, ﬁrst with case studies and then with a written summary. Our case studies include the antenna azimuth position control systemand the UFSS. Stability is as important to these systems as it is to the system shown in Figure 6.11.Since there is one sign change in the ﬁrst column, the system has one right-half- plane pole and two left-half-plane poles. It is therefore unstable. Yet, you may question thepossibility that if a nonminimum-phase zero cancels the unstable pole, the system will be stable. However, in practice, the nonminimum-phase zero or unstable pole will shift due to a slight change in the system ’s parameters. This change will cause the system to become unstable. Students who are using MATLAB should now run ch6p3 in Appendix B.You will learn how to determine the stability of a system repre-sented in state space by ﬁnding the eigenvalues of the system matrix. This exercise uses MATLAB to do Example 6.11. Skill-Assessment Exercise 6.4 PROBLEM: For the following system represented in state space, ﬁnd out how many poles are in the left half-plane, in the right half-plane, and on the jω-axis. _x21 1 17 1  34  52 6643 775x0 012 6643 775r y010/C2/C3 x ANSWER: Two rhp and one lhp. The complete solution is at www.wiley.com/college/nise .TryIt 6.3 Use the following MATLAB statements to ﬁnd the eigenvalues of the systemdescribed in Skill-AssessmentExercise 6.4. A=[2 1 1 171  34  5] ; Eig=eig(A)320 Chapter 6 StabilityWEBC06 10/28/2014 17:42:54 FIGURE 6.11 A FANUC M-410 iBTMhas 4 axes of motion. It is seen here performing bag palletizing Case Studies Antenna Control: Stability Design via GainAntenna Control: Stability Design via Gain This chapter has covered the elements of stability. We saw that stable systems have their closed-loop poles in the left half of the s-plane. As the loop gain is changed, the locations of the poles are also changed, creating the possibility that the poles can move into the righthalf of the s-plane, which yields instability. Proper gain settings are essential for the stability of closed-loop systems. The following case study demonstrates the proper settingof the loop gain to ensure stability. PROBLEM: You are given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 1. Find the range of preampli ﬁer gain required to keep the closed-loop system stable. SOLUTION: The closed-loop transfer function was derived in the case studies in Chapter 5 as Ts  6:63K s3101:71s2171s6:63K(6.36) Using the denominator, create the Routh table shown as Table 6.19. The third row of the table shows that a row of zeros occurs if K2623. This value of Kmakes the system marginally stable. Therefore, there will be no sign changes in the ﬁrst column if 0 <K<2623. We conclude that, for stability, 0 <K<2623. An animation PowerPoint presentation (PPT) demonstratin g this system is available for instructors atwww.wiley.com/college/nise .S e e Antenna (Ch. 6 ). TABLE 6.19 Routh table for antenna control case study s31 171 s2101.71 6.63K s117392.41–6.63 K 0 s06.63KCase Studies 321WEBC06 10/28/2014 17:42:56 CHALLENGE: We now give you a problem to test your knowledge of this chapter ’s objectives. Refer to the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 2. Find the range of preampli ﬁer gain required to keep the closed-loop system stable. UFSS Vehicle: Stability Design via GainUFSS Vehicle: Stability Design via Gain For this case study, we return to the UFSS vehicle and study the stability of the pitch control system, which is used to control depth. Speci ﬁcally, we ﬁnd the range of pitch gain that keeps the pitch control loop stable. PROBLEM: The pitch control loop for the UFSS vehicle ( Johnson ,1980 ) is shown on the back endpapers. Let K21 and ﬁnd the range of K1that ensures that the closed-loop pitch control system is stable. SOLUTION: Theﬁrst step is to reduce the pitch control system to a single, closed-loop transfer function. The equivalent forward transfer function, Ge s,i s Ge s0:25K1 s0:435 s43:456s33:457s20:719s0:0416(6.37) With unity feedback the closed-loop transfer function, T s,i s T s0:25K1 s0:435 s43:456s33:457s2 0:7190:25K1s 0:0416 0:109K1(6.38) The denominator of Eq. (6.38) is now used to form the Routh table shown as Table 6.20. Looking at the ﬁrst column, the s4ands3rows are positive. Thus, all elements of the ﬁrst column must be positive for stability. For the ﬁrst column of the s2row to be positive,  ∞<K1<44:91. For the ﬁrst column of the s1row to be positive, the numerator must be positive, since the denominator is positive from the previous step. The solution to the quadratic term in the numerator yields roots of K1 4:685 and 25.87. Thus, for a positive numerator,  4:685<K1<25:87. Finally, for the ﬁrst column of the s0row to be positive,  0:382<K1<∞. Using all three conditions, stability will be ensured if  0:382<K1<25:87. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. For the UFSS vehicle ( Johnson, 1980) heading control system shown on the back endpapers and introduced in the UFSS Case Study Challenge in Chapter 5, do thefollowing: a.Find the range of heading gain that ensures the vehicle ’s stability. Let K 21 b.Repeat Part ausing MATLAB.TABLE 6.20 Routh table for UFSS case study s41 3.457 0:0416 0:109K1 s33.456 0:7190:25K1 s211:228 0:25K1 0:1440:377K1 s1  0:0625 K2 11:324K17:575 11:228 0:25K1 s00:1440:377K1 Note: Some rows have been multiplied by a positive constant for convenience.322 Chapter 6 StabilityWEBC06 10/28/2014 17:42:56 Summary In this chapter, we explored the concepts of system stability from both the classical and the state-space viewpoints. We found that for linear systems, stability is based on a natural response that decays to zero as time approaches in ﬁnity. On the other hand, if the natural response increases without bound, the forced response is overpowered by the natural response,and we lose control. This condition is known as instability . A third possibility exists: The natural response may neither decay nor grow without bound but oscillate. In this case, thesystem is said to be marginally stable . We also used an alternative de ﬁnition of stability when the natural response is not explicitly available. This de ﬁnition is based on the total response and says that a system is stable if every bounded input yields a bounded output (BIBO) and unstable if any bounded input yields an unbounded output. Mathematically, stability for linear, time-invariant systems can be determined from the location of the closed-loop poles: If the poles are only in the left half-plane, the system is stable. If any poles are in the right half-plane, the system is unstable. If the poles are on the jω-axis and in the left half-plane, the system is marginally stable as long as the poles on the jω-axis are of unit multiplicity; it is unstable if there are any multiple jωpoles. Unfortunately, although the open-loop poles may be known, we found that in higher-ordersystems it is dif ﬁcult to ﬁnd the closed-loop poles without a computer program. The Routh-Hurwitz criterion lets us ﬁnd how many poles are in each section of the s-plane without giving us the coordinates of the poles. Just knowing that there are poles in the right half-plane is enough to determine that a system is unstable. Under certain limited conditions, when an even polynomial is present, the Routh table can be used to factor thesystem ’s characteristic equation. Obtaining stability from the state-space representation of a system is based on the same concept —the location of the roots of the characteristic equation. These roots are equivalent to the eigenvalues of the system matrix and can be found by solvingdet sI A0. Again, the Routh-Hurwitz criterion can be applied to this polynomial. The point is that the state-space representation of a system need not be converted to atransfer function in order to investigate stability. In the next chapter, we will look at steady-state errors, the last of three important control system requirements we emphasize. Review Questions 1.What part of the output response is responsible for determining the stability of a linear system? 2.What happens to the response named in Question 1 that creates instability? 3.What would happen to a physical system that becomes unstable?In our case studies, we calculated the ranges of gain to ensure stability. The studentshould be aware that although these ranges yield stability, setting gain within theselimits may not yield the desired transient response or steady-state error characteristics.In Chapters 9 and 11, we will explore design techniques, other than simple gainadjustment, that yield more ﬂexibility in obtaining desired characteristics.Review Questions 323WEBC06 10/28/2014 17:42:57 4.Why are marginally stable systems considered unstable under the BIBO de ﬁnition of stability? 5.Where do system poles have to be to ensure that a system is not unstable? 6.What does the Routh-Hurwitz criterion tell us? 7.Under what conditions would the Routh-Hurwitz criterion easily tell us the actual location of the system ’s closed-loop poles? 8.What causes a zero to show up only in the ﬁrst column of the Routh table? 9.What causes an entire row of zeros to show up in the Routh table? 10.Why do we sometimes multiply a row of a Routh table by a positive constant? 11.Why do we not multiply a row of a Routh table by a negative constant? 12.If a Routh table has two sign changes above the even polynomial and ﬁve sign changes below the even polynomial, how many right-half-plane poles does the system have? 13.D o e st h ep r e s e n c eo fa ne n t i r er o wo f zeros always mean that the system has jωpoles? 14.If a seventh-order system has a row of zeros at the s3row and two sign changes below thes4row, how many jωp o l e sd o e st h es y s t e mh a v e ? 15.Is it true that the eigenvalu es of the system matrix are the same as the closed-loop poles? 16.How do we ﬁnd the eigenvalues? Problems 1.Tell how many roots of the following polynomial are in the right half-plane, in the left half-plane, and on thejω-axis: [Section: 6.2] P ss 53s45s34s2s3 2.Tell how many roots of the following polynomial are in the right half-plane, in the left half-plane, and on thejω-axis: [Section: 6.3] P ss 56s35s28s20 3.Using the Routh table, tell how many poles of the following function are in the right half-plane, in the left half-plane, and on the jω-axis. [Section: 6.3] T ss8 s5 s43s3 3s23s 2 4.The closed-loop transfer function of a system is [Section: 6.3] T ss32s27s21 s5 2s43s3 6s22s 4Determine how many closed-loop poles lie in the right half-plane, in the left half-plane, and on the jω-axis. 5.How many poles are in the right half-plane, in the left half-plane, and on the jω-axis for the open-loop system of Figure P6.1? [Section: 6.3] C(s) s4 + 4s3 + 8s2 + 20s +15s2 + 4s – 3 R(s) FIGURE P6.1 6.How many poles are in the right half-plane, the left half-plane, and on the jω-axis for the open-loop system of Figure P6.2? [Section: 6.3] C(s) s6 + s5 – 6s4 + s2 + s – 6–6 R(s) FIGURE P6.2 7.Use MATLAB to ﬁnd the pole locations for the system of Problem 6. 8.Use MATLAB and the Symbolic Math Toolbox to generate a Routh table to solve Problem 3.324 Chapter 6 StabilityWEBC06 10/28/2014 17:43:0 9.Determine whether the unity feedback system of Figure P6.3 is stable if [Section: 6.2] G s240 s1 s2 s3 s4 R(s) + E(s)G(s)C(s) – FIGURE P6.3 10.Use MATLAB to ﬁnd the pole locations for the system of Problem 9. 11.Consider the unity feedback system of Figure P6.3 with G s1 4s2 s22 a.Using the Routh-Hurwitz criterion, ﬁnd the region of the s-plane where the poles of the closed-loop system are located. b.Use MATLAB to verify your answer and ﬁnd the poles of T(s) . Indicate whether this system is stable, unstable, or marginally stable. [Section: 6.3] 12.In the system of Figure P6.3, let G sK s1 s s 2 s3 Find the range of Kfor closed-loop stab ility. [Section: 6.4] 13.Given the unity feedback system of Figure P6.3 with G s84 s s75s612s525s445s350s282s60 tell how many poles of the closed-loop transfer function lie in the right half-plane, in the left half-plane, and onthejω-axis. [Section: 6.3] 14.Using the Routh-Hurwitz criterion and the unity feedback system of Figure P6.3 with G s1 2s45s3s22s tell whether or not the closed-loop system isstable. [Section: 6.2] 15.Given the unity feedback system of Figure P6.3 with G s8 s s6 2s5 s42s34s2 8s 4 tell how many closed-loop poles are located in the righthalf-plane, in the left half-plane, and on the jω-axis. [Section: 6.3]16. Repeat Problem 15 using MATLAB. 17.Consider the following Routh table. Notice that the s5 row was originally all zeros. Tell how many roots ofthe original polynomial were in the right half-plane, inthe left half-plane, and on the jω-axis. [Section: 6.3] 18.For the system of Figure P6.4, tell how many closed- loop poles are located in the right half-plane, in the left half-plane, and on the jω-axis. Notice that there is positive feedback. [Section: 6.3] +18 R(s) + E(s) C(s) s5 + s4 – 7s3 – 7s2 – 18s FIGURE P6.4 19.Using the Routh-Hurwitz criterion, tell how many closed-loop poles of the system shown in Figure P6.5 lie in the left half-plane, in the right half-plane,a n do nt h e jω-axis. [Section: 6.3] 450 s4+3s3+10s2+30s+150 1 sR(s) + C(s) – FIGURE P6.5 20.Determine if the unity feedback system of Figure P6.3 with G sK s21 s1 s2 can be unstable. [Section: 6.4] 21.For the unity feedback system of Figure P6.3 with G sK s6 s s1 s4 determine the range of Kto ensure stability. [Section: 6.4]s712  1  2 s612  1  2 s534  10 s41  1  30 s378 0 0 s2 15  21 0 0 s1 90 0 0 s0 21 0 0 0Problems 325WEBC06 10/28/2014 17:43:1 22.In the system of Figure P6.3, let G sK s a s s b Find the range of Kfor closed-loop stability when: [Section: 6.4] a.a<0;b<0 b.a<0;b>0 c.a>0;b<0 d.a>0;b>0 23.For the unity feedback system of Figure P6.3 with G sK s3 s5 s 2 s 4 determine the range of Kfor stability. [Section: 6.4] 24.Repeat Problem 23 using MATLAB. 25.Use MATLAB and the Symbolic Math Toolbox to generate a Routh table in terms of Kto solve Problem 23. 26.Find the range of Kfor stability for the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s4 s 4 s23 27.For the unity feedback system of Figure P6.3 with G sK s1 s4 s4 ﬁnd the range of Kfor stability. [Section: 6.4] 28.Find the range of gain, K, to ensure stability in the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s 2 s4 s5 s212 29.Find the range of gain, K, to ensure stability in the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s2 s21 s4 s 1 30.Using the Routh-Hurwitz criterion, ﬁnd the value of K that will yield oscillations for the unity feedback systemof Figure P6.3 with [Section: 6.4] G sK s77 s27 s38 31.Use the Routh-Hurwitz criterion to ﬁnd the range of Kfor which the system of Figure P6.6 is stable. [Section: 6.4]–K(s2 – 2s + 2) 1 s2 + 2s + 4R(s) + E(s) C(s) FIGURE P6.6 32.Repeat Problem 31 for the system of Figure P6.7. [Section: 6.4] –R(s) + E(s) C(s) K(s+1 ) s(s + 2)(s + 3) s+5 s+7 FIGURE P6.7 33.Given the unity feedback system of Figure P6.3 with G sK s4 s s1:2 s2 ﬁnd the following: [Section: 6.4] a.The range of Kthat keeps the system stable b.The value of Kthat makes the system oscillate c.The frequency of oscillation when Kis set to the value that makes the system oscillate 34.Repeat Problem 33 for [Section: 6.4] G sK s 1 s 2 s2 s22s2 35.For the system shown in Figure P6.8, ﬁnd the value of gain, K, that will make the system oscillate. Also, ﬁnd the frequency of oscillation. [Section: 6.4] KR(s) + –1 s(s+4)(s+6)+ C(s) – s FIGURE P6.8 36.Given the unity feedback system of Figure P6.3 with [Section: 6.4] G sKs s2 s2 4s8 s3 a.Find the range of Kfor stability. b.Find the frequency of oscillation when the system is marginally stable.326 Chapter 6 StabilityWEBC06 10/28/2014 17:43:2 37.Repeat Problem 36 using MATLAB. 38.For the unity feedback system of Figure P6.3 with G sK s2 s21 s4 s 1 ﬁnd the range of Kfor which there will be only two closed-loop, right-half-plane poles. [Section: 6.4] 39.For the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s13 s4 a.Find the range of Kfor stability. b.Find the frequency of oscillation when the system is marginally stable. 40.Given the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s49 s24s5 a.Find the range of Kfor stability. b.Find the frequency of oscillation when the system is marginally stable. 41.Using the Routh-Hurwitz criterion and the unity feedback system of Figure P6.3 with [Section: 6.4] G sK s s1 s2 s6 a.Find the range of Kfor stability. b.Find the value of Kfor marginal stability. c.Find the actual location of the closed-loop poles when the system is marginally stable. 42.Find the range of Kto keep the system shown in Figure P6.9 stable. [Section: 6.4] –sK s – 1 s2 + 2s + 1R(s) + E(s) C(s) FIGURE P6.9 43.Find the value of Kin the system of Figure P6.10 that will place the closed-loop poles as shown. [Section: 6.4]K + ++ jωR(s) s2 s2C(s) – 1 s + 3s1 σ FIGURE P6.10 Closed-loop system with pole plot 44.The closed-loop transfer function of a system is T ss2K1sK2 s4K1s3K2s25s1 Determine the range of K1in order for the system to be stable. What is the relationship between K1andK2for stability? [Section: 6.4] 45.For the transfer function below, ﬁnd the constraints on K1andK2such that the function will have only two jωpoles. [Section: 6.4] T sK1sK2 s4K1s3s2K2s1 46.The transfer function relating the output engine fan speed (rpm) to the input main burner fuel ﬂow rate (lb/h) in a short takeoff and landing (STOL) ﬁghter aircraft, ignoring the coupling between engine fanspeed and the pitch control command, is ( Schierman , 1992) [Section: 6.4] G s1:3s790:5s61970 s515;000s43120 s3 41;300s2 5000 s 1840 s8103s71180 s64040 s52150 s4 8960 s3 10;600s2 1550 s 415 a.Find how many poles are in the right half-plane, inthe left half-plane, and on the jω-axis. b.Is this open-loop system stable? 47.An interval polynomial is of the form P sa 0a1sa2s2a3s3a4s4a5s5∙∙∙ with its coef ﬁcients belonging to intervals xiaiyi, where xi,yiare prescribed constants. Kharitonov ’s theorem says that an interval polynomial has all itsroots in the left half-plane if each one of the followingProblems 327WEBC06 10/28/2014 17:43:3 four polynomials has its roots in the left half-plane (Minichelli, 1989 ): K1 sx0x1sy2s2y3s3x4s4x5s5y6s6∙∙∙ K2 sx0y1sy2s2x3s3x4s4y5s5y6s6∙∙∙ K3 sy0x1sx2s2y3s3y4s4x5s5x6s6∙∙∙ K4 sy0y1sx2s2x3s3y4s4y5s5x6s6∙∙∙ Use Kharitonov ’s theorem and the Routh-Hurwitz criterion to ﬁnd if the following polynomial has any zeros in the right half-plane. P sa0a1sa2s2a3s3 2a04;1a12;4a26;a31 48.A linearized model of a torque-controlled crane hoisting a load with a ﬁxed rope length is P sXT s FT s1 mTs2ω2 0 s2 s2aω2 0 where ω0ﬃﬃﬃﬃg L;p L=the rope length, mT=the mass of the car, a=the combined rope and car mass, fT=the force input applied to the car, and xT=the resulting rope displacement ( Marttinen, 1990 ). If the system is controlled in a feedback con ﬁguration by placing it in a loop as shown in Figure P6.11, with K>0;where will the closed-loop poles be located? K P(s)+ –C(s) R(s) FIGURE P6.11 49.The read/write head assembly arm of a computer hard disk drive (HDD) can be modeled as a rigid rotating body with inertia Ib:Its dynamics can be described with the transfer function P sX s F s1 Ibs2 where X(s) is the displacement of the read/write head andF(s) is the applied force ( Yan,2003 ). Show that if the HDD is controlled in the con ﬁguration shown in Figure P6.11, the arm will oscillate and cannot be positioned with any precision over a HDD track. Find the oscillation frequency. 50.A system is represented in state space as _x013 22  4 1 432 643 75x0 1 02 643 75u y110/C2/C3 xDetermine how many eigenvalues are in the right half-plane, in the left half-plane, and on the jω-axis. [Section: 6.5] 51.Use MATLAB to ﬁnd the eigenvalues of the following system: _x01 0 01  4  11 82 643 75x0 002 643 75u y001/C2/C3 x The following system in state space represents the forward path of a unity feedback system. Use the Routh-Hurwitz criterion to determine if the closed-loop system is stable. [Section: 6.5] _x010 012  5  4  32 643 75x0 102 643 75u y101/C2/C3 x Repeat Problem 52 using MATLAB. 54.A Butterworth polynomial is of the form Bn s1  1ns ωc/C18/C192n ;n>0 Use the Routh-Hurwitz criteria to ﬁnd the zeros of a Butterworth polynomial for: a.n1; b.n2 55.An inverted pendulum, mounted on a motor-driven cart was presented in Chapter 3, Problem 30. The system ’s state-space model was linearized around a stationary point, x0=0, corresponding to the pendulum point- mass, m, being in the upright position at t=0, when the force applied to the cart u0=0(Prasad, 2012 ). We’ll modify that model here to have two output variables: thependulumanglerelativetothe y-axis, θ,andthehorizontal position of the cart, x. The output equation becomes: yθ x/C20/C21 Cx10000010/C20/C21θ _θx _x2 66643 7775 Using MATLAB, ﬁnd out how many eigenvalues are in the right half-plane, in the left half-plane, andon the jω-axis. What does that tell us about the stability of that unit? [Sec-tion: 6.5]328 Chapter 6 StabilityWEBC06 10/28/2014 17:43:3 DESIGN PROBLEMSDESIGN PROBLEMS 56.A model for an airplane ’s pitch loop is shown in Figure P6.12. Find the range of gain, K, that will keep the system stable. Can the system ever be unstable for positive values of K? + Gyro1s + 10 K(s + 1) (s + 4.85)Commanded pitch angleController Aircraft dynamics Pitch angle –s2 + 0.6s + 9 FIGURE P6.12 Aircraft pitch loop model 57.A common application of control systems is in regulating the temperature of a chemical process (Figure P6.13). Theﬂow of a chemical reactant to a process is controlled by anactuator and valve. The reactant causes the temperature inthe vat to change. This temperature is sensed and com- pared to a desired set-point temperature in a closed loop, where the ﬂow of reactant is adjusted to yield the desired temperature. In Chapter 9, we will learn how a PIDcontroller is used to improve the performance of suchprocess control systems. Figure P6.13 shows the controlsystem prior to the addition of the PID controller. The PIDcontroller is replaced by the shaded box with a gain ofunity. For this system, prior to the design of the PID controller, ﬁnd the range of ampli ﬁer gain, K, to keep the system stable. Desired temperature set point + –Future PID controller AmplifierActuator and valveChemical heat processActual temperatureK1 0.7 0.1 Temperature sensors + 0.5 s2 + 1.7s + 0.3 s + 0.11 FIGURE P6.13 Block diagram of a chemical process control system 58.A transfer function from indoor radiator power, _Q s;to room temperature, T(s), in an 11 m2room is P sT s _Q s110 6s21:31410 9s2:6610 13 s30:00163 s25:27210 7s3:53810 11 where _Qis in watts and Tis in °C(Thomas ,2005 ). The room’s temperature will be controlled by embedding it in a closed loop, such as that of Figure P6.11. Find the range of Kfor closed-loop stability. 59.During vertical spindle surface grinding, adjustments are made on a multi-axis computer numerical control (CNC)machine by measuring the applied force with a dyna- mometer and applying appropriate corrections. This feedback force control results in higher homogeneityand better tolerances in the resulting ﬁnished product. In a speci ﬁc experiment with an extremely high feed rate, the transfer function from the desired depth of cut(DOC) to applied force was F s DOC sKC 1KC ms2bsk KC Kf1 Ts1/C18/C19 where k2:1104N=m;b0:78 Ns =m;m1:2 10 4kg;KC1:5104N=mm;andT0:004s :The parameter Kfis varied to adjust the system. Find the range of Kfunder which the system is stable (Hekman ,1999 ). 60.In order to obtain a low-cost lithium-ion battery charger, the feedback loop of Figure P6.3 is used, whereG sG c sP s. The following transfer functions have been derived for G(s)(Tsang ,2009 ): P sR1R2C1C2s2R1C1R2C1R2C2  s1 C11R2C2  s Gc sKpKI s IfR10:15Ω;R20:44Ω;C17200F; andC2170F, u s et h eR o u t h - H u r w i t zc r i t e r i at oﬁ nd the range of positive KPandKIfor which the system is closed-loop stable. 61.Figure P6.14 is a simpli ﬁed and linearized block diagram of a cascade control system, which is used to controlwater level in a steam generator of a nuclear power plant(Wang ,2009 ). In this system, the level controller, G LC(s), is the master controller and the feed-water ﬂow controller, GFC(s), is the slave controller. Using mass balance equations, the water level would ordinarily be regardedas a simple integration process of water ﬂow. In a steam generator, however, steam ﬂow rate and the cooling effect of feed-water change the dynamics of that process.Taking the latter into account and ignoring the much-lesspronounced impact of changes in steam ﬂow rate, a ﬁrst- order lag plus time delay is introduced into the transferfunction, G fw(s), relating the controlled level, C(s), to feed-water ﬂow rate, Qw(s) as follows: Gfw sC s Qw sK1e τ1s s T1s12e 2s s 25s1 2 s 25s1 2s22s1 where K12 is the process gain, τ12 is the pure time delay, and T125 is the steam generator ’s timeProblems 329WEBC06 10/28/2014 17:43:4 constant. (The expression e τ1srepresents a time delay. This function can be represented by what is known as a Pade approximation . This approximation can take on many increasingly complicated forms, depending uponthe degree of accuracy required. Here we use the Pade approximation, e  x1 1xx2 2!;and speci ﬁc numeri- cal values for the considered steam generator.) The dynamic characteristics of the control valve are approximated by the transfer function Gv sQw s Y sKv Tvs11 3s1 where Kvis the valve gain and Tvis its time constant. Given that: GFC sKPFCKDFCs0:52s and GLC sKPLCKDLCs0:5Ks, use the Routh-Hurwitz criterion to ﬁnd the range of the level controller ’s derivative gain, KDLCK>0, that will keep the system stable. 62.Look-ahead information can be used to automatically steer a bicycle in a closed-loop con ﬁguration. A line is drawn in the middle of the lane to be followed, and an arbitrary point is chosen in the vehicle ’s longitudinal axis. A look-ahead offset is calculated by measuring the distance between the look-ahead point and the reference line and is used by the system to correct thevehicle ’s trajectory. A linearized model of a particular bicycle traveling on a straight-line path at a ﬁxed longitudinal speed is _V _r _ψ _Y g2 66643 7775 11:76 :86 1 :6K 7:7K  3:5  24  66:9K 8:4K 01 0 0 10  10 02 66643 7775V rψY g2 66643 7775 In this model, V=bicycle ’s lateral velocity, r=bicycle ’s yaw velocity, ψ=bicycle ’s yaw acceleration, and Y g bicycle ’s center of gravity coordinate on the y-axis. Kis a controller parameter to be chosen by the designer (Özgüner, 1995). Use the Routh-Hurwitz citerion to ﬁnd the range of Kfor which the system is closed-loop stable. 63.Figure P5.42 Shows the block diagram of an Automatic Voltage Regulator ( Gozde ,2011 ). Assume in this diagramthe following parameter values: Ka=10,Ta=0.1,Ke=1, Te=0.4,Kg=1,Tg=1,Ks=1, and Ts=0.001. Also assume that the PID transfer function is substituted by a simple integrator, namely GPID sK s. Find the range ofKfor which the system is closed-loop stable. 64.It has been shown ( Pounds, 2011 ) that an unloaded UAV helicopter is closed-loop stable and will have a characteristic equation given by s3mgh I q2kkdq1g/C18/C19 s2 kmgh Ismgh I kkiq10 where mis the mass of the helicopter, gis the gravitational constant, Iis the rotational inertia of the helicopter, his the height of the rotor plane above the center of gravity,q 1andq2are stabilizer ﬂapping parameters, k,ki,a n dk d are controller parameters; all constants > 0. The UAV is supposed to pick up a payload; when this occurs, the mass, height, and inertia change to m´,h´,a n d I´,r e s p e c - tively, all still >0. Show that the helicopter will remain stable as long as m´gh´ I´>q1kki q1gk k q2kkd 65.Figure P6.15 shows the model of the dynamics of an economic system (Wingrove ,2012) .I nt h i sd i a g r a mx represents the rate of growth in real Gross NationalProduct (GNP), x 0the long-term trend (dc value) of the GNP,Δxthe change over the long-term trend of the GNP, rxthe real and psychological disturbance inputs that affect the economy, rmthe random monetary inputs, andΔuﬂuctuations in unemployment rate. The diagram has two feedback loops: one through Friedman ’s model in which the economy dynamics are approximated by F sKxs s ωn/C18/C192 2ξs ωn/C18/C19 1 and a second loop through Okun’ s law that relates the GNP to unemployment changes. Assuming the followingparameter values: K x2y e ar s, ωn1:5ra d=year, ζ0:8, Ku0:4a n d Gx 0:4. Find the range of Gufor closed- loop stability.GFC(s) GLC(s) GV(s)_+Qw(s) Gfw(s)+ _Y (s) X (s)Controlle d level C(s)Set point R(s) FIGURE P6.14330 Chapter 6 StabilityWEBC06 10/28/2014 17:43:5 66.The system shown in Figure P6.16 has G1 s 1=s s2 s4. Find the following: K1+ –+ –G1(s)E(s) R(s) C(s) K2 s FIGURE P6.16 a.The value of K2for which the inner loop will have two equal negative real poles and the associated range of K1for system stability. b.The value of K1at which the system oscillates and the associated frequency of oscillation. c.The gain K1at which a real closed-loop pole is at s=–5. Can the step response, c(t), be approximated by a second-order, underdamped response in thiscase? Why or why not? d.If the response in Part dcan be approximated as a second-order response, ﬁnd the % OSand settling time, T s, when the input is a unit step, r(t)=u(t).67.A drive system with an elastically coupled load was presented in Problems 71 and 67 in Chapters 4 and 5,respectively ( Thomsen, 2011 ). That drive was shown in Figure P5.43 as the controlled unit in a feedback controlsystem, where Ω L(s)=the load speed and Ωr(s)=the desired (reference) speed. If the controller transfer function is GC sKpKI s;while all of the other parameters and transfer functions are the same as in Problem 67 in Chapter 5, ﬁnd the range of KPfor stability of the system if KI=0.1. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 68.Control of HIV/AIDS. The HIV infection linearized model developed in Problem 84, Chapter 4, can be shown to have the transfer function P sY s U1 s 520 s 10:3844 s32:6817 s20:11s0:0126 G(s) P(s)+ –Virus count change, Y(s)Desired virus count change U1(s) FIGURE P6.17 It is desired to develop a policy for drug delivery to maintain the virus count at prescribed levels. For the purpose of obtaining an appropriate u1 t;feedback will be used as shown in Figure P6.17 ( Craig ,2004 ). As aﬁrst approach, consider G sK;a constant to be selected. Use the Routh-Hurwitz criteria to ﬁnd the range of Kfor which the system is closed-loop stable. 69.Hybrid vehicle. Figure P6.18 shows the HEV system presented in Chapter 5, where parameter values have Motor angular speed _ _ 0.1 2Friction torque Tf (s)UC(s) +1.8Armature current Ia(s) Eb(s) Back emf Vehicle speed V(s) 4.8750.3Speed error Ev(s) 0.5 0.0443ss Kp 40+ ss6 10+ + _ _Torque controller & power amplifierRef. signal Rv(s) Feedbackspeed signal KSSΩ (s)7.226 s1TL(s) + Feedbackcurrent signal KCS Ia(s)Ua(s) +Speed controller Current sensor sensitivity Speed sensor sensitivity 0.6154 Motive torque T(s) _1Armature resistance Ra(s) Ω (s) FIGURE P6.18Friedman’s model Okun’s law F+ + +rmrx xo ++++ Gx Gux Δu Δx Ku s– FIGURE P6.15Problems 331WEBC06 10/28/2014 17:43:5 been substituted. It is assumed here that the speed controller has a proportional gain, Kp, to be adjusted. Use the Routh-Hurwitz stability method to ﬁnd the range of positive Kpfor which the system is closed-loop stable (Graebe, 1995 ). 70.Parabolic trough collector. Theﬂuid temperature of a parabolic trough collector ( Camacho, 2012 ) will be controlled by using a unity feedback structure as shownin Figure P6.11. Assume the open-loop plant transfer function is given by P s137:210 6 s20:0224 s19610 6e 39sUse the Routh-Hurwitz criteria to ﬁnd the range of gain Kthat will result in a closed-loop stable system. Note: Pure time-delay dynamics, such as the one in thetransfer function of the parabolic trough collector,cannot be treated directly using the Routh-Hurwitzcriterion because it is represented by a nonrationalfactor. However, a Padé approximation can be used forthe nonrational component. The Padé approximationwas introduced in Problem 6.61, but it can appear in different forms. Here, it is suggested you use a ﬁrst-order approximation of the form e  sT1 T 2s 1T 2s Cyber Exploration Laboratory Experiment 6.1 Objectives To verify the effect of pole location upon stability. To verify the effect upon stability of loop gain in a negative feedback system. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.Find the equivalent transfer function of the negative feedback system of Figure P6.19 if G sK s s22and H s1 2.For the system of Prelab 1, ﬁnd two values of gain that will yield closed-loop, overdamped, second-order poles. Repeat for underdamped poles. 3.For the system of Prelab 1, ﬁnd the value of gain, K, that will make the system critically damped. 4.For the system of Prelab 1, ﬁnd the value of gain, K, that will make the system marginally stable. Also, ﬁnd the frequency of oscillation at that value of Kthat makes the system marginally stable. 5.For each of Prelab 2 through 4, plot on one graph the pole locations for each case and write the corresponding value of gain, K, at each pole. Lab 1.Using Simulink, set up the negative feedback system of Prelab 1. Plot the step responseof the system at each value of gain calculated to yield overdamped, underdamped,critically damped, and marginally stable responses. 2.Plot the step responses for two values of gain, K, above that calculated to yield marginal stability. 3.At the output of the negative feedback system, cascade the transfer function G 1 s1 s24R(s) + C(s)G(s) H(s)– FIGURE P6.19332 Chapter 6 StabilityWEBC06 10/28/2014 17:43:5 Bibliography Ballard, R. D. The Riddle of the Lusitania. National Geographic , April 1994, National Geographic Society, Washington, D.C., 1994, pp. 68 –85. Also, ﬁgure caption source for Figure 6.9. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria, IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. D’Azzo, J., and Houpis, C. H. Linear Control System Analysis and Design , 3d ed. McGraw-Hill, New York, 1988. Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA, 1989. FANUC Robotics North America, Inc. Figure caption source for Figure 6.11. Gozde, H., and Taplamacioglu, M. C. Comparative performance analysis of arti ﬁcial bee colony algorithm for automatic voltage regulator (AVR) system. Journal of the Franklin Institute , vol. 348, pp. 1927 –1946, 2011. Graebe, S. F., Goodwin, G. C., and Elsley, G. Control Design and Implementation in Continuous Steel Casting. IEEE Control Systems, August 1995, pp. 64 –71. Hekman, K. A., and Liang, S. Y. Compliance Feedback Control for Part Parallelism in Grinding. International Journal of Manufacturing Technology , vol. 15, 1999, pp. 64 –69. Hostetter, G. H., Savant, C. J., Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Johnson, H., et al. Unmanned Free-Swimming Submersible (UFSS) System Description. NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C., 1980.Set the gain, K, at a value below that calculated for marginal stability and plot the step response. Repeat for Kcalculated to yield marginal stability. Postlab 1.From your plots, discuss the conditions that lead to unstable responses. 2.Discuss the effect of gain upon the nature of the step response of a closed-loop system. Experiment 6.2 Objective To use the LabVIEW Control Design and Simulation Module for stability analysis. Minimum Required Software Package LabVIEW with the Control Design and Simulation Module Prelab 1.Select six transfer functions of various orders and use Routh-Hurwitz to determine their stability. Lab 1.Create a LabVIEW VI that receives the order and the coef ﬁcients of the characteristic equation and outputs the location of the poles and information regarding stability. Postlab 1.Verify the stability of the systems from your Prelab.Bibliography 333WEBC06 10/28/2014 17:43:5 Martinnen, A., Virkkunen, J., and Salminen, R. T. Control Study with Pilot Crane. IEEE Transactions on Education , vol. 33, no. 3, August 1990, pp. 298 –305. Minnichelli, R. J., Anagnost, J. J., and Desoer, C. A. An Elementary Proof of Kharitonov ’s Stability Theorem with Extensions. IEEE Transactions on Automatic Control , vol. 34, 1989, pp. 995 –998. Özgüner, Ű.,Űnyelioglu, K. A., and Haptipog ̂lu, C. An Analytical Study of Vehicle Steering Control. Proceedings of the 4th IEEE Conference Control Applications, 1995, pp. 125 –130. Phillips, C. L., and Harbor, R. D. Feedback Control Systems , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1991. Pounds, P. E. I., Bersak, D. R., and Dollar, A . M. Grasping From the Air: Hovering Capture and Load Stability. 2011 IEEE International Conference on Robotics and Automation , Shanghai International Conference Center, May 9–13, Shanghai, China, 2011. Prasad, L., Tyagi, B., and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Symposium , 2012, pp. 138 –143. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. 4th International Symposium on Applied Computational Intelligence and Informatics . IEEE. 2007, pp. 157 –162. Routh, E. J. Dynamics of a System of Rigid Bodies , 6th ed. Macmillan, London, 1905. Schierman, J. D., and Schmidt, D. K. Analysis of Airframe and Engine Control Interactions and Integrated Flight/Propulsion Control. Journal of Guidance, Control, and Dynamics , vol. 15, no. 6, November –December 1992, pp. 1388 –1396. Thomas, B., Soleimani-Mosheni, M., and Fahlén, P. Feed-Forward in Temperature Control of Buildings. Energy and Buildings , vol. 37, 2005, pp. 755 –761. Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model- Based Predictive Control for Drive Systems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions on Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Timothy, L. K., and Bona, B. E. State Space Analysis: An Introduction . McGraw-Hill, New York, 1968. Tsang, K. M., and Chan, W. L. A Simple and Low-cost Charger for Lithium-Ion Batteries. Journal of Power Sources , vol. 191, 2009, pp. 633 –635. Wang, X.-K., Yang, X.-H., Liu, G., and Qian, H. Adaptive Neuro-Fuzzy Inference System PID Controller for Steam Generator Water Level of Nuclear Power Plant. Procedings of the Eighth International Conference on Machine Learning and Cybernetics , 2009, pp. 567 –572. Wingrove, R. C., and Da, R. E. Classical Linear-Control Analysis Applied to Business-Cycle Dynamics and Stability. Comput. Econ. vol. 39, Springer, 2012, pp. 77 —98. Yan, T., and Lin, R. Experimental Modeling and Compensation of Pivot Nonlinearly in Hard Disk Drives. IEEE Transactions on Magnetics , vol. 39, 2003, pp. 1064 –1069.334 Chapter 6 StabilityWEBC07 10/28/2014 17:50:53 Steady-State Errors Chapter Learning Outcomes After completing this chapter the student will be able to: Find the steady-state error for a unity feedback system (Sections 7.1 –7.2) Specify a system ’s steady-state error performance (Section 7.3) Design the gain of a closed-loop system to meet a steady-state error speci ﬁcation (Section 7.4) Find the steady-state error for disturbance inputs (Section 7.5) Find the steady-state error for nonunity feedback systems (Section 7.6) Find the steady-state error sensitivity to parameter changes (Section 7.7) Find the steady-state error for systems represented in state space (Section 7.8) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with case studies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to ﬁnd the preampli ﬁer gain to meet steady-state error performance speci ﬁcations. Given a video laser disc recorder, you will be able to ﬁnd the gain required to permit the system to record on a warped disc.7 335WEBC07 10/28/2014 17:50:55 7.1 Introduction In Chapter 1, we saw that control systems analysis and design focus on three speci ﬁcations: (1) transient response, (2) stability, and (3) steady-state errors, taking into account the robustness of the design along with economic and social considerations. Elements oftransient analysis were derived in Chapter 4 for ﬁrst- and second-order systems. These concepts are revisited in Chapter 8, where they are extended to higher-order systems.Stability was covered in Chapter 6, where we saw that forced responses were overpoweredby natural responses that increase without bound if the system is unstable. Now we are ready to examine steady-state errors. We de ﬁne the errors and derive methods of controlling them. As we progress, we ﬁnd that control system design entails trade-offs between desired transient response, steady-state error, and the requirement that the system be stable. Deﬁnition and Test Inputs Steady-state error is the difference between the input and the output for a prescribed test input as t®∞. Test inputs used for steady-state error analysis and design are summarized in Table 7.1. In order to explain how these test signals are used, let us assume a position control system, where the output position follows the input commanded position. Step inputs represent constant position and thus are useful in determining the ability of the controlsystem to position itself with respect to a stationary target, such as a satellite in geostationaryorbit (see Figure 7.1). An antenna position control is an example of a system that can betested for accuracy using step inputs. Ramp inputs represent constant-velocity inputs to a position control system by their linearly increasing amplitude. These waveforms can be used to test a system ’s ability to follow a linearly increasing input or, equivalently, to track a constant-velocity target. For example, aposition control system that tracks a satellite that moves across the sky at a constant angularvelocity, as shown in Figure 7.1, would be tested with a ramp input to evaluate the steady-stateerror between the satellite ’s angular position and that of the control system. TABLE 7.1 Test waveforms for evaluating steady-state errors of position control systems Waveform Name Physical interpretation Time function Laplace transform r(t) tStep Constant position 1 1 s r(t) tRamp Constant velocity t 1 s2 r(t) tParabola Constant acceleration 1 2t2 1 s3336 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:50:55 Finally, parabolas, whose second derivati ves are constant, represent constant- acceleration inputs to position control systems and can be used to represent accelerating targets, such as the missile in Figure 7.1, to d etermine the steady-state error performance. Application to Stable Systems Since we are concerned with the difference between the input and the output of a feedbackcontrol system after the steady state has been reached, our discussion is limited to stablesystems, where the natural response approaches zero as t® ∞. Unstable systems represent loss of control in the steady state and are not acceptable for use at all. The expressions wederive to calculate the steady-state error can be applied erroneously to an unstable system.Thus, the engineer must check the system for stability while performing steady-state error analysis and design. However, in order to focus on the topic, we assume that all the systems in examples and problems in this chapter are stable. For practice, you may want to test someof the systems for stability. Evaluating Steady-State Errors Let us examine the concept of steady-state errors. In Figure 7.2( a) a step input and two possible outputs are shown. Output 1 has zero steady-state error, and Output 2 has a ﬁnite steady-state error, e2∞ . A similar example is shown in Figure 7.2( b), where a ramp input is compared with Output 1, which has zero steady-state error, and Output 2, which has a ﬁnite steady-state error, e2∞ . Errors are measured vertically between the Input and Output 2 after the transients have died down. For the ramp input another possibility exists. If theoutput ’s slope is different from that of the input, then Output 3, shown in Figure 7.2( b), results. Here the steady-state error is in ﬁnite as measured vertically between the Input and Output 3 after the transients have died down, and tapproaches in ﬁnity. Let us now look at the error from the perspective of the most general block diagram. Since the error is the difference between the input and the output of a system, we assume a closed-loop transfer function, T(s), and form the error, E(s), by taking the difference between the input and the output, as shown in Figure 7.3( a). Here we are interested in the steady-state, or ﬁnal, value of e(t). For unity feedback systems, E(s) appears as shown in Figure 7.3(b ). In this chapter, we study and derive expressions for the steady-state error for unity feedback systems ﬁrst and then expand to nonunity feedback systems.Tracking systemSatellite orbiting at constant velocity Accelerating missileSatellite in geostationary orbit FIGURE 7.1 Test inputs for steady-state error analysis and design vary with target type7.1 Introduction 337WEBC07 10/28/2014 17:50:55 Before we begin our study of steady-state errors for unity feedback systems, let us look at the sources of the errors with which we deal. Sources of Steady-State Error Many steady-state errors in control syst ems arise from nonlinear sources, such as backlash in gears or a motor that will not move unless the input voltage exceeds athreshold. Nonlinear behavior as a source of st eady-state errors, although a viable topic for study is beyond the scope of a text on linear control systems. The steady-state errors we study here are errors that arise from the conﬁ guration of the system itself and the type of applied input. For example, look at the system of Figure 7.4( a), where R(s) is the input, C(s)i s the output, and Es  Rs    Cs is the error. Consider a step input. In the steady state, ifc(t)e q u a l sr (t),e(t) will be zero. But with a pure gain, K, the error, e(t), cannot be zero ifc(t)i st ob eﬁ nite and nonzero. Thus, by virtue of the con ﬁguration of the system (a pure gain of Kin the forward path), an error must exist. If we call c steady-state theOutput 1 Output 2Inputc(t)e2(∞) Output 1e2(∞) Output 3(a) (b)c(t) Time TimeOutput 2 Input FIGURE 7.2 Steady-state error: a. step input; b. ramp input R(s)T(s)C(s) E(s)+– R(s)G(s)E(s) C(s) + – (b) (a)FIGURE 7.3 Closed-loop control system error: a.general representation; b.representation for unity feedback systems338 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:50:56 steady-state value of the output and esteady-state the steady-state value of the error, then csteady-state Kesteady-state ,o r esteady-state 1 Kcsteady-state (7.1) Thus, the larger the value of K, the smaller the value of esteady-state would have to be to yield a similar value of csteady-state . The conclusion we can draw is that with a pure gain in the forward path, there will always be a steady-state error for a step input. This error diminishes as the value of Kincreases. If the forward-path gain is replaced by an integrator, as shown in Figure 7.4( b), there will be zero error in the steady state for a step input. The reasoning is as follows: As c(t) increases, e(t) will decrease, since et  rt   ct . This decrease will continue until there is zero error, but there will still be a value for c(t) since an integrator can have a constant output without any input. For example, a motor can be represented simply as an integrator. Avoltage applied to the motor will cause rotation. When the applied voltage is removed, the motor will stop and remain at its present output position. Since it does not return to its initial position, we have an angular displacement output without an input to the motor. Therefore, asystem similar to Figure 7.4( b), which uses a motor in the forward path, can have zero steady-state error for a step input. We have examined two cases qualitatively to show how a system can be expected to exhibit various steady-state error characteristics, depending upon the system con ﬁguration. We now formalize the concepts and derive the relationships between the steady-state errorsand the system con ﬁguration generating these errors. 7.2 Steady-State Error for Unity Feedback Systems Steady-state error can be calculated from a system ’s closed-loop transfer function, T(s), or the open-loop transfer function, G(s), for unity feedback systems. We begin by deriving the system ’s steady-state error in terms of the closed-loop transfer function, T(s), in order to introduce the subject and the de ﬁnitions. Next we obtain insight into the factors affecting steady-state error by using the open-loop transfer function, G(s), in unity feedback systems for our calculations. Later in the chapter we generalize this discussion to nonunity feedback systems. Steady-State Error in Terms of T(s) Consider Figure 7.3( a). To ﬁndE(s), the error between the input, R(s), and the output, C(s), we write Es  Rs    Cs  (7.2) But Cs  Rs Ts  (7.3) Substituting Eq. (7.3) into Eq. (7.2), simplifying, and solving for E(s) yields Es  Rs  1 Ts   (7.4)+ –R(s) E(s) C(s) K+ –R(s) E(s) C(s) K s (a)( b)FIGURE 7.4 System with a.ﬁnite steady-state error for a step input; b.zero steady-state error for step input7.2 Steady-State Error for Unity Feedback Systems 339WEBC07 10/28/2014 17:50:57 Although Eq. (7.4) allows us to solve for e(t) at any time, t, we are interested in the ﬁnal value of the error, e∞ . Applying the ﬁnal value theorem,1which allows us to use the ﬁnal value of e(t) without taking the inverse Laplace transform of E(s), and then letting t approach in ﬁnity, we obtain e∞   lim t®∞et  lim s®0sE s  (7.5)2 Substituting Eq. (7.4) into Eq. (7.5) yields e∞   lim s®0sR s  1 Ts   (7.6) Let us look at an example. Steady-State Error in Terms of G(s) Many times we have the system con ﬁgured as a unity feedback system with a forward transfer function, G(s). Although we can ﬁnd the closed-loop transfer function, T(s), andExample 7.1 Steady-State Error in Terms of T(s) Steady-State Error in Terms of T(s) PROBLEM: Find the steady-state error for the system of Figure 7.3( a)i fTs  5=s27s10/C0/C1 and the input is a unit step. SOLUTION: From the problem statement, Rs  1=sand Ts  5=s27s10/C0/C1 . Substituting into Eq. (7.4) yields Es s27s5 ss27s10 (7.7) Since T(s) is stable and, subsequently, E(s) does not have right –half-plane poles or jω poles other than at the origin, we can apply the ﬁnal value theorem. Substituting Eq. (7.7) into Eq. (7.5) gives e∞   1=2. 1Theﬁnal value theorem is derived from the Laplace transform of the derivative. Thus, ℒ_ft  Z∞ 0 _ft e stdtsF s  f0   As s®0; Z∞ 0 _ft dtf∞    f0    lim s®0sF s    f0   or f∞   lim s®0sF s  Forﬁnite steady-state errors, the ﬁnal value theorem is valid only if F(s) has poles only in the left half-plane and, at most, one pole at the origin. However, correct results that yield steady-state errors that are in ﬁnite can be obtained if F(s) has more than one pole at the origin (see D’Azzo and Houpis ,1988 ). IfF(s) has poles in the right half-plane or poles on the imaginary axis other than at the origin, the ﬁnal value theorem is invalid. 2Valid only if (1) E(s) has poles only in the left half-plane and at the origin, and (2) the closed-loop transfer function, T(s), is stable. Notice that by using Eq. (7.5), numerical results can be obtained for unstable systems. These results, however, are meaningless.340 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:50:58 then proceed as in the previous subsection, we ﬁnd more insight for analysis and design by expressing the steady-state error in terms of G(s) rather than T(s). Consider the feedback control system shown in Figure 7.3( b). Since the feedback, H(s), equals 1, the system has unity feedback. The implication is that E(s) is actually the error between the input, R(s), and the output, C(s). Thus, if we solve for E(s), we will have an expression for the error. We will then apply the ﬁnal value theorem, Item 11 in Table 2.2, to evaluate the steady-state error. Writing E(s) from Figure 7.3( b), we obtain Es  Rs    Cs  (7.8) But Cs  Es Gs  (7.9) Finally, substituting Eq. (7.9) into Eq. (7.8) and solving for E(s) yields Es Rs  1Gs (7.10) We now apply the ﬁnal value theorem, Eq. (7.5). At this point in a numerical calculation, we must check to see whether the closed-loop system is stable, using, for example, the Routh-Hurwitz criterion. For now, though, assume that the closed-loop systemis stable and substitute Eq. (7.10) into Eq. (7.5), obtaining e∞   lim s®0sR s  1Gs (7.11) Equation (7.11) allows us to calculate the steady-state error, e∞ , given the input, R(s), and the system, G(s). We now substitute several inputs for R(s) and then draw conclusions about the relationships that exist between the open-loop system, G(s), and the nature of the steady-state error, e∞ . The three test signals we use to establish speci ﬁcations for a control system ’s steady-state error characteristics are shown in Table 7.1. Let us take each input and evaluateits effect on the steady-state error by using Eq. (7.11). Step Input. Using Eq. (7.11) with Rs  1=s,w e ﬁnd e∞   estep∞   lim s®0s1=s  1Gs 1 1lim s®0Gs (7.12) The term lim s®0Gs  is the dc gain of the forward transfer function, since s, the frequency variable, is approaching zero. In order to have zero steady-state error, lim s®0Gs ∞ (7.13) Hence, to satisfy Eq. (7.13), G(s) must take on the following form: Gs sz1  sz2  ∙∙∙ snsp1  sp2  ∙∙∙(7.14)7.2 Steady-State Error for Unity Feedback Systems 341WEBC07 10/28/2014 17:50:58 For the limit to be in ﬁnite, the denominator must be equal to zero as sgoes to zero. Thus, n1; that is, at least one pole must be at the origin. Since division by sin the frequency domain is integration in the time domain (see Table 2.2, Item 10), we are also saying that at least one pure integration must be present in the forward path. The steady-stateresponse for this case of zero steady-state error is similar to that shown in Figure 7.2( a), Output 1. If there are no integrations, then n0. Using Eq. (7.14), we have lim s®0Gs z1z2∙∙∙ p1p2∙∙∙(7.15) which is ﬁnite and yields a ﬁnite error from Eq. (7.12). Figure 7.2( a), Output 2, is an example of this case of ﬁnite steady-state error. In summary, for a step input to a unity feedback system, the steady-state error will be zero if there is at least one pure integration in the forward path. If there are no integrations,then there will be a nonzero ﬁnite error. This result is comparable to our qualitative discussion in Section 7.1, where we found that a pure gain yields a constant steady-stateerror for a step input, but an integrator yields zero error for the same type of input. We nowrepeat the development for a ramp input. Ramp Input. Using Eq. (7.11), with Rs  1=s2, we obtain e∞   eramp∞   lim s®0s1=s2/C0/C1 1Gs lim s®01 ssG s 1 lim s®0sG s (7.16) To have zero steady-state error for a ramp input, we must have lim s®0sG s ∞ (7.17) To satisfy Eq. (7.17), G(s) must take the same form as Eq. (7.14), except that n2. In other words, there must be at least two integrations in the forward path. An example ofzero steady-state error for a ramp input is shown in Figure 7.2( b), Output 1. If only one integration exists in the forward path, then, assuming Eq. (7.14), lim s®0sG s z1z2∙∙∙ p1p2∙∙∙(7.18) which is ﬁnite rather than in ﬁnite. Using Eq. (7.16), we ﬁnd that this con ﬁguration leads to a constant error, as shown in Figure 7.2( b), Output 2. If there are no integrations in the forward path, then lim s®0sG s  0 (7.19) and the steady-state error would be in ﬁnite and lead to diverging ramps, as shown in Figure 7.2( b), Output 3. Finally, we repeat the development for a parabolic input. Parabolic Input. Using Eq. (7.11), with Rs  1=s3, we obtain e∞   eparabola ∞   lim s®0s1=s3/C0/C1 1Gs lim s®01 s2s2Gs 1 lim s®0s2Gs (7.20)342 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:50:59 In order to have zero steady-state error for a parabolic input, we must have lim s®0s2Gs ∞ (7.21) To satisfy Eq. (7.21), G(s) must take on the same form as Eq. (7.14), except that n3. In other words, there must be at least three integrations in the forward path. If there are only two integrations in the forward path, then lim s®0s2Gs z1z2∙∙∙ p1p2∙∙∙(7.22) isﬁnite rather than in ﬁnite. Using Eq. (7.20), we ﬁnd that this con ﬁguration leads to a constant error. If there is only one or less integrations in the forward path, then lim s®0s2Gs  0 (7.23) and the steady-state error is in ﬁnite. Two examples demonstrate these concepts. Example 7.2 Steady-State Errors for Systems with No IntegrationsSteady-State Errors for Systems with No Integrations PROBLEM: Find the steady-state errors for inputs of 5 u(t), 5tu(t), and 5 t2u(t) to the system shown in Figure 7.5. The function u(t) is the unit step. SOLUTION: First we verify that the closed-loop system is indeed stable. For this example we leave out the details. Next, for the input 5 u(t), whose Laplace transform is 5 =s, the steady-state error will be ﬁve times as large as that given by Eq. (7.12), or e∞   estep ∞5 1lim s®0G s5 1205 21(7.24) which implies a response similar to Output 2 of Figure 7.2( a). For the input 5 tu(t), whose Laplace transform is 5/ s2, the steady-state error will be ﬁve times as large as that given by Eq. (7.16), or e ∞eramp ∞5 lim s®0sG s5 0∞ (7.25) which implies a response similar to Output 3 of Figure 7.2( b). For the input 5t2u(t), whose Laplace transform is 10 =s3, the steady-state error will be 10 times as large as that given by Eq. (7.20), or e ∞eparabola ∞10 lim s®0s2G s10 0∞ (7.26)+ –R(s) C(s) 120(s + 2) (s + 3)(s + 4)E(s) FIGURE 7.5 Feedback control system for Example 7.27.2 Steady-State Error for Unity Feedback Systems 343WEBC07 10/28/2014 17:51:0 Example 7.3 Steady-State Errors for Systems with One IntegrationSteady-State Errors for Systems with One Integration PROBLEM: Find the steady-state errors for inputs of 5u (t), 5tu(t), and 5 t2u(t) to the system shown in Figure 7.6. The function u(t) is the unit step. SOLUTION: First verify that the closed-loop system is indeed stable. For this example we leave out the details. Next note that since there is an integration in the forward path, the steady-state errors for some of the input waveforms will be less than those found inExample 7.2. For the input 5 u(t), whose Laplace transform is 5 =s, the steady-state error will be ﬁve times as large as that given by Eq. (7.12), or e ∞estep ∞5 1lim s®0G s5 ∞0 (7.27) which implies a response similar to Output 1 of Figure 7.2( a). Notice that the integration in the forward path yields zero error for a step input, rather than the ﬁnite error found in Example 7.2. For the input 5 tu(t), whose Laplace transform is 5 =s2, the steady-state error will be ﬁve times as large as that given by Eq. (7.16), or e ∞eramp ∞5 lim s®0sG s5 1001 20(7.28) which implies a response similar to Output 2 of Figure 7.2( b). Notice that the integration in the forward path yields a ﬁnite error for a ramp input, rather than the in ﬁnite error found in Example 7.2. For the input, 5 t2u(t), whose Laplace transform is 10 =s3, the steady-state error will be 10 times as large as that given by Eq. (7.20), or e ∞eparabola ∞10 lim s®0s2G s10 0∞ (7.29) Notice that the integration in the forward path does not yield any improvement in steady-state error over that found in Example 7.2 for a parabolic input.+ –R(s) C(s) 100(s + 2)(s + 6) s(s + 3)(s + 4)E(s) FIGURE 7.6 Feedback control system for Example 7.3 Skill-Assessment Exercise 7.1 PROBLEM: A unity feedback system has the following forward transfer function: Gs 10 s20 s30 s s25 s35 a.Find the steady-state error for the following inputs: 15 u(t), 15tu(t), and 15 t2u(t). b.Repeat for Gs 10 s20 s30 s2 s25 s35 s50 ANSWERS: a.The closed-loop system is stable. For 15 u(t),estep ∞0; for 15tu(t),eramp ∞2:1875; for 15( t2)u(t),eparabola ∞∞: b.The closed-loop system is unstable. Calculations cannot be made. The complete solution is at www.wiley.com/college/nise .344 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:0 7.3 Static Error Constants and System Type We continue our focus on unity negative feedback systems and de ﬁne parameters that we can use as steady-state error performance speci ﬁcations. These de ﬁnitions parallel our deﬁning damping ratio, natural frequency, settling time, percent overshoot, and so on as performance speci ﬁcations for the transient response. The steady-state error performance speciﬁcations are called static error constants . Let us see how they are de ﬁned, how to calculate them, and, in the next section, how to use them for design. Static Error Constants In the previous section we derived the following relationships for steady-state error. For a step input, u(t), e∞   estep∞  1 1lim s®0Gs (7.30) For a ramp input, tu(t), e∞   eramp∞  1 lim s®0sG s (7.31) For a parabolic input,1 2t2ut . e∞   eparabola ∞  1 lim s®0s2Gs (7.32) The three terms in the denominator that are taken to the limit determine the steady-state error. We call these limits static error constants . Individually, their names are position constant, K p, where Kplim s®0Gs  (7.33) velocity constant, K v, where Kvlim s®0sG s  (7.34) acceleration constant, K a,where Kalim s®0s2Gs  (7.35) As we have seen, these quantities, depending upon the form of G(s), can assume values of zero, ﬁnite constant, or in ﬁnity. Since the static error constant appears in the denominator of the steady-state error. Eqs. (7.30) through (7.32), the value of the steady-state error decreases as the static error constant increases.7.3 Static Error Constants and System Type 345WEBC07 10/28/2014 17:51:2 In Section 7.2, we evaluated the steady-state error by using the ﬁnal value theorem. An alternate method makes use of the static error constants. A few examples follow: Example 7.4 Steady-State Error via Static Error ConstantsSteady-State Error via Static Error Constants PROBLEM: For each system of Figure 7.7, evaluate the static error constants and ﬁnd the expected error for the standard step, ramp, and parabolic inputs. SOLUTION: First verify that all closed-loop systems shown are indeed stable. For this example we leave out the details. Next, for Figure 7.7( a), Kplim s®0Gs 50025 810125:208 (7.36) Kvlim s®0sG s0 (7.37) Kalim s®0s2G s0 (7.38) Thus, for a step input, e ∞1 1Kp0:161 (7.39) For a ramp input, e ∞1 Kv∞ (7.40) For a parabolic input, e ∞1 Ka∞ (7.41) Now, for Figure 7.7( b), Kplim s®0G s∞ (7.42)+ –R(s) C(s) 500(s + 2)(s + 5) (s + 8)(s + 10)(s + 12) (a) + –R(s) C(s) 500(s + 2)(s + 5)(s + 6) s(s + 8)(s + 10)(s + 12) (b) + –R(s) C(s) 500(s + 2)(s + 4)(s + 5)(s + 6)(s + 7) s2(s + 8)(s + 10)(s + 12) (c)E(s) E(s) E(s) FIGURE 7.7 Feedback control systems for Example 7.4346 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:3 System Type Let us continue to focus on a unity negative feedback system. The values of the static error constants, again, depend upon the form of G(s), especially the number of pure integrations in the forward path. Since steady-state errors are dependent upon the number of integrations in the forward path, we give a name to this system attribute. Given the system inKvlim s®0sG s 500256 8101231:25 (7.43) and Kalim s®0s2G s0 (7.44) Thus, for a step input, e ∞1 1Kp0 (7.45) For a ramp input, e ∞1 Kv1 31:250:032 (7.46) For a parabolic input, e ∞1 Ka∞ (7.47) Finally, for Figure 7.7( c), Kplim s®0G s∞ (7.48) Kvlim s®0sG s∞ (7.49) and Kalim s®0s2Gs 50024567 81012875 (7.50) Thus, for a step input, e ∞1 1Kp0 (7.51) For a ramp input, e ∞1 Kv0 (7.52) For a parabolic input, e ∞1 Ka1 8751:1410 3(7.53) Students who are using MATLAB should now run ch7p1 in Appendix B. You will learn how to test the system for stability, evaluatestatic error constants, and calculate steady-state error usingMATLAB. This exercise applies MATLAB to solve Example 7.4 withSystem (b) .7.3 Static Error Constants and System Type 347WEBC07 10/28/2014 17:51:7 Figure 7.8, we de ﬁnesystem type to be the value of nin the denominator or, equivalently, the number of pure integrations in the forward path. Therefore, a system with n0 is a Type 0 system. If n1o rn2, the corresponding system is a Type 1 or Type 2 system, respectively. Table 7.2 ties together the concepts of steady-state error, static error constants, and system type. The table shows the static errorconstants and the steady-state errors as functions of input waveformand system type. In this section, we de ﬁned steady-state errors, static error constants, and system type. Now the speci ﬁcations for a control system ’s steady-state errors will be formulated, followed by some examples. 7.4 Steady-State Error Speci ﬁcations Static error constants can be used to specify the steady-state error characteristics of controlsystems, such as that shown in Figure 7.9. Just as damping ratio, ζ, settling time, T s, peak time, Tp, and percent overshoot, % OS, are used as speci ﬁcations for a control system ’s transient response, so the position constant, Kp, velocity constant, Kv, and acceleration constant, Ka, canSkill-Assessment Exercise 7.2 PROBLEM: A unity feedback system has the following forward transfer function: Gs 1000 s8 s7 s9 a.Evaluate system type, Kp,Kv, and Ka. b.Use your answers to a.toﬁnd the steady-state errors for the standard step, ramp, and parabolic inputs. ANSWERS: a.The closed-loop system is stable. System type =Type 0. Kp127, Kv0, and Ka0. b.estep ∞7:810 3;eramp ∞∞;andeparabola ∞   ∞ The complete solution is at www.wiley.com/college/nise .TryIt 7.1 Use MATLAB, the Control System Toolbox, and thefollowing statements to ﬁndK p, estep∞ , and the closed-loop poles to check for stability for thesystem of Skill-AssessmentExercise 7.2. numg=1000* [1 8] ; deng=poly( [  7 9] ) ; G=tf (numg,deng) ; Kp=dcgain (G) estep =1/ (1+Kp) T=feedback(G,1) ; poles =pole(T)+ –R(s) C(s) K(s + z1)(s + z2) ... sn(s + p1)(s + p2) ...E(s) FIGURE 7.8 Feedback control system for de ﬁning system type TABLE 7.2 Relationships between input, system type, static error constants, and steady-state errors Type 0 Type 1 Type 2 InputSteady-state error formulaStatic error constant ErrorStatic error constant ErrorStatic error constant Error Step, u(t)1 1KpKpConstant1 1KpKp∞ 0 Kp∞ 0 Ramp, tu(t)1 KvKv0 ∞ KvConstant1 KvKv∞ 0 Parabola,1 2t2ut 1 KaKa0 ∞ Ka0 ∞ KaConstant1 Ka348 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:7 be used as speci ﬁcations for a control system ’s steady-state errors. We will soon see that a wealth of information is contained within the speci ﬁcation of a static error constant. For example, if a control system has the speci ﬁcation Kv1000, we can draw several conclusions: 1.The system is stable. 2.The system is of Type 1, since only Type 1 systems have Kv’s that are ﬁnite constants. Recall that Kv0 for Type 0 systems, whereas Kv∞for Type 2 systems. 3.A ramp input is the test signal. Since Kvis speciﬁ ed as a ﬁnite constant, and the steady-state error for a ramp input is inversely proportional to Kv,w ek n o wt h et e s t input is a ramp. 4.The steady-state error between the input ramp and the output ramp is 1 =Kvper unit of input slope. Let us look at two examples that demonstrate analysis and design using static error constants. FIGURE 7.9 A robot used in the manufacturing of semiconductor random-accessmemories (RAMs) similar tothose in personal computers. Steady-state error is an important design considerationfor assembly-line robots Example 7.5 Interpreting the Steady-State Error Speci ﬁcation Interpreting the Steady-State Error Speci ﬁcation PROBLEM: What information is contained in the speci ﬁcation Kp1000? SOLUTION: The system is stable. The system is Type 0, since only a Type 0 system has aﬁnite Kp. Type 1 and Type 2 systems have Kp∞. The input test signal is a step, since Kpis speci ﬁed. Finally, the error per unit step is e ∞1 1Kp1 110001 1001(7.54)7.4 Steady-State Error Speci ﬁcations 349WEBC07 10/28/2014 17:51:8 Example 7.6 Gain Design to Meet a Steady-State Error Speci ﬁcation Gain Design to Meet a Steady-State Error Speci ﬁcation PROBLEM: Given the control system in Figure 7.10, ﬁnd the value of Kso that there is 10% error in the steady state. SOLUTION: Since the system is Type 1, the error stated in the problem must apply to a ramp input; only a ramp yields a ﬁnite error in a Type 1 system. Thus, e ∞1 Kv0:1( 7.55) Therefore, Kv10lim s®0sG s K5 678(7.56) which yields K672 (7.57) Applying the Routh-Hurwitz criterion, we see that the system is stable at this gain. Although this gain meets the criteria for steady-state error and stability, it may not yield a desirable transient response. In Chapter 9 we will design feedback control systems to meet all three speci ﬁcations. Students who are using MATLAB should now run ch7p2 in Appendix B. You will learn how to ﬁnd the gain to meet a steady-state error speci ﬁcation using MATLAB. This exercise solves Example 7.6 using MATLAB. Skill-Assessment Exercise 7.3 PROBLEM: A unity feedback system has the following forward transfer function: G sK s12 s14 s18 Find the value of Kto yield a 10% error in the steady state. ANSWER: K189 The complete solution is at www.wiley.com/college/nise .+ –R(s) C(s) K(s + 5) s(s + 6)(s + 7)(s + 8)E(s) FIGURE 7.10 Feedback control system for Example 7.6 TryIt 7.2 Use MATLAB, the Control System Toolbox, and the following statements to solveSkill-Assessment Exercise 7.3and check the resulting system for stability. numg=[1 12] ; deng=poly( [  14 18] ) ; G=tf(numg,deng) ; Kpdk=dcgain(G) ; estep =0.1; K=(1/estep-1) /Kpdk T=feedback(G,1) ; poles =pole(T)350 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:9 This example and exercise complete our discussion of unity feedback systems. In the remaining sections, we will deal with the steady-state errors for disturbances and the steady-state errors for feedback control systems in which the feedback is not unity. 7.5 Steady-State Error for Disturbances Feedback control systems are used to compensate for distur- bances or unwanted inputs that enter a system. The advantage of using feedback is that regardless of these disturbances,the system can be designed to follow the input with small or zero error, as we now demonstrate. Figure 7.11 shows afeedback control system with a disturbance, D(s), injected between the controller and the plant. We now re-derive theexpression for steady-state error with the disturbance included. The transform of the output is given by Cs  Es G 1s G2s   Ds G2s  (7.58) But Cs  Rs    Es  (7.59) Substituting Eq. (7.59) into Eq. (7.58) and solving for E(s), we obtain Es 1 1G1s G2s Rs   G2s  1G1s G2s Ds  (7.60) where we can think of 1 =1G1s G2s  as a transfer function relating E(s)t oR(s) and  G2s =1G1s G2s  as a transfer function relating E(s)t oD(s). Toﬁnd the steady-state value of the error, we apply the ﬁnal value theorem3to Eq. (7.60) and obtain e∞   lim s®0sE s  lim s®0s 1G1s G2s Rs    lim s®0sG2s  1G1s G2s Ds  eR∞   eD∞ (7.61) where eR∞   lim s®0s 1G1s G2s Rs  and eD∞     lim s®0sG2s  1G1s G2s Ds  Theﬁrst term, eR∞ , is the steady-state error due to R(s), which we have already obtained. The second term, eD∞ , is the steady-state error due to the disturbance. Let us explore the conditions on eD∞ that must exist to reduce the error due to the disturbance.+ –R(s) C(s)G1(s)E(s)Controller ++PlantD(s) G2(s) FIGURE 7.11 Feedback control system showing disturbance 3Remember that the ﬁnal value theorem can be applied only if the system is stable, with the roots of 1G1s G2s  in the left– half –plane.7.5 Steady-State Error for Disturbances 351WEBC07 10/28/2014 17:51:9 At this point, we must make some assumptions about D(s), the controller, and the plant. First we assume a step disturbance, Ds  1=s. Substituting this value into the second term of Eq. (7.61), eD∞ , the steady-state error component due to a step disturbance is found to be eD∞    1 lim s®01 G2s lim s®0G1s (7.62) This equation shows that the steady-state error produced by a step disturbance can be reduced by increasing the dc gain of G1(s) or decreasing the dc gain of G2(s). This concept is shown in Figure 7.12, where the system of Figure 7.11 has been rearranged so that the disturbance, D(s), is depicted as the input and the error, E(s), as the output, with R(s) set equal to zero. If we want to minimize the steady-state value of E(s), shown as the output in Figure 7.12, we must either increase the dc gain of G1(s) so that a lower value of E(s)w i l l be fed back to match the steady-state value of D(s), or decrease the dc value of G2(s), which then yields a smaller value of e∞ as predicted by the feedback formula. Let us look at an example and calculate the numerical value of the steady-state error that res ults from a disturbance. Example 7.7 Steady-State Error Due to Step DisturbanceSteady-State Error Due to Step Disturbance PROBLEM: Find the steady-state error component due to a step disturbance for the system of Figure 7.13. SOLUTION: The system is stable. Using Figure 7.12 and Eq. (7.62), we ﬁnd eD ∞ 1 lim s®01 G2 slim s®0G1s  1 01000 1 1000(7.63) The result shows that the steady-state error produced by the step disturbance is inversely proportional to the dc gain of G1(s) .T h ed cg a i no f G2(s)i si n ﬁnite in this example.Virtual Experiment 7.1 Steady-State Error with Disturbance Put theory into practice ﬁnding the steady-state error of the Quanser Rotary Servo whensubject to an input or adisturbance by simulating it in LabVIEW. This analysis becomes important when developingcontrollers for bottle labeling machines or robot joint control. Virtual experiments are found on Learning Space.+ –D(s)G2(s) ControllerPlant G1(s)–E(s) FIGURE 7.12 Figure 7.11 system rearranged to show disturbance as input and error as output, with R s0 + –R(s) C(s)1000Controller E(s)+D(s) + 1 s(s + 25)G1(s) PlantG2(s) FIGURE 7.13 Feedback control system for Example 7.7352 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:10 7.6 Steady-State Error for Nonunity Feedback Systems Control systems often do not have unity feedback because of the compensation used to improve performance or because of the physical model for the system. The feedback pathcan be a pure gain other than unity or have some dynamic representation. A general feedback system, showing the input transducer, G 1(s), controller and plant, G2(s), and feedback, H1(s), is shown in Figure 7.15( a). Pushing the input transducer to the right past the summing junction yields the general nonunity feedback system shown inSkill-Assessment Exercise 7.4 PROBLEM: Evaluate the steady-state error component due to a step disturbance for thesystem of Figure 7.14. ANSWER: e D ∞  9:9810 4 The complete solution is at www.wiley.com/college/nise .–1000s+2 s+4C(s) E(s) + R(s) ++D(s) FIGURE 7.14 System for Skill-Assessment Exercise 7.4 R(s) –+ Ea(s)G(s) –+ –1 (b)( c) R(s) –+ Ea(s) (d)R(s) –+ (e)E(s) 1 + G(s)H(s) – G(s)C(s) H(s)R(s) Ea(s)G(s)C(s) H(s) G(s) C(s) G(s) H(s) – 1C(s) ––––+ Ea1(s)G2(s) (a)C(s) H1(s)R(s) G1(s) FIGURE 7.15 Forming an equivalent unity feedback system from a general nonunity feedback system7.6 Steady-State Error for Nonunity Feedback Systems 353WEBC07 10/28/2014 17:51:11 Figure 7.15( b), where Gs  G1s G2s andHs  H1s =G1s . Notice that unlike a unity feedback system, where Hs  1, the error is not the difference between the input and the output. For this case we call the sign al at the output of the summing junction the actuating signal, E a(s). Ifr(t)a n d c(t) have the same units, we can ﬁnd the steady-state error, e∞   r∞    c∞ .T h eﬁ rst step is to show explicitly Es  Rs    Cs on the block diagram. Take the nonunity feedback control system shown in Figure 7.15( b)a n df o r ma unity feedback system by adding and subtr acting unity feedback paths, as shown in Figure 7.15( c). This step requires that input and output units be the same. Next combine H(s) with the negative unity feedback, as shown in Figure 7.15( d). Finally, combine the feedback system consisting of G(s)a n d Hs    1, leaving an equivalent forward path and a unity feedback, as shown in Figure 7.15( e). Notice that the ﬁnalﬁgure shows Es  Rs    Cs explicitly. The following example summarizes the concepts of steady-state error, system type, and static error constants for nonunity feedback systems. Example 7.8 Steady-State Error for Nonunity Feedback SystemsSteady-State Error for Nonunity Feedback Systems PROBLEM: For the system shown in Figure 7.16, ﬁnd the system type, the appropriate error constant associated with the system type, and the steady-state error for a unit step input. Assume input and output unitsare the same. SOLUTION: After determining that the system is indeed stable, one may impulsively declare the system to be Type 1. This may not be the case, since there is a nonunity feedback element, and the plant ’s actuating signal is not the difference between the input and the output. Theﬁrst step in solving the problem is to convert the system of Figure 7.16 into an equivalent unity feedback system. Using the equivalent forward transfer function of Figure 7.15(e ) along with Gs 100 ss10 (7.64) and Hs 1 s5 (7.65) weﬁnd Ges Gs  1Gs Hs    Gs 100s5  s315s2 50s 400(7.66) Thus, the system is Type 0, since there are no pure integrations in Eq. (7.66). The appropriate static error constant is then Kp, whose value is Kplim s®0Ges 1005  400 5 4(7.67) The steady-state error, e∞ ,i s e∞  1 1Kp1 1 5=4  4 (7.68) The negative value for steady-state error implies that the output step is larger than the input step.R(s) C(s) –+ Ea(s) 1 (s + 5)100 s(s + 10) FIGURE 7.16 Nonunity feedback control system for Example 7.8 TryIt 7.3 Use MATLAB, the Control System Toolbox, and thefollowing statements to ﬁnd G e(s) in Example 7.8. G=zpk( [] , [0  10] ,100) ; H=zpk( [] ,  5,1) ; Ge=feedback... (G,(H-1) ) ; 'Ge(s) ' Ge=tf(Ge) T=feedback (Ge,1) ; 'Poles of T(s) 'pole(T)354 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:12 To continue our discussion of steady-state error for systems with nonunity feedback, let us look at the general system of Figure 7.17, which has both a disturbance and nonunity feedback. We will derive ageneral equation for the steady-state error and then determine theparameters of the system in order to drive the error to zero for stepinputs and step disturbances. 4 The steady-state error for this system, e∞   r∞    c∞ ,i s e∞   lim s®0sE s  lim s®0s( 1 G1s G2s  1G1s G2s Hs /C20/C21 Rs   G2s  1G1s G2s Hs Ds /C20/C21) (7.69) Now limiting the discussion to step inputs and step disturbances, where Rs  Ds  1=s, Eq. (7.69) becomes e∞ lim s®0sE s  1 lim s®0G1s G2s   lim s®01G1s G2s Hs  2 435 lim s®0G2s  lim s®01G1s G2s Hs  24358 < :9 = ; (7.70) For zero error, lim s®0G1s G2s   lim s®01G1s G2s Hs  1a n dlim s®0G2s  lim s®01G1s G2s Hs  0 (7.71) The two equations in Eq. (7.71) can always be satis ﬁed if (1) the system is stable, (2) G1(s)i s a Type 1 system, (3) G2(s) is a Type 0 system, and (4) H(s) is a Type 0 system with a dc gain of unity. To conclude this section, we discuss ﬁnding the steady-state value of the actuating signal, Ea1(s), in Figure 7.15( a). For this task there is no restriction that the input and output units be the same, since we are ﬁnding the steady-state difference between signals at the summing junction, which do have the same units.5The steady-state actuating signal for Figure 7.15( a)i s ea1∞   lim s®0sR s G1s  1G2s H1s (7.72) The derivation is left to the student in the problem set at the end of this chapter.R(s) C(s) –G1(s)+ ++D(s) G2(s) H(s) FIGURE 7.17 Nonunity feedback control system with disturbance Example 7.9 Steady-State Actuating Signal for Nonunity Feedback SystemsSteady-State Actuating Signal for NonunityFeedback Systems PROBLEM: Find the steady-state actuating signal for the system of Figure 7.16 for a unit step input. Repeat for a unit ramp input. 4Details of the derivation are included as a problem at the end of this chapter. 5For clarity, steady-state error is the steady-state difference between the input and the output. Steady-state actuating signal is the steady-state difference at the output of the summing junction. In questions asking for steady-state error in problems, examples, and skill-assessment exercises, it will be assumed that input and output units are the same.7.6 Steady-State Error for Nonunity Feedback Systems 355WEBC07 10/28/2014 17:51:13 In this section, we have applied steady-state error analysis to nonunity feedback systems. When nonunity feedback is present, the plant ’s actuating signal is not the actual error or difference between the input and the output. With nonunity feedback we may choose to (1) ﬁnd the steady-state error for systems where the input and output units are the same or (2) ﬁnd the steady-state actuating signal. We also derived a general expression for the steady-state error of a nonunity feedback system with a disturbance. We used this equation to determine the attributes of thesubsystems so that there was zero error for step inputs and step disturbances. Before concluding this chapter, we will discuss a topic that is not only signi ﬁcant for steady-state errors but generally useful throughout the control systems design process. 7.7 Sensitivity During the design process, the engineer may want to consider the extent to which changes insystem parameters affect the behavior of a system. Ideally, parameter changes due to heat orother causes should not appreciably affect a system ’s performance. The degree to whichSOLUTION: Use Eq. (7.72) with R s1=s, a unit step input, G1 s1; G2 s100=s s10, and H1 s1= s5. Also, realize that ea1 ∞ea ∞, since G1 s1. Thus, ea∞   lim s®0s1 s/C18/C19 1100 s s10/C18/C191 s5/C18/C19 0 (7.73) Now use Eq. (7.72) with R s1=s2, a unit ramp input, and obtain ea ∞lim s®0s1 s2/C18/C19 1100 s s10/C18/C191 s5/C18/C19 1 2(7.74) Skill-Assessment Exercise 7.5 PROBLEM: a.Find the steady-state error, e ∞r ∞ c ∞, for a unit step input given the nonunity feedback system of Figure 7.18. Repeat for a unit ramp input. Assume input and output units are the same. b.Find the steady-state actuating signal, ea ∞, for a unit step input given the nonunity feedback system of Figure 7.18. Repeat for a unit ramp input. ANSWERS: a.estep ∞3:84610 2;eramp ∞∞ b.For a unit step input, ea ∞3:84610 2; for a unit ramp input, ea ∞∞ The complete solution is at www.wiley.com/college/nise .–+ Ea(s) C(s) s+11R(s) s+4100 FIGURE 7.18 Nonunity feedback system for Skill-Assessment Exercise 7.5356 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:13 changes in system parameters affect system transfer functions, and hence performance, is called sensitivity . A system with zero sensitivity (that is, changes in the system parameters have no effect on the transfer function) is ideal. The greater the sensitivity, the less desirable the effect of a parameter change. For example, assume the function FK=Ka  .I fK10 and a100, then F0:091. If parameter atriples to 300, then F0:032. We see that a fractional change in parameter aof 300  100  =1002 (a 200% change) yields a change in the function F of 0 :032 0:091  =0:091 0:65 65 %change  . Thus, the function Fhas reduced sensitivity to changes in parameter a. As we proceed, we will see that another advantage of feedback is that in general it affords reduced sensitivity to parameter changes. Based upon the previous discussion, let us formalize a de ﬁnition of sensitivity: Sensitivity is the ratio of the fractional change in the function to the fractional change in the parameter as the fractional change of the parameter approaches zero. That is, SF:Plim ΔP®0Fractional change in the function ;F Fractional change in the parameter ;P lim ΔP®0ΔF=F ΔP=P lim ΔP®0PΔF FΔP which reduces to SF:PP FδF δP(7.75) Let us now apply the de ﬁnition, ﬁrst to a closed-loop transfer function and then to the steady-state error. Example 7.10 Sensitivity of a Closed-Loop Transfer FunctionSensitivity of a Closed-Loop Transfer Function PROBLEM: Given the system of Figure 7.19, calculate the sensitivity of the closed-loop transfer function to changes in the parameter a. How would you reduce the sensitivity? SOLUTION: The closed-loop transfer function is Ts K s2asK(7.76) Using Eq. (7.75), the sensitivity is given by ST:aa TδT δaa K s2asK/C18/C19 Ks s2asK2/C18/C19  as s2asK(7.77) which is, in part, a function of the value of s. For any value of s,however, an increase in K reduces the sensitivity of the closed-loop transfer function to changes in the parameter a.R(s) –+ E(s) K s(s + a)C(s) FIGURE 7.19 Feedback control system for Examples 7.10 and 7.117.7 Sensitivity 357WEBC07 10/28/2014 17:51:15 Example 7.11 Sensitivity of Steady-State Error with Ramp InputSensitivity of Steady-State Error with Ramp Input PROBLEM: For the system of Figure 7.19, ﬁnd the sensitivity of the steady-state error to changes in parameter Kand parameter awith ramp inputs. SOLUTION: The steady-state error for the system is e ∞1 Kva K(7.78) The sensitivity of e ∞to changes in parameter ais Se:aa eδe δaa a=K1 K/C20/C21 1 (7.79) The sensitivity of e ∞to changes in parameter Kis Se:KK eδe δKK a=K a K2/C20/C21  1 (7.80) Thus, changes in either parameter aor parameter Kare directly reﬂ ected in e ∞,a n d there is no reduction or increase in sensitivity. The negative sign in Eq. (7.80) indicates a decrease in e ∞for an increase in K. Both of these results could have been obtained directly from Eq. (7.78) since e ∞is directly proportional to parameter aand inversely proportional to parameter K. Example 7.12 Sensitivity of Steady-State Error with Step InputSensitivity of Steady-State Error with Step Input PROBLEM: Find the sensitivity of the steady-state error to changes in parameter Kand parameter afor the system shown in Figure 7.20 with a step input. SOLUTION: The steady-state error for this Type 0 system is e ∞1 1Kp1 1K abab abK(7.81) The sensitivity of e ∞to changes in parameter ais Se:aa eδe δaa ab abK/C18/C19abK  b ab2 abK 2K abK(7.82) The sensitivity of e ∞to changes in parameter Kis Se:KK eδe δKK ab abK/C18/C19 ab abK2 K abK(7.83) Equations (7.82) and (7.83) show that the sensitivity to changes in parameter Kand parameter ais less than unity for positive aandb. Thus, feedback in this case yields reduced sensitivity to variations in both parameters.R(s) –+ K (s + a)(s + b)E(s) C(s) FIGURE 7.20 Feedback control system for Example 7.12 TryIt 7.4 Use MATLAB, the Symbolic Math Toolbox, and the following statements to ﬁndSe:a in Example 7.12. syms Kabs G=K/ ( (s+a) * (s+b) ) ; Kp=subs(G,s,0) ; e=1/ (1+Kp) ; Sea=(a/e) *diff(e,a) ; Sea=simplify(Sea) ; 'Sea' pretty(Sea)358 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:15 In this section, we deﬁ ned sensitivity and showed that in some cases feedback reduces the sensitivity of a system ’s steady-state error to changes in system parameters. The concept of sensitivity can be applied to other measures of control system performance, as well; it is not limited to the sensitivity of the steady-state error performance. 7.8 Steady-State Error for Systems in State Space Up to this point, we have evaluated the steady-state error for systems modeled as transferfunctions. In this section, we will discuss how to evaluate the steady-state error for systemsrepresented in state space. Two methods for calculating the steady-state error will be covered: (1) analysis via ﬁnal value theorem and (2) analysis via input substitution. We will consider these methods individually. Analysis via Final Value Theorem A single-input, single-output system represented in state space can be analyzed for steady- state error using the ﬁnal value theorem and the closed-loop transfer function, Eq. (3.73), derived in terms of the state-space representation. Consider the closed-loop systemrepresented in state space: _xAxBr (7.84a) yCx (7.84b) The Laplace transform of the error is Es  Rs    Ys  (7.85) But Ys  Rs Ts  (7.86) where T(s) is the closed-loop transfer function. Substituting Eq. (7.86) into (7.85), we obtain Es  Rs  1 Ts   (7.87) Using Eq. (3.73) for T(s), we ﬁnd Es  Rs  1 CsI A   1B (7.88) Applying the ﬁnal value theorem, we have lim s®0sE s  lim s®0sR s  1 CsI A  1B (7.89) Let us apply the result to an example.Skill-Assessment Exercise 7.6 PROBLEM: Find the sensitivity of the steady-state error to changes inKfor the system of Figure 7.21. ANSWER: Se:k 7K 107K The complete solution is at www.wiley.com/college/nise .s2+2s+10K(s+7) –+ E(s) C(s) R(s) FIGURE 7.21 System for Skill-Assessment Exercise 7.67.8 Steady-State Error for Systems in State Space 359WEBC07 10/28/2014 17:51:16 Analysis via Input Substitution Another method for steady-state analysis avoids taking the inverse of sI A  and can be expanded to multiple-input, multiple-output systems; it substitutes the input along with an assumed solution into the state equations ( Hostetter ,1989 ). We will derive the results for unit step and unit ramp inputs. Step Inputs. Given the state Eqs. (7.84), if the input is a unit step where r1, a steady-state solution, xss, for x,i s xssV1 V2 ... Vn2 666643 77775V (7.92) where V iis constant. Also, _xss0 (7.93) Substituting r1, a unit step, along with Eqs. (7.92) and (7.93), into Eqs. (7.84) yields 0AVB (7.94a) yssCV (7.94b) where yssis the steady-state output. Solving for Vyields V A 1B (7.95)Example 7.13 Steady-State Error Using the Final Value TheoremSteady-State Error Using the Final Value Theorem PROBLEM: Evaluate the steady-state error for the system described by Eqs. (7.90) for unit step and unit ramp inputs. Use the ﬁnal value theorem. A 51 0 0 21 20  10 12 435;B0 0 12 435;C 110  (7.90) SOLUTION: Substituting Eqs. (7.90) into (7.89), we obtain e ∞lim s®0sR s 1 s4 s36s213s20/C18/C19 lim s®0sR s s36s212s16 s36s213s20/C18/C19(7.91) For a unit step, R s1=s, and e ∞4=5. For a unit ramp, R s1=s2, and e ∞∞. Notice that the system behaves like a Type 0 system.TryIt 7.5 Use MATLAB, the Symbolic Math Toolbox, and the following statements to ﬁnd the steady-state error for a step input to the system of Example 7.13. syms s A=[ 510 0 21 20 10 1] ; B=[0; 0; 1] ; C=[ 110 ] ; I=[1 0 0 010 001 ] ; E=(1/s) * [1  C*... [ (s*I-A) ^-1] *B] ; %New command:%subs(X,old,new) : %Replace old in...%X(old) with new. error =subs(s*E,s,0)360 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:17 But the steady-state error is the difference between the steady-state input and the steady- state output. The ﬁnal result for the steady-state error for a unit step input into a system represented in state space is e∞   1 yss1 CV1CA 1B (7.96) Ramp Inputs. For unit ramp inputs, rt, a steady-state solution for xis xssV1tW1 V2tW2 ... VntWn2 666643 77775VtW (7.97) where V iandWiare constants. Hence, _xssV1 V2 ... Vn2 666643 77775V (7.98) Substituting rtalong with Eqs. (7.97) and (7.98) into Eqs. (7.84) yields VAVtW   Bt (7.99a) y ssCVtW  (7.99b) In order to balance Eq. (7.99a), we equate the matrix coef ﬁcients of t,AV B,o r V A 1B (7.100) Equating constant terms in Eq. (7.99a), we have AW V,o r WA 1V (7.101) Substituting Eqs. (7.100) and (7.101) into (7.99b) yields yssC A 1BtA 1 A 1B/C0/C1   CA 1BtA 1/C0/C1 2B (7.102) The steady-state error is therefore e∞   lim t®∞t yss   lim t®∞1CA 1B/C0/C1 tCA 1/C0/C1 2B (7.103) Notice that in order to use this method, A 1must exist. That is, det A60. We now demonstrate the use of Eqs. (7.96) and (7.103) to ﬁnd the steady-state error for step and ramp inputs. Example 7.14 Steady-State Error Using Input SubstitutionSteady-State Error Using Input Substitution PROBLEM: Evaluate the steady-state error fo r the system described by the three equations in Eq. (7.90) for unit step and unit ramp inputs. Use input substitution.7.8 Steady-State Error for Systems in State Space 361WEBC07 10/28/2014 17:51:19 In this chapter, we covered the evaluation of steady-state error for systems represented by transfer functions as well as systems represented in state space. For systems represented in state space, two methods were presented: (1) ﬁnal value theorem and (2) input substitution. Case Studies Antenna Control: Steady-State Error Design via GainAntenna Control: Steady-State Error Design via Gain This chapter showed how to ﬁnd steady-state errors for step, ramp, and parabolic inputs to a closed-loop feedback control system. We also learned how to evaluate the gain to meet a steady-state error requirement. This ongoing case study uses our antenna azimuth positioncontrol system to summarize the concepts. PROBLEM: For the antenna azimuth position control system shown on the front endpapers, Conﬁ guration 1, a.Find the steady-state error in terms of gain, K, for step, ramp, and parabolic inputs. b.Find the value of gain, K, to yield a 10% error in the steady state.SOLUTION: For a unit step input, the steady-state error given by Eq. (7.96) is e ∞1CA 1B1 0:20:8 (7.104) where C,A, and Bare as follows: A 51 0 0 21 20  10 12 435;B0 012 435;C  110  (7.105) For a ramp input, using Eq. (7.103), we have e ∞ lim t®∞ 1CA 1BtC A 12B lim t®∞ 0:8t0:08∞ (7.106) Skill-Assessment Exercise 7.7 PROBLEM: Find the steady-state error for a step input given the system represented in state space below. Calculate the steady-state error using both the ﬁnal value theorem and input substitution methods. A01  3  6/C20/C21 ;B0 1/C20/C21 ;C11  ANSWER: estep ∞2 3 The complete solution is at www.wiley.com/college/nise .362 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:20 SOLUTION: a.The simpli ﬁed block diagram for the system is shown on the front endpapers. The steady-state error is given by e ∞lim s®0sE slim s®0sR s 1G s(7.107) From the block diagram, after pushing the potentiometer to the right past the summing junction, the equivalent forward transfer function is G s6:63K s s1:71 s100(7.108) Toﬁnd the steady-state error for a step input, use R s1=salong with Eq. (7.108), and substitute these in Eq. (7.107). The result is e ∞0. Toﬁnd the steady-state error for a ramp input, use R s 1=s2along with Eq. (7.108), and substitute these in Eq. (7.107). The result is e ∞25:79=K. Toﬁnd the steady-state error for a parabolic input, use R s1=s3along with Eq. (7.108), and substitute these in Eq. (7.107). The result is e ∞∞. b.Since the system is Type 1, a 10% error in the steady state must refer to a ramp input.This is the only input that yields a ﬁnite, nonzero error. Hence, for a unit ramp input, e ∞0:11 Kv 1:71 100 6:63K25:79 K(7.109) from which K257:9. You should verify that the value of Kis within the range of gains that ensures system stability. In the antenna control case study in the last chapter,the range of gain for stability was found to be 0 <K<2623 :29. Hence, the system is stable for a gain of 257.9. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives: Referring to the antenna azimuth position control system shown on the frontendpapers, Con ﬁguration 2, do the following: a.Find the steady-state errors in terms of gain, K, for step, ramp, and parabolic inputs. b.Find the value of gain, K, to yield a 20% error in the steady state. Video Laser Disc Recorder: Steady-State Error Design via GainVideo Laser Disc Recorder: Steady-State Error Design via Gain As a second case study, let us look at a video laser disc focusing system for recording. PROBLEM: In order to record on a video laser disc, a 0.5 μm laser spot must be focused on the recording medium to burn pits that represent the program material. The small laser spot requires that the focusing lens be positioned to an accuracy of 0:1μm. A model of the feedback control system for the focusing lens is shown in Figure 7.22. Desired lens positionActual lens positionMotor & lens Filter DetectorPower amplifier + _0.12 (s + 40,000)K1(s + 800)K2K3 s2 FIGURE 7.22 Video laser disc recording: control system for focusing write beamCase Studies 363WEBC07 10/28/2014 17:51:21 The detector detects the distance between the focusing lens and the video disc by measuring the degree of focus as shown in Figure 7.23( a). Laser light re ﬂected from the disc, D, is split by beam splitters B1andB2and focused behind aperture A. The remainder is reﬂected by the mirror and focuses in front of aperture A. The amount of light of each beam that passes through the aperture depends on how far the beam ’s focal point is from the aperture. Each side of the split photodiode, P, measures the intensity of each beam. Thus, as the disc ’s distance from the recording objective lens changes, so does the focal point of each beam. As a result, the relative voltage detected by each part of the split photodiode changes. When the beam is out of focus, one side of the photodiode outputs alarger voltage. When the beam is in focus, the voltage outputs from both sides of thephotodiode are equal. As i m p l i ﬁed model for the detector is a straight line relating the differential voltage output from the two elements to the distance of the laser disc from nominal focus. Alinearized plot of the detector input-output relationship is shown in Figure 7.23( b) (a)L2, recording objective lensB1, polarizing beam splitterL1, condensing lensD-DiscQ–X/Y plateB2, 50-50 beam splitterMirror A, pinhole apertureP, split photodiode 0.6 –0.6–55 (b)Distance fro m nominal focus (μm)Differential voltage FIGURE 7.23 Video disc laser recording: a.focus detector optics;6b.linearized transfer function for focus detector6 6Isailovic ́,J .Videodisc and Optical Memory Technologies ,1st Edition ,1985. Reprinted by permission of Pearson Education, Inc., Upper Saddle River, NJ.364 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:21 Summary This chapter covered the analysis and design of feedback control systems for steady-state errors. The steady-state errors studied resulted strictly from the system con ﬁguration. On the basis of a system con ﬁguration and a group of selected test signals, namely steps, ramps, and parabolas, we can analyze or design for the system ’s steady-state error performance. The greater the number of pure integrations a system has in the forward path, the higher thedegree of accuracy, assuming the system is stable. The steady-state errors depend upon the type of test input. Applying the ﬁnal value theorem to stable systems, the steady-state error for unit step inputs is e ∞  1 1lim s®0Gs (7.110)(Isailovic ́,1985 ). Assume that a warp on the disc yields a worst-case disturbance in the focus of 10 t2μm. Find the value of K1K2K3in order to meet the focusing accuracy required by the system. SOLUTION: Since the system is Type 2, it can respond to parabolic inputs with ﬁnite error. We can assume that the disturbance has the same effect as an input of 10 t2μm. TheLaplacetransform of 10 t2is 20=s3, or 20 units greater than the unit acceleration used to derive the general equation of the error for a parabolic input. Thus, e ∞20=Ka. ButKalim s®0s2G s. From Figure 7.22, Ka0:0024 K1K2K3. Also, from the problem statement, the error must be no greater than 0.1 μm. Hence, e ∞8333 :33=K1K2K30:1. Thus, K1K2K383333 :3, and the system is stable. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives: Given the video laser disc recording system whose block diagram is shown in Figure 7.24, do the following: a.If the focusing lens needs to be positioned to an accuracy of 0:005μm,ﬁnd the value of K1K2K3i ft h ew a r po nt h ed i s cy i e l d saw o r s t - c a s ed i s t u r b a n c ei nt h ef o c u s of 15 t2μm. b.Use the Routh-Hurwitz criterion to show that the system is stable when the conditionsofa.are met. c. Use MATLAB to show that the system is stable when the conditionsofa.are met. Desired lens positionActual lens positionMotor & lens Filter DetectorPower amplifier + _0.2(s + 20,000)K1(s + 600)K2K3 s2 FIGURE 7.24 Video laser disc recording focusing systemSummary 365WEBC07 10/28/2014 17:51:22 The steady-state error for ramp inputs of unit velocity is e∞  1 lim s®0sG s (7.111) and for parabolic inputs of unit acceleration, it is e∞  1 lim s®0s2Gs (7.112) The terms taken to the limit in Eqs. (7.110) through (7.112) are called static error constants . Beginning with Eq. (7.110), the terms in the denominator taken to the limit are called the position constant, velocity constant, and acceleration constant , respectively. The static error constants are the steady-state error speci ﬁcations for control systems. By specifying a static error constant, one is stating the number of pure integrations in the forward path, the test signal used, and the expected steady-state error. Another deﬁ nition covered in this chapter was that of system type . The system type is the number of pure integrations in the f orward path, assuming a unity feedback system. Increasing the system type decreases the steady-state error as long as the systemremains stable. Since the steady-state error is, for the most part, inversely proportional to the static error constant, the larger the static error constant, the smaller the steady-state error.Increasing system gain increases the static error constant. Thus, in general, increasingsystem gain decreases the steady-state error as long as the system remains stable. Nonunity feedback systems were handled by deriving an equivalent unity feedback system whose steady-state error characteristics followed all previous development. The method was restricted to systems where input and output units are the same. We also saw how feedback decreases a system ’s steady-state error caused by disturbances. With feedback, the effect of a disturbance can be reduced by system gain adjustments. Finally, for systems represented in state space, we calculated the steady-state error using the ﬁnal value theorem and input substitution methods. In the next chapter, we will examine the root locus, a powerful tool for the analysis and design of control systems. Review Questions 1.Name two sources of steady-state errors. 2.A position control, tracking with a constant difference in velocity, would yield how muchposition error in the steady state? 3.Name the test inputs used to evaluate steady-state error. 4.How many integrations in the forward path are required in order for there to be zerosteady-state error for each of the test inputs listed in Question 3? 5.Increasing system gain has what effect upon the steady-state error? 6.For a step input, the steady-state error is approximately the reciprocal of the static errorconstant if what condition holds true? 7.What is the exact relationship between the static error constants and the steady-stateerrors for ramp and parabolic inputs? 8.What information is contained in the speci ﬁcation K p10;000? 9.Deﬁne system type .366 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:22 10.The forward transfer function of a control system has three poles at  1; 2;and 3. What is the system type? 11.What effect does feedback have upon disturbances? 12.For a step input disturbance at the input to the plant, describe the effect of controller and plant gain upon minimizing the effect of the disturbance. 13.Is the forward-path actuating signal the system error if the system has nonunity feedback? 14.How are nonunity feedback systems analyzed and designed for steady-state errors? 15.Deﬁne, in words, sensitivity and describe the goal of feedback-control-system engineering as it applies to sensitivity. 16.Name two methods for calculating the stea dy-state error for systems represented in state space. Problems 1.For the unity feedback system shown in Figure P7.1,where Gs 450s8  s12  s15  ss38  s22s28  ﬁnd the steady-state errors for the following test inputs: 25ut ;37tu t ;47t2ut . [Section: 7.2] E(s)G(s)C(s) R(s)+ – FIGURE P7.1 2.Figure P7.2 show st h er a m pi n p u t r(t) and the output c(t) of a system. Assuming the output ’s steady state can be approximated by a ramp, ﬁnd [Section: 7.1] a.the steady-state error; b.the steady-state error if the input becomes rt  tu t . t(sec)6Mag 4 3r(t) c(t) FIGURE P7.23.For the unity feedback system shown in Figure P7.1, where Gs 60s3  s4  s8  s2s6  s17  ﬁn dt h es t e a d y - s t a t ee r r o ri ft h ei n p u ti s8 0 t2ut . [Section: 7.2] 4.For the system shown in Figure P7.3, what steady-stateerror can be expected for the following test inputs: 10ut ;10tu t ;10t 2ut . [Section: 7.2] C(s) R(s)+ –+ –++ –1 3 2 6ss s + 4 FIGURE P7.3 5.For the unity feedback system shown in Figure P7.1, where Gs 500 s28  s28s12  ﬁnd the steady-state error for inputs of 20 u(t), 60 tu(t), and 81 t2ut . [Section: 7.3] 6.An input of 25 t3ut is applied to the input of a Type 3 unity feedback system, as shown in Figure P7.1,Problems 367WEBC07 10/28/2014 17:51:23 where Gs 210s4  s6  s11  s13  s3s7  s14  s19  Find the steady-state error in position. [Section: 7.3] 7.The steady-state error in velocity of a system is de ﬁned to be dr dt dc dt/C18/C19 /C12/C12/C12/C12 t®∞ where ris the system input, and cis the system output. Find the steady-state error in velocity for an input of t3u(t) to a unity feedback system with a forward transfer function of [Section: 7.2] Gs 100 s1  s2  s2s3  s10  8.What is the steady-state error for a step input of 15 unitsapplied to the unity feedback system of Figure P7.1,where [Section: 7.3] Gs  1020 s13  s26  s33  s65  s75  s91  9.A system has Kp4. What steady-state error can be expected for inputs of 70 u(t) and 70 tu(t)? [Section 7.3] 10.For the unity feedback system shown in Figure P7.1,where [Section: 7.3] Gs 5000 ss75  a.What is the expected percent overshoot for a unit stepinput? b.What is the settling time for a unit step input? c.What is the steady-state error for an input of 5 u(t)? d.What is the steady-state error for an input of 5 tu(t)? e.What is the steady-state error for an input of 5 t 2ut ? 11.Given the unity feedback system shown in Figure P7.1, where Gs 500000 s7  s20  s45  ss30  sα  s50  ﬁnd the value of αto yield a Kv35000. [Section: 7.4] 12.For the unity feedback system of Figure P7.1, where Gs Ks2  s4  s6  s2s5  s7  ﬁnd the value of Kto yield a static error constant of 10,000. [Section: 7.4]13.For the system shown in Figure P7.4, [Section: 7.3] a.Find Kp,Kv, and Ka. b.Find the steady-state error for an input of 50 u(t), 50tu(t), and 50 t2ut . c.State the system type. 5 (s + 3)C(s) R(s)+ ––s(s + 1)(s +2 ) FIGURE P7.4 14.A Type 3 unity feedback system has rt  10t3applied to its input. Find the steady-state position error for this input if the forward transfer function is [Section: 7.3] Gs 1030 s28s23/C0/C1 s221s18/C0/C1 s3s6  s13  15.Find the system type for the system of Figure P7.5.[Section: 7.3] ––+ C(s) 10R(s) s(s + 5)100(s + 2) s1000 FIGURE P7.5 16.What are the restrictions on the feedforward transferfunction G 2(s) in the system of Figure P7.6 to obtain zero steady-state error for step inputs if: [Section: 7.3] a.G1(s) is a Type 0 transfer function; b.G1(s) is a Type 1 transfer function; c.G1(s) is a Type 2 transfer function? G2(s) G1(s)) 3 (20 +s sR(s) C(s) E(s)+++ – FIGURE P7.6 17.The steady-state error is de ﬁned to be the difference in position between input and output as time approaches368 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:24 inﬁnity. Let us de ﬁne a steady-state velocity error, which is the difference in velocity between input and output. Derive an expression for the error in velocity, _e∞   _r∞    _c∞ , and complete Table P7.1 for the error in velocity. [Sections: 7.2, 7.3] 18.For the system shown in Figure P7.7, [Section: 7.4] a.What value of Kwill yield a steady-state error in position of 0.01 for an input of 1 =10  t? b.What is the Kvfor the value of Kfound in Part a? c.What is the minimum possible steady-state positionerror for the input given in Part a? C(s) E(s) K(s + 7) s(s + 5)(s + 8)(s + 12)R(s) + – FIGURE P7.7 19.Given the unity feedback system of Figure P7.1, where Gs Ksa  ss2  s15  ﬁnd the value of Kaso that a ramp input of slope 30 will yield an error of 0.005 in the steady state when comparedto the output. [Section: 7.4] 20.Given the system of Figure P7.8, design the value of K so that for an input of 100 tu(t), there will be a 0.01 error in the steady state. [Section: 7.4] R(s) C(s) K s(s + 2) 5s K+ –– FIGURE P7.821.Find the value of Kfor the unity feedback system shown in Figure P7.1, where Gs Ks3  s2s7  if the input is 10 t2ut , and the desired steady-state error is 0.061 for this input. [Section: 7.4] 22.The unity feedback system of Figure P7.1, where Gs Ks23s30/C0/C1 sns5  is to have 1/6000 error between an input of 10 tu(t) and the output in the steady state. [Section: 7.4] a.Find Kandnto meet the speci ﬁcation. b.What are Kp,Kv, and Ka? 23.For the unity feedback system of Figure P7.1,where [Section: 7.3] Gs Ks26s6/C0/C1 s5 2s3  a.Find the system type. b.What error can be expected for an input of 12 u(t)? c.What error can be expected for an input of 12 tu(t)? 24.For the unity feedback system of Figure P7.1, where Gs Ks13  s19  ss6  s9  s22  ﬁnd the value of Kto yield a steady-state error of 0.4 for a ramp input of 27 tu(t). [Section: 7.4] 25.Given the unity feedback system of Figure P7.1, where Gs Ks6  s2  s210s29  ﬁnd the value of Kto yield a steady-state error of 8%. [Section: 7.4] 26.For the unity feedback system of Figure P7.1, where Gs K ss4  s8  s10  ﬁnd the minimum possible steady-state position error if a unit ramp is applied. What places the constraint upon the error? 27.The unity feedback system of Figure P7.1,where Gs Ksα  sβ 2TABLE P7.1 Type Ramp ParabolaInputStep012Problems 369WEBC07 10/28/2014 17:51:25 is to be designed to meet the following speci ﬁcations: steady-state error for a unit step input =0.1; damping ratio=0.5; natural frequency ﬃﬃﬃﬃﬃ 10p . Find K,α, and β. [Section: 7.4] 28.A second-order, unity feedback system is to follow a ramp input with the following speciﬁ cations: the steady-state output position shall differ from the input position by 0.01 of the input velocity; the naturalfrequency of the closed-loop system shall be 10 rad/s.Find the following: a.The system type b.The exact expression for the forward-path transferfunction c.The closed-loop system ’s damping ratio 29.The unity feedback system of Figure P7.1 has a transfer function G s C s E sK s sαa n di st of o l l o war a m p input, r(t)=tu(t), so that the steady-state output position differs from the input position by 0.01 of the input velocity (e.g., e ∞1 Kv0:01). The natural frequency of the closed-loop system will be ωn5r a d=s. [Section: 7.4] Find the following: a.The system type b.The values of Kandα c.The closed-loop system ’s damping ratio, ζ d.IfKis reduced to 4 and α=0.4,ﬁnd the corresponding new values of e ∞,ωn, and ζ. 30.The unity feedback system of Figure P7.1, where Gs Ksα  ssβ  is to be designed to meet the following requirements: The steady-state position error for a unit ramp inputequals 1/10; the closed-loop poles will be locatedat 1j1. Find K,α,a n dβ in order to meet the speci ﬁcations. [Section: 7.4] 31.Given the unity feedback control system of Figure P7.1,where Gs  K snsa  ﬁnd the values of n,K,a n da in order to meet speci ﬁ- cations of 12% overshoot and Kv110. [Section: 7.4] 32.Given the unity feedback control system of Figure P7.1,where Gs K ssa ﬁnd the following: [Section: 7.4] a.Kandato yield Kv1000 and a 20% overshoot b.Kandato yield a 1% error in the steady state and a 10% overshoot. 33.Given the system in Figure P7.9, ﬁnd the following: [Section: 7.3] a.The closed-loop transfer function b.The system type c.The steady-state error for an input of 5u (t) d.The steady-state error for an input of 5tu (t) e.Discuss the validity of your answers to Parts candd. R(s) + _ s2 (s + 1)1 + _ s2 (s + 3)1 C(s) s1 FIGURE P7.9 34.Repeat Problem 33 for the system shown in Figure P7.10.[Section: 7.3] R(s) + _2s(s + 1)(s + 3)(s + 4)10 C(s) 2s+ _ FIGURE P7.10 35.For the system shown inFigure P7.11, use MATLAB to ﬁnd the following: [Section: 7.3] a.The system type b.K p,Kv, and Ka c.The steady-state error for inputs of100u(t), 100 tu(t), and 100 t 2u(t) + (s + 12)(s + 32)(s + 68)6(s + 9)(s + 17) C(s) 13+ _ s(s + 6)(s + 12)(s + 14)(s + 9) s + 71_ _ FIGURE P7.11370 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:25 36.The system of Figure P7.12 is to have the following speci ﬁcations: Kv20;ζ0:7. Find the values of K1 andKfrequired for the speci ﬁcations of the system to be met. [Section: 7.4] K f s5 s(s + 2) + –K1 – + i(s) 0(s) FIGURE P7.12 37.The transfer function from elevator de ﬂection to altitude change in a Tower Trainer 60 Unmanned Aerial Vehicle is Ps  hs  δs e  34:16s3 144:4s27047 s557:2 s513:18s495:93s314:61s231:94s An autopilot is built around the aircraft as shown inFigure P7.13, with Fs  Hs  1 and Gs 0:00842 s7:895  s20:108s0:3393/C0/C1 s0:07895  s24s8  (Barkana ,2005 ). The steady-state error for a ramp input in this system is ess25. Find the slope of the ramp input. F(s) G(s) P(s)R(s) C(s)+ – H(s) FIGURE P7.13 38.Find the total steady-state error due to a unit step input and a unit step disturbance in the system of Figure P7.14. [Section: 7.5] 1 s + 5100 s + 2C(s)D(s) R(s)+ –++ FIGURE P7.1439.Design the values of K1and K2in the system of Figure P7.15 to meet the following speci ﬁcations: Steady-state error component due to a unit stepdisturbance is  0.00001; steady-state error component due to a unit ramp input is 0.002. [Section: 7.5] C(s) K1(s + 2) (s + 3)K2 s(s + 4)D(s) +R(s)+ –+ FIGURE P7.15 40.In Figure P7.16, let Gs  5a n d Ps 7 s2. a.Calculate the steady-state error due to a command input Rs 3 swith Ds  0. b.Verify the result of Part a using Simulink. c.Calculate the steady-state error due to a disturbance input Ds  1 swith Rs  0. d.Verify the result of Part c using Simulink. e.Calculate the total steady-state error due to acommand input Rs  3 sand a disturbance Ds   1 sapplied simultaneously. f.Verify the result of Part e using Simulink. G(s) P(s)+ –R(s) C(s)D(s ) ++ FIGURE P7.16 41.Derive Eq. (7.72) in the text, which is the ﬁnal value of the actuating signal for nonunity feedback systems. [Section: 7.6] 42.For each system shown in Figure P7.17, ﬁnd the following: [Section: 7.6] a.The system type b.The appropriate static error constant c.The input waveform to yield a constant error (problem continues )Problems 371WEBC07 10/28/2014 17:51:26 (Continued ) d.The steady-state error for a unit input of the waveform found in Part c e.The steady-state value of the actuating signal. C(s) s(s + 2)10(s + 10) (s + 4) System 1 C(s) System 2R(s)+ – R(s)+ –s(s + 2)10(s + 10) (s + 1) FIGURE P7.17 Closed-loop systems with nonunity feedback 43.For each system shown in Figure P7.18, ﬁnd the appro- priatestaticerrorconstantaswellasthesteady-stateerror, r∞    c∞ , for unit step, ramp, and parabolic inputs. [Section: 7.6] R(s) (s+ 3)(s+7 )s+4 C(s) 5+ _20R(s) (s+ 3)(s+7 )s+4 C(s) 10+ _5 10System 1 System 2 FIGURE P7.18 44.Given the system shown in Figure P7.19, ﬁnd the following: [Section: 7.6] a.The system type b.The value of Kto yield 0.1% error in the steady state. R(s)+ –(s + 1) s2(s + 2)C(s) K FIGURE P7.1945.For the system shown in Figure P7.20, [Section: 7.6] a.What is the system type? b.What is the appropriate static error constant? c.What is the value of the appropriate static error constant? d.What is the steady-state error for a unit step input? R(s)+ –K(s + 1) s2(s + 4)C(s) (s + 5) (s + 2) FIGURE P7.20 46.For the system shown in Figure P7.21, use MATLAB to ﬁnd the following for K10, and K106: [Section: 7.6] a.The system type b.Kp,Kv, and Ka c.The steady-state error for inputs of30u(t), 30 tu(t), and 30 t 2u(t) R(s)+ –K(s + 1)(s + 2) s2(s + 4)(s + 5)(s + 6)C(s) (s + 6) (s + 8)(s + 9) FIGURE P7.21 47.A dynamic voltage restorer (DVR) is a device that isconnected in series to a power supply. It continuouslymonitors the voltage delivered to the load, and compen- sates voltage sagsbyapplying thenecessary extravoltage to maintain the load voltage constant. In the model shown in Figure P7.22, u rrepresents the desired reference voltage, uois the output voltage, andZLis the load impedance. All other parameters are internal to the DVR ( Lam,2004 ). a.Assuming ZL1 sCL, and β61,ﬁnd the system ’s type. b.Find the steady-state error to a unit step input as afunction of β. 1KTKv+Km1 Ls1 Cs 1 ZL− −α −βur uoτs FIGURE P7.22 DVR Model372 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:27 48.Derive Eq. (7.69) in the text. [Section: 7.6] 49.Given the system shown in Figure P7.23, do the following: [Section: 7.6] a.Derive the expression for the error,Es  Rs    Cs , in terms of R(s) and D(s). b.Derive the steady-state error, e ∞ ,i fR(s) and D(s) are unit step functions. c.Determine the attributes of G1s ;G2s ,a n d H(s) necessary for the steady-state error to becomezero. C(s)D(s) G2(s)+ R(s)+ –+ G1(s) H(s) FIGURE P7.23 System with input and disturbance 50.Given the system shown in Figure P7.24, ﬁnd the sensitivity of the steady-state error to parameter a. Assume a step input. Plot the sensitivity as a functionof parameter a. [Section: 7.7] C(s) s(s + 2)(s + 5)K (s + a)R(s)+ – FIGURE P7.24 a. Show that the sensitivity to plant changes in thesystem of Figure P7.13 is S T:PP TδT δP1 1Ls  where Ls  Gs Ps Hs and Ts Cs  Rs Fs  Hs Ls  1Ls : b.Show that ST:Ps  Ts H s Fs 1 for all values of s. 52.In Figure P7.13, P s5 s;H s1 Ts Cs  Rs 200K s1  s3  s22s20 and ST:PP TδT δPs22s s22s20 a.Find F(s) and G(s). b.Find the value of Kthat will result in zero steady-state error for a unit step input. 53.For the system shown in Figure P7.25, ﬁnd the sensitivity of the steady-state error for changes in K1 and in K2,w h e nK 1100 and K20:1. Assume step inputs for both the input and the disturbance. [Section: 7.7] C(s)D(s) +R(s)+ –+K1 s + 1K2 s + 2 FIGURE P7.25 System with input and disturbance 54.Given the block diagram of the active suspension system shown in Figure P5.36, ( Lin,1997 ) a.Find the transfer function from a road disturbance r to the error signal e. b.Use the transfer function in Part atoﬁnd the steady- state value of efor a unit step road disturbance. c.Use the transfer function in Part atoﬁnd the steady-state value of efor a unit ramp road disturbance. d.From your results in Parts bandc, what is the system ’s type for e? 55.For each of the following closed-loop systems, ﬁnd the steady-state error for unit step and unit ramp inputs. Use both the ﬁnal value theorem and input substitution methods. [Section: 7.8] a._x 5 4 2  3 10 0  11  52 435x1 102 435r;y  121/C2/C3 x b._x01 0  5  97  10 02435x0 012 435r;y100 x c._x 9 5 1 10  2  3 2 52435x2 352 435r;y1 24 xProblems 373WEBC07 10/28/2014 17:51:27 56.A simpli ﬁed model of the steering of a four-wheel drive vehicle is shown in Figure P7.26. Gf K r* Grδf u (δr) +++e r – FIGURE P7.26 Steering model for a four-wheel drive vehicle7 In this block diagram, the output ris the vehicle ’s yaw rate, while δfandδrare the steering angles of the front and rear tires, respectively. In this model, r* ss 3000:8 s 101;Gf sh1sh2 s2a1sa2 Gr sh3sb1 s2a1sa2 andK(s) is a controller to be designed. ( Yin,2007 ). a.Assuming a step input for δf,ﬁnd the minimum system type of the controller K(s) necessary so that in steady-state the error, as de ﬁned by the signal ein Figure P7.26, is zero if at all possible. b.Assuming a step input for δf,ﬁnd the system type of the controller K(s) necessary so that in steady state the error as de ﬁned by δf ∞ r ∞is zero if at all possible. 57.Glycolysis is a feedback process through which living cells use glucose to generate adenosine triphosphate(ATP), necessary for cell operations. A linearized glycol-ysis model ( Chandra, 2011 ) is given by _Δx _Δy/C20/C21  ka gh q1k qa g q1qh/C20/C21Δx Δy/C20/C21 0 1/C20/C21 δ where δis the perturbation (disturbance input) on ATP production, Δyis the change in ATP level (output). α>0 is the cooperativity of ATP binding to PFK, g>0 is the feedback strength of ATP on PK (PFK and PK are two different types of glycolytic enzymes), k>0 is the intermediate reaction rate, q>0i st h eautocatalytic stoichiometry, and h>0 is the feedback strength of ATP on the PFK enzyme. a.Since in this system δis a disturbance input, zero steady-state error is achieved when Δy δ0. Show that in steady state _Δx0;_Δy0,Δy δ1 a h: b.Use the Routh-Hurwitz stability criterion to show thatthe system will be closed-loop stable as long as 0<h a<kg q1 q c.Assuming that his the only parameter of choice for steady-state error adjustments, show that zerosteady-state error is not achievable. 58.As part of the development of a textile cross-lappermachine ( Kuo, 2010 ), a torque input, u t10 t<50  15 0 t<100/C26/C27 , is applied to the motor of one of the movable racks embedded in a feedbackloop. The corresponding velocity output response isshown in Figure P7.27. a.What is the open-loop system ’s type? b.What is the steady-state error? c.What would be the steady-state error for a ramp input? 0.04 0.030.02 0.01 0 –0.01 –0.02–0.03–0.04 0 10 20 30 40 50 60 70 80 90 100 Time(sec)Velocity of the movable rack (m/sec) FIGURE P7.27 Velocity output response8 59.The block diagram in Figure P7.28 represents a motor driven by an ampli ﬁer with double-nested tachometer feedback loops ( Mitchell ,2010 ).7Yin, G., Chen, N., and Li, P. Improving Handling Stability Performance of Four-Wheel Steering Vehicle via μ-Synthesis Robust Control. IEEE Transactions on Vehicular Technology , vol. 56, no. 5, 2007, pp. 2432– Fig. 2, p. 2434. IEEE Transactions on Vehicular Technology by Vehicular Technology Society; Institute of Electrical and ElectronicsEngineers; IEEE Vehicular Technology Group. Reproduced with permis- sion of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.8Kuo, C.-F. J., Tu, H.-M., and Liu, C.-H. Dynamic Modeling and Control of a Current New Horizontal Type Cross-Lapper Machine. Textile Research Journal , Vol. 80 (19), pp. 2016 –2027, Figure 5. Copyright 2010. Reprinted by Permission of SAGE.374 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:28 a.Find the steady-state error of this system to a step input. b.What is the system type? K1I O K2 1+ sT2+ –K3 1+ sT3 sv3 sv2 βK4 1+ sT4+ –+ – FIGURE P7.289 60.PID control, which is discussed in Chapter 9, may be recommended for Type 3 systems when the output in a feedback system is required to perfectly track a parabolic as well as step and ramp reference signals(Papadopoulos, 2013 ). In the system of Figure P7.29, the transfer functions of the plant, G P(s), and the recommended controller, GC(s), are given by: GP s127e 0:2s s s1 s2 s52 s10 GC s 92:9s213:63s1 97:6s2 0:1s1 Use Simulink to model this systemand plot its response (from 0 to 300 seconds) to a unit-step reference input, r(t), applied at t=0, and (on the same graph) to a disturbance, d(t)=0.25 r (t), applied at t=150 seconds. What are the values of the steady-state error dueto the reference input and due to thedisturbance? What about the relative sta-bility of this Type 3 system as evidenced by the percent overshoot in response to the unit-step reference input? ++ –R(s)C(s) GC (s)E(s)+D(s) GP (s) FIGURE P7.29 61.A Type 3 feedback controlsystem (Papadopoulos, 2013 ) was presented in Problem 60. Modify theSimulink model you developed in that problem to plot its response (from 0 to100 seconds) to a unit-ramp referenceinput, r(t)=tu(t) , applied at t=0, and (on the same graph) to a disturbance, d(t)=0.25tu( t), applied at t=50 seconds. What are the values of thesteady-state position error due to thereference-input and disturbance ramps? Copy this model and paste it in the same ﬁle. Then, in that copy, change the reference input to a unit parabola,r(t)=0.5t 2u(t), applied at t=0, and the disturbance to d(t)=0.125 t2u(t), applied at t=50 seconds, and plot, on a new graph (Scope 1),the system ’s response to these parabolic signals. DESIGN PROBLEMSDESIGN PROBLEMS 62.Motion control, which includes position or force control, is used in robotics and machining. Forcecontrol requires the designer to consider two phases:contact and noncontact motions. Figure P7.30(a )i sa diagram of a mechanical system for force controlunder contact motion. A force command, F cmd(s), is the input to the system, while the output, F(s), is the controlled contact force. –+ + Fcmd(s) K2K1Force sensorElectric motorRotational direction Des+KeEnvironment (D es+Ke) (b)(a) F(s)Fcmd(s)F(s) (s)ω ref(s)ω –1 s1 s.θ(s)θ(s) FIGURE P7.30 a.Force control mechanical loop under contact motion;10b.block diagram10 9Mitchell, R. J. More Nested Velocity Feedback Control. IEEE 9th International Conference on Cybernetic Intelligent Systems (CIS) , 2010. Figure 5, page 3 of the paper.10Ohnishi, K.; Shibata, M.; and Murakami, T. Motion Control for Advanced Mechatronics. IEEE/ASME Transactions on Mechatronics , vol. 1, no. 1, March 1996, Figures 14 & 16, p. 62. IEEE/AS ME transactions on mechatronics: a joint publication of the IEEE Industrial Electronics Society and the ASME Dynamic Systems and Control Division by Institute of Electrical andElectronics Engineers; IEEE Industrial Electronics Society; AmericanSociety of Mechanical Engineers. Dynamic Systems and Control Division Reproduced with permission of IEEE in the format Republish in a book via Copyright Clearance Center.Problems 375WEBC07 10/28/2014 17:51:28 In the ﬁgure a motor is used as the force actuator. The force output from the actuator is applied to the object through a force sensor. A block diagram repre-sentation of the system is shown in Figure P7.30( b). K 2is velocity feedback used to improve the transient response. The loop is actually implemented by anelectrical loop (not shown) that controls the armaturecurrent of the motor to yield the desired torque at theoutput. Recall that T mKtia(Ohnishi ,1996). Find an expression for the range of K2to keep the steady-state force error below 10% for ramp inputs of commandedforce. 63.An open-loop swivel controller and plant for anindustrial robot has the transfer function G es ωos  Vis K s10  s24s10  where ωos is the Laplace transform of the robot ’s angular swivel velocity and Vi(s) is the input voltage to the controller. Assume Ge(s) is the forward transfer function of a velocity control loop with an inputtransducer and sensor, each represented by a constantgain of 3 ( Schneider ,1992 ). a.Find the value of gain, K, to minimize the steady- state error between the input commanded angularswivel velocity and the output actual angular swivelvelocity. b.What is the steady-state error for the value of K found in Part a? c.F o rw h a tk i n do fi n p u td o e st h ed e s i g ni nP a r t a apply? 64.Packet information ﬂow in a router working under TCP/IP can be modeled using the linearized transferfunction Ps  Qs  fs C2 2Ne sR s2N R2C/C18/C19 s1 R/C18/C19 where C=link capacity (packets/second) N=load factor (number of TCP sessions) Q=expected queue length R=round trip time (second) p=probability of a packet drop The objective of an active queue management (AQM) algorithm is to automatically choose a packet-dropprobability, p, so that the queue length is maintained at a desired level. This system can be represented bythe block diagram of Figure P7.13 with the plant modelin the P(s) block, the AQM algorithm in the G(s) block, and Fs  Hs  1. Several AQM algorithms are available, but one that has received special attention inthe literature is the ran dom early detection (RED) algorithm. This algorithm can be approximated with Gs  LK sK,w h e r e LandKare constants ( Hollot , 2001 ). Find the value of Lrequired to obtain a 10% steady-state error for a unit step input when C=3750 packets/s, N=50 TCP sessions, R=0.1 s, and K=0.005. 65.In Figure P7.16, the plant, Ps  48;500 s22:89s;represents the dynamics of a robotic manipulator joint. The system ’so u t p u t , C(s), is the joint ’s angular position (Low, 2005 ). The system is controlled in a closed- loop con ﬁguration as shown with Gs  KPKI s,a proportional-plus-integral (PI) controller to be dis-cussed in Chapter 9. R(s)i st h ej o i n t ’s desired angular position. D(s) is an external disturbance, possibly caused by improper dynamics modeling, Coulombfriction, or other external f orces acting on the joint. a.Find the system ’s type. b.Show that for a step disturbance input, e ss0 when KI60. c.Find the value of KIthat will result in ess5%for a parabolic input. d.Using the value of KIfound in Part c,ﬁnd the range ofKPfor closed-loop stability. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 66.Control of HIV/AIDS. Consider the HIV infection model of Problem 68 in Chapter 6 and its block diagram in Figure P6.17 ( Craig ,2004 ). a.Find the system ’s type if G(s) is a constant. b.It was shown in Problem 68, Chapter 6, that whenGs  Kthe system will be stable when K<2:0410  4. What value of Kwill result in a unit step input steady-state error of 10%? c.It is suggested that to reduce the steady-state errorthe system ’s type should be augmented by making Gs K s. Is this a wise choice? What is the resulting stability range for K? 67.Hybrid vehicle. Figure P7.31 shows the block diagram of the speed control of an HEV taken from Figure P5.53,376 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:29 and rearranged as a unity feedback system ( Preitl , 2007). Here the system output is C sKSSV s,t h e output voltage of the speed sensor/transducer. UC (s) E (s)+ _R (s) C(s)0.11 (s + 0.6) s (s + 0.5173) + 5 (s + 0.6) (s + 0.01908)GSC(s) FIGURE P7.31 a.Assume the speed controller is given as GSC sKPSC. Find the gain, KPSC, that yields a steady-state error, estep ∞1%. b.Now assume that in order to reduce the steady-stateerror for step inputs, integration is added to thecontroller yielding G SC sKPSC KISC=s 100 KISC=s. Find the value of the integral gain, KISC,thatresultsinasteady-stateerror, eramp ∞2:5%. c.In Parts aandb, the HEV was assumed to be driven on level ground. Consider the case when, afterreaching a steady-state speed with a controller given by G SC s10040 s, the car starts climbing up a hill with a gradient angle, α5°.F o rs m a l l angles sin αα(in radians) and, hence, when reﬂected to the motor shaft the climbing torque is TstFstr itotmgr itotsinαmgrα itot 1590 9:80:35 4:87557:383:7N m : The block diagram in Figure P7.32 represents the control system of the HEV rearranged for Part c.s+0.01908–G2(s) = Equivalent transfer function of the car Tst(s)+–E(s)=–KSS V(s) (s + 0.5)13.53 s s100s + 40 (s + 0.5)3 (s + 0.6)++ G1(s) = Transfer function representation of tor que & s peed controllers FIGURE P7.32 In this diagram, the input is Tst t83:7u t, corre- sponding to α=5°, and the output is the negative error,  e t  c t  KSSv t, proportional to the change in car speed, v(t). Find the steady-state error e(∞) due to a step change in the disturbance; e.g., the climbing torque, Tst t83:7u t. 68.Parabolic trough collector. The parabolic trough collector ( Camacho, 2012 ) is embedded in a unit feedback con ﬁguration as shown in Figure P7.1, where G sGC sP sand P s137:210 6 S20:0224 s19610 6e 39s a.Assuming GC sK,ﬁnd the value of Krequired for a unit-step input steady-state error of 3%. Usethe result you obtained in Problem 70, Chapter 6, toverify that the system is closed-loop stable whenthat value of Kis used. b.What is the minimum unit-step input steady-state error achievable with G C sK? c.What is the simplest compensator, GC s, that can be used to achieve a steady-state error of 0%? Cyber Exploration Laboratory Experiment 7.1 Objective To verify the effect of input waveform, loop gain, and system type upon steady-state errors. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.What system types will yield zero steady-state error for step inputs? 2.What system types will yield zero steady-state error for ramp inputs? 3.What system types will yield in ﬁnite steady-state error for ramp inputs?Cyber Exploration Laboratory 377WEBC07 10/28/2014 17:51:30 4.What system types will yield zero steady-state error for parabolic inputs? 5.What system types will yield in ﬁnite steady-state error for parabolic inputs? 6.For the negative feedback system of Figure P7.33, where Gs Ks6  s4  s7  s9  s12  andHs  1, calculate the steady-state error in terms of Kfor the following inputs: 5u(t), 5tu(t), and 5 t2ut . 7.Repeat Prelab 6 for Gs Ks6  s8  ss4  s7  s9  s12 andHs  1. 8.Repeat Prelab 6 for Gs Ks1  s6  s8  s2s4  s7  s9  s12 andHs  1. Lab 1.Using Simulink, set up the negative feedback system of Prelab 6. Plot on one graph the error signal of the system for an input of 5u(t) and K50;500;1000, and 5000. Repeat for inputs of 5tu(t) and 5 t2ut . 2.Using Simulink, set up the negative feedback system of Prelab 7. Plot on one graph theerror signal of the system for an input of 5 u(t) and K50;500;1000, and 5000. Repeat for inputs of 5 tu(t) and 5 t 2ut . 3.Using Simulink, set up the negative feedback system of Prelab 8. Plot on one graph the error signal of the system for an input of 5 u(t) and K200;400;800, and 1000. Repeat for inputs of 5 tu(t) and 5 t2ut . Postlab 1.Use your plots from Lab 1 and compare the expected steady-state errors to those calculated in the Prelab. Explain the reasons for any discrepancies. 2.Use your plots from Lab 2 and compare the expected steady-state errors to thosecalculated in the Prelab. Explain the reasons for any discrepancies. 3.Use your plots from Lab 3 and compare the expected steady-state errors to thosecalculated in the Prelab. Explain the reasons for any discrepancies. Experiment 7.2 Objective To use the LabVIEW Control Design and Simulation Module for analysis of steady-state performance for step and ramp inputs. Minimum Required Software Package LabVIEW with the Control Design and Simulation Module Prelab You are given the model of a single joint of a robotic manipulator shown in Figure P7.34 ( Spong, 2005), where Bis the coefﬁ cient of viscous friction, θd sis the desired angle, θ(s) is the output angle, and D(s) is the disturbance. We want to track the joint angle using a PD controller, which we will study in Chapter 9. Assume JB1. Find the step and ramp responses of this system for the following combinations of PD gains KP;KD: (16, 7), (64, 15), and (144, 23). + +KP + KDsθ (s) θd (s)PD controller Plant 1 Js2 + Bs– –D (s) FIGURE P7.34R(s) + C(s)G(s) H(s)– FIGURE P7.33378 Chapter 7 Steady-State ErrorsWEBC07 10/28/2014 17:51:30 Bibliography Barkana, I. Classical and Simple Adaptive Control of Nonminimum Phase Autopilot Design. Journal of Guidance, Control, and Dynamics , vol. 28, 2005, pp. 631 –638. Bylinkski, G. Silicon Valley High Tech: Window to the Future . Intercontinental Publishing Corp, Ltd., Hong Kong, 1985. Figure caption source for Figure 7.9. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Chandra, F. A., Buzi, G., and Doyle, J. C. Glycolytic Oscillations and Limits on Robust Efﬁciency. Science, vol. 333, American Association for the Advancement of Science, July 8, 2011, pp. 187 –192. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. D’Azzo, J. J., and Houpis, C. H. Feedback Control System Analysis and Design Conventional and Modern , 3d ed. McGraw-Hill, New York, 1988. Hollot, C. V., Misra, V., Towsley, D., and Gong, W. A Control Theoretic Analysis of RED. Proceedings of IEEE INFOCOM , 2001, pp. 1510 –1519. Hostetter, G. H., Savant, C. J., Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Isailovic ́,J .Videodisc and Optical Memory Systems . Prentice Hall, Upper Saddle River, NJ, 1985. Kuo, C.-F. J., Tu, H.-M., and Liu, C.-H. Dynamic Modeling and Control of a Current New Horizontal Type Cross-Lapper Machine. Textile Research Journal, vol. 80, no. 19, Sage, 2010, pp. 2016 –2027. Lam, C. S., Wong, M. C., and Han, Y. D. Stability Study on Dynamic Voltage Restorer (DVR). Power Electronics Systems and Applications, 2004; Proceedings First International Conference on Power Electronics , 2004, pp. 66 –71. Lin, J.-S., and Kanellakopoulos, I. Nonlinear Design of Active Suspensions. IEEE Control Systems , vol. 17, issue 3, June 1997, pp. 45 –59. Low, K. H., Wang, H., Liew, K. M., and Cai, Y. Modeling and Motion Control of Robotic Hand for Telemanipulation Application. International Journal of Software Engineering and Knowledge Engineering , vol. 15, 2005, pp. 147 –152. Mitchell, R. J. More Nested Velocity Feedback Control. IEEE 9th International Conference on Cybernetic Intelligent Systems (CIS) , 2010. Ohnishi, K., Shibata, M., and Murakami, T. Motion Control for Advanced Mechatronics. IEEE/ASME Transactions on Mechatronics , vol. 1, no. 1, March 1996, pp. 56 –67. Papadopoulos, K . G., Papastefanaki, E. N., and Margaris, N. I. Explicit Analytical PID Tuning Rules for the Design of Type-III Control Loops. IEEE Transactions on Industrial Electronics , vol. 60, no. 10, October 2013, pp. 4650 –4664.Lab 1.Create a LabVIEW VI to simulate the response of this system to a step and a ramp inputs, under no-disturbance conditions. Use the functions available in the Control Design and Simulation/Control Design palette. 2.Create a LabVIEW VI using the functions available in the Control Design and Simulation/Simulation palette, to track an input set-point of 10 under a disturbance of D=40. Postlab Compare your results with those of the Prelab. What conclusions can you draw from the various responses of this system to different inputs and different PDparameters? What is the system type? Does the steady-state behavior corroborate thetheory you learned regarding system type and the steady-state error for various inputs?Explain your answer.Bibliography 379WEBC07 10/28/2014 17:51:30 Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics , IEEE, 2007, pp. 157 –162 . Schneider, R. T. Pneumatic Robots Continue to Improve. Hydraulics & Pneumatics , October 1992, pp. 38 –39. Spong, M., Hutchinson, S., and Vidyasagar, M. Robot Modeling and Control . John Wiley & Sons. Hoboken, NJ, 2006. Yin, G., Chen, N., and Li, P. Improving Handling Stability Performance of Four-Wheel Steering Vehicle via μ-Synthesis Robust Control. IEEE Transactions on Vehicular Technology , vol. 56, no. 5, 2007, pp. 2432 –2439.380 Chapter 7 Steady-State ErrorsWEBC08 10/28/2014 17:55:41 Root Locus Techniques Chapter Learning Outcomes After completing this chapter the student will be able to: Deﬁne a root locus (Sections 8.1 –8.2) State the properties of a root locus (Section 8.3) Sketch a root locus (Section 8.4) Find the coordinates of points on the root locus and their associated gains (Sections 8.5 –8.6) Use the root locus to design a parameter value to meet a transient responsespeci ﬁcation for systems of order 2 and higher (Sections 8.7 –8.8) Sketch the root locus for positive-feedback systems (Section 8.9) Find the root sensitivity for points along the root locus (Section 8.10) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to ﬁnd the preampliﬁ er gain to meet a transient response speci ﬁcation.8 381WEBC08 10/28/2014 17:55:41 Given the pitch or heading control system for the Unmanned Free-Swimming Submersible vehicle shown on the back endpapers, you will be able to plot the root locus and design the gain to meet a transient response speci ﬁcation. You will then be able to evaluate other performance characteristics. 8.1 Introduction Root locus, a graphical presentation of the closed-loop poles as a system parameter isvaried, is a powerful method of analysis and design for stability and transient response (Evans ,1948 ,1950). Feedback control systems are dif ﬁcult to comprehend from a qualitative point of view, and hence they rely heavily upon mathematics. The root locus covered in this chapter is a graphical technique that gives us the qualitative descriptionof a control system ’s performance that we are looking for and also serves as a powerful quantitative tool that yields more informa tion than the methods already discussed. Up to this point, gains and other system parameters were designed to yield a desired transient response for only ﬁrst- and second-order systems. Even though the root locus can be used to solve the same kind of problem, its real power lies in its ability to provide solutions for systems of order higher than 2. For example, under the right conditions, a fourth-order system ’s parameters can be designed to yield a given percent overshoot and settling time using the concepts learned in Chapter 4. The root locus can be used to describe qualitatively the performance of a system as various parameters are changed. For example, the effect of varying gain upon percentovershoot, settling time, and peak time can be vividly displayed. The qualitative descriptioncan then be veri ﬁed with quantitative analysis. Besides transient response, the root locus also gives a graphical representation of a system ’s stability. We can clearly see ranges of stability, ranges of instability, and the conditions that cause a system to break into oscillation. Before presenting root locus, let us review two concepts that we need for the ensuing discussion: (1) the control system problem and (2) complex numbers and their representa-tion as vectors. The Control System Problem We have previously encountered the control system problem in Chapter 6: Whereas thepoles of the open-loop transfer function are easily found (typically, they are known byinspection and do not change with changes in system gain), the poles of the closed-looptransfer function are more dif ﬁcult to ﬁnd (typically, they cannot be found without factoring the closed-loop system ’s characteristic polynomial, the denominator of the closed-loop transfer function), and further, the closed-loop poles change with changes in system gain. A typical closed-loop feedback control system is shown in Figure 8.1( a). The open-loop transfer function was de ﬁned in Chapter 5 as KG(s)H(s). Ordinarily, we can determine the poles of KG(s)H(s), since these poles arise from simple cascaded ﬁrst- or second-order subsystems. Further, variations in Kdo not affect the location of any pole of this function. On the other hand, we cannot determine the poles of T sKG s=1KG sH sunless we factor the denominator. Also, the poles of T(s) change with K. Let us demonstrate. Letting G s NG s DG s(8.1) and H sNH s DH s(8.2)382 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:42 then T sKN G sDH s DG sDH sKN G sNH s(8.3) where NandDare factored polynomials and signify numerator and denominator terms, respectively. We observe the following: Typically, we know the factors of the numerators and denominators of G(s) and H(s). Also, the zeros of T(s) consist of the zeros of G(s) and the poles of H(s). The poles of T(s) are not immediately known and in fact can change with K. For example, if G s s1=s s2andH s s3= s4, the poles of KG(s)H(s) are 0 ; 2;and 4. The zeros of KG(s)H(s) are  1 and  3. Now, Ts  Ks1  s4  =s36K  s284K  s3K. Thus, the zeros of T(s) consist of the zeros of G(s) and the poles of H(s). The poles of T(s) are not immediately known without factoring the denominator, and they are a function of K. Since the system ’s transient response and stability are dependent upon the poles of T(s), we have no knowledge of the system ’s performance unless we factor the denominator for speci ﬁc values of K. The root locus will be used to give us a vivid picture of the poles of T(s)a sKvaries. Vector Representation of Complex Numbers Any complex number ,σjω, described in Cartesian coordinates can be graphically represented by a vector, as shown in Figure 8.2( a). The complex number also can be described in polar form with magnitude Mand angle θ,a sMθ. If the complex number is substituted into a complex function, F(s), another complex number will result. For example, if F s sa, then substituting the complex number sσjωyields F s σajω, another complex number. This number is shown in Figure 8.2( b). Notice that F(s) has a zero at  a. If we translate the vector aunits to the left, as in Figure 8.2( c), we have an alternate representation of the complex number that originates at the zero of F(s) and terminates on the point sσjω. We conclude that ( sa)is a complex number and can be represented by a vector drawn from the zero of the function to the point s . For example, s7js®5j2is a complex number drawn from the zero of the function,  7, to the point s, which is 5 j2, as shown in Figure 8.2( d). Now let us apply the concepts to a complicated function. Assume a function F sΠm i1 szi Πn j1 spjΠnumerator ’s complex factors Πdenominator ’s complex factors(8.4)+ Ea(s) – H(s)KG(s)Input R(s)Actuating signalForward transfer functionOutput C(s) Feedback transfer function (a)C(s) R(s) KG(s) 1 + KG(s)H(s) (b)FIGURE 8.1 a.Closed-loop system; b.equivalent transfer function8.1 Introduction 383WEBC08 10/28/2014 17:55:42 where the symbol Πmeans “product, ”mnumber of zeros ;andnnumber of poles. Each factor in the numerator and each factor in the denominator is a complex number that can be represented as a vector. The function de ﬁnes the complex arithmetic to be performed in order to evaluate F(s) at any point, s. Since each complex factor can be thought of as a vector, the magnitude, M,o fF(s)a ta n yp o i n t , s,i s MΠzero lengths Πpole lengthsΠm i1jszi  j Πn j1j spjj(8.5) where a zero length, j szij, is the magnitude of the vector drawn from the zero of F(s)a t  zito the point s, and a pole length, j spjj, is the magnitude of the vector drawn from the pole of F(s)a t pjto the point s. The angle, θ,o fF(s) at any point, s,i s θPzero angles  Ppole angles Xm i1szi   Xn j1 spj(8.6) where a zero angle is the angle, measured from the positive extension of the real axis, of avector drawn from the zero of F(s)a t z ito the point s, and a pole angle is the angle, measured from the positive extension of the real axis, of the vector drawn from the pole ofF(s)a t p jto the point s.s-plane jω jω M (a) (b) (d)5 –7 (c)s-plane + a s-plane j2s-plane jwjω jω jω jω –aσσ σ σσσσθ FIGURE 8.2 Vector representation of complex numbers: a.sσjω; b. sa;c.alternate representation of sa; d. s7js®5j2384 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:43 As a demonstration of Eqs. (8.5) and (8.6), consider the following example. Skill-Assessment Exercise 8.1 PROBLEM: Given F s s2 s4 s s3 s6 ﬁndF(s) at the point s 7j9 the following ways: a.Directly substituting the point into F(s) b.Calculating the result using vectors ANSWER:  0:0339  j0:0899 0:096 110 :7° The complete solution is at www.wiley.com/college/nise .TryIt 8.1 Use the following MATLAB statements to solve the problem given in Skill-AssessmentExercise 8.1. s=-7+9j ; G=(s+2) * (s+4) / ... (s* (s +3) * (s+6)); Theta =(180/pi) *... angle(G) M=abs(G)Example 8.1 Evaluation of a Complex Function via VectorsEvaluation of a Complex Function via Vectors PROBLEM: Given F s s1 s s2(8.7) ﬁndF(s) at the point s 3j4. SOLUTION: The problem is graphically depicted in Figure 8.3, where each vector, sα, of the function is shown terminating on the selected point s 3j4. The vector originating at the zero at  1i s ﬃﬃﬃﬃﬃ 20p 116:6° (8.8) The vector originating at the pole at the origin is 5126 :9° (8.9) The vector originating at the pole at  2i s ﬃﬃﬃﬃﬃ 17p 104 :0° (8.10) Substituting Eqs. (8.8) through (8.10) into Eqs. (8.5) and (8.6) yields Mθﬃﬃﬃﬃﬃ 20p 5ﬃﬃﬃﬃﬃ 17p 116 :6° 126:9° 104:0°0:217 114:3° (8.11) as the result for evaluating F(s) at the point  3j4.j1j2j3j4 s-planejω –2 –1 0(s + 2)(s + 1) –3(s) σ FIGURE 8.3 Vector representation of Eq. (8.7)8.1 Introduction 385WEBC08 10/28/2014 17:55:43 We are now ready to begin our discussion of the root locus. 8.2 De ﬁning the Root Locus A security camera system similar to that shown in Figure 8.4( a) can automatically follow a subject. The tracking system monitors pixel changes and positions the camera to center the changes. The root locus technique can be used to analyze and design the effect of loop gain upon the system ’s transient response and stability. Assume the block diagram representation of a tracking system as shown in Figure 8.4( b), where the closed-loop poles of the system change location as the gain, K, is varied. Table 8.1, which was formed by applying the quadratic formula to the denominator of the transfer function in Figure 8.4( c), shows the variation of pole location for different values of gain, K. The data of Table 8.1 is graphically displayed in Figure 8.5( a), which shows each pole and its gain. As the gain, K, increases in Table 8.1 and Figure 8.5( a), the closed-loop pole, which is at 10 for K0, moves toward the right, and the closed-loop pole, which is at 0 for K0, moves toward the left. They meet at  5, break away from the real axis, and move into the complex plane. One closed-loop pole moves upward while the other moves downward. We cannot tell which pole moves up or which moves down. In Figure 8.5( b), the individual closed-loop pole locations are removed and their paths are represented with solid lines. It is this representation of the paths of the closed-loop poles as the gain is varied that we call a root locus . For most of our work, the discussion will be limited to positive gain, or K0. The root locus shows the changes in the transient response as the gain, K, varies. First of all, the poles are real for gains less than 25. Thus, the system is overdamped. At again of 25, the poles are real and multiple and hence critically damped. For gains above 25,the system is underdamped. Even though these preceding conclusions were available (a) Largeformat 4 5/iStockphoto. K1s(s + 10)R(s)Subject’s position + –C(s)Camera position C(s) s2 + 10s + K where K = K 1K2(b) (c)AmplifierMotor and camera K2 R(s) KSensors FIGURE 8.4 a.Security cameras with auto tracking can be used to follow moving objects automatically; b.block diagram; c.closed-loop transfer function386 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:46 through the analytical techniques covered in Chapter 4, the following conclusions are graphically demonstrated by the root locus. Directing our attention to the underdamped portion of the root locus, we see that regardless of the value of gain, the real parts of the complex poles are always the same. Sincethe settling time is inversely proportional to the real part of the complex poles for thissecond-order system, the conclusion is that regardless of the value of gain, the settling timefor the system remains the same under all conditions of underdamped responses. Also, as we increase the gain, the damping ratio diminishes, and the percent overshoot increases. The damped frequency of oscillation, which is equal to the imaginary part of thepole, also increases with an increase in gain, resulting in a reduction of the peak time. Finally, since the root locus never crosses over into the right half-plane, the system is always stable, regardless of the value of gain, and can never break into a sinusoidal oscillation. These conclusions for such a simple system may appear to be trivial. What we are about to see is that the analysis is applicable to systems of order higher than two. For theseTABLE 8.1 Pole location as function of gain for the system of Figure 8.4 K Pole 1 Pole 2 0  10 0 5  9.47  0.53 10  8.87  1.13 15  8.16  1.84 20  7.24  2.76 25  5  5 30  5j2:24  5 j2:24 35  5j3:16  5 j3:16 40  5j3:87  5 j3:87 45  5j4:47  5 j4:47 50  5j5  5 j5 σσ –1 0 –2 –3 –4 –6 –7 –8 –9 –10 –5 30 K = 50454035 (b)30354045K = 50 s-plane 5 10 15 20 25 20 15 10 5 K = 00 = Kj1j2j3j4j5 –j1 –j2 –j3 –j4 –j5 (a)jω jω –1 0 –2 –3 –4 –6 –7 –8 –9 –10j1j2j3j4j5 –j1 –j2 –j3 –j4 –j5–5 30 K = 5045403530354045K = 50 s-plane 5 10 15 20 25 20 15 10 5 K = 00 = K FIGURE 8.5 a.Pole plot from Table 8.1; b.root locus8.2 De ﬁning the Root Locus 387WEBC08 10/28/2014 17:55:46 systems, it is dif ﬁcult to tie transient response characteristics to the pole location. The root locus will allow us to make that association and will become an important technique in the analysis and design of higher-order systems. 8.3 Properties of the Root Locus In Section 8.2, we arrived at the root locus by factoring the second-order polynomial in thedenominator of the transfer function. Consider what would happen if that polynomial wereofﬁfth or tenth order. Without a computer, factoring the polynomial would be quite a problem for numerous values of gain. We are about to examine the properties of the root locus. From these properties we will be able to make a rapid sketch of the root locus for higher-order systems without having to factor the denominator of the closed-loop transfer function. The properties of the root locus can be derived from the general control system of Figure 8.1( a). The closed-loop transfer function for the system is T sKG s 1KG sH s(8.12) From Eq. (8.12), a pole, s, exists when the characteristic polynomial in the denominator becomes zero, or KG sH s  11 2k1180 °k0;1;2;3;... (8.13) where  1 is represented in polar form as 1  2k1180 °. Alternately, a value of sis a closed-loop pole if jKG sH sj1 (8.14) and KG sH s 2k1180 ° (8.15) Equation (8.13) implies that if a value of sis substituted into the function KG(s)H(s), a complex number results. If the angle of the complex number is an odd multiple of 180 °, that value of sis a system pole for some particular value of K. What value of K? Since the angle criterion of Eq. (8.15) is satis ﬁed, all that remains is to satisfy the magnitude criterion, Eq. (8.14). Thus, K1 jG sjjH sj(8.16) We have just found that a pole of the closed-loop system causes the angle of KG(s)H(s), or simply G(s)H(s) since Kis a scalar, to be an odd multiple of 180 °. Furthermore, the magnitude of KG(s)H(s) must be unity, implying that the value of Kis the reciprocal of the magnitude of G(s)H(s) when the pole value is substituted for s. Let us demonstrate this relationship for the second-order system of Figure 8.4. The fact that closed-loop poles exist at  9:47 and  0:53 when the gain is 5 has already been established in Table 8.1. For this system, KG sH sK s s10(8.17)388 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:46 Substituting the pole at  9:47 for sand 5 for Kyields KG sH s  1. The student can repeat the exercise for other points in Table 8.1 and show that each case yields KG sH s  1. It is helpful to visualize graphically the meaning of Eq. (8.15). Let us apply the complex number concepts reviewed in Section 8.1 to the root locus of the system shown inFigure 8.6. For this system the open-loop transfer function is KG sH sK s3 s4 s1 s2(8.18) The closed-loop transfer function, T(s), is T sK s3 s4 1Ks2 37Ks 212K(8.19) If point sis a closed-loop system pole for some value of gain, K, then smust satisfy Eqs. (8.14) and (8.15). Consider the point  2j3. If this point is a closed-loop pole for some value of gain, then the angles of the zeros minusthe angles of the poles must equal an odd multiple of 180 °. From Figure 8.7, θ 1θ2 θ3 θ456:31°71:57° 90° 108:43°  70:55° (8.20) Therefore,  2j3 is not a point on the root locus, or alternatively,  2j3 is not a closed-loop pole for any gain. If these calculations are repeated for the point  2j ﬃﬃﬃ 2p =2, the angles do add up to 180 °.T h a ti s ,  2j ﬃﬃﬃ2p =2is a point on the root locus for some value of gain. We now proceed to evaluate that value of gain.jω j3 L4s-plane L3 L2 L1 –1 –2 –3 – 4σθ1 θ2 θ3 θ4 FIGURE 8.7 Vector representation of G(s) from Figure 8.6( a) at 2j3K(s + 3) (s + 4) (s + 1) (s + 2)R(s) (a) (b)C(s) –+ –4jω s-plane –3 –2 –1σ FIGURE 8.6 a.Example system; b.pole-zero plot of G(s)8.3 Properties of the Root Locus 389WEBC08 10/28/2014 17:55:47 From Eqs. (8.5) and (8.16), K1 jG sH sj1 MΠpole lengths Πzero lengths(8.21) Looking at Figure 8.7 with the point  2j3 replaced by  2j ﬃﬃﬃ 2p =2, the gain, K,i s calculated as KL3L4 L1L2ﬃﬃﬃ2p 2 1:22 2:12 1:220:33 (8.22) Thus, the point  2j ﬃﬃﬃ2p =2is a point on the root locus for a gain of 0.33. We summarize what we have found as follows: Given the poles and zeros of the open-loop transfer function, KG(s)H(s), a point in the s-plane is on the root locus for a particular value of gain, K, if the angles of the zeros minus the angles of the poles, all d r a w nt ot h es e l e c t e dp o i n to nt h es -plane, add up to 2k1180 °.F u r t h e r m o r e ,g a i nK at that point for which the angles add up to 2k1180 °is found by dividing the product of the pole lengths by the product of the zero lengths. 8.4 Sketching the Root Locus It appears from our previous discussion that the root locus can be obtained by sweeping through every point in the s-plane to locate those points for which the angles, as previously described, add up to an odd multiple of 180 °. Although this task is tedious without the aid of a computer, the concept can be used to develop rules that can be used tosketch the root locus without the effort required to plot the locus. Once a sketch isSkill-Assessment Exercise 8.2 PROBLEM: Given a unity feedback system that has the forward transfer function G sK s2 s24s13 do the following: a.Calculate the angle of G(s) at the point (  3j0) by ﬁnding the algebraic sum of angles of the vectors drawn from the zeros and poles of G(s) to the given point. b.Determine if the point speci ﬁed in ais on the root locus. c.If the point speci ﬁed in ais on the root locus, ﬁnd the gain, K, using the lengths of the vectors. ANSWERS: a.Sum of angles 180 ° b.Point is on the root locus c.K10 The complete solution is at www.wiley.com/college/nise .TryIt 8.2 Use MATLAB and the following statements to solve Skill-Assessment Exercise 8.2. s=-3+0j ; G=(s+2) / (s^2 +4*s+13) ; Theta =(180/pi) *... angle(G) M=abs(G) ; K=1/M390 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:47 obtained, it is possible to accurately plot just those points that are of interest to us for a particular problem. The following ﬁve rules allow us to sketch the root locus using minimal calculations. The rules yield a sketch that gives intuitive insight into the behavior of a control system. In the next section, we re ﬁne the sketch by ﬁnding actual points or angles on the root locus. These re ﬁnements, however, require some calculations or the use of computer programs, such as MATLAB. Number of branches. Each closed-loop pole moves as the gain is varied. If we deﬁne a branch as the path that one pole traverses, then there will be one branch for each closed-loop pole. Our ﬁrst rule, then, deﬁ nes the number of branches of the root locus: The number of branches of the root locus equals the number of closed-loop poles. As an example, look at Figure 8.5( b), where the two branches are shown. One originates at the origin, the other at  10. Symmetry. If complex closed-loop poles do not exist in conjugate pairs, the resulting polynomial, formed by multiplying the factors containing the closed-loop poles, would have complex coef ﬁcients. Physically realizable systems cannot have complex coefﬁcients in their transfer functions. Thus, we conclude: The root locus is symmetrical about the real axis. An example of symmetry about the real axis is shown in Figure 8.5( b). Real-axis segments. Let us make use of the angle property, Eq. (8.15), of the points on the root locus to determine where the real-axis segments of the root locus exist. Figure 8.8 shows the poles and zerosof a general open-loop system. If an attempt is made to calculate the angular contribution of the poles and zeros at each point, P 1,P2,P3,a n d P4, along the real axis, we observe the following: (1) At each point the angular contribution of a pair of open-loop complex poles or zeros is zero, and (2) the contribution of the open-loop poles and open-loopzeros to the left of the respective point is zero. The conclusion is that theonly contribution to the angle at any of the points comes from theopen-loop, real-axis poles and zeros that exist to the right of the respectivepoint. If we calculate the angle at each point using only the open-loop, real-axis poles and zeros to the right of each point, we note the following: (1) The angles on the real axis alternate between 0° and 180 °, and (2) the angle is 180 °for regions of the real axis that exist to the left of an odd number of poles and/or zeros. The following rulesummarizes the ﬁndings: On the real axis, for K >0 the root locus exists to the left of an odd number of real-axis, ﬁnite open-loop poles and/or ﬁnite open-loop zeros. Examine Figure 8.6( b). According to the rule just developed, the real-axis segments of the root locus are between  1 and  2 and between  3 and  4 as shown in Figure 8.9. Starting and ending points. Where does the root locus begin (zero gain) and end (inﬁ nite gain)? The answer to this question will enable us to expand the sketch of the root locus beyond the real-axis segments. Consider the closed-loop transfer function,–4jω s-plane –3 –2 –1σ FIGURE 8.9 Real-axis segments of the root locus for the system of Figure 8.6s-planejω P4P3P2P1σ FIGURE 8.8 Poles and zeros of a general open-loop system with test points, Pi, on the real axis8.4 Sketching the Root Locus 391WEBC08 10/28/2014 17:55:48 T(s), described by Eq. (8.3). T(s) can now be evaluated for both large and small gains, K. AsKapproaches zero (small gain), T s≈KN G sDH s DG sDH sϵ(8.23) From Eq. (8.23) we see that the closed-loop system poles at small gains approach the combined poles of G(s) and H(s). We conclude that the root locus begins at the poles of G(s)H(s), the open-loop transfer function. At high gains, where Kis approaching in ﬁnity, T s≈KN G sDH s ϵKN G sNH s(8.24) From Eq. (8.24) we see that the closed-loop system poles at large gains approach the combined zeros of G(s) and H(s). Now we conclude that the root locus ends at the zeros ofG(s)H(s), the open-loop transfer function. Summarizing what we have found: The root locus begins at the ﬁnite and in ﬁnite poles of G (s)H(s)and ends at the ﬁnite and inﬁnite zeros of G (s)H(s). Remember that these poles and zeros are the open-loop poles and zeros. In order to demonstrate this rule, look at the system in Figure 8.6( a), whose real-axis segments have been sketched in Figure 8.9. Using the rule just derived, we ﬁnd that the root locus begins at the poles at  1 and  2 and ends at the zeros at  3 and  4 (see Figure 8.10). Thus, the poles start out at  1 and  2 and move through the real-axis space between the two poles. They meet somewhere between the two poles and break out into the complex plane, moving as complex conjugates. The poles return to the real axissomewhere between the zeros at  3 and  4, where their path is completed as they move away from each other, and end up, respectively, at the two zeros of the open-loop systemat 3 and  4. Behavior at in ﬁnity. Consider applying Rule 4 to the following open-loop transfer function: KG sH s K s s1 s2(8.25) There are three ﬁnite poles, at s0; 1;and 2, and no ﬁnite zeros. A function can also have inﬁnitepoles and zeros. If the function approaches in ﬁnity assapproaches in ﬁnity, then the function has a pole at in ﬁnity. If the function approaches jω –3 –4 –2 –1s-plane j1 –j1σ FIGURE 8.10 Complete root locus for the system of Figure 8.6392 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:48 zero as sapproaches in ﬁnity, then the function has a zero at in ﬁnity. For example, the function G sshas a pole at inﬁ nity, since G(s) approaches in ﬁnity as sapproaches inﬁnity. On the other hand, G s1=shas a zero at in ﬁnity, since G(s) approaches zero as s approaches in ﬁnity. Every function of shas an equal number of poles and zeros if we include the in ﬁnite poles and zeros as well as the ﬁnite poles and zeros. In this example, Eq. (8.25) contains three ﬁnite poles and three in ﬁnite zeros. To illustrate, let sapproach in ﬁnity. The open-loop transfer function becomes KG sH s≈K s3K sss(8.26) Each sin the denominator causes the open-loop function, KG(s)H(s), to become zero as that sapproaches in ﬁnity. Hence, Eq. (8.26) has three zeros at in ﬁnity. Thus, for Eq. (8.25), the root locus begins at the ﬁnite poles of KG(s)H(s) and ends at the in ﬁnite zeros. The question remains: Where are the in ﬁnite zeros? We must know where these zeros are in order to show the locus moving from the three ﬁnite poles to the three inﬁnite zeros. Rule 5 helps us locate these zeros at in ﬁnity. Rule 5 also helps us locate poles at inﬁnity for functions containing more ﬁnite zeros than ﬁnite poles.1 We now state Rule 5, which will tell us what the root locus looks like as it approaches the zeros at in ﬁnity or as it moves from the poles at in ﬁnity. The derivation can be found in Appendix M.1 at www.wiley.com/college/nise . The root locus approaches straight lines as asymptotes as the locus approaches inﬁ nity. Further, the equation of the asymptotes is given by the real-axis intercept, σaand angle, θaas follows: σaPfinite poles  Pfinite zeros #finite poles  #finite zeros(8.27) θa 2k1π #finite poles  #finite zeros(8.28) where k 0;1;2;3and the angle is given in radians with respect to the positive extension of the real axis. Notice that the running index, k, in Eq. (8.28) yields a multiplicity of lines that account for the many branches of a root locus that approach in ﬁnity. Let us demonstrate the concepts with an example. Example 8.2 Sketching a Root Locus with AsymptotesSketching a Root Locus with Asymptotes PROBLEM: Sketch the root locus for the system shown in Figure 8.11. R(s) + –C(s) K(s + 3) s(s + 1)(s + 2)(s + 4) FIGURE 8.11 System for Example 8.2 1Physical systems, however, have more ﬁnite poles than ﬁnite zeros, since the implied differentiation yields in ﬁnite output for discontinuous input functions, such as step inputs.8.4 Sketching the Root Locus 393WEBC08 10/28/2014 17:55:49 SOLUTION: Let us begin by calculating the asymptotes. Using Eq. (8.27), the real-axis intercept is evaluated as σa  1 2 4    3 4 1 4 3(8.29) The angles of the lines that intersect at  4=3, given by Eq. (8.28), are θa 2k1π #finite poles  #finite zeros(8.30a) π=3 for k0 (8.30b) π fork1 (8.30c) 5π=3 for k2 (8.30d) If the value for kcontinued to increase, the angles would begin to repeat. The number of lines obtained equals the difference between the number of ﬁnite poles and the number of ﬁnite zeros. Rule 4 states that the locus begins at the open-loop poles and ends at the open- loop zeros. For the example there are more open-loop poles than open-loop zeros. Thus, there must be zeros at inﬁ nity. The asymptotes te ll us how we get to these zeros at in ﬁnity. Figure 8.12 shows the complete root locus as well as the asymptotes that were just calculated. Notice that we have made use of all the rules learned so far. The real-axissegments lie to the left of an odd number of poles and/or zeros. The locus starts at theopen-loop poles and ends at the open-loop zeros. For the example there is only oneopen-loop ﬁnite zero and three in ﬁnite zeros. Rule 5, then, tells us that the three zeros at inﬁnity are at the ends of the asymptotes. –20Asymptotes-plane –4 –3 AsymptoteAsymptote j1jω 12 –j1 –j2 –j3j3 –1j2 σ FIGURE 8.12 Root locus and asymptotes for the system of Figure 8.11394 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:49 8.5 Re ﬁning the Sketch The rules covered in the previous section permit us to sketch a root locus rapidly. If we want more detail, we must be able to accurately ﬁnd important points on the root locus along with their associated gain. Points on the real axis where the root locus enters or leaves thecomplex plane —real-axis breakaway and break-in points —and the jω-axis crossings are candidates. We can also derive a better picture of the root locus by ﬁnding the angles of departure and arrival from complex poles and zeros, respectively. In this section, we discuss the calculations required to obtain speci ﬁc points on the root locus. Some of these calculations can be made using the basic root locus relationshipthat the sum of the zero angles minus the sum of the pole angles equals an odd multiple of180 °, and the gain at a point on the root locus is found as the ratio of (1) the product of pole lengths drawn to that point to (2) the product of zero lengths drawn to that point. We haveyet to address how to implement this task. In the past, an inexpensive tool called a Spirule TM added the angles together rapidly and then quickly multiplied and divided the lengths toobtain the gain. Today we can rely on hand-held or programmable calculators as well aspersonal computers. Students pursuing MATLAB will learn how to apply it to the root locus at the end of Section 8.6. Other alternatives are discussed in Appendix H.2 at www.wiley.com/college/nise . The discussion can be adapted to programmable hand-held calculators. All readers areencouraged to select a computational aid at this point. Root locus calculations can be laborintensive if hand calculations are used. We now discuss how to reﬁ ne our root locus sketch by calculating real-axis breakaway and break-in points, jω-axis crossings, angles of departure from complex poles, and angles of arrival to complex zeros. We conclude by showing how to ﬁnd accurately any point on the root locus and calculate the gain. Real-Axis Breakaway and Break-In Points Numerous root loci appear to break away from the real axis as the system poles movefrom the real axis to the complex plane. At other times the loci appear to return to the realaxis as a pair of complex poles becomes real. We illustrate this in Figure 8.13. This locus is sketched using the ﬁrst four rules: (1) number of branches, (2) symmetry, (3) real-axis segments, and (4) starting and ending points. The ﬁgure shows a root locus leaving the real axis between  1a n d  2 and returning to the real axis between 3a n d 5. The point where the locus leaves the real axis,  σ 1,i sc a l l e dt h ebreakaway point , and the point where the locus returns to the real axis, σ2,i sc a l l e dt h e break-in point . At the breakaway or break-in point, the branches of the root locus form an angle of 180 °=nwith the real axis, where nis the number of closed-loop poles arriving at or departing from the single breakaway or break-in point on the real axis ( Kuo,1991 ). Thus, for the two poles shown in Figure 8.13, the branches at the breakaway point form 90 °angles with the real axis.Skill-Assessment Exercise 8.3 PROBLEM: Sketch the root locus and its asymptotes for a unity feedback system that has the forward transfer function G sK s2 s4 s6 ANSWER: The complete solution is at www.wiley.com/college/nise .8.5 Reﬁ ning the Sketch 395WEBC08 10/28/2014 17:55:49 We now show how to ﬁnd the breakaway and break-in points. As the two closed-loop poles, which are at  1a n d  2w h e n K0, move toward each other, the gain increases from a value of zero. We conclude that the gain must be maximum along the real axis at the point where the breakaway occurs, somewhere between  1a n d  2. Naturally, the gain increases above this value as the poles move into the complex plane. We concludethat the breakaway point occurs at a point of maximum gain on the real axis between the open-loop poles. Now let us turn our attention to the break-in point somewhere between 3 and 5o n the real axis. When the closed-loop complex pair returns to the real axis, the gain will continue to increase to in ﬁnity as the closed-loop poles move toward the open-loop zeros. It must be true, then, that the gain at the break-in point is the minimum gain found along thereal axis between the two zeros. The sketch in Figure 8.14 shows the variation of real-axis gain. The breakaway point is found at the maximum gain between  1 and  2, and the break-in point is found at the minimum gain between 3 and 5.3 –2 –1–s-planejω 2 1 00j1j3j4 –j1 –j34 52 –j2j2 1 σσ σ FIGURE 8.13 Root locus example showing real-axis breakaway ( σ 1) and break-in points (σ 2) K 5 4 3 2 1 2 –1 –2 –3 1–0σ σ σFIGURE 8.14 Variation of gain along the real axis for theroot locus of Figure 8.13396 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:50 There are three methods for ﬁnding the points at which the root locus breaks away from and breaks into the real axis. The ﬁrst method is to maximize and minimize the gain, K, using differential calculus. For all points on the root locus, Eq. (8.13) yields K 1 G sH s(8.31) For points along the real-axis segment of the root locus where breakaway and break-in points could exist, sσ. Hence, along the real axis Eq. (8.31) becomes K 1 G σH σ(8.32) This equation then represents a curve of Kversus σsimilar to that shown in Figure 8.14. Hence, if we differentiate Eq. (8.32) with respect to σand set the derivative equal to zero, we can ﬁnd the points of maximum and minimum gain and hence the breakaway and break-in points. Let us demonstrate. The second method is a variation on the differential calculus method. Called the transition method , it eliminates the step of differentiation ( Franklin ,1991 ). This method, derived in Appendix M.2 at www.wiley.com/college/nise , is now stated:Example 8.3 Breakaway and Break-in Points via DifferentiationBreakaway and Break-in Points via Differentiation PROBLEM: Find the breakaway and break-in points for the root locus of Figure 8.13, using differential calculus. SOLUTION: Using the open-loop poles and zeros, we represent the open-loop system whose root locus is shown in Figure 8.13 as follows: KG sH sK s 3 s 5 s1 s2K s2 8s15 s23s2(8.33) But for all points along the root locus, KG sH s  1, and along the real axis, sσ. Hence, K σ2 8σ15 σ23σ2 1( 8.34) Solving for K,w e ﬁnd K  σ23σ2 σ2 8σ15(8.35) Differentiating Kwith respect to σand setting the derivative equal to zero yields dK dσ 11σ2 26σ 61 σ2 8σ1520 (8.36) Solving for σ,w eﬁ ndσ 1:45 and 3.82, which are the breakaway and break-in points.8.5 Reﬁ ning the Sketch 397WEBC08 10/28/2014 17:55:52 Breakaway and break-in points satisfy the relationship Xm 11 σziXn 11 σpi(8.37) where z iand piare the negative of the zero and pole values, respectively, of G (s)H(s). Solving Eq. (8.37) for σ, the real-axis values that minimize or maximize K, yields the breakaway and break-in points without differentiating. Let us look at an example. For the third method, the root locus program discussed in Appendix H.2 at www.wiley.com/college/nise c a nb eu s e dt oﬁ nd the breakaway and break-in points. Simply use the program to search for the point of maximum gain between  1a n d  2 and to search for the point of minimum gain between 3a n d 5. Table 8.2 shows the results of the search. The l ocus leaves the axis at  1:45, the point of maximum gainExample 8.4 Breakaway and Break-in Points Without DifferentiationBreakaway and Break-in Points Without Differentiation PROBLEM: Repeat Example 8.3 without differentiating. SOLUTION: Using Eq. (8.37), 1 σ 31 σ 51 σ11 σ2(8.38) Simplifying, 11σ2 26σ 610 (8.39) Hence, σ 1:45 and 3.82, which agrees with Example 8.3. TABLE 8.2 Data for breakaway and break-in points for the root locus of Figure 8.13 Real-axis value Gain Comment  1.41 0.008557  1.42 0.008585  1.43 0.008605  1.44 0.008617  1.45 0.008623 ← Max:gain :breakaway  1.46 0.008622 3.3 44.686 3.4 37.125 3.5 33.000 3.6 30.667 3.7 29.440 3.8 29.000 ← Min:gain :break-in 3.9 29.202398 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:54 between  1a n d  2, and reenters the real axis at 3:8, the point of minimum gain between 3a n d 5 .T h e s er e s u l t sa r et h es a m ea st h o s eo b t a i n e du s i n gt h e ﬁrst two methods. MATLAB also has the capability of ﬁnding breakaway and break-in points. Thejω-Axis Crossings We now further re ﬁne the root locus by ﬁnding the imaginary-axis crossings. The importance of the jω-axis crossings should be readily apparent. Looking at Figure 8.12, we see that the system ’s poles are in the left half-plane up to a particular value of gain. Above this value of gain, two of the closed-loop system ’s poles move into the right half- plane, signifying that the system is unstable. The jω-axis crossing is a point on the root locus that separates the stable operation of the system from the unstable operation. The value of ωat the axis crossing yields the frequency of oscillation, while the gain at the jω-axis crossing yields, for this example, the maximum positive gain for system stability. We should note here that other exampl es illustrate instability at small values of gain and stability at large values of gain. These systems have a root locus starting in theright– half-plane (unstable at small values of gain) and ending in the left –half-plane (stable for high values of gain). Toﬁnd the jω-axis crossing, we can use the Routh -Hurwitz criterion, covered in Chapter 6, as follows: Forcing a row of zero s in the Routh table will yield the gain; going back one row to the even polynomial equation and solving for the roots yields thefrequency at the imaginary-axis crossing. Example 8.5 Frequency and Gain at Imaginary-Axis CrossingFrequency and Gain at Imaginary-Axis Crossing PROBLEM: For the system of Figure 8.11, ﬁnd the frequency and gain, K, for which the root locus crosses the imaginary axis. For what range of Kis the system stable? SOLUTION: The closed-loop transfer function for the system of Figure 8.11 is T sK s3 s47s314s2 8Ks3K(8.40) Using the denominator and simplifying some of the entries by multiplying any row by a constant, we obtain the Routh array shown in Table 8.3. A complete row of zeros yields the possibility for imaginary axis roots. For positive values of gain, those for which the root locus is plotted, only the s1row can yield a row of zeros. Thus,  K2 65K7200 (8.41) TABLE 8.3 Routh table for Eq (8.40) s4 11 4 3 K s3 78 K s2 90 K 21K s1 K2 65K720 90 K s0 21K8.5 Reﬁ ning the Sketch 399WEBC08 10/28/2014 17:55:55 Another method for ﬁnding the jω-axis crossing (or any point on the root locus, for that matter) uses the fact that at the jω-axis crossing, the sum of angles from the ﬁnite open-loop poles and zeros must add to 2k1180 °. Thus, we can search jω-axis until we ﬁnd the point that meets this angle condition. A computer program, such as the root locus program discussed in Appendix H.2 at www.wiley.com/college/nise or MATLAB, can be used for this purpose. Subsequent examples in this chapter use this method to determine thejω-axis crossing. Angles of Departure and Arrival In this subsection, we further re ﬁne our sketch of the root locus by ﬁnding angles of departure and arrival from complex poles and zeros. Consider Figure 8.15, which showsthe open-loop poles and zeros, some of which are complex. The root locus starts at theopen-loop poles and ends at the open-loop zeros. In order to sketch the root locus moreaccurately, we want to calculate the root locus departure angle from the complex poles andthe arrival angle to the complex zeros. If we assume a point on the root locus ϵclose to a complex pole, the sum of angles drawn from all ﬁnite poles and zeros to this point is an odd multiple of 180 °. Except for the pole that is ϵclose to the point, we assume all angles drawn from all other poles and zeros are drawn directly to the pole that is near the point. Thus, the only unknown angle in the sum isthe angle drawn from the pole that is ϵclose. We can solve for this unknown angle, which is also the angle of departure from this complex pole. Hence, from Figure 8.15( a),  θ 1θ2θ3 θ4 θ5θ6 2k1180 ° (8.44a) or θ1θ2θ3 θ4 θ5θ6  2k1180 ° (8.44b) If we assume a point on the root locus ϵclose to a complex zero, the sum of angles drawn from all ﬁnite poles and zeros to this point is an odd multiple of 180 °. Except for the zero that is ϵclose to the point, we can assume all angles drawn from all other poles and zeros are drawn directly to the zero that is near the point. Thus, the only unknownangle in the sum is the angle drawn from the zero that is ϵclose. We can solve for this unknown angle, which is also the angle of arrival to this complex zero. Hence, fromFigure 8.15( b),  θ 1θ2θ3 θ4 θ5θ6 2k1180 ° (8.45a) or θ2θ1 θ3θ4θ5 θ6 2k1180 ° (8.45b)From this equation Kis evaluated as K9:65 (8.42) Forming the even polynomial by using the s2row with K9:65, we obtain 90 Ks221K80:35s2202:70 (8.43) andsis found to be equal to j1:59. Thus the root locus crosses the jω-axis at j1:59 at a gain of 9.65. We conclude that the system is stable for 0 K<9:65.400 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:55 Let us look at an example.2 s-plane – θ1 + θ2 + θ3 – θ4 – θ5 + θ6 = (2k + 1)180σ (a)θ1𝜖 θ4θ6 θ5 θ3jω θ jω s-plane σ (b)θ4θ2 θ2 θ6 θ5 θ3𝜖 – θ1 + θ2 + θ3 – θ4 – θ5 + θ6 = (2k + 1)180 FIGURE 8.15 Open-loop poles and zeros and calculation of a.angle of departure; b.angle of arrival Example 8.6 Angle of Departure from a Complex PoleAngle of Departure from a Complex Pole PROBLEM: Given the unity feedback system of Figure 8.16, ﬁnd the angle of departure from the complex poles and sketch the root locus. K(s + 2) (s + 3)(s2 + 2s + 2)R(s) C(s) –+ FIGURE 8.16 Unity feedback system with complex poles8.5 Reﬁ ning the Sketch 401WEBC08 10/28/2014 17:55:55 Plotting and Calibrating the Root Locus Once we sketch the root locus using the rules from Section 8.4, we may want to accurately locate points on the root locus as well as ﬁnd their associated gain. For example, we might want to know the exact coordinates of the root locus as it crosses the radial line representing20% overshoot. Further, we also may want the value of gain at that point. Consider the root locus shown in Figure 8.12. Let us assume we want to ﬁnd the exact point at which the locus crosses the 0.45 damping ratio line and the gain at that point.Figure 8.18 shows the system ’s open-loop poles and zeros along with the ζ0:45 line. If a few test points along the ζ0:45 line are selected, we can evaluate their angular sum and locate that point where the angles add up to an odd multiple of 180 °. It is at this point that the root locus exists. Equation (8.20) can then be used to evaluate the gain, K, at that point. Selecting the point at radius 2 r2on the ζ0:45 line, we add the angles of the zeros and subtract the angles of the poles, obtaining θ 2 θ1 θ3 θ4 θ5 251:5° (8.47)SOLUTION: Using the poles and zeros of G s s2= s3 s22s2as plotted in Figure 8.17, we calculate the sum of angles drawn to a point ϵclose to the complex pole,  1j1, in the second quadrant. Thus,  θ1 θ2θ3 θ4 θ1 90°tan 11 1/C18/C19  tan 112/C18/C19 180 ° (8.46) from which θ 251:6°108:4°. A sketch of the root locus is shown in Figure 8.17. Notice how the departure angle from the complex poles helps us to re ﬁne the shape. jω j4 j3j2 j1 –j4–j3–j2–j1Angle of departure –10–2 –3 –4s-plane θ1 θ3 θ4 θ2σ FIGURE 8.17 Root locus for system of Figure 8.16 showing angle of departure402 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:56 Since the sum is not equal to an odd multiple of 180 °, the point at radius 2 is not on the root locus. Proceeding similarly for the points at radius 1:5;1;0:747, and 0.5, we obtain the table shown in Figure 8.18. This table lists the points, giving their radius, r, and the sum of angles indicated by the symbol . From the table we see that the point at radius 0.747 is on the root locus, since the angles add up to  180 °. Using Eq. (8.21), the gain, K, at this point is KjAjjCjjDjjEj jBj1:71 (8.48) In summary, we search a given line for the point yielding a summation of angles (zero angles –pole angles) equal to an odd multiple of 180 °. We conclude that the point is on the root locus. The gain at that point is then found by multiplying the pole lengths drawn to that point and dividing by the product of the zero lengths drawn to that point . A computer program, such as that discussed in Appendix H.2 at www.wiley.com/college/nise or MATLAB, can be used.–4 –3 –2 –15 4 3 2 1j1j2jω r = 2 r = 1 r = 0.5E D CBA0.5 0.7471.01.52.0–158.4–180.0–199.9–230.4–251.5Radius rAngle (degrees) = 0.45 s-planer =1.5 0𝜁 θθ θ θ θσ FIGURE 8.18 Finding and calibrating exact points on the root locus of Figure 8.12 Skill-Assessment Exercise 8.4 PROBLEM: Given a unity feedback system that has the forward transfer function G sK s2 s2 4s13 do the following: a.Sketch the root locus. b.Find the imaginary-axis crossing. c.Find the gain, K, at the jω-axis crossing. d.Find the break-in point. e.Find the angle of departure from the complex poles. ANSWERS: a.See solution at www.wiley.com/college/nise . b.sjﬃﬃﬃﬃﬃ 21p c.K4 d.Break-in point  7 e.Angle of departure  233:1° The complete solution is at www.wiley.com/college/nise .8.5 Reﬁ ning the Sketch 403WEBC08 10/28/2014 17:55:56 8.6 An Example We now review the rules for sketching and ﬁnding points on the root locus, as well as present an example. The root locus is the path of the closed-loop poles of a system as a parameter of the system is varied. Each point on the root locus satis ﬁes the angle condition, G sH s 2k1180 °. Using this relationship, rules for sketching and ﬁnding points on the root locus were developed and are now summarized. Basic Rules for Sketching the Root Locus Number of branches The number of branches of the root locus equals the number of closed-loop poles. Symmetry The root locus is symmetrical about the real axis. Real-axis segments On the real axis, for K>0 the root locus exists to the left of an odd number of real-axis, ﬁnite open-loop poles and/or ﬁnite open-loop zeros. Starting and ending points The root locus begins at the ﬁnite and in ﬁnite poles of G(s)H(s) and ends at the ﬁnite and in ﬁnite zeros of G(s)H(s). Behavior at in ﬁnity The root locus approaches straight lines as asymptotes as the locus approaches in ﬁnity. Further, the equations of the asymptotes are given by the real-axis intercept and angle in radians as follows: σaPfinite poles  Pfinite zeros #finite poles  #finite zeros(8.49) θa 2k1π #finite poles  #finite zeros(8.50) where k0;1;2;3;.... Additional Rules for Re ﬁning the Sketch Real-axis breakaway and break-in points The root locus breaks away from the real axis at a point where the gain is maximum and breaks into the real axis at a point where the gainis minimum. Calculation of j ω-axis crossings The root locus crosses the jω-axis at the point where G sH s 2k1180 °. Routh-Hurwitz or a search of the jω-axis for 2k1180 ° can be used to ﬁnd the jω-axis crossing. Angles of departure and arrival The root locus departs from complex, open-loop poles and arrives at complex, open-loop zeros at angles that can be calculated as follows. Assume apoint ϵclose to the complex pole or zero. Add all angles drawn from all open-loop poles and zeros to this point. The sum equals 2k1180 °. The only unknown angle is that drawn from the ϵclose pole or zero, since the vectors drawn from all other poles and zeros can be considered drawn to the complex pole or zero that is ϵclose to the point. Solving for the unknown angle yields the angle of departure or arrival. Plotting and calibrating the root locus All points on the root locus satisfy the relationship G sH s 2k1180°. The gain, K, at any point on the root locus is given by K1 jG sH sj1 M Πfinite pole lengths Πfinite zero lengths(8.51)404 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:57 Two animation PowerPoint presentations (PPTs) demonstrating root locus plotting are available for instructors at www.wiley.com/college/nise .S e e Root-Locus Plotter and Dynamic Root-Locus . Let us now look at a summary example. Example 8.7 Sketching a Root Locus and Finding Critical PointsSketching a Root Locus and Finding Critical Points PROBLEM: Sketch the root locus for the system shown in Figure 8.19( a) and ﬁnd the following: a.The exact point and gain where the locus crosses the 0.45 damping ratio line b.The exact point and gain where the locus crosses the jω-axis c.The breakaway point on the real axis d.The range of Kwithin which the system is stable –2= 0.45 –j50 ( )bR(s) C(s) K(s2 – 4s + 20) (s + 2)(s + 4) ( )a jω –4s-plane2 + j4 2 – j4–j1 –j2 –j3 –j4j2j3j4j5 24–1 3 1 –3+ – j1j1 σ𝜁 FIGURE 8.19 a.System for Example 8.7; b.root locus sketch8.6 An Example 405WEBC08 10/28/2014 17:55:58 SOLUTION: The problem solution is shown, in part, in Figure 8.19( b). First sketch the root locus. Using Rule 3, the real-axis segment is found to be between  2a n d 4. Rule 4 tells us that the root locus starts at the open-loop poles and ends at the open-loop zeros. These two rules alone give us the general shape of the root locus. a.Toﬁnd the exact point where the locus crosses the ζ0:45 line, we can use the root locus program discussed in Appendix H.2 at www.wiley.com/college/nise to search along the line θ180 ° cos 10:45116:7° (8.52) for the point where the angles add up to an odd multiple of 180 °. Searching in polar coordinates, we ﬁnd that the root locus crosses the ζ0:45 line at 3 :4116:7°with a gain, K, of 0.417. b.Toﬁnd the exact point where the locus crosses the jω-axis, use the root locus program to search along the line θ90° (8.53) for the point where the angles add up to an odd multiple of 180 °. Searching in polar coordinates, we ﬁnd that the root locus crosses the jω-axis at j3:9 with a gain of K1:5. c.Toﬁnd the breakaway point, use the root locus program to search the real axis between  2 and  4 for the point that yields maximum gain. Naturally, all points will have the sum of their angles equal to an odd multiple of 180 °. A maximum gain of 0.0248 is found at the point  2:88. Therefore, the breakaway point is between the open-loop poles on the real axis at  2:88. d.From the answer to b, the system is stable for Kbetween 0 and 1.5. Students who are using MATLAB should now run ch8p1 in Appendix B. You will learn how to use MATLAB to plot and title a root locus,overlay constant ζand ω ncurves, zoom into and zoom out from a root locus, and interact with the root locus to ﬁnd critical points as well as gains at those points. This exercise solves Example 8.7using MATLAB. Skill-Assessment Exercise 8.5 PROBLEM: Given a unity feedback system that has the forward transfer function G sK s 2 s 4 s26s25 do the following: a.Sketch the root locus. b.Find the imaginary-axis crossing. c.Find the gain, K, at the jω-axis crossing. d.Find the break-in point. e.Find the point where the locus crosses the 0.5 damping ratio line. f.Find the gain at the point where the locus crosses the 0.5 damping ratio line. g.Find the range of gain, K, for which the system is stable.TryIt 8.3 Use MATLAB, the Control System Toolbox, and the following statements to plotthe root locus for Skill-Assessment Exercise 8.5. Solve the remaining parts of the problem by clicking on theappropriate points on theplotted root locus. numg=poly( [2 4] ) ; deng=[1 6 25] ; G=tf(numg,deng) rlocus(G) z=0.5 sgrid(z,0)406 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:55:59 8.7 Transient Response Design via Gain Adjustment Now that we know how to sketch a root locus, we show how to use it for the design of transient response. In the last section we found that the root locus crossed the 0.45damping ratio line with a gain of 0.417. D oes this mean that the system will respond with 20.5% overshoot, the equivalent to a damping ratio of 0.45? It must be emphasized that the formulas describing percent overshoot, settling time, and peak time were derived only for a system with two closed-loop complex poles and no closed-loop zeros. Theeffect of additional poles and zeros and the conditions for justifying an approximation ofa two-pole system were discussed in Sections 4.7 and 4.8 and apply here to closed-loopsystems and their root loci. The conditions justifying a second-order approximation arerestated here: 1.Higher-order poles are much farther into the left half of the s-plane than the dominant second-order pair of poles. The response that results from a higher-order pole does not appreciably change the transient response expected from the dominant second-orderpoles. 2.Closed-loop zeros near the closed-loop second-order pole pair are nearly canceled by the close proximity of higher-order closed-loop poles. 3.Closed-loop zeros not canceled by the close proximity of higher-order closed-loop poles are far removed from the closed-loop second-order pole pair. Theﬁrst condition as it applies to the root locus is shown graphically in Figure 8.20( a) and ( b). Figure 8.20( b) would yield a much better second-order approximation than Figure 8.20( a), since closed-loop pole p 3is farther from the dominant, closed-loop second- order pair, p1andp2. The second condition is shown graphically in Figure 8.20( c) and ( d). Figure 8.20( d) would yield a much better second-order approximation than Figure 8.20( c), since closed-loop pole p3is closer to canceling the closed-loop zero. Summarizing the design procedure for higher-order systems, we arrive at the following: 1.Sketch the root locus for the given system. 2.Assume the system is a second-order system without any zeros and then ﬁnd the gain to meet the transient response speci ﬁcation. 3.Justify your second-order assumption by ﬁnding the location of all higher-order poles and evaluating the fact that they are much farther from the jω-axis than the dominantANSWERS: a.See solution at www.wiley.com/college/nise . b.sj4:06 c.K1 d.Break-in point 2:89 e.s 2:42j4:18 f.K0:108 g.K<1 The complete solution is at www.wiley.com/college/nise .8.7 Transient Response Design via Gain Adjustment 407WEBC08 10/28/2014 17:56:0 second-order pair. As a rule of thumb, this textbook assumes a factor of ﬁve times farther. Also, verify that closed-loop zeros are approximately canceled by higher-order poles. If closed-loop zeros are not canceled by higher-order closed-looppoles, be sure that the zero is far removed from the dominant second-order pole pairto yield approximately the same response obtained without the ﬁnite zero. 4.If the assumptions cannot be justi ﬁed, your solution will have to be simulated in order to be sure it meets the transient response speci ﬁcation. It is a good idea to simulate all solutions, anyway. We now look at a design example to show how to make a second-order approximation and then verify whether or not the approximation is valid.jω p1s-plane (a) (d)Open-loop pole Closed-loop pole Closed-loop zerop2p3 jω s-planep1 p2(b)jω s-planep1 p2 (c)jω s-planep1 p2p3 p3 p3σ σσ σ FIGURE 8.20 Making second-order approximations Example 8.8 Third-Order System Gain DesignThird-Order System Gain Design PROBLEM: Consider the system shown in Figure 8.21. Design the value of gain, K,t o yield 1.52% overshoot. Also estimate the settling time, peak time, and steady-state error. SOLUTION: The root locus is shown in Figure 8.22. Notice that this is a third-order system with one zero. Breakaway points on the real axis can occur between 0 and  1 and between  1:5 and  10, where the gain reaches a peak. Using the root locus program and searching in these regions for the peaks in gain, breakaway points are found at  0:62 with a gain of 2.511 and at  4:4 with a gain of 28.89. A break-in point on the real axis can occur between  1:5 and  10, where the gain reaches a local minimum. Using the root locus program and searching in these regions for the local minimum gain, a break-in point is found at  2:8 with a gain of 27.91. Next assume that the system can be approximated by a second- order, under-damped system without any zeros. A 1.52% overshoot corresponds to a damping ratio of 0.8. Sketch this damping ratio lineon the root locus, as shown in Figure 8.22.C(s) s(s + 1)(s + 10)K(s + 1.5) E(s) R(s) + –+ –+ – FIGURE 8.21 System for Example 8.8408 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:2 Use the root locus program to search along the 0.8 damping ratio line for the point where the angles from the open-loop poles and zeros add up to an odd multiple of 180 °. This is the point where the root locus crosses the 0.8 damping ratio or 1.52 percent overshoot line. Three points satisfy this criterion:  0:87j0:66; 1:19j0:90, and  4:6j3:45 with respective gains of 7.36, 12.79, and 39.64. For each point the settling time and peak time are evaluated using Ts4 ζωn(8.54) where ζωnis the real part of the closed-loop pole, and also using Tpπ ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p (8.55) where ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ1 ζ2p is the imaginary part of the closed-loop pole. To test our assumption of a second-order system, we must calculate the location of the third pole. Using the root locus program, search along the negative extension of the real axis between the zero at  1:5 and the pole at  10 for points that match the value of gain found at the second-order dominant poles. For each of the three crossings of the 0.8 damping ratio line, the third closed-loop pole is at  9:25, 8:6, and  1:8, respectively. The results are summarized in Table 8.4. Finally, let us examine the steady-state error produced in each case. Note that we have little control over the steady-state error at this point. When the gain is set to meetjω j2 0j3j4 –j1 –j2s-plane –10–4.6 + j3.45, K = 39.64= 0.8 –1 –1.5–1.19 + j0.90, K = 12.79 –0.87 + j0.66, K = 7.36 –9 –8 –7 –6 –5 – 4 –3 = Closed-loop pole = Open-loop pole𝜁 σ FIGURE 8.22 Root locus for Example 8.8 TABLE 8.4 Characteristics of the system of Example 8.8 CaseClosed-loop polesClosed- loop zero GainThird closed-loop poleSettling timePeak time Kv 1  0:87j0:66  1:5j0 7.36  9.25 4.60 4.76 1.1 2  1:19j0:90  1:5j0 12.79  8.61 3.36 3.49 1.9 3  4:60j3:45  1:5j0 39.64  1.80 0.87 0.91 5.98.7 Transient Response Design via Gain Adjustment 409WEBC08 10/28/2014 17:56:2 the transient response, we have also designed the steady-state error. For the example, the steady-state error speci ﬁcation is given by Kvand is calculated as Kvlim s®0sG sK 1:5 1 10(8.56) The results for each case are shown in Table 8.4. How valid are the second-order assumptions? From Table 8.4, Cases 1 and 2 yield third closed-loop poles that are relatively far from the closed-loop zero. For these twocases there is no pole-zero cancellation, and a second-order system approximation is not valid. In Case 3, the third closed-loop pole and the closed-loop zero are relatively close to each other, and a second-order system approximation can be considered valid. In orderto show this, let us make a partial-fraction expansion of the closed-loop step response ofCase 3 and see that the amplitude of the exponential decay is much less than the amplitudeof the underdamped sinusoid. The closed-loop step response, C 3 s, formed from the closed-loop poles and zeros of Case 3 is C3 s39:64 s1:5 s s1:8 s4:6j3:45 s4:6 j3:45 39:64 s1:5 s s1:8 s29:2s33:06 1 s0:3 s s18 1:3 s4:61:6 3:45 s4:623:452(8.57) Thus, the amplitude of the exponential decay from the third pole is 0.3, and the amplitude of the underdamped response from the dominant poles isﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1:321:62p 2:06. Hence, the dominant pole response is 6.9 times as large as the nondominant exponential response, and we assume that a second-order approximation is valid. Using a simulation program, we obtain Figure 8.23, which shows comparisons of step responses for the problem we have just solved. Cases 2 and 3 are plotted for boththe third-order response and a second-order response, assuming just the dominant pair of poles calculated in the design problem. Again, the second-order approximation was justi ﬁed for Case 3, where there is a small difference in percent overshoot. The second-order approximation is not valid for Case 2. Other than the excess overshoot,Case 3 responses are similar. Third-order, K = 12.79 Second-order, K = 12.79 (a)Case 2 response 0.0 0Response Time (seconds)0.20.40.60.81.01.2 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5Third-order, K = 39.64 Second-order, K = 39.64 0Response Time (seconds) ( )b0.20.40.60.81.01.2 0.5 1 1.5 2 2.5 3 3.5 4 4.5 50.0Case 3 response FIGURE 8.23 Second- and third-order responses for Example 8.8: a.Case 2; b.Case 3410 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:3 Students who are using MATLAB may want to explore the SISO Design Tool described in Appendix E at www.wiley.com/college/nise. The SISO Design Tool is a convenient and intuitive way to obtain, view,and interact with a system ’s root locus. Section D.7 describes the advantages of using the tool, while Section D.8 describes how touse it. For practice, you may want to apply the SISO Design Tool tosome of the problems at the end of this chapter. 8.8 Generalized Root Locus Up to this point we have always drawn the root locus as a function of the forward-path gain, K. The control system designer must often know how the closed-loop poles change as a function of another parameter. For example, in Figure 8.24, the parameter of interest is the open-loop pole at  p1. How can we obtain a root locus for variations of the value of p1?Students who are using MATLAB should now run ch8p2 in Appendix B.You will learn how to use MATLAB to enter a value of percentovershoot from the keyboard. MATLAB will then draw the root locus and overlay the percent overshoot line requested. You will then interact with MATLAB and select the point of intersection of theroot locus with the requested percent overshoot line. MATLABwill respond with the value of gain, all closed-loop poles atthat gain, and a closed-loop step response plot corresponding tothe selected point. This exercise solves Example 8.8 using MATLAB. Skill-Assessment Exercise 8.6 PROBLEM: Given a unity feedback system that has the forward-path transfer function G sK s2 s4 s6 do the following: a.Sketch the root locus. b.Using a second-order approximation, design the value of Kto yield 10% overshoot for a unit-step input. c.Estimate the settling time, peak time, rise time, and steady-state error for the value of K designed in (b). d.Determine the validity of your second-order approximation. ANSWERS: a.See solution located at www.wiley.com/college/nise . b.K45:55 c.Ts1:97 s;Tp1:13 s;Tr0:53 s, and estep ∞0:51 d.Second-order approximation is not valid. The complete solution is located at www.wiley.com/college/nise .8.8 Generalized Root Locus 411WEBC08 10/28/2014 17:56:4 If the function KG(s)H(s) is formed as KG sH s10 s2 sp1(8.58) the problem is that p1is not a multiplying factor of the function, as the gain, K, was in all of the previous problems. The solution to this dilemma is to create an equivalent system where p1appears as the forward-path gain. Since the closed-loop transfer function ’s denomi- nator is 1 KG sH s, we effectively want to create an equivalent system whose denominator is 1 p1G sH s. For the system of Figure 8.24, the closed-loop transfer function is T sKG s 1KG sH s10 s2 p12s2p110(8.59) Isolating p1, we have T s10 s22s10p1 s2(8.60) Converting the denominator to the form [1 p1G sH s]b y dividing numerator and denominator by the term not included with p1;s22s10, we obtain T s10 s22s10 1p1 s2 s22s10(8.61) Conceptually, Eq. (8.61) implies that we have a system for which KG sH sp1 s2 s22s10(8.62) The root locus can now be sketched as a function of p1, assuming the open-loop system of Eq. (8.62). The ﬁnal result is shown in Figure 8.25. In this section, we learned to plot the root locus as a function of any system parameter. In the next section we will learn how to plot root loci for positive-feedback systems.–10 0jω s-plane j2j4j6 –j2 –j4 –j6–5 –2σ FIGURE 8.25 Root locus for the system of Figure 8.24, with p1as a parameterR(s) C(s) (s + 2)(s + p1)10 + – FIGURE 8.24 System requiring a root locus calibrated with p1as a parameter Skill-Assessment Exercise 8.7 PROBLEM: Sketch the root locus for variations in the value of p1, for a unity feedback system that has the following forward transfer function: G s100 s sp1 ANSWER: The complete solution is at www.wiley.com/college/nise .412 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:4 8.9 Root Locus for Positive-Feedback Systems The properties of the root locus were derived from the system of Figure 8.1. This is a negative-feedback system because of the negativesumming of the feedback signal to the input signal. The properties of theroot locus change dramatically if the feedback signal is added to the inputrather than subtracted. A positive-feedback system can be thought of as anegative-feedback system with a negative value of H(s). Using this concept, we ﬁnd that the transfer function for the positive-feedback s y s t e ms h o w ni nF i g u r e8 . 2 6i s T sKG s 1 KG sH s(8.63) We now retrace the development of the root locus for the denominator of Eq. (8.63). Obviously, a pole, s, exists when KG sH s11k360 °k0;1;2;3;... (8.64) Therefore, the root locus for positive-feedback systems consists of all points on the s-plane where the angle of KG sH sk360 °. How does this relationship change the rules for sketching the root locus presented in Section 8.4? Number of branches. The same arguments as for negative feedback apply to this rule. There is no change. Symmetry. The same arguments as for negative feedback apply to this rule. There is no change. Real-axis segments. The development in Section 8.4 for the real-axis segments led to the fact that the angles of G(s)H(s) along the real axis added up to either an odd multiple of 180 °or a multiple of 360 °. Thus, for positive-feedback systems the root locus exists on the real axis along sections where the locus for negative-feedback systems does not exist. The rule follows: Real-axis segments: On the real axis, the root locus for positive-feedback systems exists tothe left of an even number of real-axis, ﬁnite open-loop poles and/or ﬁnite open-loop zeros. The change in the rule is the word even; for negative-feedback systems the locus existed to the left of an oddnumber of real-axis, ﬁnite open-loop poles and/or zeros. Starting and ending points. You will ﬁnd no change in the development in Section 8.4 if Eq. (8.63) is used instead of Eq. (8.12). Therefore, we have the following rule. Starting and ending points: The root locus for positive-feedback systems begins at theﬁnite and in ﬁnite poles of G(s)H(s) and ends at the ﬁnite and in ﬁnite zeros of G(s)H(s). Behavior at in ﬁnity. The changes in the development of the asymptotes begin at Eq.(M.4) in Appendix M at www.wiley.com/college/nise since positive-feedback systems follow the relationship in Eq. (8.64). That change yields a different slopefor the asymptotes. The value of the real-axis intercept for the asymptotes remainsunchanged. The student is encouraged to go through the development in detail and showthat the behavior at in ﬁnity for positive-feedback systems is given by the following rule: The root locus approaches straight lines as asymptotes as the locus approachesinﬁnity. Further, the equations of the asymptotes for positive-feedback systems are given by the real-axis intercept, σ a, and angle, θa,a sf o l l o w s :KG(s) H(s)C(s) R(s) + ++ FIGURE 8.26 Positive-feedback system8.9 Root Locus for Positive-Feedback Systems 413WEBC08 10/28/2014 17:56:5 σaPfinite poles  Pfinite zeros #finite poles  #finite zeros(8.65) θak2π #finite poles  #finite zeros(8.66) where k 0;1;2;3;..., and the angle is given in radians with respect to the positive extension of the real axis . The change we see is that the numerator of Eq. (8.66) is k2πinstead of 2k1π. What about other calculations? The imaginary-axis crossing can be found using the root locus program. In a search of the jω-axis, you are looking for the point where the angles add up to a multiple of 360 °instead of an odd multiple of 180 °. The breakaway points are found by looking for the maximum value of K. The break-in points are found by looking for the minimum value of K. When we were discussing negative -feedback systems, we always made the root locus plot for positive values of gain. Since positive -feedback systems can also be thought of as negative -feedback systems with negative gain, the rules developed in this section apply equally to negative -feedback systems with negative gain. Let us look at an example. Example 8.9 Root Locus for a Positive-Feedback SystemRoot Locus for a Positive-Feedback System PROBLEM: Sketch the root locus as a function of negative gain, K, for the system shown in Figure 8.11. SOLUTION: The equivalent positive-feedback system found by pushing  1, associated with K, to the right past the pickoff point is shown in Figure 8.27( a). Therefore, as the gain of the equivalent system goes through positive values of K, the root locus will be equivalent to that generated by the gain, K, of the original system in Figure 8.11 as it goes through negative values. The root locus exists on the real axis to the left of an even number of real, ﬁnite open-loop poles and/or zeros. Therefore, the locus exists on the entire positive extension of the real axis, between  1a n d  2a n db e t w e e n  3a n d  4. Using Eq. (8.27), the σa intercept is found to be σa  1 2 4    3 4 1 4 3(8.67) The angles of the lines that intersect at  4=3 are given by θak2π #finite poles  #finite zeros(8.68a) 0 for k0 (8.68b) 2π=3 for k1 (8.68c) 4π=3 for k2 (8.68d) Theﬁnal root locus sketch is shown in Figure 8.27( b).414 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:5 8.10 Pole Sensitivity The root locus is a plot of the closed-loop poles as a system parameter is varied. Typically, that system parameter is gain. Any change in the parameter changes the closed-loop poles and, subsequently, the performance of the system. Many times theparameter changes against our wishes, due to heat or other environmental conditions.We would like to ﬁnd out the extent to which changes in parameter values affect the performance of our system. The root locus exhibits a nonlinear relationship between gain and pole location. Along some sections of the root locus, (1) very small changes in gain yield very large changes in pole location and hence performance; along other sections of the root locus, (2) very large changes in gain yield very small changes in pole location. In the ﬁrst case we say that theSkill-Assessment Exercise 8.8 PROBLEM: Sketch the root locus for the positive-feedback system whose forward transfer function is G sK s4 s1 s2 s3 The system has unity feedback. ANSWER: The complete solution is at www.wiley.com/college/nise .–1C(s) + 12345 –5 –3s-planejω(a)+ K(s + 3) s(s + 1)(s + 2)(s + 4)R(s) 4– 2 – 1 (b)–j3–j2–j1j1j2j3 –σ FIGURE 8.27 a.Equivalent positive-feedback system for Example 8.9; b.root locus8.10 Pole Sensitivity 415WEBC08 10/28/2014 17:56:6 system has a high sensitivity to changes in gain. In the second case, the system has a low sensitivity to changes in gain. We prefer systems with low sensitivity to changes in gain. In Section 7.7, we de ﬁned sensitivity as the ratio of the fractional change in a function to the fractional change in a parameter as the change in the parameter approaches zero. Applying the same de ﬁnition to the closed-loop poles of a system that vary with a parameter, we de ﬁne root sensitivity as the ratio of the fractional change in a closed-loop pole to the fractional change in a system parameter, such as gain. Using Eq. (7.75), we calculate thesensitivity of a closed-loop pole, s, to gain, K: Ss:KK sδs δK(8.69) where sis the current pole location, and Kis the current gain. Using Eq. (8.69) and converting the partials to ﬁnite increments, the actual change in the closed-loop poles can be approximated as ΔssS s:K ΔK K(8.70) where Δsis the change in pole location, and ΔK=Kis the fractional change in the gain, K. Let us demonstrate with an example. We begin with the characteristic equation from whichδs=δKcan be found. Then, using Eq. (8.69) with the current closed-loop pole, s, and its associated gain, K, we can ﬁnd the sensitivity. Example 8.10 Root Sensitivity of a Closed-Loop System to Gain VariationsRoot Sensitivity of a Closed-Loop System to Gain Variations PROBLEM: Find the root sensitivity of the system in Figure 8.4 at s 9:47 and  5j5. Also calculate the change in the pole location for a 10% change in K. SOLUTION: The system ’s characteristic equation, found from the closed-loop transfer function denominator, is s210sK0. Differentiating with respect to K, we have 2sδs δK10δs δK10 (8.71) from which δs δK 1 2s10(8.72) Substituting Eq. (8.72) into Eq. (8.69), the sensitivity is found to be Ss:KK s* 1 2s10(8.73) For s 9:47, Table 8.1 shows K5. Substituting these values into Eq. (8.73) yields Ss:K 0:059. The change in the pole location for a 10% change in Kcan be found using Eq. (8.70), with s 9:47;ΔK=K0:1, and Ss:K 0:059. Hence, Δs0:056, or the pole will move to the right by 0.056 units for a 10% change in K. Fors 5j5, Table 8.1 shows K50. Substituting these values into Eq. (8.73) yields Ss:K1= 1j1 1=ﬃﬃﬃ 2p    45°. The change in the pole location for a 10% change in Kcan be found using Eq. (8.70), with s 5j5;ΔK=K0:1, and416 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:8 Ss:K 1=ﬃﬃﬃ 2p    45°. Hence, Δs j5, or the pole will move vertically by 0.5 unit for a 10% change in K. In summary, then, at K5;Ss:K 0:059. At K50;Ss:K 1=ﬃﬃﬃ 2p    45°. Comparing magnitudes, we conclude that the root locus is less sensitive to changes in gain at the lower value of K. Notice that root sensitivity is a complex quantity possessing both the magnitude and direction information from which the change inpoles can be calculated. Case Studies Antenna Control: Transient Design via GainAntenna Control: Transient Design via Gain The main thrust of this chapter is to demonstrate design of higher-order systems (higher than two) through gain adjustment. Speci ﬁcally, we are interested in determining the value of gain required to meet transient response requirements, such as percent overshoot, settling time, and peak time. The following case study emphasizes this design procedure, using the root locus. PROBLEM: Given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 1, ﬁnd the preampli ﬁer gain required for 25% overshoot. SOLUTION: The block diagram for the system was derived in the Case Studies section in Chapter 5 and is shown in Figure 5.34( c), where G s6:63K=s s1:71 s100. First a sketch of the root locus is made to orient the designer. The real-axis segments are between the origin and  1:71 and from  100 to in ﬁnity. The locus begins at the open-loop poles, which are all on the real axis at the origin,  1:71, and  100. The locus then moves toward the zeros at in ﬁnity by following asymptotes that, from Eqs. (8.27) and (8.28), intersect the real axis at  33:9 at angles of 60 °, 180 °, and  60°. A portion of the root locus is shown in Figure 8.28. From Eq. (4.39), 25% overshoot corresponds to a damping ratio of 0.404. Now draw a radial line from the origin at an angle of cos 1ζ113:8. The intersection of this line with the root locus locates the system ’s dominant, second-order closed-loop poles. Using the root locus program discussed in Appendix H.2 at www.wiley.com/college/niseSkill-Assessment Exercise 8.9 PROBLEM: A negative unity feedback system has the forward transfer function G sK s1 s s2 IfKis set to 20, ﬁnd the changes in closed-loop pole location for a 5% change in K. ANSWER: For the closed-loop pole at  21:05;Δs 0:9975; for the closed-loop pole at 0:95;Δs 0:0025. The complete solution is at www.wiley.com/college/nise .Case Studies 417WEBC08 10/28/2014 17:56:9 to search the radial line for 180 °yields the closed-loop dominant poles as 2:063113:8° 0:833j1:888. The gain value yields 6 :63K425:7, from which K64:21. Checking our second-order assumption, the third pole must be to the left of the open-loop pole at  100 and is thus greater than ﬁve times the real part of the dominant pole pair, which is  0:833. The second-order approximation is thus valid. The computer simulation of the closed-loop system ’s step response in Figure 8.29 shows that the design requirement of 25% overshoot is met. 10 Time (seconds)c(t) 9 8 7 6 5 4 3 2 1 01.4 1.01.2 0.8 0.6 0.4 0.2 0 FIGURE 8.29 Step response of the gain-adjusted antenna control systemj10jω j2j6 j8 –j2 –j4 –j6 –j8–j10j4 204 –2 4s-plane 113.8Additional open-loop pole at –100 –𝜁 = 0.404 σ FIGURE 8.28 Portion of the root locus for the antenna control system418 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:10 CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. Referring to the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 2, do the following: a.Find the preampli ﬁer gain, K, required for an 8-second settling time. b.Repeat, using MATLAB. UFSS Vehicle: Transient Design via GainUFSS Vehicle: Transient Design via Gain In this case study, we apply the root locus to the UFSS vehicle pitch control loop. The pitch control loop is shown with both rate and position feedback on the back endpapers. In theexample that follows, we plot the root locus without the rate feedback and then with the rate feedback. We will see the stabilizing effect that rate feedback has upon the system. PROBLEM: Consider the block diagram of the pitch control loop for the UFSS vehicle shown on the back endpapers ( Johnson ,1980 ). a.IfK 20 (no rate feedback), plot the root locus for the system as a function of pitch gain, K1, and estimate the settling time and peak time of the closed-loop response with 20% overshoot. b.LetK2K1(add rate feedback) and repeat a. SOLUTION: a.Letting K20, the open-loop transfer function is G sH s0:25K1 s0:435 s1:23 s2 s20:226s0:0169 (8.74) from which the root locus is plotted in Figure 8.30. Searching along the 20% overshoot line evaluated from Eq. (4.39), we ﬁnd the dominant second-order poles to be  0:202j0:394 with a gain of K0:25K10:706, or K12:824. 20% s-plane j1 0–0.202 + j0.394 K = 0.706; K1 = 2.824jω –1 –2 –3 –j3j3 j2 –j2–j1 = Closed-loop pole = Open-loop poleσ FIGURE 8.30 Root locus of pitch control loop without rate feedback, UFSS vehicleCase Studies 419WEBC08 10/28/2014 17:56:11 From the real part of the dominant pole, the settling time is estimated to be Ts4=0:20219:8 seconds. From the imaginary part of the dominant pole, the peak time is estimated to be Tpπ=0:3947:97 seconds. Since our estimates are based upon a second-order assumption, we now test our assumption by ﬁnding the third closed-loop pole location between  0:435 and  1:23 and the fourth closed-loop pole location between  2a n di n ﬁnity. Searching each of these regions for a gain of K0:706, we ﬁnd the third and fourth poles at  0:784 and  2:27, respectively. The third pole, at  0:784, may not be close enough to the zero at  0:435, and thus the system should be simulated. The fourth pole, at  2:27, is 11 times as far from the imaginary axis as the dominant poles and thus meets the requirement of at least ﬁve times the real part of the dominant poles. A computer simulation of the step response for the system, which is shown in Figure 8.31, shows a 29% overshoot above a ﬁnal value of 0 :88, approximately 20-second settling time, and a peak time of approximately 7.5 seconds. b.Adding rate feedback by letting K2K1in the pitch control system shown on the back endpapers, we proceed to ﬁnd the new open-loop transfer function. Pushing  K1to the right past the summing junction, dividing the pitch rate sensor by  K 1, and combining the two resulting feedback paths obtaining s1give us the following open-loop transfer function: G sH s0:25K1 s0:435 s1 s1:23 s2 s20:226s0:0169 (8.75) Notice that the addition of rate feedback adds a zero to the open-loop transfer function. The resulting root locus is shown in Figure 8.32. Notice that this root locus, unlike the root locus in a, is stable for all values of gain, since the locus does not enter the right half of the s-plane for any value of positive gain, K0:25K Also notice that the intersection with the 20% overshoot line is much farther from the imaginary axis thanis the case without rate feedback, resulting in a faster responsetime for the system.0.2 0 3 0 Time (seconds)c(t) 6 9 12 15 18 21 240.40.60.81.01.2 Final value FIGURE 8.31 Computer simulation of step response of pitch control loop without ratefeedback, UFSS vehicle –1.024 + j1.998 K = 5.17; K 1 = 20.68 s-planej2 j1 –j1 –j2–1 0jω20% –2 = Closed-loop pole = Open-loop poleσ FIGURE 8.32 Root locus of pitch control loop with rate feedback, UFSS vehicle420 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:11 The root locus intersects the 20% overshoot line at  1:024j1:998 with a gain of K0:25K15:17, or K120:68. Using the real and imaginary parts of the dominant pole location, the settling time is predicted to be Ts4=1:0243:9 seconds, and the peak time is estimated to be Tpπ=1:9981:57 seconds. The new estimates show considerable improvement in the transient response as compared to the system without the rate feedback. Now we test our second-order approximation by ﬁnding the location of the third and fourth poles between  0:435 and  1 .S e a r c h i n gt h i sr e g i o nf o rag a i no f K5:17, we locate the third and fourth poles at approximately  0:5a n d  0:91. Since the zero at  1i saz e r oo f H(s), the student can verify that this zero is not a zero of the closed-loop transfer function. Thu s, although there may be pole-zero cancel- lation between the closed-loop pole at  0:5 and the closed-loop zero at  0:435, there is no closed-loop zero to cancel the closed-loop pole at  0:91.2Our second-order approximation is not valid. A computer simulation of the system with rate feedback is shown in Figure 8.33. Although the response shows that our second-order approximation is invalid, it still represents a considerable improvement in performance over the system without rate feedback; the percent overshoot is small, and the settling time is about 6 seconds instead ofabout 20 seconds. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. For the UFSS vehicle ( Johnson, 1980 ) heading control system shown on the back endpapers, and introduced in the case study challenge in Chapter 5, do the following: a.LetK 2K1andﬁnd the value of K1that yields 10% overshoot. b.Repeat, using MATLAB.1.0 2 01 0 Time (seconds)c(t) 4680.8 0.6 0.4 0.2 0Final value FIGURE 8.33 Computer simulation of step response of pitch control loop with rate feedback, UFSS vehicle 2The zero at  1 shown on the root locus plot of Figure 8.32 is an open-loop zero since it comes from the numerator ofH(s).Case Studies 421WEBC08 10/28/2014 17:56:11 We have concluded the chapter with two case studies showing the use and application of the root locus. We have se en how to plot a root locus and estimate the transient response by making a second-order approximation. We saw that the second-order approximation held when rate feedback was not used for the UFSS.When rate feedback was used, an open-loop zero from H(s) was introduced. Since it was not a closed-loop zero, there was no pole-zero cancellation, and a second-orderapproximation could not be justi ﬁed. In this case, however, the transient response with rate feedback did represent an impr ovement in transient response over the system without rate feedback. In subsequent chapters we will see why rate feedback yields an improvement. We will also see ot her methods of improving the transient response. Summary In this chapter, we examined the root locus , a powerful tool for the analysis and design of control systems. The root locus empow ers us with qualitative and quantitative information about the stability and transient response of feedback control systems. The root locus allows us to ﬁnd the poles of the closed-loop system by starting from the open-loop system ’s poles and zeros. It is basically a graphical root-solving technique. We looked at ways to sketch the root locus rapidly, even for higher-order systems. The sketch gave us qualitative information about changes in the transient response as parameters were varied. From the locus we were able to determine whether a system was unstable forany range of gain. Next we developed the criterion for determining whether a point in the s-plane was on the root locus: The angles from the open-loop zeros, minus the angles from the open-looppoles drawn to the point in the s-plane, add up to an odd multiple of 180 °. The computer program discussed in Appendix G.2 at www.wiley.com/college/nise helps us to search rapidly for points on the root locus. This program allows us toﬁnd points and gains to meet cert ain transient response speci ﬁcations as long as we are able to justify a second-order assumption for higher-order systems. Other computerprograms, such as MATLAB, plot the root loc us and allow the user to interact with the display to determine transient response speci ﬁcations and system parameters. Our method of design in this chapter is gain adjustment. We are limited to transient responses governed by the poles on the root locus. Transient responses represented bypole locations outside of the root locus cannot be obtained by a simple gain adjustment.Further, once the transient response has been established, the gain is set, and so is the steady-state error performance. In other wor ds, by a simple gain adjustment, we have to trade off between a speci ﬁed transient response and a speci ﬁed steady-state error. Transient response and steady-state error cannot be designed independently with a simple gain adjustment. We also learned how to plot the root locus against system parameters other than gain. In order to make this root locus plot, we must ﬁrst convert the closed-loop transfer function into an equivalent transfer function that has the desired system parameter in the sameposition as the gain. The chapter discussion concluded with positive-feedback systems andhow to plot the root loci for these systems. The next chapter extends the concept of the root locus to the design of compensation networks. These networks have as an advantage the separate design of transient performance and steady-state error performance.422 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:11 Review Questions 1.What is a root locus? 2.Describe two ways of obtaining the root locus. 3.IfKG sH s5180 °, for what value of gain is sa point on the root locus? 4.Do the zeros of a system change with a change in gain? 5.Where are the zeros of the closed-loop transfer function? 6.What are two ways to ﬁnd where the root locus crosses the imaginary axis? 7.How can you tell from the root locus if a system is unstable? 8.How can you tell from the root locus if the settling time does not change over a region of gain? 9.How can you tell from the root locus that the natural frequency does not change over aregion of gain? 10.How would you determine whether or not a root locus plot crossed the real axis? 11.Describe the conditions that must exist for all closed-loop poles and zeros in order tomake a second-order approximation. 12.What rules for plotting the root locus are the same whether the system is a positive- or anegative-feedback system? 13.Brieﬂy describe how the zeros of the open-loop system affect the root locus and the transient response. Problems 1.For each of the root loci shown in Figure P8.1, tell whether or not the sketch can be a root locus. If the sketch cannot be a root locus, explain why. Give all reasons. [Section: 8.4] s-plane jω jωjω jω jω jωjω jω(a) s-plane (b) s-plane (c)Double pole s-plane (d) s-plane (e) s-plane (f) s-plane (g) s-plane (h)δδδδ δ δδδ FIGURE P8.1Problems 423WEBC08 10/28/2014 17:56:12 2.Sketch the general shape of the root locus for each of the open-loop pole-zero plots shown in Figure P8.2. [Section: 8.4] s-plane (a)jω jω jω jω jω jωs-plane (b) s-plane (c)s-plane (d) s-plane (e)s-plane (f)σ σ σ σσσ FIGURE P8.2 3.Sketch the root locus for the unity feedback system shownin Figure P8.3for the followingtransferfunctions:[Section: 8.4] a.G sK s2 s6 s28s25 b.G sK s24 s21 c.G sK s21 s2 d.G sK s13 s4R(s) G(s)C(s) –+ FIGURE P8.3 4.Let G sKs 2 3/C18/C19 s2 s6 in Figure P8.3. [Section: 8.5] a.Plot the root locus. b.Write an expression for the closed-loop transfer function at the point where the three closed-looppoles meet. 5.Let G s K s12 s22s2 with K>0 in Figure P8.3. [Sections: 8.5, 8.9] a.Find the range of Kfor closed-loop stability. b.Sketch the system ’s root locus. c.Find the position of the closed-loop poles when K1 andK2. 6.For the open-loop pole-zero plot shown in Figure P8.4, sketch the root locus and ﬁnd the break-in point. [Section: 8.5] –1 –2 –3 –j1j1s-planejω 1σ FIGURE P8.4 7.Sketch the root locus of the unity feedback system shown in Figure P8.3, where G sK s1 s7 s3 s 5 andﬁnd the break-in and breakaway points. Find the range of Kfor which the system is closed-loop stable. [Section: 8.5]424 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:12 8.The characteristic polynomial of a feedback control system, which is the denominator of the closed-loop transfer function, is given by s32s2 20K7s 100K. Sketch the root locus for this system. [Section: 8.8] 9.Figure P8.5 shows open-loop poles and zeros. There are two possibilities for the sketch of the root locus. Sketch each of the two possibilities. Be aware that onlyone can be the reallocus for speci ﬁc open-loop pole and zero values. [Section: 8.4] s-planejω σ FIGURE P8.5 10.Plot the root locus for the unity feedback system shownin Figure P8.3, where G sK s2 s24 s5 s 3 For what range of Kwill the poles be in the right half-plane? [Section: 8.5] 11.For the unity feedback system shown in Figure P8.3,where G sKs2 9/C0/C1 s24  sketch the root locus and tell for what values of Kthe system is stable and unstable. [Section: 8.5] 12.Sketch the root locus for the unity feedback systemshown in Figure P8.3, where G sKs22/C0/C1 s3 s4 Give the values for all critical points of interest. Isthe system ever unstable? If so, for what range of K? [Section: 8.5] 13.For each system shown in Figure P8.6, make anaccurate plot of the root locus and ﬁnd the following: [Section: 8.5] a.The breakaway and break-in points b.The range of Kto keep the system stablec.The value of Kthat yields a stable system with critically damped second-order poles d.The value of Kthat yields a stable system with a pair of second-order poles that have a damping ratioof 0.707 C(s) K(s + 2)(s + 1) (s – 2)(s – 1) System 1R(s) + – C(s) K(s + 2)(s + 1) (s2 – 2s + 2) System 2R(s) + – FIGURE P8.6 14.Sketch the root locus and ﬁnd the range of Kfor stability for the unity feedback system shown in Figure P8.3for the following conditions: [Section: 8.5] a.G sK s21 s 1 s2 s3 b.G sK s2 2s2 s s1 s2 15.For the unity feedback system of Figure P8.3, where G sK s5 s21 s 1 s3 sketch the root locus and ﬁnd the range of Ksuch that there will be only two right –half-plane poles for the closed-loop system. [Section: 8.5] 16.For the unity feedback system of Figure P8.3, where G sK s s5 s8 plot the root locus and calibrate your plot for gain. Findall the critical points, such as breakaways, asymptotes,jω-axis crossing, and so forth. [Section: 8.5] 17.Given the unity feedback system of Figure P8.3, makean accurate plot of the root locus for the following: a.G s K s2 2s2 s1 s2 b.G sK s 1 s 2 s1 s2 Also, do the following:Problems 425WEBC08 10/28/2014 17:56:13 Calibrate the gain for at least four points for each case. Also ﬁnd the breakaway points, the jω-axis crossing, and the range of gain for stability for each case. Find the angles of arrival for Part a. [Section: 8.5] 18.Given the root locus shown in Figure P8.7, [Section: 8.5] a.Find the value of gain that will make the systemmarginally stable. b.Find the value of gain for which the closed-looptransfer function will have a pole on the real axisat 5. –4 –1j1 –j1s-planejω σ FIGURE P8.7 19.Given the unity feedback system of Figure P8.3, where G sK s2 s s1 s3 s5 do the following: [Section: 8.5] a.Sketch the root locus. b.Find the asymptotes. c.Find the value of gain that will make the systemmarginally stable. d.Find the value of gain for which the closed-looptransfer function will have a pole on the real axisat 0:5. 20.For the unity feedback system of Figure P8.3, where G s K sα s s3 s6 ﬁnd the values of αandKthat will yield a second-order closed-loop pair of poles at  1j100. [Section: 8.5] 21.For the unity feedback system of Figure P8.3, where G sK s 1 s 2 s s1 s2 sketch the root locus and ﬁnd the following: [Section: 8.5]a.The breakaway and break-in points b.Thejω-axis crossing c.The range of gain to keep the system stable d.The value of Kto yield a stable system with second- order complex poles, with a damping ratio of 0.5. 22.For the unity feedback system shown in Figure P8.3,where G sK s10 s20 s30s2 10s100  do the following: [Section: 8.7] a.Sketch the root locus. b.Find the range of gain, K, that makes the system stable. c.Find the value of Kthat yields a damping ratio of 0.707 for the system’ s closed-loop dominant poles. d.Find the value of Kthat yields closed-loop critically damped dominant poles. 23.For the system of Figure P8.8( a), sketch the root locus andﬁnd the following: [Section: 8.7] a.Asymptotes b.Breakaway points c.The range of Kfor stability d.The value of Kto yield a 0.7 damping ratio for the dominant second-order pair To improve stability, we desire the root locus to cross the jω-axis at j5.5. To accomplish this, the open-loop function is cascaded with a zero, as shown in Figure P8.8( b). e.Find the value of αand sketch the new root locus. f.Repeat Part cfor the new locus. g.Compare the results of Part cand Part f. What improvement in transient response do you notice? C(s) K (s + 1)(s + 2)(s + 3)(s + 4) C(s) K(s + α) (s + 1)(s + 2)(s + 3)(s + 4)(a) (b)R(s)+ – R(s)+ – FIGURE P8.8426 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:14 24.Sketch the root locus for the positive-feedback system shown in Figure P8.9. [Section: 8.9] K C(s) R(s)+ +s(s+1) FIGURE P8.9 25.Root loci are usually plotted for variations in the gain. Sometimes we are interested in the variation of theclosed-loop poles as other parameters are changed. Forthe system shown in Figure P8.10, sketch the rootlocus as αis varied. [Section: 8.8] C(s) R(s)+ –1 s(s + α) FIGURE P8.10 26.Given the unity feedback system shown in Figure P8.3,where G sK s1 s2 s3 do the following problem parts by ﬁrst making a second-order approximation. After you are ﬁnished with all of the parts, justify your second-orderapproximation. [Section: 8.7] a.Sketch the root locus. b.Find Kfor 20% overshoot. c.ForKfound in Part b, what is the settling time, and what is the peak time? d.Find the locations of higher-order poles for Kfound in Part b. e.Find the range of Kfor stability. 27.For the unity feedback system shown in Figure P8.3,where G s K s2 2s2 s2 s4 s5 s6 do the following: [Section: 8.7] a.Sketch the root locus. b.Find the asymptotes. c.Find the range of gain, K, that makes the system stable. d.Find the breakaway points. e.Find the value of Kthat yields a closed-loop step response with 25% overshoot.f.Find the location of higher-order closed-loop poles when the system is operating with 25% overshoot. g.Discuss the validity of your second-order approximation. h.Use MATLAB to obtain theclosed-loop step response tovalidate or refute your second-orderapproximation. 28.The unity feedback system shown in Figure P8.3, where G s K s2 s3 s s1 is to be designed for minimum damping ratio. Find thefollowing: [Section: 8.7] a.The value of Kthat will yield minimum damping ratio b.The estimated percent overshoot for that case c.The estimated settling time and peak time for that case d.The justi ﬁcation of a second-order approximation (discuss) e.The expected steady-state error for a unit ramp inputfor the case of minimum damping ratio 29.For the unity feedback system shown in Figure P8.3, where G s K s2 s s6 s10 ﬁndKto yield closed-loop complex poles with a damping ratio of 0.55. Does your solution require ajustiﬁcation of a second-order approximation? Explain. [Section: 8.7] 30.For the unity feedback system shown in Figure P8.3,where G s K sα s s2 s6 ﬁnd the value of αso that the system will have a settling time of 2 seconds for large values of K. Sketch the resulting root locus. [Section: 8.8] 31.For theunity feedback system showninFigure 8.3,where G sK s5 s28s25 s12 sα design Kandαso that the dominant complex poles of the closed-loop function have a damping ratio of 0.5 anda natural frequency of 1.2 rad/s.Problems 427WEBC08 10/28/2014 17:56:15 32.For the unity feedback system shown in Figure 8.3, where G sK s s3 s4 s8 do the following: [Section: 8.7] a.Sketch the root locus. b.Find the value of Kthat will yield a 10% overshoot. c.Locate all nondominant poles. What can you say about the second-order approximation that led toyour answer in Part b? d.Find the range of Kthat yields a stable system. Repeat Problem 32 using MATLAB.Use one program to do thefollowing: a.Display a root locus and pause. b.Draw a close-up of the root locus wherethe axes go from  2 to 0 on the real axis and  2 to 2 on the imaginary axis. c.Overlay the 10% overshoot line on theclose-up root locus. d.Select interactively the point where the root locus crosses the 10% over- shoot line, and respond with the gainat that point as well as all of theclosed-loop poles at that gain. e.Generate the step response at the gainfor 10% overshoot. 34.Fortheunityfeedback system shown inFigure 8.3, where G s K s24s5 s22s5 s3 s4 do the following: [Section: 8.7] a.Find the gain, K, to yield a 1-second peak time if one assumes a second-order approximation. b.Check the accuracy of thesecond-order approximationusing MATLAB to simulate the system. 35.For the unity feedback system shown in Figure P8.3,where G s K s2 s3 s22s2 s4 s5 s6 do the following: [Section: 8.7] a.Sketch the root locus. b.Find the jω-axis crossing and the gain, K, at the crossing.c.Find all breakaway and break-in points. d.Find angles of departure from the complex poles. e.Find the gain, K, to yield a damping ratio of 0.3 for the closed-loop dominant poles. 36.Repeat Parts athrough candeof Problem 35 for [Section: 8.7] G sK s4 s s1 s2 s10 37.For the unity feedback system shown in Figure P8.3,where G sK s3 s24s5 do the following: [Section: 8.7] a.Find the location of the closed-loop dominant poles if the system is operating with 15% overshoot. b.Find the gain for Part a. c.Find all other closed-loop poles. d.Evaluate the accuracy of your second-order approximation. 38.For the system shown in Figure P8.11, do the following:[Section: 8.7] K C(s) R(s)+ –(s + 2)(s + 3) (s2 + 2s + 5)s2 – 4s + 8 FIGURE P8.11 a.Sketch the root locus. b.Find the jω-axis crossing and the gain, K, at the crossing. c.Find the real-axis breakaway to two-decimal-placeaccuracy. d.Find angles of arrival to the complex zeros. e.Find the closed-loop zeros. f.Find the gain, K, for a closed-loop step response with 30% overshoot. g.Discuss the validity of your second-order approximation. 39.Sketch the root locus for the system of Figure P8.12 and ﬁnd the following: [Section: 8.7] a.The range of gain to yield stability428 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:15 b.The value of gain that will yield a damping ratio of 0.707 for the system ’s dominant poles c.The value of gain that will yield closed-loop poles that are critically damped K C(s) (s + 30)R(s)+ –s(s + 3)(s + 7)(s + 9) (s2 + 20s + 225) FIGURE P8.12 40.Repeat Problem 39 using MATLAB.The program will do the followingin one program: a.Display a root locus and pause. b.Display a close-up of the root locuswhere the axes go from  2 to 0.5 on the real axis and  2 to 2 on the imaginary axis. c.Overlay the 0.707 damping ratio lineon the close-up root locus. d.Allow you to select interactively thepoint where the root locus crosses the0.707 damping ratio line, and respondby displaying the gain at that point as well as all of the closed-loop poles at that gain. The program willthen allow you to select interac-tively the imaginary-axis crossingand respond with a display of thegain at that point as well as all ofthe closed-loop poles at that gain.Finally, the program will repeat the evaluation for critically damped dominant closed-loop poles. e.Generate the step response for thecritically damped case. 41.Given the unity feedback system shown in Figure P8.3,where G s K sz s2 s10 do the following: [Section: 8.7] a.Ifz2,ﬁnd Kso that the damped frequency of oscillation of the transient response is 5 rad/s. b.For the system of Part a, what static error constant (ﬁnite) can be speci ﬁed? What is its value?c.The system is to be redesigned by changing the values of zand K. If the new speci ﬁcations are %OS4:32%andTs0:8s ,ﬁnd the new values ofzandK. 42.Given the unity feedback system shown in Figure P8.3, where G sK s1 s3 s62 ﬁnd the following: [Section: 8.7] a.The value of gain, K, that will yield a settling time of 4 seconds b.The value of gain, K, that will yield a critically damped system 43.You are given the unity-feedbacksystem of Figure P8.3, where G sK s0:02 s2 s4 s10 s25 Use MATLAB to plot the root locus. Use acloseup of the locus (from  5 to 0 and —1 to 6) to ﬁnd the gain, K, that yields a closed-loop unit-step response, c(t), with 20.5% overshoot and a settling timeofT s=3 seconds. Mark on the time response graph all other relevant characteristics, such as the peak time, rise time, and ﬁnal steady-state value. 44.Let G sK s 1 s2 s3 in Figure P8.3. [Section: 8.7]. a.Find the range of Kfor closed-loop stability. b.Plot the root locus for K>0. c.Plot the root locus for K<0. d.Assuming a step input, what value of Kwill result in the smallest attainable settling time? e.Calculate the system’ sessfor a unit step input assuming the value of Kobtained in Part d. f.Make an approximate hand sketch of the unit stepresponse of the system if Khas the value obtained in Part d. 45.Given the unity feedback system shown in Figure P8.3,where G s K s s1:25 s8Problems 429WEBC08 10/28/2014 17:56:16 evaluate the pole sensitivity of the closed-loop system if the second-order, underdamped closed-loop poles are set for [Section: 8.10] a.ζ0:591 b.ζ0:456 c.Which of the two previous cases has more desirablesensitivity? 46.Repeat Problem 3 but sketch your root loci for negativevalues of K. [Section: 8.9] 47.Figure P8.13 shows the block diagram of a closed-loop control of a linearized magnetic levitation system(Galvão, 2003 ). A s2 – η2 G(s) R(s) C(s) + + FIGURE P8.13 Linearized magnetic levitation system block diagram Assuming A1300 and η860, draw the root locus andﬁnd the range of Kfor closed-loop stability when: a.G sK; b.G sK s200 s1000 48.The simpli ﬁed transfer function model from steering angle δ sto tilt angle φ sin a bicycle is given by G sφ s δ saV bh*sVa s2 g h In this model, hrepresents the vertical distance from the center of mass to the ﬂoor, so it can be readily veriﬁed that the model is open-loop unstable. (Åström ,2005 ). Assume that for a speci ﬁcb i c y c l e , a0:6m , b1:5m , h0:8m ,a n d g9:8m / s e c . In order to stabilize the bicycle, it is assumed that the bicycle is placed in the closed-loop con ﬁguration shown in Figure P8.3 and that the only availablecontrol variable is V, the rear wheel velocity. a.Find the range of Vfor closed-loop stability. b.Explain why the methods presented in this chaptercannot be used to obtain the root locus. c. Use MATLAB to obtain the system ’s root locus. 49.A technique to control the steering of a vehicle thatfollows a line located in the middle of a lane is to de ﬁnea look-ahead point and measure vehicle deviationswith respect to the point. A linearized model for such a vehicle is _V _r _ψ _Y g2 6666643 777775a 11a12 b1Kb1K d a21a22 b2Kb2K d 01 0 0 10 U 02 666666643 77777775V r ψ Y g2 666643 77775 where Vvehicle ’s lateral velocity, rvehicle ’sy a w velocity, ψvehicle ’s yaw position, and Y gthe y-axis coordinate of the vehicle ’sc e n t e ro fg r a v i t y . K is a parameter to be varied depending upon trajectory changes. In a speci ﬁc vehicle traveling at a speed of U 10 m/sec, the parameters are a11 11:6842 ; a126:7632 ;b1 61:5789 ;a21 3:5143 ;a22 24:0257, and b266:8571 :d5 m is the look-ahead distance ( Ünyeliog ̆lu,1997 ). Assuming the vehicle will be controlled in closed loop: a.Find the system ’s characteristic equation as a function of K. b.Find the system ’s root locus as Kis varied. c.Using the root locus found in Part b, show that the system will be unstable for all values K. 50.It is known that mammals have hormonal regulationmechanisms that help maintain almost constantcalcium plasma levels (0.08 –0.1 g/L in dairy cows). This control is necessary to maintain healthyfunctions, as calcium is responsible for diversephysiological functions, such as bone formation, intracellular communications, and blood clotting. It has been postulated that the mechanism of calciumcontrol resembles that of a PI (proportional-plus-integral) controller. PI controllers (discussed in detailin Chapter 9) are placed in cascade with the plant andused to improve steady-state error. Assume that the PI controller has the form G c s KPKI S/C20/C21 where KP andKIare constants. Also assume that the mammal ’s system accumulates calcium in an integrator-like fashion, namely P s1 Vs,w h e r e Vis the plasma volume. The closed-loop model is similar to that of Figure P8.3, where G sGc sP s(Khammash , 2004). a.Sketch the system’ s root locus as a function of KP, assuming KI>0 is constant. b.Sketch the system’ s root locus as a function of KI, assuming KP>0 is constant.430 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:17 51.Problem 64 in Chapter 7 introduced the model of a TCP/IP router whose packet-drop probability is controlled by using a random early detection (RED) algorithm(Hollot, 2001 ). Using Figure P8.3 as a model, a speci ﬁc router queue’ s open-loop transfer function is G s7031250 Le 0:2s s0:667 s5 s50 The function e 0:2srepresents delay. To apply the root locus method, the delay function must be replacedwith a rational function approximation. A ﬁrst-order Padé approximation can be used for this purpose. Lete  sD≈1 Ds. Using this approximation, plot the root locus of the system as a function of L. 52.For the dynamic voltage restorer (DVR) discussed in Problem 47, Chapter 7, do the following: a.When ZL1 sCL, a pure capacitance, the system is more inclined toward instability. Find the system ’s characteristic equation for this case. b.Using the characteristic equation found in Part a, sketch the root locus of the system as a functionof C L:LetL7:6m H ;C11μF;α26:4; β1;Km25;Kv15;KT0:09565, and τ2m s( Lam,2004). 53.The closed-loop vehicle response in stopping a traindepends on the train ’s dynamics and the driver, who is an integral part of the feedback loop. In Figure P8.3, let the input be R sv rthe reference velocity, and the output C sv, the actual vehicle velocity. (Yamazaki, 2008 ) shows that such dynamics can be modeled by G sGd sGt swhere Gd sh1K s/C18/C19s L 2 sL 2 represents the driver dynamics with h,K, and Lparam- eters particular to each individual driver. We assume here that h=0.003 and L=1. The train dynamics are given by Gt skbfKp M 1kes τs1 where M=8000 kg, the vehicle mass; ke0:1 the inertial coef ﬁcient; kb142:5, the brake gain; Kp47:5, the pressure gain; τ1:2 sec, a time con- stant; and f0:24, the normal friction coefﬁ cient. a.Make a root locus plot of the system as a function ofthe driver parameter K.b.Discuss why this model may not be an accurate description of a real dr iver-train situation. 54.Voltage droop control is a technique in which loads are driven at lower voltages than those provided by the source.In general, the voltage is decreased as current demandincreases in the load. The advantage of voltage droop isthat it results in lower sensitivity to load current variations. Voltage droop can be applied to the power distribu- tion of several generators and loads linked through a dcbus. In (Karlsson, 2003 ) generators and loads are driven by 3-phase ac power, so they are interfaced to the busthrough ac/dc converters. Since each one of the loadsworksindependently, a feedback system shown in Figure P8.14 isused in each to respond equally to bus voltage variations.Given that C s=Cr=8,000 μF,Lcable=50μH,Rcable= 0.06Ω,Zr=Rr=5Ω,ωlp=200 rad/s, Gconv(s)=1, Vdc-ref=750 V, and Pref-ext=0, do the following: a.IfZreqis the parallel combination of RrandCr, and Gconv(s)=1,ﬁnd G sVs s Is sVs s Is ref s b.Write a MATLAB M- ﬁle to plot and copy the full root locusfor that system, then zoom-in thelocus by setting the x-axis (real-axis) limits to  150 to 0 and the y-axis (imaginary-axis) limits to  150 to 150. Copy that plot, too, and ﬁnd and record the following: (1)The gain, K, at which the system would have complex-conjugate closed-loopdominant poles with a damping ratioζ=0.707 (2)The coordinates of the correspond-ing point selected on the root-locus (3)The values of all closed-loop polesat that gain (4)The output voltage v s(t) for a step input voltage vdc-ref (t)=750 u(t) volts c.Plot that step response and use the MATLAB Characteristics tool (inthegraphwindow) to note onthe curve the following parameters: (1)The actual percent overshoot andthe corresponding peak time, T p (2)The rise time, Tr, and the settling time, Ts (3)Theﬁnal steady-state value in voltsProblems 431WEBC08 10/28/2014 17:56:18 55.It has been suggested that the use of closed-loop feedback in ventilators can highly reduce mortalityand health problems in patients in need of respiratorytreatments ( Hahn ,2012). A good knowledge of the transfer functions involved is necessary for thedesign of an appropriate controller. In a study with18 patients it was found that the open-loop transfer function from minute ventilation (MV) to end-tidal carbon dioxide partial pressure (P ETCO 2) can be nominally modeled as: G s0:415kc s0:092 s0:25 s s0:007 s0:207 a.Make a sketch of the root locus of the systemindicating the breakaway points and the value k ctakes in each of them. b.In the design of ventilators it is very important to have negligible overshoot with the fastest possible settling time. It has been suggested that a value ofk c5:35 will achieve these speci ﬁcations. Mark the position of the closed-loop poles for this valueofk cand explain why this is a reasonable gain choice. 56.Figure P8.15 shows a simpli ﬁed drawing of a feedback system that includes the drive systemGC(s) GP(s)+ –M(s) C(s) = ΩL(s) R(s) = Ωr(s) E(s) FIGURE P8.15 G s25 s21:2s12500  s s25:6s62000  presented in Problem 67, Chapter 5 ( Thomsen, 2011 ). Referring to Figures P5.43 and P8.15, Gp(s)i n Figure P8.15 is given by: Gp sKMG s 10:1G s Given that the controller is proportional, that is, GC(s)=KP, use MATLAB and a procedure similar tothat developed in Problem 40 in thischapter to plot the root locus 4and obtain the output response, c(t) =ωL(t), when a step input, r(t)=ωr(t)=260u(t) rad/ sec, is applied at t=0. Mark on the time response graph, c(t), all relevant char- acteristics, such as the percent over- shoot (which should not exceed 16%), peak time, rise time, settling time, and ﬁnal steady-state value. DESIGN PROBLEMSDESIGN PROBLEMS 57.A simpli ﬁed block diagram of a human pupil servo- mechanism is shown in Figure P8.16. The term e 0:18s_ H (s)Icable(s) _ + Vs (s) Ev(s) GC(s)1 Vs(s) + _Vdc-ref (s) Vs-lp(s) sCs1Zcable + Zreq1Pref-ext(s) s + ωlpK+Iref-ext(s) Is-ref(s) Is(s) Gconv(s) ωlp FIGURE P8.143 3Karlsson, P., and Svensson, J. DC Bus Voltage Control for a Distributed Power System, IEEE Trans. Power Electronics , vol. 18, no. 6, 2003, pp. 1405 –1412. Fig. 4, p. 1406. IEEE Transactions on Power Electronics by Institute of Electrical and Electronics Engineers; Power Electronics Council (Institute of Electrical and Electronic Engineers); IEEE PowerElectronics Society. Reproduced with permission of Institute of Electricaland Electronics Engineers, in the format Republish in a book via Copyright Clearance Center. 4Select a point on the close-up of the root locus that corresponds to a gain between 1 and 5.432 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:18 represents a time delay. This function can be approxi- mated by what is known as a Padé approximation. This approximation can take on many increasingly compli-cated forms, depending upon the degree of accuracyrequired. If we use the Padé approximation e  x1 1xx2 2! then e 0:18s61:73 s211:11s61:73 Since the retinal light ﬂux is a function of the opening of the iris, oscillations in the amount of retinal light ﬂux imply oscillations of the iris ( Guy,1976 ). Find the following: a.The value of Kthat will yield oscillations b.The frequency of these oscillations c.The settling time for the iris if Kis such that the eye is operating with 20% overshoot Retinal light fluxExternal light flux + –(s + 10)3Ke–0.18s FIGURE P8.16 Simpli ﬁed block diagram of pupil servomechanism 58.A hard disk drive (HDD) arm has an open-loop unstabletransfer function, P sX s F s1 Ibs2 where X(s) is arm displacement and F(s) is the applied force ( Yan,2003 ). Assume the arm has an inertia of Ib310 5kg-m2and that a lead controller, Gc s (used to improve transient response and discussed inChapter 9), is placed in cascade to yield P sG c sG sK Ib s1 s2 s10 as in Figure P8.3. a.Plot the root locus of the system as a function of K. b.Find the value of Kthat will result in dominant complex conjugate poles with a ζ0:7 damping factor. 59.A robotic manipulator together with a cascade PIcontroller (used to improve steady-state response anddiscussed in Chapter 9) has a transfer function ( Low,2005) G s K pK1 s/C18/C1948;500 s22:89s Assume the robot ’s joint will be controlled in the con- ﬁguration shown in Figure P8.3. a.Find the value of KIthat will result in ess2%for a parabolic input. b.Using the value of KIfound in Part a, plot the root locus of the system as a function of KP. c.Find the value of KPthat will result in a real pole at  1. Find the location of the other two poles. 60.Wind turbines, such as the one shown in Figure P8.17( a), are becoming popular as a way of generating electricity. Feedback control loops are designed to control the output power of the turbine, given an input power demand.Blade-pitch control may be used as part of the controlloop for a constant-speed, pitch-controlled wind turbine,as shown in Figure P8.17( b). The drivetrain, consisting of the windmill rotor, gearbox, and electric generator (seeFigure P8.17( c)), is part of the control loop. The torque created by the wind drives the rotor. The windmill rotor is connected to the generator through a gearbox. The transfer function of the drivetrain is Po s TR sGdt s 3:92KLSSKHSSKGN2s fN2KHSSJRs2KLSS  JGs2τels1  KGsJRs2KLSS JGs2KHSS τels1KGsg where Po sis the Laplace transform of the output power from the generator and TR sis the Laplace transform of the input torque on the rotor. Substituting typical numerical values into the transfer function yields Po s TR sGdt s  3:92 12:6106 301103 688N2s fN2 301103 190;120s212:6106  3:8s22010 3s1668s 190;120s2 12:6106  3:8s2301103  2010 3s1668sg (Anderson ,1998 ). Do the following for the drivetrain dynamics, making use of any computational aids at yourdisposal:Problems 433WEBC08 10/28/2014 17:56:18 + –+++++ –Power controllerPitch actuator Power transducerRotor pitch sensitivityRotor gust sensitivity Pitch inertiaDrivetrainWindspeed disturbance Applied momentDisturbance momentPitch demandElectrical po werPower demandControl surface aerodynamics (b)Pitch angleShaft torque (c)Rotor inertia JRLow-speed shaft stiffness KLSS Gearbox Ratio NHigh-speed shaft stiffness KHSS GeneratorInertia J g, Generator gain KG, Time constant τel FIGURE P8.17 a.Wind turbines generating electricity near Palm Springs, California; b.control loop for a constant-speed pitch-controlled wind turbine;5c.drivetrain5 5Adapted from Anderson, C. G., Richon, J-B., and Campbell, T. J. An Aerodynamic Moment-Controlled Surface for Gust Load Alleviation on Wind Turbine Rotors, IEEE Transactions on Control System Technology , vol. 6, no. 5, September 1998, pp. 577 –595.1998 IEEE.434 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:19 a.Sketch a root locus that shows the pole locations of Gdt(s) for different values of gear ratio, N. b.Find the value of Nthat yields a pair of complex poles of Gdt(s) with a damping ratio of 0.5. 61.An active system for the elimination of ﬂoor vibrations due to human presence ispresented in ( Nyawako, 2009 ) . The system consists of a sensor that measures theﬂoor’s vertical acceleration and an actu- ator that changes the ﬂoor characteris- tics. The open-loop transmission of the particular setup used can be described byG sKG a sF sGm s, where the actua- tor’s transfer function is Ga s10:26 s211:31s127:9 Theﬂoor’s dynamic charactristics can be modeled by F s6:667 10 5s2 s20:2287 s817:3 The sensor ’s transfer function is Gm ss s25:181s22:18 andKis the gain of the controller. The system operations can be described by theunity-gain feedback loop of Figure P8.3. a.Use MATLAB ’s SISO Design Tool to obtain the root locus of the system in termsofK. b.Find the range of Kfor closed-loop stability. c.Find, if possible, a value of Kthat will yield a closed-loop overdampedresponse. 62.Many implantable medical devices such as pacemakers,retinal implants, deep brain stimulators, and spinal cordstimulators are powered by an in-body battery that can becharged througha transcutaneous inductive device.Opti-mal battery charge can be obtained when the out-of-bodycharging circuit is in resonance with the implanted charging circuit ( Baker, 2007 ). Under certain conditions, the coupling of both resonant circuits can be modeled by the feedback system in Figure P8.3 where G s Ks4 s22ζωnsω2 n/C0/C12The gain Kis related to the magnetic coupling between the external and in-body circuits. Kmay vary due to positioning, skin conditions, and other variations. For this problem let ζ0:5 and ωn1. a.Find the range of Kfor closed-loop stability. b.Draw the corresponding root locus. 63.It is important to precisely control the amount of organic fertilizer applied to a speci ﬁc crop area in order to providespeci ﬁc nutrient quantities and to avoid unnecessary environmentalpollution. A precise delivery liquidmanure machine has been developed forthis purpose (Saeys, 2008). The system consists of a pressurized tank, a valve, and a rheological ﬂow sensor. After simpliﬁ cation, the system can be modeled as a closed-loop negative-feedback system with a forward-pathtransfer function G s 2057 :38K s2 120s4800  s s13:17 s2120s4800  consisting of an electrohydraulic sys-tem in cascade with the gain of the manureﬂow valve and a variable gain, K. The feedback path is comprised of H s 10 s2 4s5:333 s10 s24s5:333 a.Use the SISO Design Tool in MATLAB toobtain the root locus of the system. b.Use the SISO Design Tool to ﬁnd the range of Kfor closed-loop stability. c.Find the value of Kthat will result in the smallest settling time for thissystem. d.Calculate the expected settling timefor a step input with the value of K obtained in Part c. e.Check your result through a step-response simulation. Harmonic drives are verypopular for use in roboticmanipulators due to their low backlash, high torque transmission, and compact size ( Spong, 2006 ) . The problem of jointProblems 435WEBC08 10/28/2014 17:56:20 ﬂexibility is sometimes a limiting factor in achieving good performance. Consider that the idealized model representingjoint ﬂexibility is shown in Figure P8.18. The input to the drive is from an actuatorand is applied at θ m. The output is connected to a load at θl. The spring represents the joint ﬂexibility and Bm andBlrepresent the viscous damping of the actuator and load, respectively.Now we insert the device into the feedbackloop shown in Figure P8.19. The ﬁrst block in the forward path is a PD controller,which we will study in the next chapter.The PD controller is used to improvetransient response performance. Bmθ θm u k JmJ B FIGURE P8.18 Idealized model representing joint ﬂexibility7 Kp + KDsk r+ + + –k θmθi1 pm(s) FIGURE P8.19 Joint ﬂexibility model inserted in feedback loop8 Use MATLAB to ﬁnd the gain KDto yield an approximate 5% overshoot in the stepresponse given the following parameters: J l=10;Bl=1;k=100; Jm=2;Bm=0.5;KP KD 0:25;pl sJls2Blsk;andpm sJms2 Bmsk 65.Using LabVIEW, the Control Design and Simulation Module , and the MathScript RT Module, open and customize the Interactive Root Locus VI from the Examples to implement the system ofProblem 64. Select the parameter K Dtomeet the requirement of Problem 64 by varying the location of the closed-loop poles onthe root locus.Besure your frontpanel shows the following: (1) open-looptransfer function, (2) closed-loop trans-fer function, (3) root locus, (4) list ofclosed-loop poles, and (5) step response. An automatic regulator is usedto control the ﬁeld current of a three-phase synchronous machine withidentical symmetrical armature windings(Stapleton,1964 ) .Thepurposeofthereg- ulator is to maintain the system voltageconstant within certain limits. Thetransfer function of the synchronousmachine is G sm sΔδ s ΔPm sM s z1 s z2 s p1 s p2 s p3 which relates the variation of rotor angle, Δδs , to the change in the syn- chronous machine ’s shaft power, ΔPms . The closed-loop system is shown inFigure P8.3, where Gs   KG Cs Gsms andK is a gain to be adjusted. The regulator ’s transfer function, Gc(s), is given by Gc sμ. Te s1 Te Assume the following parameter values: μ4;M0:117;Te0:5;z1;2 0:071 j6:25; p1 0:047;andp2;3 0:262 j5:1; and do the following: Write a MATLAB M- ﬁle to plot the root locus for the system and to ﬁnd the following: a.The gain Kat which the system becomes marginally stable b.The closed-loop poles, p, and transfer function, T(s) , corresponding to a 16% overshoot c.The coordinates of the point selectedon the root-locus corresponding to 16%overshoot d.A simulation of the unit-step responseof the closed-loop system correspond-ing to your 16% overshoot design. Note 7Spong, M., Hutchinson, S., and Vidyasagar, M. Robot Modeling and Control . John Wiley & Sons, Hoboken, NJ, 2006. Figure 6.20, p. 221. 8Spong, M., Hutchinson, S., and Vidyasagar, M. Robot Modeling and Control . John Wiley & Sons, Hoboken, NJ, 2006. Figure 6.24, p. 224.436 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:20 in your simulation the following values: (1) actual percent overshoot, (2)corresponding peak time, Tp, (3)rise time, Tr,(4) settling time, Ts, and (5) ﬁnal steady-state value. 67.It is well known that when a person ingests a signi ﬁ- cant amount of water, the blood volume increases,causing an increase in arterial blood pressure until thekidneys are able to excrete the excess volume and thepressure returns to normal ( Shahin, 2010). In order to describe mathematically this process, water-loadingexperiments are performed in various subjects whiletheir mean arterial pressure is monitored. It wasfound that the open-loop transfer function of this process is G s bp 1:759s32:318s22:17310 4 3:362s311:34s27:803s0:00293 where bpis an autonomous nervous activity parameter. a.Make a sketch of the root locus of the system, indicat-ing the breakaway points and the value of b pfor each point. b.Indicate the range of bpfor which the system is overdamped. c.Indicate the values of bpfor which the system is critically damped. d.Indicate the range of bpfor which the system is underdamped. e.Explain why the system will have a larger settling time for larger values of bp68.One of the treatments for Parkinson ’s disease in some patients is Deep Brain Stimulation (DBS) ( Davidson , 2012 ). In DBS a set of electrodes is surgically implanted and a vibrating current is applied to the subthalamicnucleus, also known as a brain pacemaker. Root locushas been used on a linearized model of the system to helpexplain the dynamics of DBS. The DBS model can be obtained by substituting G s ks s b2 b>0in the unity-feedback diagram of Figure P8.3. a.Make a sketch of the resulting root locus as a function ofkandﬁnd the break-in point and its corresponding value of gain. b.Find the range of kfor closed-loop stability in terms of b. c.Find the frequency of oscillation when the system hasclosed-loop poles on the jωaxis. 69.A linear dynamic model of the α-subsystem of a grid- connected voltage-source converter (VSC) using a Y-Ytransformer is shown in Figure P8.20( a)(Mahmood ,2012 ). Here, C135μF;R 10:016Ω;L10:14 mH ;R2 0:014Ω;L210μH;Rg1:1Ω;andLg0:5m H . a.Find the transfer function GP sVα s Mα s. b.IfGP(s) is the plant in Figure P8.20(b )a n dG C(s)=K, use MATLAB to plot the root locus. On acloseup of the locus (from  300 to 0 on the real axis and from  50 to 5000 on the imaginary axis), ﬁndKand the GC(s) GP(s)+ –Mα(s) C(s) = V α(s) R(s) = Vr(s) (b)(a)1 3Cs(R1+ L1s)+–++ ––17.33 (Rg + Lgs)(R1+ L1s) 17.33 (Rg + Lgs) 17.331 L2s + R2Mα(s) Vα(s) Vcα(s) FIGURE P8.20Problems 437WEBC08 10/28/2014 17:56:21 coordinates of the dominant poles, which correspond to ζ=0.012. Plot the output response, c(t) =vα(t), at that value of the gain when a step input, r(t)=vr(t)=208u(t) volts, is applied att=0. Mark on the time response graph, c(t) , all relevant character- istics, such as the percent overshoot,peak time, rise time, settling time, andﬁnal steady-state value. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 70.Control of HIV/AIDS. In the linearized model of Chapter 6, Problem 68, where virus levels are controlled by means of RTIs, the open-loop plant transfer functionwas shown to be P s Y s U1 s 520 s 10:3844 s32:6817 s20:11s0:0126 The amount of RTIs delivered to the patient willautomatically be calculated by embedding the patientin the control loop as G(s) shown in Figure P6.17 (Craig ,2004). a.In the simplest case, G sK, with K>0. Note that this effectively creates a positive-feedback loopbecause the negative sign in the numerator of P(s) cancels out with the negative-feedback sign in thesumming junction. Use positive-feedback rules toplot the root locus of the system. b.Now assume G s  Kwith K>0. The system is now a negative-feedback system. Use negative-feed-backrules to draw the root locus. Show that in thiscasethe system will be closed-loop stable for all K>0. Hybrid vehicle. In Chapter 7, Figure P7.31 shows the blockdiagram of the speed control of an HEVrearranged as a unity feedback system (Preitl , 2007) . Let the transfer function of the speedcontroller be G SC sKPscKIsc sKPscsKIsc KPsc/C18/C19 sa.Assume ﬁrst that the speed controller is con ﬁgured as a proportional controller KISC0 and/C0 GSCs   KPSC. Calculate the forward- path open-loop poles. Now use MATLABto plot the system’ s root locus and ﬁnd the gain, K PSCthat yields a critically damped closed-loopresponse.Finally,plot the time-domain response, c(t), for a unit-step input using MATLAB.Note on the curve the rise time, T r, and settling time, Ts. b.Now add an integral gain, KISC, to the controller, such that KISC=KPSC0:4. Use MATLAB to plot the root locus and ﬁnd the proportional gain, KPSC, that could lead to a closed- loop unit-step response with 10%overshoot. Plot c(t) using MATLAB and note on the curve the peak time, T p,a n d settling time, Ts. Does the response obtained resembleasecond-orderunder- damped response? 72.Parabolic trough collector. Consider the ﬂuid temperature control of a parabolic trough collector(Camocho ,2012 ) embedded in the unity feedback structure as shown in Figure P8.3, where the open-loopplant transfer function is given by G s 137:210 6K s20:0224 s19610 6e 39s Approximating the time-delay term with e sT1 T 2s 1T 2s, make a sketch of the resulting root locus (Note: Aftersubstituting the approximation, G ∞<0, the positive feedback rules of Section 8.9 must be used). Markwhere appropriate in the plot and ﬁnd: a.The asymptotes and their intersection with the realaxis; b.The break-in and breakaway points. (The procedures presented in Section 8.5 are also valid for positive feedback systems); c.The range of Kfor closed-loop stability; d.The value of Kthat will make the system oscillate and the oscillation frequency.438 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:21 Cyber Exploration Laboratory Experiment 8.1 Objectives To verify the effect of open-loop poles and zeros upon the shape of the root locus. To verify the root locus as a tool for estimating the effect of open-loop gain upon the transient response of closed-loop systems. Minimum Required Software Packages MATLAB and the Control System Toolbox Prelab 1.Sketch two possibilities for the root locus of a unity negative-feedback system with theopen-loop pole-zero con ﬁguration shown in Figure P8.21. 2.If the open-loop system of Prelab 1 is G sK s1:5 s s0:5 s10, estimate the percent overshoot at the following values of gain, K: 20, 50, 85, 200, and 700. Lab 1.Using Matlab ’s SISO Design Tool, set up a negative unity feedback system with G sK s6 s s0:5 s10 to produce a root locus. For convenience, set up the zero at  6 using SISO Design Tool’s compensator function by simply dragging a zero to  6 on the resulting root locus. Print the root locus for the zero at  6. Move the zero to the following locations and print out a root locus at each location:  2, 1:5, 1:37, and  1:2. 2.Using Matlab ’s SISO Design Tool, set up a negative unity feedback system with G sK s1:5 s s0:5 s10 to produce a root locus. Open the LTI Viewer for SISO Design Tool to show stepresponses. Using the values of K speci ﬁed in Prelab 2, record the percent overshoot and settling time and print the root loci and step response for each value of K. Postlab 1.Discuss your ﬁndings from Prelab 1 and Lab 1. What conclusions can you draw? 2.Make a table comparing percent overshoot and settling time from your calculations inPrelab 2 and your experimental values found in Lab 2. Discuss the reasons for anydiscrepancies. What conclusions can you draw?jω σ FIGURE P8.21Cyber Exploration Laboratory 439WEBC08 10/28/2014 17:56:22 Experiment 8.2 Objective To use MATLAB to design the gain of a controller via root locus. Minimum Required Software Package MATLAB with the Control Systems Toolbox. Prelab The open-loop system dynamics model for the NASA eight-axis Advanced Research Manipulator II (ARM II) electromechanical shoulder joint/link, actuated by an armature-controlled dc servomotor is shown in Figure P8.22. The ARM II shoulder joint c onstant parameters are Ka=12,L=0.006 H, R=1.4Ω, Kb=0.00867, n=200, Km=4.375, J=Jm+JL/n2,D=Dm+DL/n2,JL=1,DL=0.5,Jm= 0.00844, and Dm=0.00013 ( Craig, 2005 ), (Nyzen, 1999 ), and (Williams, 1994 ). a.Obtain the equivalent open-loop transfer function, G sθL s Vref s. b.The loop is to be closed by cascading a controller, Gc sKDsKP, with G(s)i n the forward path forming an equivalent forward-transfer function, Ge sGc sG s. Parameters of Gc(s) will be used to design a desired transient performance. The input to the closed-loop system is a voltage, VI s, representing the desired angular displacement of the robotic joint with a ratio of 1 volt equals 1 radian. The output of the closed-loop system is the actual angular displacement of the joint, θL s. An encoder in the feedback path, Ke, converts the actual joint displacement to a voltage with a ratio of 1 radian equals 1 volt. Draw the closed-loop system showing all transfer functions. c.Find the closed-loop transfer function. Lab LetKP KD4 and use MATLAB to design the value of KDto yield a step response with a maximum percent overshoot of 0.2%. Postlab 1.Discuss the success of your design. 2.Is the steady-state error what you would expect? Give reasons for your answer. Experiment 8.3 Objective To use LabVIEW to design the gain of a controller via root locus. Minimum Required Software Package LabVIEW with the Control Design and Simulation Module, and the MathScript RT Module. Prelab Complete the Prelab to Experiment 8.2 if you have not already done so. Lab LetKP KD4. Use LabVIEW to open and customize the Interactive Root Locus VI from the Examples in order to implement a design of KDto yield a step responseKa (Ls + R)(Js + D)Km 1/n s KbVrefAmp + _Armature circuit & motor dynamics Back emf Gears & integrator θL FIGURE P8.22 Open-loop model for ARM ll440 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:22 with a maximum percent overshoot of 0.2%. Use a hybrid graphical/MathScript approach. Postlab 1.Discuss the success of your design. 2.Is the steady-state error what you would expect? Give reasons for your answer. Hardware Interface Laboratory Experiment 8.4 Speed Control Using Gain Adjustment Objective To control the speed of a motor in closed-loop using gain compensation. To make observations about tradeoffs between the compensated transient response and the steady-state error. Material Required Computer with LabVIEW Installed; myDAQ; dc brushed gearmotor with Hall Sensor quadrature encoder (  10 V to +10 V normal operation range); and motor control chip BA6886N or a transistor circuit substitute Files Provided at www.wiley.com/college/nise Speed P Control Incomplete.viSignal Conditioning (subVI).vi Prelab Answer the following questions: 1.Find the closed-loop transfer function from R(s)toC(s) for the system in Figure P8.23. 2.Draw the root locus for the system. 3.Draw the unit-step response for the system marking the settling time, peak time, andmaximum output. 4.Find an expression for the steady-state error to a unit-step input for the system. Lab Software: TheSpeed P Control Incomplete.vi is provided and illustrated in Figure P 8 . 2 4 .Y o un e e dt om o d i f yi ta sf o l l o w sb e f o r ei tb e c o m e so p e r a t i o n a l . 1.You need to change the constant on the left to ﬁt your motor ’s gear ratio and encoder CPR (counts per revolution) as shown in Figure P8.24( b). 2.You need to write a SubVI for a P controlle r and place it where the arrow indicates it in Figure P8.24( b). The function of a P controller is uKPe. Your SubVI has two inputs, the system ’se r r o re and the proportional constant KP.I tw i l lh a v eo n e output u.KPK sτ + 1+ –C(s) R(s) FIGURE P8.23Hardware Interface Laboratory 441WEBC08 10/28/2014 17:56:22 3.Double-clicking on the Signal Conditioning (SubVI) , Figure P8.24( b), you get Figure P8.25. Modify the indicated constant to re ﬂect the dead zone parameter of your motor. This SubVI limits the inpu t voltage to the motor controller and eliminates the dead zone by offsettin g the input to the motor controller. FIGURE P8.24 Speed P Control Incomplete.vi :a. Front Panel ;b. Block Diagram FIGURE P8.25 Signal Conditioning (SubVI).vi Block Diagram442 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:23 Hardware: Figure P8.26 is the hardware diagram for speed control. The diagram is identical to the one in Experiment 4.6, except that Pins 2 and 10 in the motor controller chip connect to digital lines D2 and D3 in the myDAQ to allow changes in motor direction. Procedure: 1.Verify the operation of your closed-loop system. 2.Draw a functional block diagram (similar to the ones shown in control systems textbooks) of the system. Do not include the signal conditioning functions, nor thechange-of-direction signals. 3.Using the transfer function you found in Experiment 4.6, draw the system’ s root locus. 4.Find the theoretical range of K Pin which the system is closed-loop stable. 5.Run your program and system to ﬁnd experimentally the range of KPin which the system is closed-loop stable. 6.Make a judicious choice of three different values of KPfor experimentation. 7.Using the transfer function you found previously and the three judicious choices ofproportional gain, complete the following table using hand calculations only (calculatorsOK, no computer simulations allowed). Show all your work. 5V DGND 7 6 5 4 32 1 0 1– 1+ 0– 0+ 1 0 –15V +15VAO AGND AUDIO OUT AUDIO INAGNDAI ±10VDIO 0–5VMyDAQ1 2 3 4 5 678 9 1010Ω 9VMotor BA6886Nwhite FIGURE P8.26 Wiring diagram9 9MyDAQ right slot shown on left is taken from Multisim program module NI myDAQ design and also reproduced in White-Paper 11423, Figure 2. Both Multisim and the White Paper are from National Instruments.Hardware Interface Laboratory 443WEBC08 10/28/2014 17:56:24 KP TP—Peak time %OS—Percent overshoot Ts—Settling time ess—Steady state error (step input) Theoretical 8.For each one of the three values of KP, perform step-input experiments; use one single value of step-input amplitude for the three values. Make sure that your oscilloscope captures contain the system ’s transient response in its entirety. Show measurements of all the parameters in the table above and ﬁll in the following table. Please note that Ts, the settling time, is hard to measure in the current setting because of the limited number of analog channels present. Instead of measuring Ts, mark in your oscilloscope its theoretical value using the scope cursors. KP TP—Peak time %OS—Percent overshoot ess—Steady-state error (step input) Experimental Postlab Make a detailed comparison of your theoretical and experimental results. Discuss similarities and discrepancies between experimental and theoretical values and givepossible reasons. Experiment 8.5 Position Control Using Gain Adjustment Objectives To control the angular position of the shaft of a permanent-magnet dc motor in closed-loop using gain compensation. To make observations about tradeoffs between the compensated transient response and the steady-state error. Material Required Computer with LabVIEW Installed; myDAQ; dc brushed gearmotor with Hall Sensor quadrature encoder (  10 V to +10 V normal operation range); and motor control chip BA6886N or a transistor circuit substitute. Files Provided at www.wiley.com/college/nise Position control.viSignal Conditioning (SubVI).viP Controller (SubVI).vi Prelab Answer the following questions: 1.For a given permanent-magnet dc motor it has been found that the transfer function from armature voltage Ea sto angular velocity Ω sisΩ s Ea sK τs1. Find the transfer function of the motor from armature voltage to angular positionΘ s Ea s. 2.Draw the root locus for the system in Figure P8.27.444 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:24 3.Draw the unit-step response for the syst em marking the settling time, peak time, and maximum output. Find all the possibiliti es: overdamped, cr itically damped, and underdamped. 4.Find an expression for the steady-state error to a unit-step input for the system. Lab Software: The front panel and block diagram of the Position control.vi are shown in Figure P8.28. Change the constants inside the Signal Conditioning SubVI to match yourKPK s (sτ + 1)+ –C(s) R(s) FIGURE P8.27 FIGURE P8.28 Position control.vi :a.Front Panel ;b.Block DiagramHardware Interface Laboratory 445WEBC08 10/28/2014 17:56:25 dead zone parameters. The constant on the right of the diagram must be modi ﬁed to match your motor ’s gear ratio. Hardware: Make the following changes to the wiring diagram shown in Figure P8.26: Move the connections from D1, D2, and D3 to D2, D3, and D4, respectively. All the other connections remain the same. Procedure: 1.Choose a small Pgain. Verify the operation of your closed-loop system. The motor should be able to move in both directions and through the full-scale range. 2.Using the transfer function found in Experiment 4.6, calculate the motor ’s transfer function from armature voltage to angular positionΘ s Ea s. 3.Draw a functional block diagram of the system. Do not include the signal conditioning functions, nor the change-of-direction signals. Label all the pertinent signals. 4.Using the transfer functionΘ s Ea syou just calculated, draw the system ’s root locus. 5.Find the theoretical range of KPfor which the system is closed-loop stable. 6.Run your program and system to ﬁnd experimentally the range of KPfor which the system is closed-loop stable. 7.Make a judicious choice of three different values of KPfor experimentation. 8.Using the transfer function you calculated above and the three judicious choices ofproportional gain, complete the following table using hand calculations only (calculatorsOK, no computer simulations allowed). Show all your work. KP TP—Peak time %OS—Percent overshoot Ts—Settling time ess—Steady-state error (step input) Theoretical 9.For each one of the three values of KP, perform step-input experiments using one value of step input for the three values. Make sure that your oscilloscope captures contain thesystem ’s transient response in its entirety. Show measurements of all the parameters in the table above and ﬁll in the following table. Please note that T s, the settling time, is hard to measure in the current setting because of the limited number of analog channelsavailable. Instead of measuring T s, mark in your oscilloscope its theoretical value using the scope cursors. KP TP—Peak time %OS—Percent overshoot ess—Steady-state error (step input) Experimental446 Chapter 8 Root Locus TechniquesWEBC08 10/28/2014 17:56:25 Bibliography Anderson, C. G., Richon, J.-B., and Campbell, T. J. An Aerodynamic Moment-Controlled Surface for Gust Load Alleviation on Wind Turbine Rotors. IEEE Transactions on Control System Technology , vol. 6, no. 5, September 1998, pp. 577 –595. Åström, K., Klein, R. E., and Lennartsson, A. Bicycle Dynamics and Control. IEEE Control Systems , August 2005, pp. 26 –47. Baker, M. W., and Sarpeshkar, R. Feedback Analysis and Design of RF Power Links for Low-Power Bionic Systems. IEEE Transactions on Biomedical, Circuits and Systems . vol. 1, 2007, pp. 28–38. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Craig, J. J. Introduction to Robotics: Mechanics and Control , 3d ed. Prentice Hall, Upper Saddle River, NJ, 2005. Davidson, C. M., de Paor, A. M., and Lowery, M. M. Insights from Control Theory into Deep Brain Stimulation for Relief from Parkinson ’s Disease. IEEE, Proc. of the 9th Int. Conf. Elektro , 2012, pp. 2 –7. Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA., 1989. Evans, W. R. Control System Synthesis by Root Locus Method. AIEE Transactions , vol. 69, 1950, pp. 66 –69. Evans, W. R. Graphical Analysis of Control Systems. AIEE Transactions , vol. 67, 1948, pp. 547–551. Franklin, G. F., Powell, J. D., and Emami-Naeini, A. Feedback Control of Dynamic Systems , 2d ed. Addison-Wesley, Reading, MA., 1991. Galvão, K. H. R., Yoneyama, T., and de Araújo, F. M. U. A Simple Technique for Identifying a Linearized Model for a Didactic Magnetic Levitation System. IEEE Transactions on Education , vol. 46, no. 1, February 2003, pp. 22 –25. Guy, W., The Human Pupil Servomechanism . Computers in Education Division of ASEE, Application Note No. 45, 1976. Hahn, J. O., Dumont, G. A., and Ansermino, J. M. System Identi ﬁcation and Closed-Loop Control of End-Tidal CO 2in Mechanically Ventilated Patients. IEEE Transactions on Information Technology in Biomedicine , vol. 16, no. 6, November 2012, pp. 1176 –2012. Hollot, C. V., Misra, V., Towsley, D., and Gong, W. A Control Theoretic Analysis of RED. Proceedings of IEEE INFOCOM , 2001, pp. 1510 –1519. Johnson, H., et al. Unmanned Free-Swimming Submersible (UFSS) System Description. NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C., 1980. Karlsson, P., and Svesson, J. DC Bus Voltage Control for a Distributed Power System. IEEE Trans. on Power Electronics , vol. 18, no. 6, 2003, pp. 1405 –1412. Khammash, M., and El-Samad, H. Systems Biology: From Physiology to Gene Regulation. IEEE Control Systems , August 2004, pp. 62 –76. Kuo, B. C. Automatic Control Systems , 6th ed. Prentice Hall, Upper Saddle River, NJ, 1991. Lam, C. S., Wong, M. C., and Han, Y. D. Stability Study on Dynamic Voltage Restorer (DVR). Power Electronics Systems and Applications 2004; Proceedings of the First International Conference on Power Electronics , 2004, pp. 66 –71. Low, K. H., Wang, H., Liew, K. M., and Cai, Y. Modeling and Motion Control of Robotic Hand for Telemanipulation Application. International Journal of Software Engineering and Knowledge Engineering , vol. 15, 2005, pp. 147 –152.Postlab Make a detailed comparison of your theoretical and experimental tables. Discuss similarities and discrepancies between experimental and theoretical results and give possible reasons.Bibliography 447WEBC08 10/28/2014 17:56:25 Mahmood, H., and Jiang, J. Modeling and Control System Design of a Grid Connected VSC Considering the Effect of the Interface Transformer Type. IEEE Transactions on Smart Grid, vol. 3, no. 1, March 2012, pp. 122 –134. Nyawako, D., and Reynolds, P. Response-Dependent Velocity Feedback Control for Mitigation of Human-Induced Floor Vibrations. Smart Materials and Structures , vol. 18, IOP Publishing Ltd., UK, 2009, pp. 1 –13. Nyzen, R. J. Analysis and Control of an Eight-Degree-of-Freedom Manipulator. Ohio University Masters Thesis, Mechanical Engineering, Dr. Robert L. Williams II, advisor, August 1999. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics, IEEE, 2007, pp. 157 –162. Saeys, W., Deblander, J., Ramon, H., and Anthonis, J. High-Performance Flow Control for Site-Speci ﬁc Application of Liquid Manure. Biosystems Engineering , vol. 99, 2008, pp. 22 –34. Shahin, M., and Maka, S. A Transfer Function Method for the Assessment of Nervous System Modulation of Long-Term Dynamics of Blood Pressure. IEEE International Conf. on Communi- cation, Control, and Computing , IEEE 2010, pp. 560 –564. Spong, M., Hutchinson, S., and Vidyasagar, M. Robot Modeling and Control . John Wiley & Sons, Hoboken, NJ, 2006. Stapleton, C.A. Root-Locus Study of Synchronous-Machine Regulation. IEE Proceedings , vol. 111, issue 4, 1964, pp. 761 –768. Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model- Based Predictive Control for Drive Systems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions on Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Ünyeliog ̆lu, K. A., Hatopog ̆lu, C., and Özgüner, Ü. Design and Stability Analysis of a Lane Following Controller. IEEE Transactions on Control Systems Technology , vol. 5, 1997, pp. 127 –134. Williams, R. L. II. Local Performance Optimization for a Class of Redundant Eight-Degree-of- Freedom Manipulators. NASA Technical Paper 3417 , NASA Langley Research Center, Hampton VA, March 1994. Yamazaki, H., Marumo, Y., Iizuka, Y., and Tsunashima, H. Driver Model Simulation for Railway Brake Systems. Fourth IET Int. Conf. on Railway Condition Monitoring , 2008. Yan, T., and Lin, R. Experimental Modeling and Compensation of Pivot Nonlinearity in Hard Disk Drives. IEEE Transactions on Magnetics , vol. 39, 2003, pp. 1064 –1069.448 Chapter 8 Root Locus TechniquesWEBC09 10/28/2014 18:1:31 Design via Root Locus Chapter Learning Outcomes After completing this chapter the student will be able to: Use the root locus to design cascade compensators to improve the steady-state error (Sections 9.1 –9.2) Use the root locus to design cascade compensators to improve the transientresponse (Section 9.3) Use the root locus to design cascade compensators to improve both thesteady-state error and the transient response (Section 9.4) Use the root locus to design feedback compensators to improve the transientresponse (Section 9.5) Realize the designed compensators physically (Section 9.6) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to design a cascade compensator to meet transientresponse and steady-state error speci ﬁcations. Given the pitch or heading control system for the UFSS vehicle shown on theback endpapers, you will be able to design a cascade or feedback compensatorto meet transient response speci ﬁcations.9 449WEBC09 10/28/2014 18:1:31 9.1 Introduction In Chapter 8, we saw that the root locus graphically displayed both transient response and stability information. The locus can be sketched quickly to get a general idea of the changesin transient response generated by changes in gain. Speci ﬁc points on the locus also can be found accurately to give quantitative design information. The root locus typically allows us to choose the proper loop gain to meet a transient response speci ﬁcation. As the gain is varied, we mo ve through different regions of response. Setting the gain at a p articular value yields the transient response dictated by the poles at that point on the root locus. Thus, we are limited to those responses that exist along the root locus . Improving Transient Response Flexibility in the design of a desired transient response can be increased if we can design fortransient responses that are not on the root locus. Figure 9.1( a) illustrates the concept. Assume that the desired transient response, de ﬁned by percent overshoot and settling time, is represented by point B. Unfortunately, on the current root locus at the speci ﬁed percent overshoot, we only can obtain the settling time represented by point Aafter a simple gain adjustment. Thus, our goal is to speed up the response at Ato that of B, without affecting the percent overshoot. This increase in speed cannot be accomplished by a simple gainadjustment, since point Bdoes not lie on the root locus. Figure 9.1(b ) illustrates the improvement in the transient response we seek: The faster response has the same percentovershoot as the slower response. One way to solve our problem is to replace the existing system with a system whose root locus intersects the desired design point, B. Unfortunately, this replacement is expensive and counterproductive. Most systems are chosen for characteristics other than transient s-planeAB (a) (b)jω σ c(t) tPoles at BPoles at A = Closed-loop pole = Open-loop pole FIGURE 9.1 a.Sample root locus, showing possible design point via gain adjustment (A) and desired design point that cannot be met via simple gainadjustment (B );b.responses from poles at AandB450 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:31 response. For example, an elevator cage and motor are chosen for speed and power. Components chosen for their transient response may not necessarily meet, for example, power requirements. Rather than change the existing system, we augment, or compensate , the system with additional poles and zeros, so that the compensated system has a root locus that goes through the desired pole location for some value of gain. One of the advantages ofcompensating a system in this way is that additional poles and zeros can be added atthe low-power end of the system before the plant. Addition of compensating poles and zerosneed not interfere with the power output requirements of the system or present additional load or design problems. The compensating poles and zeros can be generated with a passive or an active network. A possible disadvantage of compensating a system with additional open-loop poles and zeros is that the system order can increase, with a subsequent effect on the desiredresponse. In Chapters 4 and 8, we discussed the effect of additional closed-loop polesand zeros on the transient response. At the beginning of the design process discussed inthis chapter, we determine the proper location of additional open-loop poles and zeros to yield the desired second-order closed-loop poles. However, we do not know the location of the higher-order closed-loop poles until the end of the design. Thus, we should evaluate the transient response through simulation after the design is complete to be sure therequirements have been met. In Chapter 12, when we discuss state-space design, the disadvantage of ﬁnding the location of higher-order closed-loop poles after the design will be eliminated. Techniquesthat allow the designer to specify and design the location of all the closed-loop poles at thebeginning of the design process. One method of compensating for transient re sponse, that will be discussed later, is t oi n s e r tad i f f e r e n t i a t o ri nt h ef o r w a r dp a t hi np a r a l l e lw i t ht h eg a i n .W ec a nv i s u a l i z et h eoperation of the differentiator with the fol lowing example. Assuming a position control with a step input, we note that the error undergoes an initial large change. Differentiatingthis rapid change yields a large signal that drives the plant. The output from thedifferentiator is much larger than the output from the pure gain. This large, initial inputto the plant produces a faster response. As the error approaches its ﬁnal value, its derivative approaches zero, and the output from the differentiator becomes negligiblecompared to the output from the gain. Improving Steady-State Error Compensators are not only used to improve the transient response of a system; they are alsoused independently to improve the steady-state error characteristics. Previously, when the system gain was adjusted to meet the transient response speci ﬁcation, steady-state error performance deteriorated, since both the transient response and the static error constant wererelated to the gain. The higher the gain, the smaller the steady-state error, but the largerthe percent overshoot. On the other hand, reducing gain to reduce overshoot increased thesteady-state error. If we use dynamic compensators, compensating networks can be designedthat will allow us to meet transient and steady-state error speci ﬁcations simultaneously . 1We no longer need to compromise between transient response and steady-state error, as long as thesystem operates in its linear range. In Chapter 7, we learned that steady-state error can be improved by adding an open-loop pole at the origin in the forward path, thus increasing the system type and driving theassociated steady-state error to zero. This additional pole at the origin requires an integratorfor its realization. 1The word dynamic describes compensators with noninstantaneous transient response. The transfer functions of such compensators are functions of the Laplace variable, s, rather than pure gain.9.1 Introduction 451WEBC09 10/28/2014 18:1:31 In summary, then, transient response is improved with the addition of differentiation, and steady-state error is improved with the addition of integration in the forward path. Conﬁgurations Two conﬁ gurations of compensation are covered in this chapter: cascade compensation and feedback compensation. These methods are modeled in Figure 9.2. With cascade compensation, the compensating network, G1(s), is placed at the low-power end of the forward path in cascade with the plant. If feedback compensation is used, thecompensator, H 1(s), is placed in the feedback path. Both methods change the open-loop poles and zeros, thereby creating a new root locus that goes through the desired closed-looppole location. Compensators Compensators that use pure integration for improving steady-state error or pure differentia-tion for improving transient response are de ﬁned as ideal compensators . Ideal compensators must be implemented with active networks, which, in the case of electric networks, requirethe use of active ampli ﬁers and possible additional power sources. An advantage of ideal integral compensators is that steady-state error is reduced to zero. Electromechanical idealcompensators, such as tachometers, are often used to improve transient response, since they can be conveniently interfaced with the plant. Other design techniques that preclude the use of active devices for compensation can be adopted. These compensators, which can be implemented with passive elements such as resistors and capacitors, do not use p ure integration and di fferentiation and are not ideal compensators. Advantages of passive networks are that they are less expensiveand do not require additional power sources for their operation. Their disadvantage isthat the steady-state error is not driven to zero in cases where ideal compensators yieldzero error. Thus, the choice between an active or a passive compensator revolves around cost, weight, desired performance, transfer function, and the interface between the compensatorand other hardware. In Sections 9.2, 9.3, and 9.4, we ﬁrst discuss cascade compensatorR(s) C(s) G1(s)Cascade compensator Plant (a) (b)R(s) C(s) G1(s)Original controller PlantOriginal controller G2(s) G3(s) G2(s) H1(s)+ – + – Feedback compensator FIGURE 9.2 Compensation techniques: a.cascade; b.feedback452 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:31 design using ideal compensation and follow with cascade compensation using compensators that are not implemented with pure integration and differentiation. 9.2 Improving Steady-State Error via Cascade Compensation In this section, we discuss two ways to im prove the steady-state error of a feedback control system using cascade compensation. One objective of this design is to improve the steady-state error without appreciably affecting the transient response. Theﬁrst technique is ideal integral compensation , which uses a pure integrator to place an open-loop, forward-path pole at the origin, thus increasing the system type and reducing the error to zero. The second technique does not use pure integration.This compensation technique places the pole near the origin, and although it doesnot drive the steady-state error to zero, it does yield a measurable reduction in steady-state error. While the ﬁrst technique reduces the steady-state error to zero, the compensator must be implemented with active networks, such as ampli ﬁers. The second technique, although it does not reduce the error to zero, does have the advantage that it can be implemented with a less expensive passi ve network that does not require additional power sources. The names associated with the compensators come either from the method of implementing the compensator or from the compensator ’s characteristics. Systems that feed the error forward to the plant are called proportional control systems . Systems that feed the integral of the error to the plant are called integral control systems . Finally, systems that feed the derivative of the error to the plant are called derivative control systems . Thus, in this section we call the ideal integral compensator a proportional-plus-integral (PI)controller , since the implementation, as we will see, consists of feeding the error (proportional) plus the integral of the error forward to the plant. The second technique uses what we call alag compensator . The name of this compensator comes from its frequency response characteristics, which will be discussed in Chapter 11. Thus, we use the name PI controller interchangeably with ideal integral compensator , and we use the name lag compensator when the cascade compensator does not employ pure integration. Ideal Integral Compensation (PI) Steady-state error can be improved by placing an open-loop pole at the origin, because this increases the system type by one. For example, a Type 0 system responding to a step input with a ﬁnite error responds with zero error if the system type is increased by one. Active circuits can be used to place poles at the origin. Later in this chapter, we show how to buildan integrator with active electronic circuits. To see how to improve the steady-state error without affecting the transient response, look at Figure 9.3( a). Here we have a system operating with a desirable transient response generated by the closed-loop poles at A. If we add a pole at the origin to increase the system type, the angular contribution of the open-loop poles at point Ais no longer 180 °, and the root locus no longer goes through point A, as shown in Figure 9.3( b). To solve the problem, we also add a zero close to the pole at the origin, as shown in Figure 9.3(c ). Now the angular contribution of the compensator zero and compensator pole cancel out, point Ais still on the root locus, and the system type has been increased. Furthermore, the required gain at the dominant pole is about the same as before compensation, since the ratioof lengths from the compensator pole and the compensator zero is approximately unity. Thus,we have improved the steady-state error without appreciably affecting the transient response.9.2 Improving Steady-State Error via Cascade Compensation 453WEBC09 10/28/2014 18:1:31 A compensator with a pole at the origin and a zero close to the pole is called an ideal integral compensator . In the example that follows, we demonstrate the effect of ideal integral compensation. An open-loop pole will be placed at the origin to increase the system type and drive the steady-state error to zero. An open-loop zero will be placed very close to the open-loop poleat the origin so that the original closed-loop poles on the original root locus still remain atapproximately the same points on the compensated root locus.s-planejω σ θ1= (2k + 1)180° (a)A –θ2–θθ1 θ3 3 –2θR(s) + –C(s)G(s)Plant Gain K s-planejω σ θ1 (b)A θ2θ3θcθ θR(s) + –C(s)G(s)Plant KCompensator θc 21 (2k + 1)180° – –– –θ3s (c)R(s) + –C(s)Plant Compensator K(s + a)G(s) θzc θpcs-planejω A θ1 θ3 +θzc θ1–θ2–θ3–θpc (2k + 1)180°σ –θ2s FIGURE 9.3 Pole at Aisa.on the root locus without compensator; b.not on the root locus with compensator pole added; c.approximately on the root locus with compensator pole and zero added454 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:32 Example 9.1 Effect of an Ideal Integral CompensatorEffect of an Ideal Integral Compensator PROBLEM: Given the system of Figure 9.4( a), operating with a damping ratio of 0.174, show that the addition of the ideal integral compensator shown in Figure 9.4( b) reduces the steady-state error to zero for a step input without appreciably affecting transient response. The compensating network is chosen with a pole at the origin to increase thesystem type and a zero at  0:1, close to the compensator pole, so that the angular contribution of the compensator evaluated at the original, dominant, second-order poles is approximately zero. Thus, the original, dominant, second-order closed-loop poles are still approximately on the new root locus. SOLUTION: Weﬁrst analyze the uncompensated system and determine the location of the dominant, second-order poles. Next we evaluate the uncompensated steady-state error for a unit step input. The root locus for the uncompensated system is shown in Figure 9.5. s-planejω σ= 0.174 K = 164.6–0.694 + j3.926 100.02° –2 –1 0 = Closed-loop pole = Open-loop pole4 6 –8 –10 –11.61j2j4 –j2 –j4ζ – – FIGURE 9.5 Root locus for uncompensated system of Figure 9.4( a)(a) (b)R(s) E(s) C(s)Plant –sCompensator K(s+0.1) +1 R(s) E(s) C(s)Plant –Gain (s+1)(s+2)(s+10)+K 1 (s+1)(s+2)(s+10) FIGURE 9.4 Closed-loop system for Example 9.1: a.before compensation; b.after ideal integral compensation9.2 Improving Steady-State Error via Cascade Compensation 455WEBC09 10/28/2014 18:1:32 A damping ratio of 0.174 is represented by a radial line drawn on the s-plane at 100:02°. Searching along this line with the root locus program discussed in Appendix H at www.wiley.com/college/nise ,w e ﬁnd that the dominant poles are 0: 694j3:926 for a gain, K, of 164.6. Now look for the third pole on the root locus beyond  10 on the real axis. Using the root locus program and searching for the same gain as that of the dominant pair, K164:6, we ﬁnd that the third pole is approximately at  11:61. This gain yields Kp8:23. Hence, the steady-state error is e ∞1 1Kp1 18:230:108 9.1 Adding an ideal integral compensator with a zero at  0:1, as shown in Figure 9.4( b), we obtain the root locus shown in Figure 9.6. The dominant second-order poles, the third pole beyond  10, and the gain are approximately the same as for the uncompensated system. Another section of the compensated root locus is between the origin and  0:1. Searching this region for the same gain at the dominant pair, K158:2, the fourth closed-loop pole is found at  0:0902, close enough to the zero to cause pole-zero cancellation. Thus, the compensated system ’s closed-loop poles and gain are approximately the same as the uncompensated system ’s closed-loop poles and gain, which indicates that the transient response of the compensated system is about the same as the uncompensated system. However, the compensated system, with its pole at the origin, is a Type 1 system; unlike the uncompensated system, it will respond to a step input with zero error. Figure 9.7 compares the uncompensated response with the ideal integral compensated response. The step response of the ideal integral compensated system approaches unity in the steady state, while the uncompensated system approaches 0.892. Thus, the idealintegral compensated system responds with zero steady-state error. The transientresponse of both the uncompensated and the ideal integral compensated systems isthe same up to approximately 3 seconds. After that time, the integrator in the compensator, s-planejω σ= 0.174 K = 158.2– 0.678 + j3.837 100.02° –11.55 –10 –2–1 –0.10 Fourth closed-loop pole at – 0.0902 = Closed-loop pole = Open-loop pole4 6 –8 –j2j2j4 –j4ζ – – FIGURE 9.6 Root locus for compensated system of Figure 9.4( b)456 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:32 A method of implementing an ideal integral compensator is shown in Figure 9.8. The compensating network precedes G(s) and is an ideal integral compensator since Gc sK1K2 sK1sK2 K1/C18/C19 s 9.2 The value of the zero can be adjusted by varying K2=K1. In this implementation, the error and the integral of the error are fed forward to the plant, G(s). Since Figure 9.8 has both proportional and integral control, the ideal integral controller, or compensator, is given the alternate name PI controller . Later in the chapter we will see how to implement each block, K1andK2=s. Lag Compensation Ideal integral compensation, with its pole on the origin, requires an active integrator. If weuse passive networks, the pole and zero are moved to the left, close to the origin, as shown in Figure 9.9( c). One may guess that this placement of the pole, although it does not increase the system type, does yield an improvement in the static error constant over an uncompensated system. Without loss of generality, we demonstrate that this improvementis indeed realized for a Type 1 system.shown in Figure 9.4( b), slowly compensates for the error until zero error is ﬁnally reached. The simulation shows that it takes 18 seconds for the compensated system to reach to within 2%of the ﬁnal value of unity, while the uncompensated system takes about 6 seconds to settle to within 2%of its ﬁnal value of 0.892. The compensation at ﬁrst may appear to yield deterioration in the settling time. However, notice that the compensated system reaches the uncompensated system ’sﬁnal value in about the same time. The remaining time is used to improve the steady-state error over that of the uncompensated system.2.0 1.81.61.41.21.00.80.60.40.2 00 51 0 1 5 2 0c(t)Ideal integral compensated Uncompensated Time (seconds)FIGURE 9.7 Ideal integral compensated system response and the uncompensated systemresponse of Example 9.1 R(s) C(s) K1++K2 s G(s)+ –Integral (I) Proportional (P) Plant FIGURE 9.8 PI controller9.2 Improving Steady-State Error via Cascade Compensation 457WEBC09 10/28/2014 18:1:33 Assume the uncompensated system shown in Figure 9.9( a). The static error constant, KvO, for the system is KvOKz 1z2∙∙∙ p1p2∙∙∙ 9.3 Assuming the lag compensator shown in Figure 9.9( b)a n d( c), the new static error constant is KvN Kz 1z2∙∙∙ zc p1p2∙∙∙ pc 9.4 What is the effect on the transient response? Figure 9.10 shows the effect on the root locus of adding the lag compensator. The uncompensated system ’s root locus is shown in Figure 9.10( a), where point Pis assumed to be the dominant pole. If the lag compensator pole and zero are close together, the angular contribution of the compensator to point P is approximately zero degrees. Thus, in Figure 9.10( b), where the compensator has been added, point Pis still at approximately the sa me location on the compensated root locus. What is the effect on the required gain, K? After inserting the compensator, we ﬁnd thatKis virtually the same for the uncompensated and compensated systems, since the lengths of the vectors drawn from the lag compensator are approximately equal and all other vectors have not changed appreciably. Now, what improvement can we expect in the steady-state error? Since we established that the gain, K, is about the same for the uncompensated and compensated systems, we can substitute Eq. (9.3) into (9.4) and obtain KvNKvOzc pc>KvO 9.5(a) (b) (c)(s + z1)(s + z2) s(s + p1)(s + p2)R(s) E(s) C(s)Plant –K(s + zc) (s + pc) (s + zc)Gc(s) = s-planejω σ –pc –zc(s + pc)Compensator +(s + z1)(s + z2) s(s + p1)(s + p2)R(s) E(s) C(s)Plant –Gain +K FIGURE 9.9 a.Type 1 uncompensated system; b.Type 1 compensated system; c.compensator pole-zero plot458 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:33 Equation (9.5) shows that the improvement in the compensated system’ sKvover the uncompensated system ’sKvis equal to the ratio of the magnitude of the compensator zero to the compensator pole. In order to keep the transient response unchanged, we know the compensator pole and zero must be close to each other. The only way the ratio of zctopc can be large in order to yield an appreciable improvement in steady-state error and,simultaneously, have the compensator ’s pole and zero close to each other to minimize the angular contribution, is to place the compensator ’s pole-zero pair close to the origin. For example, the ratio of z ctopccan be equal to 10 if the pole is at  0:001 and the zero is at 0:01. Thus, the ratio is 10, yet the pole and zero are very close, and the angular contribution of the compensator is small. In conclusion, although the ideal compen sator drives the stea dy-state error to zero, a lag compensator with a pole that is not at the origin will improve the static errorconstant by a factor equal to z c=pc. There also will be a minimal effect upon the transient response if the pole-zero pair of the compensator is placed close to the origin. Later in the chapter we show circuit con ﬁgurations for the lag comp ensator. These circuit conﬁgurations can be obtained with passive net works and thus do not require the active ampli ﬁers and possible additional power supplies that are required by the ideal integral (PI) compensator. In the following exam ple we design a lag compensator to yield a speci ﬁed improvement in steady-state error.s-planeωj σσ (a)( b)Ps-planeωj P –zc–pc FIGURE 9.10 Root locus: a.before lag compensation; b.after lag compensation Example 9.2 Lag Compensator DesignLag Compensator Design PROBLEM: Compensate the system of Figure 9.4( a), whose root locus is shown in Figure 9.5, to improve the steady-state error by a factor of 10 if the system is operating with a damping ratio of 0.174. SOLUTION: The uncompensated system error from Example 9.1 was 0.108 with Kp8:23. A tenfold improvement means a steady-state error of e ∞0:108 100:0108 9.69.2 Improving Steady-State Error via Cascade Compensation 459WEBC09 10/28/2014 18:1:34 Since e ∞1 1Kp0:0108 9.7 rearranging and solving for the required Kpyields Kp1 e ∞ e ∞1 0:0108 0:010891:59 9.8 The improvement in Kpfrom the uncompensated system to the compensated system is the required ratio of the compensator zero to the compensator pole, or zc pcKpN KpO91:59 8:2311:13 9.9 Arbitrarily selecting pc0:01 9.10 we use Eq. (9.9) and ﬁnd zc11:13pc≈0:111 9.11 Let us now compare the compensated system, shown in Figure 9.11, with the uncompensated system. First sketch the root locus of the compensated system, as shown in Figure 9.12. Next search along the ζ0:174 line for a multiple of 180 °andﬁnd that the s-planejω σ = 0.174 K = 158.1– 0.678 + j3.836 –2 –1 0 –0.111 Fourth closed-loop pole at –0.101 = Closed-loop pole = Open-loop pole4 6 –8 –j2 –j4–10 –11.55j4j2 100.02° Compensator pole at –0.01ζ – – FIGURE 9.12 Root locus for compensated system of Figure 9.111 R(s) E(s) C(s)Plant –(s + 0.01)Compensator (s + 1)(s + 2)(s + 10)K(s + 0.111) + FIGURE 9.11 Compensated system for Example 9.2460 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:35 second-order dominant poles are at  0:678j3:836 with a gain, K, of 158.1. The third and fourth closed-loop poles are at  11:55 and  0:101, respectively, and are found by searching the real axis for a gain equal to that of the dominant poles. All transient and steady-state results for both the uncompensated and the compensated systems are shown in Table 9.1. The fourth pole of the compensated system cancels its zero. This leaves the remaining three closed-loop poles of the compensated system very close in value tothe three closed-loop poles of the uncompensated system. Hence, the transient response ofboth systems is approximately the same, as is the system gain, but notice that the steady-state error of the compensated system is 1/9.818 that of the uncompensated system and isclose to the design speci ﬁcation of a tenfold improvement. Figure 9.13 shows the effect of the lag compensator in the time domain. Even though the transient responses of the uncompensated and lag-compensated systems are the same,the lag-compensated system exhibits less steady-state error by approaching unity moreclosely than the uncompensated system. We now examine another design possibility for the lag compensator and compare the response to Figure 9.13. Let us assume a lag compensator whose pole and zero are 10 timesas close to the origin as in the previous design. The results are compared in Figure 9.14. Eventhough both responses will eventually reach approximately the same steady-state value, the lag compensator previously designed, G c s s0:111= s0:01, approaches the ﬁnal value faster than the proposed lag compensator, Gc s s0:0111 = s0:001. We can explain this phenomenon as follows. From Table 9.1, the previously designed lagTABLE 9.1 Predicted characteristics of uncompensated and lag-compensated systems for Example 9.2 Parameter Uncompensated Lag-compensated Plant and compensatorK s1 s2 s10K s0:111 s1 s2 s10 s0:01 K 164.6 158.1 Kp 8.23 87.75 e ∞ 0.108 0.011 Dominant second-order poles  0:694j3:926  0:678j3:836 Third pole  11:61  11:55 Fourth pole None  0:101 Zero None  0:111 1.4 1.21.00.80.60.40.2 0051 0 1 5 2 0c(t)Lag-compensated Uncompensated Time (seconds)FIGURE 9.13 Step responses of uncompensated and lag- compensated systems for Example 9.2TryIt 9.1 Use the following MATLAB and Control System Toolbox statements to reproduceFigure 9.13. Gu=zpk([], ... [ 1 2 10] ,164.6) ; Gc=zpk( [  0.111] , ... [ 0.01] ,1) ; Gce=Gu*Gc; Tu=feedback(Gu,1) ; Tc=feedback(Gce,1) ; step(Tu) holdstep(Tc)9.2 Improving Steady-State Error via Cascade Compensation 461WEBC09 10/28/2014 18:1:36 9.3 Improving Transient Response via Cascade Compensation Since we have solved the problem of improving the steady-state error without affecting the transient response, let us now improve the transient response itself. In this section, wediscuss two ways to improve the transient response of a feedback control system by usingcompensator has a fourth closed-loop pole at  0:101. Using the same analysis for the new lag compensator with its open-loop pole 10 times as close to the imaginary axis, we ﬁnd its fourth closed-loop pole at  0:01. Thus, the new lag compensator has a closed-loop pole closer to the imaginary axis than the original lag compensator. This pole at  0:01 will produce a longer transient response than the original pole at  0:101, and the steady-state value will not be reached as quickly.(s + 0.001)Gc(s) =(s + 0.111) (s + 0.0111)Gc(s) = 0.2 0 0 5 10 15 20c(t) 0.40.60.81.01.21.4 Time (seconds)(s + 0.01) FIGURE 9.14 Step responses of the system for Example 9.2 using different lag compensators Skill-Assessment Exercise 9.1 PROBLEM: A unity feedback system with the forward transfer function G sK s s7 is operating with a closed-loop step response that has 15% overshoot. Do the following: a.Evaluate the steady-state error for a unit ramp input. b.Design a lag compensator to improve the steady-state error by a factor of 20. c.Evaluate the steady-state error for a unit ramp input to your compensated system. d.Evaluate how much improvement in steady-state error was realized. ANSWERS: a.eramp ∞0:1527 b.Glag ss0:2 s0:01 c.eramp ∞0:0078 d.19.58 times improvement The complete solution is at www.wiley.com/college/nise .462 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:36 cascade compensation. Typically, the objective is to design a response that has a desirable percent overshoot and a shorter settling time than the uncompensated system. Theﬁrst technique we will discuss is ideal derivative compensation . With ideal derivative compensation, a pure differentiator is added to the forward path of the feedback control system. We will see that the result of adding differentiation is the addition of a zeroto the forward-path transfer function. This type of compensation requires an active networkfor its realization. Further, differentiation is a noisy process; although the level of the noiseis low, the frequency of the noise is high compared to the signal. Thus, differentiatinghigh-frequency noise yields a large, unwanted signal. The second technique does not use pure differentiation. Instead, it approximates differentiation with a passive network by adding a zero and a more distant pole tothe forward-path transfer function. The zero approximates pure differentiation as describedpreviously. As with compensation to improve steady-state error, we introduce names associated with the implementation of the compensators. We call an ideal derivative compensator aproportional-plus-derivative (PD)controller , since the implementation, as we will see, consists of feeding the error (proportional) plus the derivative of the error forward to the plant. The second technique uses a passive network called a lead compensator . As with the lag compensator, the name comes from its frequency response, which is discussed in Chapter 11. Thus, we use the name PD controller interchangeably with ideal derivative compensator , and we use the name lead compensator when the cascade compensator does not employ pure differentiation. Ideal Derivative Compensation (PD) The transient response of a system can be selected by choosing an appropriate closed-looppole location on the s-plane. If this point is on the root locus, then a simple gain adjustment is all that is required in order to meet the transient response speci ﬁcation. If the closed-loop pole location is not on the root locus, then the root locus must be reshaped so that the compensated (new) root locus goes through the selected closed-loop pole location. In order to accomplish the latter task, poles and zeros can be added in the forward path to produce a newopen-loop function whose root locus goes through the design point on the s-plane. One way to speed up the original system that generally works is to add a single zero to the forward path. This zero can be represented by a compensator whose transfer function is G c sszc 9.12 This function, the sum of a differentiator and a pure gain, is called an ideal derivative ,o rPD controller . Judicious choice of the position of the compensator zero can quicken the response over the uncompensated system. In summary, transient responses unattainable by a simple gain adjustment can be obtained by augmenting the system’ s poles and zeros with an ideal derivative compensator. We now show that ideal derivative compensation speeds up the response of a system. Several simple examples are shown in Figure 9.15, where the uncompensated system of Figure 9.15( a), operating with a damping ratio of 0.4, becomes a compensated system by the addition of a compensating zero at  2, 3, and  4 in Figures 9.15( b), (c), and ( d), respectively. In each design, the zero is moved to a different position, and the root locus isshown. For each compensated case, the dominant, second-order poles are farther out along the 0.4 damping ratio line than the uncompensated system. Each of the compensated cases has dominant poles with the same damping ratio as the uncompensated case. Thus, we predict that the percent overshoot will be the same for each case. Also, the compensated, dominant, closed-loop poles have more negative real parts than the uncompensated, dominant, closed-loop poles. Hence, we predict that the settling times for the compensated cases will be shorter than for the uncompensated case. The compensated,9.3 Improving Transient Response via Cascade Compensation 463WEBC09 10/28/2014 18:1:36 dominant, closed-loop poles with the more negative real parts will have the shorter settling times. The system in Figure 9.15( b) will have the shortest settling time. All of the compensated systems will have smaller peak times than the uncompensated system, since the imaginary parts of the compensated systems are larger. The system ofFigure 9.15( b) will have the smallest peak time. Also notice that as the zero is placed farther from the dominant poles, the closed-loop, compensated dominant poles move closer to the origin and to the uncompensated, dominantclosed-loop poles. Table 9.2 summarizes the results obtained from the root locus of each ofthe design cases shown in Figure 9.15.s-planejω σK = 23.72–0.939 + j2.151 –1 0 –3 4 –5 6Third pole (a)ζ = 0.4 = Closed-loop pole–2 = Open-loop polej1j2j3j4j5j7 113.6°j6 – –K = 51.25–3 + j6.874ζ = 0.4 s-planejω σ –1 0 –4 –5 –6 (b)= Closed-loop pole–2 = Open-loop polej1j2j3j4j5j7 j6 113.6° –3 K = 35.34–2.437 + j5.583ζ = 0.4 s-planejω σ –1 0 –3 –4 –5 –6Third pole (c)= Closed-loop pole–2 = Open-loop polej1j2j3j4j5j7 113.6°j6 K = 20.76–1.869 + j4.282ζ = 0.4 s-planejω σ –1 0 –3 –4 –5 6 (d)= Closed-loop pole–2 = Open-loop polej1j2j3j4j5j7 j6 113.6°Third pole – FIGURE 9.15 Using ideal derivative compensation: a.uncompensated; b.compensator zero at  2; c.compensator zero at  3;d.compensator zero at  4464 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:38 In summary, although compensation methods canddyield slower responses than method b, the addition of ideal derivative compensation shortened the response time in each case while keeping the percent overshoot the same. This change can best be seen in the settling time and peak time, where there is at least a doubling of speed across all of the casesof compensation. An added bene ﬁt is the improvement in the steady-state error, even though lag compensation was not used. Here the steady-state error of the compensated system is at least one-third that of the uncompensated system, as seen by e ∞andKp. All systems in Table 9.2 are Type 0, and some steady-state error is expected. The reader must not assume that, in general, improvement in transient response always yields an improvement insteady-state error. The time response of each case in Table 9.2 is shown in Figure 9.16. We see that the compensated responses are faster and exhibit less error than the uncompensated response. Now that we have seen what ideal derivative compensation can do, we are ready to design our own ideal derivative compensator to meet a transient response speci ﬁcation. Basically, we will evaluate the sum of angles from the open-loop poles and zeros to a designpoint that is the closed-loop pole that yields the desired transient response. The differencebetween 180 °and the calculated angle must be the angular contribution of the compensator zero. Trigonometry is then used to locate the position of the zero to yield the requireddifference in angle.TABLE 9.2 Predicted characteristics for the systems of Figure 9.15 Uncompensated Compensation b Compensation c Compensation d Plant and compensatorK s1 s2 s5K s2 s1 s2 s5K s3 s1 s2 s5K s4 s1 s2 s5 Dom, poles  0:939j2:151  3j6:874  2:437j5:583  1:869j4:282 K 23.72 51.25 35.34 20.76 ζ 0.4 0.4 0.4 0.4 ωn 2.347 7.5 6.091 4.673 %OS 25.38 25.38 25.38 25.38 Ts 4.26 1.33 1.64 2.14 Tp 1.46 0.46 0.56 0.733 Kp 2.372 10.25 10.6 8.304 e ∞ 0.297 0.089 0.086 0.107 Third pole  6:123 None  3:127  4:262 Zero None None  3  4 Comments Second-order approx. OKPuresecond-orderSecond-orderapprox. OKSecond-orderapprox. OK Zero at –2 Uncompensate d Zero at –3Zero at –4 1.25 1.000.750.500.25 004.5c(t) 1.5 3.0 Time (seconds)FIGURE 9.16 Uncompensated system andideal derivative compensation solutions from Table 9.29.3 Improving Transient Response via Cascade Compensation 465WEBC09 10/28/2014 18:1:39 Example 9.3 Ideal Derivative Compensator DesignIdeal Derivative Compensator Design PROBLEM: Given the system of Figure 9.17, design an ideal derivative compensator to yield a 16% overshoot, with a threefold reduction in settling time. SOLUTION: Let us ﬁrst evaluate the performance of the uncompensated system operating with 16% overshoot. The root locus for the uncompensated system is shown in Figure 9.18. Since 16%overshoot is equivalent to ζ0:504, we search along that damping ratio line for an odd multiple of 180 °andﬁnd that the dominant, second-order pair of poles is at  1:205j2:064. Thus, the settling time of the uncompensated system is T s4 ζωn4 1:2053:320 9.13 Since our evaluation of percent overshoot and settling time is based upon a second- order approximation, we must check the assumption by ﬁnding the third pole and justifying the second-order approximation. Searching beyond  6 on the real axis for a gain equal to the gain of the dominant, second-order pair, 43.35, we ﬁnd a third pole at  7:59, which is over six times as far from the jω-axis as the dominant, second-order pair. We conclude that our approximation is valid. The transient and steady-state errorcharacteristics of the uncompensated system are summarized in Table 9.3. Now we proceed to compensate the system. First we ﬁnd the location of the compensated system ’s dominant poles. In order to have a threefold reduction in the settling time, the compensated system ’s settling time will be one- third of Eq. (9.13). The new settling time will be 1.107. Therefore, the real part of the compensatedsystem ’s dominant, second-order pole is σ 4 Ts4 1:1073:613 9.14K s(s + 4)(s + 6)R(s) C(s) –+ E(s) FIGURE 9.17 Feedback control system for Example 9.3 Virtual Experiment 9.1 PD Controller Design Put theory into practice and use root-locus to design a PD controller for the Quanser Ball and Beam usingLabVIEW. The Ball andBeam is an unstable system, similar to exothermic chemical processes that haveto be stabilized to avoidoverheating. Virtual experiments are foundon Learning Space. s-planejω σK = 43.35–1.205 + j2.064ζ = 0.504 = Closed-loop pole = Open-loo p polej1 –1 0 –2 –3 4 –5 6 –7j2j3 –7.59120.26° – – FIGURE 9.18 Root locus for uncompensated system shown in Figure 9.17466 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:41 Figure 9.19 shows the designed dominant, second-order pole, with a real part equal to  3:613 and an imaginary part of ωd3:613 tan 180 ° 120:26°6:193 9.15 Next we design the location of the compensator zero. Input the uncompensated system ’s poles and zeros in the root locus program as well as the design point  3:613j6:193 as a test point. The result is the sum of the angles to the design point of all the poles and zeros of the compensated system except for those of the compensatorzero itself. The difference between the result obtained and 180 °is the angular contribution required of the compensator zero. Using the open-loop poles shown in Figure 9.19 and thetest point,  3:613j6:193, which is the desired dominant second-order pole, we obtain the sum of the angles as  275 :6°. Hence, the angular contribution required from the compensator zero for the test point to be on the root locus is 275 :6° 180 °95:6°.T h eTABLE 9.3 Uncompensated and compensated system characteristic of Example 9.3 Uncompensated Simulation Compensated Simulation Plant and compensatorK s s4 s6K s3:006 s s4 s6 Dominant poles  1:205j2:064  3:613j6:193 K 43.35 47.45 ζ 0.504 0.504 ωn 2.39 7.17 %OS 16 14.8 16 11.8 Ts 3.320 3.6 1.107 1.2 Tp 1.522 1.7 0.507 0.5 Kv 1.806 5.94 e ∞ 0.554 0.168 Third pole  7:591  2:775 Zero None  3:006 Comments Second-order approx. OKPole-zeronot canceling 120.26° –1 0σs-planeDesired compensated dominant pole –3.613 + j 6.193= 0.504ζjω = Closed-loop pole = Open-loo p pole–2 –3 4 –5 6 –7 –7.59j2j3j4j5j6j7 Uncompensated dominant pole –1.205 + j2.064 j1 ––FIGURE 9.19 Compensated dominant pole superimposed over the uncompensated root locus for Example 9.39.3 Improving Transient Response via Cascade Compensation 467WEBC09 10/28/2014 18:1:42 geometry is shown in Figure 9.20, where we now must solve for  σ, the location of the compensator zero. From the ﬁgure, 6:193 3:613 σtan 180 ° 95:6° 9.16 Thus, σ3:006. The complete root locus for the compensated system is shown in Figure 9.21. Table 9.3 summarizes the results for both the uncompensated system and the compensated system. For the uncompensated system, the estimate of the transient response is accurate since the third pole is at least ﬁve times the real part of the dominant, second-order pair. The second-order approximation for the compensated system, however, may be invalid because there is no approximate closed-loop third-pole and zero cancellation –1 0 –2 –3 –4 –5 –6 –7–3.613 + j 6.193= 0.504 K = 47.45 s-planej j1j2j3j4j5j7 j6 = Closed-loop pole = Open-loo p poleCompensated dominant pole 120.26° –2.775σω ζ FIGURE 9.21 Root locus for the compensated system of Example 9.3Desired compensated dominant pole–3.613 + j 6.193= 0.504ζ s-planejω σ –1 0 –3 –4 –5 –6 –2 = Closed-loop pole = Open-loo p polej1j2j3j4j5j7 j6 –795.6°Uncompensated dominant pole – σ120.26°–1.205 + j 2.064 FIGURE 9.20 Evaluating the location of the compensating zero for Example 9.3468 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:42 Once we decide on the location of the compensating zero, how do we implement the ideal derivative, or PD controller? The ideal integral compensator that improved steady-state error was implemented with a proportional-plus-integral (PI) controller. The ideal derivativecompensator used to improve the transient response is implementedwith a proportional-plus-derivative (PD) controller. For example, inFigure 9.23 the transfer function of the controller is G c sK2sK1K2sK1 K2/C18/C19 9.17 Hence, K1=K2is chosen to equal the negative of the compensator zero, and K2is chosen to contribute to the required loop-gain value. Later in the chapter, we will study circuits that canbe used to approximate differentiation and produce gain.between the closed-loop pole at  2:775 and the closed-loop zero at  3:006. A simulation or a partial-fraction expansion of the closed-loop response to compare the residue of thepole at  2:775 to the residues of the dominant poles at  3:613j6:193 is required. The results of a simulation are shown in the table ’s second column for the uncompensated system and the fourth column for the compensated system. The simulation results can beobtained using MATLAB (discussed at the end of this example) or a program like thestate-space step-response progr am described in Appendix H.1 at www.wiley.com/ college/nise . The percent overshoot differs by 3 % between the uncompensated and compensated systems, while there is approximately a threefold improvement in speed asevaluated from the settling time. Theﬁnal results are displayed in Figure 9.22, which compares the uncompensated system and the faster compensated system. Students who are using MATLAB should now run ch9p1 in Appendix B. MATLAB will be used to design a PD controller. You will input thedesired percent overshoot from the keyboard. MATLAB will plot theroot locus of the uncompensated system and the percent overshootline. You will interactively select the gain, after which MATLABwill display the performance characteristics of the uncompensatedsystem and plot its step response. Using these characteristics, you will input the desired settling time. MATLAB will design the PD controller, enumerate its performance characteristics, and plot astep response. This exercise solves Example 9.3 using MATLAB.Compensated Uncompensated 1.2 1.00.80.60.40.2 0 0 1.0 3.5c(t) Time (seconds)0.5 1.5 2.0 2.5 3.0 4.0FIGURE 9.22 Uncompensated and compensated system step responses of Example 9.3 K1K2s R(s) C(s)+ G(s) –+ + FIGURE 9.23 PD controller9.3 Improving Transient Response via Cascade Compensation 469WEBC09 10/28/2014 18:1:42 While the ideal derivative compensator can improve the transient response of the system, it has two drawbacks. First, it requires an active circuit to perform the differentia- tion. Second, as previously mentioned, differentiation is a noisy process: The level of thenoise is low, but the frequency of the noise is high compared to the signal. Differentiationof high frequencies can lead to large unwanted signals or saturation of ampli ﬁers and other components. The lead compensator is a passive network used to overcome thedisadvantages of ideal differentiation and still retain the ability to improve the transientresponse. Lead Compensation Just as the active ideal integral compensator can be approximated with a passive lagnetwork, an active ideal derivative compensator can be approximated with a passive leadcompensator. When passive networks are used, a single zero cannot be produced; rather, acompensator zero and a pole result. However, if the pole is farther from the imaginary axis than the zero, the angular contribution of the compensator is still positive and thus approximates an equivalent single zero. In other words, the angular contribution of thecompensator pole subtracts from the angular contribution of the zero. This deduction doesnot preclude the use of the compensator to improve transient response, since the net angularcontribution is positive, just as for a single PD controller zero. The advantages of a passive lead network over an active PD controller are that (1) no additional power supplies are required and (2) noise due to differentiation is reduced. Thedisadvantage is that the additional pole does not reduce the number of branches of the root locus that cross the imaginary axis into the right half-plane. On the other hand, the addition of the single zero of the PD controller tends to reduce the number of branches of the rootlocus that cross into the right half-plane. Let us ﬁrst look at the concept behind lead compensation. If we select a desired dominant, second-order pole on the s-plane, the sum of the angles from the uncompensated system ’s poles and zeros to the design point can be found. The difference between 180 °and the sum of the angles must be the angular contribution required of the compensator. For example, looking at Figure 9.24, we see that θ 2 θ1 θ3 θ4θ5 2k1180 ° 9.18 where θ2 θ1θcis the angular contribution of the lead compensator. From Figure 9.24 we see that θcis the angle of a ray extending from the design point and intersecting the real axis at the pole value and zero value of the compensator. Now visualize this ray rotatingabout the desired closed-loop pole location and intersecting the real axis at the compensatorpole and zero, as illustrated in Figure 9.25. We realize that an in ﬁnite number of lead compensators could be used to meet the transient response requirement.TryIt 9.2 Use MATLAB, the Control System Toolbox, and thefollowing steps to useSISOTOOL to perform the design of Example 9.3. Type SISOTOOL in the MATLAB Command Window . Select Import in the File menu of the SISO Design for SISO Design Task Window . In the Data ﬁeld for G, type zpk([],[0 ,-4,-6] ,1 ) and hit ENTER on the keyboard. Click OK. On the Edit menu choose SISO Tool Preferences ... and select Zero/pole/gain: under the Options tab. Click OK. Right-click on the root locus white space and choose Design Requirements/ New ... Choose Percent overshoot and type in 16. Click OK. Right-click on the root locus white space and choose Design Requirements/New ... Choose Settling time and click OK. Drag the settling time vertical line to the intersection of the root locus and 16% overshoot radial line. Read the settling time at the bottom of the window. Drag the settling time vertical line to a settling time that is 1/3of the value found in Step 9. Click on a red zero icon in the menu bar. Place the zero on theroot locus real axis by clicking again on the real axis. Left-click on the real-axis zero and drag it along the real axis until the root locus intersects the settling time and percent overshoot lines. Drag a red square along the root locus until it is at theintersection of the root locus,settling time line, and the percent overshoot line. Click the Compensator Editor tab of the Control and Estimation Tools Manager window to see the resultingcompensator, including the gain. pcjω zc p2 p1 z1s-planeDesired pole location 21 3 4 5 2 σθ θ θθ θ θcθ θ1 FIGURE 9.24 Geometry of lead compensation470 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:43 How do the possible lead compensators differ? The differences are in the values of static error constants, the gain required to reach the design point on the compensated root locus, the difﬁ culty in justifying a second-order approximation when the design is complete, and the ensuing transient response. For design, we arbitrarily select either a lead compensator pole or zero and ﬁnd the angular contribution at the design point of this pole or zero along with the system ’s open- loop poles and zeros. The difference between this angle and 180 °is the required contribution of the remaining compensator pole or zero. Let us look at an example.j s-plane zc1pc2pc3zc2zc3pc1Desired pole location σω θc θc θc FIGURE 9.25 Three of the inﬁnite possible lead compensator solutions Example 9.4 Lead Compensator DesignLead Compensator Design PROBLEM: Design three lead compensators for the system of Figure 9.17 that will reduce the settling time by a factor of 2 while maintaining 30% overshoot. Compare the system characteristics between the three designs. SOLUTION: First determine the characteristics of the uncompensated system operating at 30% overshoot to see what the uncompensated settling time is. Since 30%overshoot is equivalent to a damping ratio of 0.358, wesearch along the ζ0:358 line for the uncompensated dominant poles on the root locus, as shown in Figure 9.26.From the pole ’s real part, we calculate the uncompensated settling time as T s4=1:0073:972 seconds. The remaining characteristics of the uncompensated systemare summarized in Table 9.4. Next we ﬁnd the design point. A twofold reduction in settling time yields T s3:972=21:986 seconds, from which the real part of the desired pole location is  ζω n 4=Ts 2:014. The imaginary part is ωd  2:014 tan 110:98°5:252. We continue by designing the lead compensator. Arbitrarily assume a compensator zero at  5 on the real axis as a possible solution. Using the root locus program, sum the angles from both this zero and the uncompensated system ’s poles and zeros, using the design point as a test point. Theresulting angle is  172 :69°. The difference between this angle and 180 °is the angular contribution required from the compensator pole in order to place the design point on the root locus. Hence, an angular contribution of  7:31°is required from the compensator pole.j s-plane –7 –6 –5 –4 –3 –2 –1 0= 0.358 110.98°–2.014 + j 5.252 –1.007 + j 2.627 K = 63.21 j1j2j3j4j5j6Desired compensated dominant pole Uncompensated dominant pole = Closed-loop pole = Open-loo p poleσω ζ FIGURE 9.26 Lead compensator design, showing evaluation of uncompensated and compensated dominant poles for Example 9.49.3 Improving Transient Response via Cascade Compensation 471WEBC09 10/28/2014 18:1:45 T h eg e o m e t r ys h o w ni nF i g u r e9 . 2 7i su sed to calculate the location of the compensator pole. From the ﬁgure, 5:252 pc 2:014tan 7 :31° 9.19 from which the compensator pole is found to be pc42:96 9.20 The compensated system root locus is sketched in Figure 9.28. In order to justify our estimates of percent overshoot and settling time, we must show that the second-order approximation is valid. To perform this validity check, we search for the third and fourth closed-loop poles found beyond  42:96 and between  5a n d  6i n Figure 9.28. Searching these regions for the gain equal to that of the compensated dominantpole, 1423, we ﬁnd that the third and fourth poles are at  43:8 and  5:134, respectively.TABLE 9.4 Comparison of lead compensation designs for Example 9.4 Uncompensated Compensation a Compensation b Compensation c Plant and compensatorK s s4 s6K s5 s s4 s6 s42:96K s4 s s4 s6 s20:09K s2 s s4 s6 s8:971 Dominant poles  1:007j2:627  2:014j5:252  2:014j5:252  2:014j5:252 K 63.21 1423 698.1 345.6 ζ 0.358 0.358 0.358 0.358 ωn 2.813 5.625 5.625 5.625 %OS*30 (28) 30 (30.7) 30 (28.2) 30 (14.5) Ts*3.972 (4) 1.986 (2) 1.986 (2) 1.986 (1.7) Tp*1.196 (1.3) 0.598 (0.6) 0.598 (0.6) 0.598 (0.7) Kv 2.634 6.9 5.791 3.21 e ∞ 0.380 0.145 0.173 0.312 Other poles  7:986  43.8,  5:134  22:06  13:3, 1:642 Zero None  5 None  2 Comments Second-order approx. OKSecond-orderapprox. OKSecond-orderapprox. OKNo pole-zerocancellation *Simulation results are shown in parentheses. jω s-planej5.252 –2.014 –pcDesired compensated dominant pole Note: This fi gure is not drawn to scale. = Closed-loop pole = Open-loop pole7.31° σ FIGURE 9.27 s-plane picture used to calculate the location of the compensatorpole for Example 9.4 s-planej –4 0 –5 –6 –42.96 Note: This fi gure is not drawn to scale. = Closed-loop pole = Open-loop poleω σ FIGURE 9.28 Compensated system root locus472 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:46 Since  43:8 is more than 20 times the real part of the dominant pole, the effect of the third closed-loop pole is negligible. Since the closed-loop pole at  5:134 is close to the zero at 5, we have pole-zero cancellation, and the second-order approximation is valid. All results for this design and two other designs, which place the compensator zero arbitrarily at  2a n d  4 and follow similar design techniques, are summarized in Table 9.4. Each design should be veri ﬁed by a simulation, which could consist of using MATLAB (discussed at the end of this example) or the state-space model and the step-response program discussed in Appendix H.1 at www.wiley.com/college/nise . We have performed a simulation for this design problem, and the results are shown by parenthetical entries next tothe estimated values in the table. The only design that disagrees with the simulation is thecase where the compensator zero is at  2. For this case the closed-loop pole and zero do not cancel. A sketch of the root locus, which you should generate, shows why the effect of the zero is pronounced, causing the response to be different from that predicted.Placing the zero to the right of the pole at  4 creates a portion of the root locus that is between the origin and the zero. In other words, there is a closed-loop pole closer to theorigin than the dominant poles, with little chance of pole-zero cancellation except at highgain. Thus, a quick sketch of the root locus gives us information from which we can makebetter design decisions. For this example, we want to place the zero on, or to the left of, the pole at  4, which gives a better chance for pole-zero cancellation and for a higher-order pole that is to the left of the dominant poles and subsequently faster. This is veri ﬁed by the fact that our results show good second-order approximations for the cases where the zero was placed at  4 and  5. Again, decisions about where to place the zero are based on simple rules of thumb and must be veri ﬁed by simulations at the end of the design. Let us now summarize the results shown in Table 9.4. First we notice differences in the following: 1.The position of the arbitrarily selected zero 2.The amount of improvement in the steady-state error 3.The amount of required gain, K 4.The position of the third and fourth poles and their relative effect upon the second-orderapproximation. This effect is measured by their distance from the dominant poles or thedegree of cancellation with the closed-loop zero. Once a simulation veri ﬁes desired performance, the choice of compensation can be based upon the amount of gain required or the improvement in steady-state error that can be obtained without a lag compensator. The results of Table 9.4 are supported by simulations of the step response, shown in Figure 9.29 for the uncompensated system and the three lead compensation solutions. Compensation c UncompensatedCompensation a, b 1.4 1.21.00.80.60.40.2 0 01 2 3c(t) Time (seconds)4FIGURE 9.29 Uncompensated system and lead compensation responsesfor Example 9.49.3 Improving Transient Response via Cascade Compensation 473WEBC09 10/28/2014 18:1:46 9.4 Improving Steady-State Error and Transient Response We now combine the design techniques covered in Sections 9.2 and 9.3 to obtain improvement in steady-state error and transient response independently .B a s i c a l l y ,w e ﬁrst improve the transient response by using the methods of Section 9.3. Then we improve the steady-state error ofthis compensated system by applying the methods of Section 9.2. A disadvantage of thisapproach is the slight decrease in the speed of the response when the steady-state error isimproved. As an alternative, we can improve the steady-state error ﬁrst and then follow with the design to improve the transient response. A disadvantage of this approach is that theimprovement in transient response in some cases yields deterioration in the improvementof the steady-state error, which was designed ﬁrst. In other cases, the improvement in transient response yields further improvement in steady-state errors. Thus, a system can beoverdesigned with respect to steady-state errors. Overdesign is usually not a problem unlessit affects cost or produces other design problems. In this textbook, we ﬁrst design for transient response and then design for steady-state error. The design can use either active or passive compensators, as previously described. If we design an active PD controller followed by an active PI controller, the resultingSkill-Assessment Exercise 9.2 PROBLEM: A unity feedback system with the forward transfer function G sK s s7 is operating with a closed-loop step response that has 15% overshoot. Do the following: a.Evaluate the settling time. b.Design a lead compensator to decrease the settling time by three times. Choose the compensator ’s zero to be at  10. ANSWER: a.Ts1:143 s b.Glead ss10 s25:52;K476:3 The complete solution is at www.wiley.com/college/nise .Students who are using MATLAB should now run ch9p2 in Appendix B. MATLAB will be used to design a lead compensator. You will input the desired percent overshoot from the keyboard. MATLAB will plot the root locus of the uncompensated system and the percent overshoot line. You will interactively select the gain, afterwhich MATLAB will display the performance characteristics ofthe uncompensated system and plot its step response. Using thesecharacteristics,you will input the desired settling time and azero value for the lead compensator.You will then interactivelyselect a value for the compensator pole. MATLAB will respond with aroot locus.You can then continue selecting pole values until the root locus goes through the desired point. MATLAB will display the lead compensator,enumerate its performance characteristics,andplot a step response.This exercise solves Example 9.4 using MATLAB.474 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:47 compensator is called a proportional-plus-integral-plus-derivative (PID) controller .I fw e ﬁrst design a passive lead compensator and then design a passive lag compensator, the resulting compensator is called a lag-lead compensator . PID Controller Design A PID controller is shown in Figure 9.30. Its transfer function is Gc sK1K2 sK3sK1sK2K3s2 sK3s2K1 K3sK2 K3/C18/C19 s 9.21 which has two zeros plus a pole at the origin. One zero and the pole at the origin can be designed as the ideal integral compensator; the other zero can be designed as the ideal derivative compensator. The design technique, which is demonstrated in Example 9.5, consists of the following steps: 1.Evaluate the performance of the uncompensated system to determine how much improvement in transient response is required. 2.Design the PD controller to meet the transient response speci ﬁcations. The design includes the zero location and the loop gain. 3.Simulate the system to be sure all requirements have been met. 4.Redesign if the simulation shows that requirements have not been met. 5.Design the PI controller to yield the required steady-state error. 6.Determine the gains, K1,K2, and K3, in Figure 9.30. 7.Simulate the system to be sure all requirements have been met. 8.Redesign if simulation shows that requirements have not been met.K1K2 sK3s R(s) C(s)+ G(s) –+ ++ FIGURE 9.30 PID controller Example 9.5 PID Controller DesignPID Controller Design PROBLEM: Given the system of Figure 9.31, design a PID controller so that the system can operate with a peak time that is two-thirds that of the uncompensated system at 20%overshoot and with zero steady-state error for a step input. SOLUTION: Note that our solution follows the eight-step procedure described earlier.K(s + 8) (s + 3)(s + 6)(s + 10)R(s) C(s) –+ E(s) FIGURE 9.31 Uncompensated feedback control system for Example 9.59.4 Improving Steady-State Error and Transient Response 475WEBC09 10/28/2014 18:1:49 Step 1 Let us ﬁrst evaluate the uncompensated system operating at 20% overshoot. Searching along the 20% overshoot line ζ0:456in Figure 9.32, we ﬁnd the dominant poles to be  5:415j10:57 with a gain of 121.5. A third pole, which exists at  8:169, is found by searching the region between  8 and  10 for a gain equivalent to that at the dominant poles. The complete performance of the uncompensated system is shown in the ﬁrst column of Table 9.5, where we117.13°K = 121.5Uncompensated dominant pole–5.415 + j10.57 j s-plane σ –2 0 –4 –6 –8 –10 –8.169 –5.5ω j2j4j6j8j10j12 –3 –4.6= 0.456 = Closed-loop pole = Open-loo p poleζ FIGURE 9.32 Root locus for the uncompensated system of Example 9.5 TABLE 9.5 Predicted characteristics of uncompensated, PD-, and PID-compensated systems of Example 9.5 Uncompensated PD-compensated PID-compensated Plant and compensatorK s8 s3 s6 s10K s8 s55:92 s3 s6 s10K s8 s55:92 s0:5 s3 s6 s10s Dominant poles  5:415j10:57  8:13j15:87  7:516j14:67 K 121.5 5.34 4.6 ζ 0.456 0.456 0.456 ωn 11.88 17.83 16.49 %OS 20 20 20 Ts 0.739 0.492 0.532 Tp 0.297 0.198 0.214 Kp 5.4 13.27 ∞ e ∞ 0.156 0.070 0 Other poles  8:169  8:079  8:099,  0:468 Zeros  8  8, 55:92  8, 55:92, 0:5 Comments Second-order approx. OKSecond-order approx. OKZeros at  55:92 and 0:5 not canceled476 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:50 compare the calculated values to those obtained through simulation (Figure 9.35). We estimate that the uncompensated system has a peak time of 0.297 second at20% overshoot. Step 2 To compensate the system to reduce the peak time to two-thirds of that of theuncompensated system, we must ﬁrstﬁnd the compensated system ’s dominant pole location. The imaginary part of the compensated dominant pole is ω dπ Tpπ 2=3 0:29715:87 9.22 Thus, the real part of the compensated dominant pole is σωd tan 117 :13° 8:13 9.23 Next we design the compensator. Using the geometry shown in Figure 9.33, we calculate the compensating zero’ s location. Using the root locus program, we ﬁnd the sum of angles from the uncompensated system ’s poles and zeros to the desired compensated dominant pole to be  198:37°. Thus, the contribution required from the compensator zero is 198 :37° 180 °18:37°. Assume that the compensator zero is located at  zc, as shown in Figure 9.33. Since 15:87 zc 8:13tan 18 :37° 9.24 then zc55:92 9.25 Thus, the PD controller is GPD s s55:92 9.26 The complete root locus for the PD-compensated system is sketched in Figure 9.34.Using a root locus program, the gain at the design point is 5.34. Complete speci ﬁcations for ideal derivative compensation are shown in the third column of Table 9.5.–zc–8.13j15.87 s-plane σPD-compensated dominant poleωj Note: This fi gure is not drawn to scale. = Closed-loop pole18.37° FIGURE 9.33 Calculating the PD compensator zero for Example 9.5 –10 –8 –6 –3 0117.13°j K = 5.34ζ= 0.456 –55.92ω σ–8.13 + j 15.87 –106s-planePD-compensated dominant pole Note: This fi gure is not drawn to scale. = Closed-loop pole = Open-loop pole FIGURE 9.34 Root locus for PD-compensated system of Example 9.59.4 Improving Steady-State Error and Transient Response 477WEBC09 10/28/2014 18:1:50 Steps 3 & 4 We simulate the PD-compensated system, as shown in Figure 9.35. We see the reduction in peak time and the improvement in steady-state error over the uncompensated system. Step 5 After we design the PD controller, we design the ideal integral compensator toreduce the steady-state error to zero for a step input. Any ideal integral compensatorzero will work, as long as the zero is placed close to the origin. Choosing the idealintegral compensator to be G PI ss0:5 s 9.27 we sketch the root locus for the PID-compensated system, as shown in Figure 9.36.Searching the 0.456 damping ratio line, we ﬁnd the dominant, second-order poles to be –10 –8 –6 –3 0117.13° –0.5s-planej K = 4.6ζ= 0.456 –55.92ω σ–7.516 + j14.67 Note: This fi gure is not drawn to scale. = Closed-loop pole = Open-loop polePID-compensated dominant pole –106 FIGURE 9.36 Root locus for PID-compensated system of Example 9.501.0 0 2.0c(t) Time (seconds)PID Uncompensated 0.2 00.40.60.81.2 1.6 1.2 0.8 0.4PD FIGURE 9.35 Step responses for uncompensated,PD-compensated, and PID-compensated systems of Example 9.5478 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:50 Lag-Lead Compensator Design In the previous example, we serially combined the concepts of ideal derivative and ideal integral compensation to arrive at the desig n of a PID controller that improved both the transient response and the steady-state error performance. In the next example, weimprove both transient response and the steady-state error by using a lead compensatorand a lag compensator rather than the i deal PID. Our compensator is called a lag-lead compensator . Weﬁrst design the lead compensator to imp rove the transient response. Next we evaluate the improvement in steady-state error still required. Finally, we design the lagcompensator to meet the steady-state error requirement. Later in the chapter we showcircuit designs for the passive network. The following steps summarize the designprocedure: 1.Evaluate the performance of the uncompensated system to determine how much improvement in transient response is required. 2.Design the lead compensator to meet the transient response speci ﬁcations. The design includes the zero location, pole location, and the loop gain. 3.Simulate the system to be sure all requirements have been met. 4.Redesign if the simulation shows that requirements have not been met. 5.Evaluate the steady-state error performance for the lead-compensated system to determine how much more improvement in steady-state error is required. 6.Design the lag compensator to yield the required steady-state error. 7.Simulate the system to be sure all requirements have been met. 8.Redesign if the simulation shows that requirements have not been met. 7:516j14:67, with an associated gain of 4.6. The remaining characteristics for the PID-compensated system are summarized in the fourth column of Table 9.5. Step 6 Now we determine the gains, K1,K2, and K3, in Figure 9.30. From Eqs. (9.26) and (9.27), the product of the gain and the PID controller is GPID sK s55:92 s0:5 s4:6 s55:92 s0:5 s 4:6 s256:42s27:96 s 9.28 Matching Eqs. (9.21) and (9.28), K1259:5,K2128:6, and K34:6. Steps 7 & 8 Returning to Figure 9.35, we summarize the results of our design. PD compensation improved the transient response by decreasing the time required toreach the ﬁrst peak as well as yielding some improvement in the steady-state error. The complete PID controller further improved the steady-state error withoutappreciably changing the transient response designed with the PD controller. As we have mentioned before, the PID controller exhibits a slower response, reaching theﬁnal value of unity at approximately 3 seconds. If this is undesirable, the speed of the system must be increased by redesigning the ideal derivative compensatoror moving the PI controller zero farther from the origin. Simulation plays animportant role in this type of design since our derived equation for settling time isnot applicable for this part of the response, where there is a slow correction of thesteady-state error.9.4 Improving Steady-State Error and Transient Response 479WEBC09 10/28/2014 18:1:53 Example 9.6 Lag-Lead Compensator DesignLag-Lead Compensator Design PROBLEM: Design a lag-lead compensator for the system of Figure 9.37 so that the system will operate with 20% overshoot and a twofold reduction in settling time. Further, the compensatedsystem will exhibit a tenfold improvement in steady-state error for aramp input. SOLUTION: Again, our solution follows the steps just described. Step 1 First we evaluate the performance of the uncompensated system. Searching along the 20% overshoot line ζ0:456in Figure 9.38, we ﬁnd the dominant poles at  1:794j3:501, with a gain of 192.1. The performance of the uncompensated system is summarized in Table 9.6. Step 2 Next we begin the lead compensator design by selecting the location of the compensated system ’s dominant poles. In order to realize a twofold reduction in settling time, the real part of the dominant pole must be increased by a factor of 2,K s(s + 6)(s + 10)E(s) R(s) C(s) –+ FIGURE 9.37 Uncompensated system for Example 9.6 TABLE 9.6 Predicted characteristics of uncompensated, lead-compensated, and lag-lead-compensated systems of Example 9.6 Uncompensated Lead-compensated Lag-lead-compensated Plant and compensatorK s s6 s10K s s10 s29:1K s0:04713  s s10 s29:1 s0:01 Dominant poles  1:794j3:501  3:588j7:003  3:574j6:976 K 192.1 1977 1971 ζ 0.456 0.456 0.456 ωn 3.934 7.869 7.838 %OS 20 20 20 Ts 2.230 1.115 1.119 Tp 0.897 0.449 0.450 Kv 3.202 6.794 31.92 e ∞ 0.312 0.147 0.0313 Third pole  12:41  31:92  31:91, 0:0474 Zero None None  0:04713 Comments Second-order approx. OK Second-order approx. OK Second-order approx. OK–11 –10 –9 –8 –7 –6 –5 –4 –3 –2 –1 0117.13°jω ζ= 0.456 σs-plane –12.41K = 192.1–1.794 + j3.501 j1j2j3j4 = Closed-loop pole = Open-loop poleUncompensated dominant pole FIGURE 9.38 Root locus for uncompensated system of Example 9.6480 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:53 since the settling time is inversely proportional to the real part. Thus,  ζω n 2 1:794  3:588 9.29 The imaginary part of the design point is ωdζωntan 117 :13°3:588 tan 117 :13°7:003 9.30 Now we design the lead compensator. Arbitrarily select a location for the lead compensator zero. For this example, we select the location of the compensator zero coincident with the open-loop pole at  6. This choice will eliminate a zero and leave the lead-compensated system with three poles, the same number as theuncompensated system. We complete the design by ﬁnding the location of the compensator pole. Using the root locus program, sum the angles to the design point from theuncompensated system ’s poles and zeros and the compensator zero and get  164 :65°. The difference between 180 °and this quantity is the angular contribution required from the compensator pole, or  15:35°. Using the geometry shown in Figure 9.39, 7:003 pc 3:588tan 15 :35° 9.31 from which the location of the compensator pole, pc, is found to be  29:1. The complete root locus for the lead-compensated system is sketched in Figure 9.40. The gain setting at the design point is found to be 1977. –33 –30 –27 –24 –21 –18 –15 –12 –9 –6 –3 0117.13°j = 0.456 s-plane –3.588 + j 7.003 –31.91K = 1977 j3j6j9 = Closed-loop pole = Open-loo p poleCompensated dominant pole σω 𝜁 FIGURE 9.40 Root locus for lead-compensated system of Example 9.6j7.003 –3.588 –pcσωj s-plane 15.35° = Closed-loop pole = O pen-loo p pole FIGURE 9.39 Evaluating the compensator pole for Example 9.69.4 Improving Steady-State Error and Transient Response 481WEBC09 10/28/2014 18:1:54 Steps 3 & 4 Check the design with a simulation. (The result for the lead-compensated system is shown in Figure 9.42 and is satisfactory.) Step 5 Continue by designing the lag compensator to improve the steady-state error. Since the uncompensated system’ s open-loop transfer function is G s192:1 s s6 s10 9.32 the static error constant, Kv, which is inversely proportional to the steady-state error, is 3.201. Since the open-loop transfer function of the lead-compensated system is GLC s1977 s s10 s29:1 9.33 the static error constant, Kv, which is inversely proportional to the steady-state error, is 6.794. Thus, the addition of lead compensation has improved thesteady-state error by a factor of 2.122. Since the requirements of the problemspeci ﬁed a tenfold improvement, the lag compensator must be designed to improve the steady-state error by a factor of 4.713 10=2:1224:713over the lead-compensated system. Step 6 We arbitrarily choose the lag compensator pole at 0.01, which then places the lagcompensator zero at 0.04713, yielding G lag s s0:04713  s0:01 9.34 as the lag compensator. The lag-lead-compensated system ’s open-loop transfer function is GLLC sK s0:04713  s s10 s29:1 s0:01 9.35 where the uncompensated system pole at  6 canceled the lead compensator zero at  6. By drawing the complete root locus for the lag-lead-compensated system and by searching along the 0.456 damping ratio line, we ﬁnd the dominant, closed-loop poles to be at  3:574j6:976, with a gain of 1971. The lag-lead-compensated root locus is shown in Figure 9.41. = 0.456 s-plane –29.1 –31.91–10 0j –0.0474 –0.010.04713K = 1971–3.574 + j 6.976 117.13°Compensated dominant pole = Closed-loop pole = Open-loop pole Note: This fi gure is not drawn to scale.𝜁ω σ FIGURE 9.41 Root locus for lag-lead-compensated system of Example 9.6482 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:54 A summary of our design is shown in Table 9.6. Notice that the lag-lead compensation has indeed increased the speed of the system, as witnessed by the settling time or the peak time. The steady-state error for a ramp input has also decreased by about 10 times, as seen from e ∞. Step 7 Theﬁnal proof of our designs is shown by the simulations of Figures 9.42 and 9.43. The improvement in the transient response is shown in Figure 9.42, where we see the peak time occurring sooner in the lag-lead-compensated system.Improvement in the steady-state error for a ramp input is seen in Figure 9.43, where each step of our design yields more improvement. The improvement for the lead-compensated system is shown in Figure 9.43( a), and the ﬁnal improvement due to the addition of the lag is shown in Figure 9.43( b). (a) (b)Lead-compensated InputUncompensated 05.0 4.54.03.53.02.52.01.51.00.5 00 5c(t) t 4 3 2 1 05.04.54.03.53.02.52.01.51.00.5 00 5 t 4 3 2 1 Time (seconds)c(t)Time (seconds) Lag-lead-compensatedInput FIGURE 9.43 Improvement in ramp response error for the system of Example 9.6:a.lead-compensated; b.lag-lead-compensatedUncompensated 01.25 1.000.750.500.25 0 01 45c(t) 23Lead- and lag-lead-compensated Time (seconds)FIGURE 9.42 Improvement in step response for lag-lead- compensated system ofExample 9.69.4 Improving Steady-State Error and Transient Response 483WEBC09 10/28/2014 18:1:54 In the previous example, we canceled the system pole at  6 with the lead compensator zero. The design technique is the same if you place the lead compensator zero at a different location. Placing a zero at a different location and not canceling the open-loop pole yields asystem with one more pole than the example. This increased complexity could make it moredifﬁcult to justify a second-order approximation. In any case, simulations should be used at each step to verify performance. Notch Filter If a plant, such as a mechanical system, has high-frequency vibration modes, then a desiredclosed-loop response may be dif ﬁcult to obtain. These high-frequency vibration modes can be modeled as part of the plant ’s transfer function by pairs of complex poles near the imaginary axis. In a closed-loop con ﬁguration, these poles can move closer to the imaginary axis or even cross into the right half-plane, as shown in Figure 9.44( a). Instability or high-frequency oscillations superimposed over the desired response can result (see Figure 9.44( b)). j s-plane Plant’s high-frequency polesPlant’s poles (a)σω Response Time (b) s-planej (c)ω σj s-plane Notch filter zeros and plant high-frequency polesPlant’s polesNotch filter poles (d)ω σ FIGURE 9.44 a.Root locus before cascading notch ﬁlter;b.typical closed-loop step response before cascading notch ﬁlter;c.pole-zero plot of a notch ﬁlter;d.root locus after cascading notch ﬁlter; (ﬁgure continues )484 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:54 One way of eliminating the high-frequency oscillations is to cascade a notch ﬁlter2 with the plant ( Kuo,1995 ), as shown in Figure 9.44( c). The notch ﬁlter has zeros close to the low-damping-ratio poles of the plant as well as two real poles. Figure 9.44( d) shows that the root locus branch from the high-frequency poles now goes a short distance from the high- frequency pole to the notch ﬁlter’s zero. The high-frequency response will now be negligible because of the pole-zero cancellation (see Figure 9.44( e)). Other cascade compensators can now be designed to yield a desired response. The notch ﬁlter will be applied to Progressive Analysis and Design Problem 55 near the end of this chapter. Response Time (e) FIGURE 9.44 (Continued )e.closed-loop step response after cascading notch ﬁlter Skill-Assessment Exercise 9.3 PROBLEM: A unity feedback system with forward transfer function G sK s s7 is operating with a closed-loop step response that has 20% overshoot. Do the following: a.Evaluate the settling time. b.Evaluate the steady-state error for a unit ramp input. c.Design a lag-lead compensator to decrease the settling time by 2 times and decrease thesteady-state error for a unit ramp input by 10 times. Place the lead zero at  3. ANSWERS: a.T s1:143 s b.eramp ∞0:1189 c.Gc s s3 s0:092 s9:61 s0:01;K205:4 The complete solution is at www.wiley.com/college/nise . 2The name of this ﬁlter comes from the shape of its magnitude frequency response characteristics, which shows a dip near the damped frequency of the high-frequency poles. Magnitude frequency response is discussed in Chapter 10.9.4 Improving Steady-State Error and Transient Response 485WEBC09 10/28/2014 18:1:56 Before concluding this section, let us brie ﬂy summarize our discussion of cascade compensation. In Sections 9.2, 9.3, and 9.4, we used cascade compensators to improve transient response and steady-state error. Table 9.7 itemizes the types, functions, andcharacteristics of these compensators. TABLE 9.7 Types of cascade compensators Function Compensator Transfer function Characteristics Improve steady-state error PI Kszc s1.Increases system type. 2.Error becomes zero. 3.Zero at  zcis small and negative. 4.Active circuits are required to implement. Improve steady-state error Lag Kszc spc1.Error is improved but not driven to zero. 2.Pole at  pcis small and negative. 3.Zero at  zcis close to, and to the left of, the pole at  pc. 4.Active circuits are not required to implement. Improve transient response PD K szc 1.Zero at  zcis selected to put design point on root locus. 2.Active circuits are required to implement. 3.Can cause noise and saturation; implement with rate feedback or with a pole (lead). Improve transient response Lead Kszc spc1.Zero at  zcand pole at  pcare selected to put design point on root locus. 2.Pole at  pcis more negative than zero at  zc. 3.Active circuits are not required to implement. Improve steady-state error and transient responsePID K szlag szlead s1.Lag zero at  zlagand pole at origin improve steady-state error. 2.Lead zero at  zleadimproves transient response. 3.Lag zero at  zlagis close to, and to the left of, the origin. 4.Lead zero at  zleadis selected to put design point on root locus. 5.Active circuits required to implement. 6.Can cause noise and saturation; implement with rate feedback or with an additional pole. Improve steady-state error and transient responseLag-lead K szlag szlead splag splead1.Lag pole at  plagand lag zero at  zlagare used to improve steady-state error. 2.Lead pole at  pleadand lead zero at  zleadare used to improve transient response. 3.Lag pole at  plagis small and negative. 4.Lag zero at  zlagis close to, and to the left of, lag pole at  plag. 5.Lead zero at  zleadand lead pole at  pleadare selected to put design point on root locus. 6.Lead pole at  pleadis more negative than lead zero at  zlead. 7.Active circuits are not required to implement.486 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:56 9.5 Feedback Compensation In Section 9.4, we used cascade compensation as a way to improve transient response and steady-state response independently. Cascading a compensator with the plant is not the onlyway to reshape the root locus to intersect the closed-loop s-plane poles that yield a desired transient response. Transfer functions designed to be placed in a feedback path can alsoreshape the root locus. Figure 9.45 is a generic con ﬁguration showing a compensator, H c(s), placed in the minor loop of a feedback control system. Other con ﬁgurations arise if we consider Kunity, G2(s) unity, or both unity. The design procedures for feedback compensation can be more complicated than for cascade compensation. On the other hand, feedback compensation can yield fasterresponses. Thus, the engineer has the luxury of designing faster responses into portionsof a control loop in order to provide isolation. For example, the transient response of theailerons and rudder control systems of an aircraft can be designed separately to be fast inorder to reduce the effect of their dynamic response on the steering control loop. Feedbackcompensation can be used in cases where noise problems preclude the use of cascadecompensation. Also, feedback compensation may not require additional ampli ﬁcation, since the signal passing through the compensator originates at the high-level output of the forwardpath and is delivered to a low-level input in the forward path. For example, let KandG 2(s)i n Figure 9.45 be unity. The input to the feedback compensator, KfHc(s), is from the high-level output of G1(s), while the output of KfHc(s) is one of the low-level inputs into K1. Thus, there is a reduction in level through KfHc(s), and ampli ﬁcation is usually not required. A popular feedback compensator is a rate sensor that acts as a differentiator. In aircraft and ship applications, the rate sensor can be a rate gyro that responds with anoutput voltage proportional to the input angular velocity. In many other systems this rate sensor is implemented with a tachometer . A tachometer is a voltage generator that yields a voltage output proportional to input rotational speed. This compensator can easily be geared to the position output of a system. Figure 9.46 is a position control R(s) K Minor loopK1C(s)G1(s) G2(s) Hc (s)–+ –+ Major loopKfFIGURE 9.45 Generic control system with feedback compensation. Inertia Motor Input potentiomete r Tachometer Output potentiometer Photo by Mark E. Van Dusen. FIGURE 9.46 A position control system that uses a tachometer as a differentiator inthe feedback path. Can you see the similarity between this system and the schematic on thefront endpapers?9.5 Feedback Compensation 487WEBC09 10/28/2014 18:1:57 system showing the gearing of the tachometer to the motor. You can see the input and output potentiometers as well as the motor and inertial load. The block diagram representation of a tachometer is shown in Figure 9.47( a), and its typical position within a control loop is shown in Figure 9.47( b). While this section shows methods for des igning systems using rate feedback, it also sets the stage for compensation techniques in Chapter 12, where not only rate but all states including position will be fed ba ck for proper control system performance. We now discuss design procedures. Typically, the design of feedback compensation consists of ﬁnding the gains, such as K,K1, and Kfin Figure 9.45, after establishing a dynamic form for Hc(s). There are two approaches. The ﬁrst is similar to cascade compensation. Assume a typical feedback system, where G(s) is the forward path and H(s) is the feedback. Now consider that a root locus is plotted from G(s)H(s). With cascade compensation we added poles and zeros to G(s). With feedback compensation, poles and zeros are added via H(s). With the second approach, we design a speci ﬁed performance for the minor loop, shown in Figure 9.45, followed by a design of the major loop. Thus, the minor loop, such asailerons on an aircraft, can be designed with its own performance speci ﬁcations and operate within the major loop. Approach 1 Theﬁrst approach consists of reducing Figure 9.45 to Figure 9.48 by pushing Kto the right past the summing junction, pushing G2(s) to the left past the pickoff point, and then adding the two feedback paths. Figure 9.48 shows that the loop gain, G(s)H(s), is G sH sK1G1 sKfHc sKG 2 s 9.36 Without feedback, KfHc(s), the loop gain is G sH sKK 1G1 sG2 s 9.37 Thus, the effect of adding feedback is to replace the poles and zeros of G2(s) with the poles and zeros of KfHc sKG 2 s. Hence, this method is similar to cascade compensation in that we add new poles and zeros via H(s) to reshape the root locus to go through the design point. However, one must remember that zeros of the equivalent feedback shown inFigure 9.48, H s K fHc sKG 2 s=KG 2 s, are not closed-loop zeros.R(s) K TachometerC(s)i(s) (a) (b)Vo(s) K1 G1(s) –+ –+Kf s Kf sθ FIGURE 9.47 a.Transfer function of a tachometer; b.tachometer feedback compensation KK1G1(s)G2(s) KfHc(s) + KG2(s) KG2(s)R(s) C(s) –+ FIGURE 9.48 Equivalent block diagram of Figure 9.45488 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:57 For example, if G2 s1 and the minor-loop feedback, KfHc(s), is a rate sensor, KfHc sKfs, then from Eq. (9.36) the loop gain is G sH sKfK1G1 ssK Kf/C18/C19 9.38 Thus, a zero at  K=Kfis added to the existing open-loop poles and zeros. This zero reshapes the root locus to go through the desired design point. A ﬁnal adjustment of the gain, K1, yields the desired response. Again, you should verify that this zero is not a closed-loop zero. Let us look at a numerical example. Example 9.7 Compensating Zero via Rate FeedbackCompensating Zero via Rate Feedback PROBLEM: Given the system of Figure 9.49( a), design rate feedback compensation, as shown in Figure 9.49( b), to reduce the settling time by a factor of 4 while continuing to operate the system with 20% overshoot. SOLUTION: First design a PD compensator. For the uncompensated system, search along the 20% overshoot line ζ0:456andﬁnd that the dominant poles are at  1:809j3:531, as shown in Figure 9.50. The estimated speci ﬁcations for the uncompensated system –j20–j10j10j20j 20% OS –20 –10 0 10 20s-plane –1.809 + j3.531 K1 = 257.8117.13° σω FIGURE 9.50 Root locus for uncompensated system of Example 9.7–+ K1 s(s + 5)(s + 15)E(s) C(s) R(s) (a) (b) (c) (d)–+ s(s + 5)(s + 15)C(s) R(s) –+ s(s + 5)(s + 15)C(s) R(s) –+ s[s2 + 20s + (75 + K1Kf)]E(s) C(s) R(s)Kfs–+ 1 Kf s + 1 KfK1 K1 K1 FIGURE 9.49 a.System for Example 9.7; b.system with rate feedback compensation; c.equivalent compensated system; d.equivalent compensated system showing unity feedback9.5 Feedback Compensation 489WEBC09 10/28/2014 18:1:59 are shown in Table 9.8, and the step response is shown in Figure 9.51. The settling time is 2.21 seconds and must be reduced by a factor of 4 to 0.55 second. Next determine the location of the dominant poles for the compensated system. To achieve a fourfold decrease in the settling time, the real part of the pole must be increasedby a factor of 4. Thus, the compensated pole has a real part of 4  1:809  7:236. The imaginary part is then ω d 7:236 tan 117 :13°14:12 9.39 where 117 :13°is the angle of the 20% overshoot line. Using the compensated dominant pole position of  7:236j14:1 2 ,w es u mt h e angles from the uncompensated system ’s poles and obtain  277:33°. This angle requires a compensator zero contribution of 97:33°to yield 180 °at the design point.TABLE 9.8 Predicted characteristics of uncompensated and compensated systems of Example 9.7 Uncompensated Compensated Plant and compensatorK1 s s5 s15K1 s s5 s15 Feedback 1 0:185 s5:42 Dominant poles  1:809j3:531  7:236j14:12 K1 257.8 1388 ζ 0.456 0.456 ωn 3.97 15.87 %OS 20 20 Ts 2.21 0.55 Tp 0.89 0.22 Kv 3.44 4.18 e ∞(ramp) 0.29 0.24 Other poles  16:4  5:53 Zero None None Comments Second-order approx. OK Simulate 0 0.5 1.0 1.5 2.0 2.5 Time (seconds)0.2 00.40.60.81.01.2c(t) 3.0 FIGURE 9.51 Step response for uncompensated system of Example 9.7490 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:1:59 The geometry shown in Figure 9.52 leads to the calculation of the compensator ’s zero location. Hence, 14:12 7:236 zctan 180 ° 97:33° 9.40 from which zc5:42. The root locus for the equivalent compensated system of Figure 9.49( c) is shown in Figure 9.53. The gain at the design point, which is K1Kf from Figure 9.49(c ), is found to be 256.7. Since Kfis the reciprocal of the compensator zero, Kf0:185. Thus, K11388. In order to evaluate the steady-state error characteristic, Kvis found from Figure 9.49( d)t ob e KvK1 75K1Kf4:18 9.41 Predicted performance for the compensated system is shown in Table 9.8. Notice that the higher-order pole is not far enough awayfrom the dominant poles and thus cannot be neglected. Further, fromFigure 9.49( d), we see that the closed-loop transfer function is T s G s 1G sH sK1 s320s2 75K1KfsK1 9.42 Thus, as predicted, the open-loop zero is not a closed-loop zero, and there isno pole-zero cancellation. Hence, the design must be checked by simulation. The results of the simulation are shown in Figure 9.54 and show an over-damped response with a settling time of 0.75 second, comparedto the uncompensated system ’s settling time of approximately 2.2 seconds. Although not meeting the design requirements, the response still represents an improvement over the uncompensated system of Figure 9.51. Typically, less overshoot is acceptable. The system shouldbe redesigned for further reduction in settling time. You may want to do Problem 8 at the end of this chapter, where you can repeat this example using PD cascade compensation. You willsee that the compensator zero for cascade compensation is a closed-loopzero, yielding the possibility of pole-zero cancellation. However, PDcompensation is usually noisy and not always practical.–7.236 –zcj14.12 Compensator zeroj s-plane σω 97.33° = Closed-loop pole FIGURE 9.52 Finding the compensator zero in Example 9.7 –j20–j10j10j20 –20 –10 0j s-plane–7.236 + j14.12 K1 = 1388 117.13°= 0.456 = Closed-loop pole = Open-loop pole𝜁 σω FIGURE 9.53 Root locus for the compensated system of Example 9.7 0.5 01.0c(t) 0 0.5 1.0 1.5 2.0 2.5 Time (seconds)3.0FIGURE 9.54 Step response for the compensated system of Example 9.79.5 Feedback Compensation 491WEBC09 10/28/2014 18:2:0 Approach 2 The second approach allows us to use feedback compensation to design a minor loop ’s transient response separately from the closed-loop system response. In the case of an aircraft, the minor loop may control the position of the aerosurfaces, while the entire closed-loop system may control the entire aircraft ’s pitch angle. We will see that the minor loop of Figure 9.45 basically represents a forward-path transfer function whose poles can be adjusted with the minor-loop gain. These poles thenbecome the open-loop poles for the entire control system. In other words, rather thanreshaping the root locus with additional poles and zeros, as in cascade compensation, we canactually change the plant ’s poles through a gain adjustment. Finally, the closed-loop poles are set by the loop gain, as in cascade compensation. Example 9.8 Minor-Loop Feedback CompensationMinor-Loop Feedback Compensation PROBLEM: For the system of Figure 9.55( a), design minor-loop feedback compensa- tion, as shown in Figure 9.55( b), to yield a damping ratio of 0.8 for the minor loop and a damping ratio of 0.6 for the closed-loop system. SOLUTION: Theminorloopisde ﬁnedastheloopcontainingtheplant,1 =s s5 s15, and the feedback compensator, Kfs. The value of Kfwill be adjusted to set the location of the minor-loop poles, and then Kwill be adjusted to yield the desired closed-loop response. The transfer function of the minor loop, GML(s), is GML s1 ss220s 75Kf 9.43 The poles of GML(s) can be found analytically or via the root locus. The root locus for the minor loop, where Kfs=s s5 s15is the open-loop transfer function, is shown in Figure 9.56. Since the zero at the origin comes from the feedback transfer function of the minor loop, this zero is not a zero of the closed-loop transfer function of the minor loop.Hence, the pole at the origin appears to remain stationary, and there is no pole-zerocancellation at the origin. Equation (9.43) also shows this phenomenon. We see astationary pole at the origin and two complex poles that change with gain. Notice thatthe compensator gain, K f, varies the natural frequency, ωn, of the minor-loop poles as seens(s + 5)(s + 15) R(s) + –K+ –C(s) 1 s(s + 5)(s + 15)(a) (b)R(s) + C(s) K E(s) Kfs– FIGURE 9.55 a.Uncompensated system and b.feedback-compensated system for Example 9.8492 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:0 from Eq. (9.43). Since the real parts of the complex poles are constant at  ζω n 10, the damping ratio must also be varying to keep 2ζω n20, a constant. Drawing the ζ0:8 line in Figure 9.56 yields the complex poles at  10j7:5. The gain, Kf,which equals 81.25, places the minor-loop poles in a position to meet the speci ﬁcations. The poles just found,  10j7:5, as well as the pole at the origin (Eq. (9.43)), act as open-loop poles that generate a root locus for variations of the gain, K. Theﬁnal root locus for the system is shown in Figure 9.57. The ζ0:6d a m p i n g ratio line is drawn and searched. The clo sed-loop complex poles are found to be  4:535j6:0 4 6 ,w i t har e q u i r e dg a i no f6 2 4 . 3 .At h i r dp o l ei sa t  10:93.–j20–j10–20j10j20 = 0.8j 10 20 –15 –5 0s-plane –10 + j 7.5 Kf=81.25 = Closed-loop pole (minor loop) = Open-loo p pole143.13° –10𝜁ω σ FIGURE 9.56 Root locus for minor loop of Example 9.8 Virtual Experiment 9.2 Improving Performance Using Rate Feedback with PD or PID Control Put theory into practice and design a compensator in LabVIEW that controls the ball position in the QuanserMagnetic Levitation system. Magnetic Levitation technology is used for moderntransportation systems thatsuspend, such as the high-speed Magnetic Levitation train. Virtual experiments are found on Learning Space.= 0.6j –20 –10 10 20 –j50j15j20 –j15 –j20– 4.535 + j6.046 K = 624.3 = Closed-loop pole = Open-loo p poles-plane 126.87°j5 –10.93 –j10j10𝜁ω σ FIGURE 9.57 Root locus for closed-loop system of Example 9.89.5 Feedback Compensation 493WEBC09 10/28/2014 18:2:2 The results are summarized in Table 9.9. We see that the compensated system, although having the same damping ratio as the uncompensated system, is much faster and also has a smaller steady-state error. The results, however, are predicted results and mustbe simulated to verify percent overshoot, settling time, and peak time, since the third poleis not far enough from the dominant poles. The step response is shown in Figure 9.58 and closely matches the predicted performance.TABLE 9.9 Predicted characteristics of the uncompensated and compensated systems of Example 9.8 Uncompensated Compensated Plant and compensatorK1 s s5 s15K s s220s156:25 Feedback 1 1 Dominant poles  1:997j2:662  4:535j6:046 K 177.3 624.3 ζ 0.6 0.6 ωn 3.328 7.558 %OS 9.48 9.48 Ts 2 0.882 Tp 1.18 0.52 Kv 2.364 3.996 e ∞(ramp) 0.423 0.25 Other poles  16  10:93 Zero None None Comments Second-order approx. OK Simulate 00 0.2 0.4 0.8 1.0 1.2 0.6 Time (seconds)c(t) 0.20.40.60.81.01.2 FIGURE 9.58 Step response simulation for Example 9.8 Skill-Assessment Exercise 9.4 PROBLEM: For the system of Figure 9.59, design minor-loop rate feedback compensa- tion to yield a damping ratio of 0.7 for the minor loop ’s dominant poles and a damping ratio of 0.5 for the closed-loop system ’s dominant poles.494 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:3 Our discussion of compensation methods is now complete. We studied both cascade and feedback compensation and compared and contrasted them. We are now ready to show how to physically realize the controllers and compensators we designed. 9.6 Physical Realization of Compensation In this chapter, we derived compensation to improve transient response and steady-stateerror in feedback control systems. Transfer functions of compensators used in cascade withthe plant or in the feedback path were derived. These compensators were de ﬁned by their pole-zero con ﬁgurations. They were either active PI, PD, or PID controllers or passive lag, lead, or lag-lead compensators. In this section, we show how to implement the active controllers and the passive compensators. Active-Circuit Realization In Chapter 2, we derived Vo s Vi s Z2 s Z1 s 9.44 as the transfer function of an inverting operational ampliﬁ er whose con ﬁgura- tion is repeated here in Figure 9.60. By judicious choice of Z1(s) and Z2(s), this circuit can be used as a building block to implement the compensators and controllers, such as PID controllers, discussed in this chapter. Table 9.10summarizes the realization of PI, PD, and PID controllers as well as lag, lead,ANSWER: The system is con ﬁgured similar to Figure 9.55( b) with Kf77:42 and K626:3. The complete solution is at www.wiley.com/college/nise .–KC(s) + R(s) s(s+ 7)(s + 10)1 FIGURE 9.59 System for Skill-Assessment Exercise 9.4 +–Z1(s)Z2(s) I1(s)V1(s) Vo(s)Vi(s) Ia(s)I2(s) FIGURE 9.60 Operational ampli ﬁer conﬁgured for transfer function realization TABLE 9.10 Active realization of controllers and compensators, using an operational ampli ﬁer Function Z1 s Z2 s Gc s Z2 s Z1 s GainR1 R2  R2 R1 IntegrationR C  1 RC s DifferentiationC R  RCs (table continues)9.6 Physical Realization of Compensation 495WEBC09 10/28/2014 18:2:4 and lag-lead compensators using operational ampli ﬁers. You can verify the table by using the methods of Chapter 2 to ﬁnd the impedances. Other compensators can be realized by cascading compensators shown in the table. For example, a lag-lead compensator can be formed by cascading the lag compensator with the lead compensator, as shown in Figure 9.61. As an example, let us implement one of the controllers we designed earlier in the chapter.TABLE 9.10 Active realization of controllers and compensators, using an operational ampli ﬁer(Continued ) Function Z1 s Z2 s Gc s Z2 s Z1 s PI controllerR1 C R2  R2 R1s1 R2C/C18/C19 s PD controllerC R1R2  R2Cs 1 R1C/C18/C19 PID controllerC1 R1C2 R2  R2 R1C1 C2/C18/C19 R2C1s1 R1C2 s2 6643 775 Lag compensationC1 R1C2 R2 C1 C2s1 R1C1/C18/C19 s1 R2C2/C18/C19 where R2C2>R1C1 Lead compensationC1 R1C2 R2 C1 C2s1 R1C1/C18/C19 s1 R2C2/C18/C19 where R1C1>R2C2 +–vi(t) vo(t)R1C1 R3C3R2C2 Lag compensator R2C2>R1C1Lead compensator R3C3>R4C4+–R4C4 FIGURE 9.61 Lag-lead compensator implemented with operational ampli ﬁers496 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:5 Passive-Circuit Realization Lag, lead, and lag-lead compensators can also be implemented with passive networks. Table 9.11 summarizes the networks and their transfer functions. The transfer functions canbe derived with the methods of Chapter 2. The lag-lead transfer function can be put in the following form: G c ss1 T1/C18/C19 s1 T2/C18/C19 s1 αT1/C18/C19 sα T2/C18/C19 9.50 where α<1. Thus, the terms with T1form the lead compensator, and the terms with T2form the lag compensator. Equation (9.50) shows a restriction inherent in using this passive realization. We see that the ratio of the lead compensator zero to the lead compensator poleExample 9.9 Implementing a PID ControllerImplementing a PID Controller PROBLEM: Implement the PID controller of Example 9.5. SOLUTION: The transfer function of the PID controller is Gc s s55:92 s0:5 s 9.45 which can be put in the form Gc ss56:4227:96 s 9.46 Comparing the PID controller in Table 9.10 with Eq. (9.46), we obtain the following three relationships: R2 R1C1 C256:42 9.47 R2C11 9.48 and 1 R1C227:96 9.49 Since there are four unknowns and three equations, we arbitrarily select a practical value for one of the elements. Selecting C20:1μF, the remaining values are found to be R1357:65 kΩ,R2178;891 kΩ, andC15:59μF. The complete circuit is shown in Figure 9.62, where the circuit element values have been rounded off.vi(t) 358 kΩ179 kΩ +–v1(t) vo(t)5.6 μF0.1 μF FIGURE 9.62 PID controller9.6 Physical Realization of Compensation 497WEBC09 10/28/2014 18:2:6 must be the same as the ratio of the lag compensator pole to the lag compensator zero. In Chapter 11 we design a lag-lead compensator with this restriction. A lag-lead compensator without this restriction can be realized with an active network as previously shown or with passive networks by cascading the lead and lag networksshown in Table 9.11. Remember, though, that the two networks must be isolated to ensurethat one network does not load the other. If the networks load each other, the transferfunction will not be the product of the individual transfer functions. A possible realizationusing the passive networks uses an operational ampli ﬁer to provide isolation. The circuit is shown in Figure 9.63. Example 9.10 demonstrates the design of a passive compensator.TABLE 9.11 Passive realization of compensators Function Network Transfer function,Vo s Vi s Lag compensation vi(t)R1 R2 Cvo(t)+ + – –R2 R1R2s1 R2C s1 R1R2C Lead compensation vi(t)R1 R2Cvo(t)+ + – –s1 R1C s1 R1C1 R2C Lag-lead compensation vi(t)R1 R2C1 C2vo(t)+ + – –s1 R1C1/C18/C19 s1 R2C2/C18/C19 s21 R1C11 R2C21 R2C1/C18/C19 s1 R1R2C1C2 R4 R5C2R2R1 R3R3 C1 Lag Isolation gain = –1Lead+ –+ –vo(t)vi(t)– + FIGURE 9.63 Lag-lead compensator implemented with cascaded lag and lead networks with isolation498 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:7 Example 9.10 Realizing a Lead CompensatorRealizing a Lead Compensator PROBLEM: Realize the lead compensator designed in Example 9.4 (Compensator b). SOLUTION: The transfer function of the lead compensator is Gc ss4 s20:09 9.51 Comparing the transfer function of a lead network shown in Table 9.11 with Eq. (9.51), we obtain the following two relationships: 1 R1C4 9.52 and 1 R1C1 R2C20:09 9.53 Hence, R1C0:25, and R2C0:0622. Since there are three network elements and two equations, we may select one of the element values arbitrarily. Letting C1μF, then R1 250 kΩandR262:2kΩ. Skill-Assessment Exercise 9.5 PROBLEM: Implement the compensators shown in a. and b. below. Choose a passive realization if possible. a.Gc s s0:1 s5 s b.Gc s s0:1 s2 s0:01 s20 ANSWERS: a.Gc(s) is a PID controller and thus requires active realization. Use Figure 9.60 with the PID controller circuits shown in Table 9.10. One possible set of approximatecomponent values is C 110μF;C2100μF;R120 kΩ;R2100 kΩ b.Gc(s) is a lag-lead compensator that can be implemented with a passive network because the ratio of the lead pole to zero is the inverse of the ratio of the lag pole tozero. Use the lag-lead compensator circuit shown in Table 9.11. One possible set ofapproximate component values is C 1100μF;C2900μF;R1100 kΩ;R2560Ω The complete solution is at www.wiley.com.college/nise .9.6 Physical Realization of Compensation 499WEBC09 10/28/2014 18:2:10 Case Studies Antenna Control: Lag-Lead CompensationAntenna Control: Lag-Lead Compensation For the antenna azimuth position control system case study in Chapter 8, we obtained a 25% overshoot using a simple gain adjustment. Once this percent overshoot was obtained,the settling time was determined. If we try to improve the settling time by increasing thegain, the percent overshoot also increases. In this section, we continue with the antennaazimuth position control by designing a cascade compensator that yields 25% overshoot ata reduced settling time. Further, we effect an improvement in the steady-state errorperformance of the system. PROBLEM: Given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 1, design cascade compensation to meet the following requirements: (1) 25% overshoot, (2) 2-second settling time, and (3) K v20. SOLUTION: For the case study in Chapter 8, a preampli ﬁer gain of 64.21 yielded 25% overshoot, with the dominant, second-order poles at  0:833j1:888. The settling time is thus 4= ζωn4=:8334:8 seconds. The open-loop function for the system as derived in the case study in Chapter 5 is G s6:63K=s s1:71 s100. Hence Kv6:63K= 1:711002:49. Comparing these values to this example ’s problem statement, we want to improve the settling time by a factor of 2.4, and we want approximately an eightfold improvement in Kv. Lead compensator design to improve transient response: First locate the dominant second-order pole. To obtain a settling time, Ts, of 2 seconds and a percent overshoot of 25%, the real part of the dominant second-order pole should be at  4=Ts 2. Locating the pole on the 113 :83°line ( ζ0:404, corresponding to 25% overshoot) yields an imaginary part of 4.529 (see Figure 9.64). Second, assume a lead compensator zero and ﬁnd the compensator pole. Assuming a compensator zero at  2, along with the uncompensated system ’s open-loop poles and zeros, use the root locus program in Appendix H.2 at www.wiley.com/college/nise toﬁnd that there is an angular contribution of  120 :14°at the design point of  2j4:529. Therefore, the compensator ’s pole must contribute 120 :14° 180 ° 59:86°for the design point to be on the compensated system ’s root locus. The geometry is shown in Figure 9.64. To calculate the compensator pole, we use 4 :529= pc 2tan 59 :86°or pc4:63. 59.86° –1.71 –2 0 –100113.83°–2 + j4.529j –pcs-plane = Closed-loop pole = Open-loop pole Note: This fi gure is not drawn to scale.= 0.404𝜁ω σ FIGURE 9.64 Locating compensator pole500 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:11 Now determine the gain. Using the lead-compensated system ’s open-loop function, G s6:63K s2 s s1:71 s100 s4:63 9.54 and the design point  2j4:529 as the test point in the root locus program, the gain, 6.63K, is found to be 2549. Lag compensator design to improve the steady-state error: Kvfor the lead- compensated system is found using Eq. (9.54). Hence, Kv2549 2 1:71 100 4:636:44 9.55 Since we want Kv20, the amount of improvement required over the lead-compensated system is 20 =6:443:1. Choose pc 0:01 and calculate zc0:031, which is 3.1 times larger. Determine gain: The complete lag-lead-compensated open-loop function, GLLC(s), is GLLC s6:63K s2 s0:031 s s:01 s1:71 s4:63 s100 9.56 Using the root locus program in Appendix H.2 at www.wiley.com/college/nise and the poles and zeros of Eq. (9.56), search along the 25% overshoot line 113:83°for the design point. This point has moved sligh tly with the addition of the lag compensator to 1:99j4:51. The gain at this point equals 2533, which is 6.63 K. Solving for Kyields K382:1. Realization of the compensator: A realization of the lag-lead compensator is shown in Figure 9.63. From Table 9.11 the lag portion has the following transfer function: Glag sR2 R1R2s1 R2C s1 R1R2CR2 R1R2 s0:031 s0:01 9.57 Selecting C10μF, we ﬁndR23:2MΩandR16:8MΩ. From Table 9.11 the lead compensator portion has the following transfer function: Glead ss1 R1C s1 R1C1 R2C s2 s4:63 9.58 Selecting C10μF, we ﬁndR150 kΩandR238 kΩ . The total loop gain required by the system is 2533. Hence, 6:63KR2 R1R22533 9.59 where Kis the gain of the preampli ﬁer, and R2= R1R2is the gain of the lag portion. Using the values of R1andR2found during the realization of the lag portion, we ﬁnd K1194.Case Studies 501WEBC09 10/28/2014 18:2:11 Theﬁnal circuit is shown in Figure 9.65, where the preampli ﬁer is implemented with an operational ampli ﬁer whose feedback and input resistor ratio approximately equals 1194, the required preampli ﬁer gain. The preampli ﬁer isolates the lag and lead portions of the compensator. Summary of the design results: Using Eq. (9.56) along with K382:1 yields the compensated value of Kv. Thus, Kvlim s®0sGLLC s2533 2 0:031 0:01 1:71 4:63 10019:84 9.60 which is an improvement over the gain-compensated system in the case study of Chapter 8, where Kv2:49. This value is calculated from the uncompensated G(s) by letting K64:21, as found in the Case Study of Chapter 8. Finally, checking the second-order approximation via simulation, we see in Figure 9.66 the actual transient response. Compare this to the gain-compensated systemresponse of Figure 8.29 to see the improvement effected by cascade compensation over simple gain adjustment. The gain-compensated system yielded 25%, with a settling time of about 4 seconds. The lag-lead-compensated system yields 28% overshoot, with a settlingtime of about 2 seconds. If the results are not adequate for the application, the systemshould be redesigned to reduce the percent overshoot. 24 681 00.20.40.60.81.01.2c(t) Time (seconds)00 FIGURE 9.66 Step response of lag-lead-compensated antenna control+ –+ –vo(t)vi(t)3.2 MΩ6.8 MΩ10 MΩ 8.4 kΩ 38 kΩ50 kΩ 10 F10 F– + μ μ FIGURE 9.65 Realization of lag-lead compensator502 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:12 CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. You are given the antenna azimuth position control system shown on the front endpapers, Conﬁ guration 2. In the challenge in Chapter 8, you were asked to design, via gain adjustment, an 8-second settling time. a.For your solution to the challenge in Chapter 8, evaluate the percent overshoot and thevalue of the appropriate static error constant. b.Design a cascade compensator to reduce the percent overshoot by a factor of 4 and thesettling time by a factor of 2. Also, improve the appropriate static error constant by a factor of 2. c. Repeat Part busing MATLAB. UFSS Vehicle: Lead and Feedback CompensationUFSS Vehicle: Lead and Feedback Compensation As aﬁnal look at this case study, we redesign the pitch control loop for the UFSS vehicle. For the case study in Chapter 8, we saw that rate feedback improved the transient response. In this chapter ’s case study, we replace the rate feedback with a cascade compensator. PROBLEM: Given the pitch control loop without rate feedback K20for the UFSS vehicle shown on the back endpapers, design a compensator to yield 20% overshoot anda settling time of 4 seconds ( Johnson ,1980 ). SOLUTION: First determine the location of the dominant closed-loop poles. Using the required 20% overshoot and a 4-second settling time, asecond-order approximation shows the dominant closed-loop poles are located at  1j1:951. From the uncompensated system analyzed in the Chapter 8 case study, the estimated settling time was 19.8 seconds for dominant closed-loop poles of  0:202j0:394. Hence, a lead compensator is required to speed up the system. Arbitrarily assume a lead compensator zero at  1. Using the root locus program in Appendix H.2 at www.wiley.com/college/nise ,w e ﬁnd that this compensator zero, al ong with the open-loop poles and zeros of the system, yields an angular contribution at the design point,  1j1:951, of  178 :92°. The difference between this angle and 180 °,o r 1:08°, is the angular contribution required from the compensator pole. Using the geometry shown in Figure 9.67, where  p cis the compensator pole location, we ﬁnd that 1:951 pc 1tan 1 :08° 9.61 from which pc104:5. The compensated open-loop transfer function is thus G s0:25K1 s0:435 s1 s1:23 s2 s20:226s0:0169  s104:5 9.62 where the compensator is Gc s s1 s104:5 9.63 Using all poles and zeros shown in Eq. (9.62), the root locus program shows that a gain of 516.5 is required at the design point,  1j1:951. The root locus of the compensated system is shown in Figure 9.68.1.08°117.13°–1 j1.951+j –pc = Closed-loop pole = Open-loop pole Note: This fi gure is not drawn to scale.s-plane= 0.456 0ω𝜁 σ FIGURE 9.67 Locating compensator poleCase Studies 503WEBC09 10/28/2014 18:2:12 Summary In this chapter, we learned how to design a system to meet transient and steady-state speciﬁcations. These design techniques overcame limitations in the design methodology covered in Chapter 8, whereby a transient response could be created only if the polesgenerating that response were on the root locus. Subsequent gain adjustment yielded theA test of the second-order approximation shows three more closed-loop poles at  0:5, 0:9, and  104 :5. Since the open-loop zeros are at  0:435 and  1, simulation is required to see if there is effectively closed-loop pole-zero cancellation with the closed-loop poles at  0:5 and  0:9, respectively. Further, the closed-loop pole at  104 :5 is more thanﬁve times the real part of the dominant closed-loop pole,  1j1:951, and its effect on the transient response is therefore negligible. The step response of the closed-loop system is shown in Figure 9.69, where we see a 26% overshoot and a settling time of about 4.5 seconds. Comparing this response with Figure 8.31, the response of the uncompensated system, we see considerable improvement in the settling time and steady-state error. However, the transient response performancedoes not meet the design requirements. Thus, a redesign of the system to reduce thepercent overshoot is suggested if required by the application. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. The heading control system for the UFSS vehicle is shown on the back endpapers. The minor loop contains the rudder and vehicle dynamics, and the majorloop relates output and input headings ( Johnson ,1980). a.Find the values of K 1andK2so that the minor-loop dominant poles have a damping ratio of 0.6 and the major-loop dominant poles have a damping ratio of 0.5. b.Repeat, using MATLAB.j Additional open-loop pole at –104.5 –3 –2 –1 1 0j3 j2 j1 –j1 –j2 –j32s-plane σω FIGURE 9.68 Root locus for lead-compensated system00 24 680.20.40.60.81.01.2c(t) Time (seconds)10 FIGURE 9.69 Step response of lead-compensated UFSS vehicle504 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:12 desired response. Since this value of gain dict ated the amount of steady-state error in the response, a trade-off was required between the desired transient response and the desired steady-state error. Cascade orfeedback compensation is used to overcome the disadvantages of gain adjustment as a compensating technique. In this chapter, we saw that the transient responseand the steady-state error can be designed separately from each other. No longer was atrade-off between these two speci ﬁcations required. Further, we were able to design for a transient response that was not represented on the original root locus. The transient response design technique covered in this chapter is based upon reshaping the root locus to go through a desired transient response point, followed by again adjustment. Typically, the resulting gain is much higher than the original if thecompensated system response is faster than the uncompensated response. The root locus is reshaped by adding additional poles and zeros via a cascade or feedback compensator. The additional poles and zeros must be checked to see that anysecond-order approximations used in the design are valid. All poles, besides the dominantsecond-order pair, must yield a response that is much faster than the designed response.Thus, nondominant poles must be at least ﬁve times as far from the imaginary axis as the dominant pair. Further, any zeros of the system must be close to a nondominant pole forpole-zero cancellation, or far from the dominant pole pair. The resulting system can then beapproximated by two dominant poles. The steady-state response design technique is based upon placing a pole on or near the origin in order to increase or nearly increase the system type. Then a zero is placed near thispole so that the effect upon the transient response is negligible. However, ﬁnal reduction of steady-state error occurs with a long-time constant. The same arguments about other polesyielding fast responses and about zeros being cancelled in order to validate a second-order approximation also hold true for this technique. If the second-order approximations cannot be justi ﬁed, then a simulation is required to make sure the design is within tolerance. Steady-state design compensators are implemented via PI controllers orlag compensators . PI controllers add a pole at the origin, thereby increasing the system type. Lag compensators,usually implemented with passive networks, place the pole off the origin but near it. Bothmethods add a zero very close to the pole in order not to affect the transient response. The transient response design compensators are implemented through PD controllers orlead compensators . PD controllers add a zero to compensate the transient response; they are considered ideal . Lead compensators, on the other hand, are not ideal since they add a pole along with the zero. Lead compensators are usually passive networks. We can correct both transient response and steady-state error with a PIDorlag-lead compensator . Both of these are simply combinations of the previously described compensators. Table 9.7 summarized the types of cascade compensators. Feedback compensation can also be used to improve the transient response. Here the compensator is placed in the feedback path. The feedback gain is used to change thecompensator zero or the system ’s open-loop poles, giving the designer a wide choice of various root loci. The system gain is then varied to move along the selected root locus to thedesign point. An advantage of feedback compensation is the ability to design a fast responseinto a subsystem independently of the system ’s total response. In the next chapter, we look at another method of design, frequency response, which is an alternate method to the root locus. Review Questions 1.Brieﬂy distinguish between the design techniques in Chapter 8 and Chapter 9. 2.Name two major advantages of the design techniques of Chapter 9 over the designtechniques of Chapter 8.Review Questions 505WEBC09 10/28/2014 18:2:13 3.What kind of compensation improves the steady-state error? 4.What kind of compensation improves transient response? 5.What kind of compensation improves both steady-state error and transient response? 6.Cascade compensation to improve the steady-state error is based upon what pole-zero placement of the compensator? Also, state the reasons for this placement. 7.Cascade compensation to improve the transient response is based upon what pole-zeroplacement of the compensator? Also, state the reasons for this placement. 8.What difference on the s-plane is noted between using a PD controller or using a lead network to improve the transient response? 9.In order to speed up a system without changing the percent overshoot, where must thecompensated system ’sp o l e so nt h e s-plane be located in comparison to the uncompensated system ’sp o l e s ? 10.Why is there more improvement in steady-state error if a PI controller is used instead of alag network? 11.When compensating for steady-state error, what effect is sometimes noted in the transient response? 12.A lag compensator with the zero 25 times as far from the imaginary axis as the compensator pole will yield approximately how much improvement in steady-state error? 13.If the zero of a feedback compensator is at  3 and a closed-loop system pole is at  3:001, can you say there will be pole-zero cancellation? Why? 14.Name two advantages of feedback compensation. Problems 1.Design a PI controller to drive the step response error tozero for the unity feedback system shown in Figure P9.1,where G s K s1 2s10  The system operates with a damping ratio of 0.6.Compare the speciﬁ cations of the uncompensated and compensated systems. [Section: 9.2] R(s) + C(s) E(s) G(s) – FIGURE P9.1 2.Consider the unity feedback system shown inFigure P9.1, where G sK s s3 s6 a.Design a PI controller to drive the ramp response error to zero for any Kthat yields stability. [Section: 9.2]b.Use MATLAB to simulate your design for K1. Show both the input ramp and the outputresponse on the same plot. 3.The unity feedback system shown in Figure P9.1 with G sK s2 s3 s7 is operating with 10% overshoot. [Section: 9.2] a.What is the value of the appropriate static error constant? b.Find the transfer function of a lag network so that the appropriate static error constant equals 4 withoutappreciably changing the dominant poles of theuncompensated system. c. Use MATLAB or any other computerprogram to simulate the systemto see the effect of your compensator. 4.Repeat Problem 3 for G s K s s3 s7. [Section: 9.2] 5.Consider the unity feedback system shown inFigure P9.1 with G sK s3 s5 s7506 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:13 a.Design a compensator that will yield Kp20 without appreciably changing the dominant pole location that yields a 10% overshoot for theuncompensated system. [Section: 9.2] b. Use MATLAB or any other computerprogram to simulate theuncompensated and compensated systems. c. Use MATLAB or any other computerprogram to determine how much time it takes the slow response of the lag compensator to bring the out-put to within 2% of its ﬁnal compensated value. 6.The unity feedback system shown in Figure P9.1 with G s K s6 s2 s3 s5 is operating with a dominant-pole damping ratio of0.707. Design a PD controller so that the settling timeis reduced by a factor of 2. Compare the transient andsteady-state performance of the uncompensated andcompensated systems. Describe any problems with your design. [Section: 9.3] Redo Problem 6 using MATLAB in the following way: a.MATLAB will generate the root locus forthe uncompensated system along withthe 0.707 damping ratio line. You willinteractively select the operating point. MATLAB will then inform you of the coordinates of the operatingpoint,the gain at the operating point,as well as the estimated %OS, T s,Tp,ζ, ωn, and Kprepresented by a second- order approximation at the operatingpoint. b.MATLAB will display the step responseof the uncompensated system. c.Without further input,MATLAB will calculate the compensated design point and will then ask you to inputa value for the PD compensator zerofrom the keyboard. MATLAB willrespond with a plot of the root locusshowing the compensated designpoint. MATLAB will then allow you tokeep changing the PD compensator value from the keyboard until a root locus is plotted that goes throughthe design point.d.For the compensated system, MATLAB will inform you of the coordinates of the operating point,the gain atthe operating point,as well asthe estimated %OS, T s,T p,ζ,ωn,and Kprepresented by a second-order approximation at the operating point. e.MATLAB will then display the stepresponse of the compensated system. 8.Design a PD controller for the system shown inFigure P9.2 to reduce the settling time by a factor of4 while continuing to operate the system with 20.5%overshoot.Comparetheperformanceofthecompensatedsystem to that of the uncompensated system. Summarizethe results in a table similar to that in Example 9.7. R(s) C(s) –+ K s(s + 8)(s + 25) FIGURE P9.2 9.Consider the unity feedback system shown inFigure P9.1 with [Section: 9.3] G sK s53 a.Find the location of the dominant poles to yield a1.2 second settling time and an overshoot of 15%. b.If a compensator with a zero at  1 is used to achieve the conditions of Part a, what must the angular contri- bution of the compensator pole be? c.Find the location of the compensator pole. d.Find the gain required to meet the requirements statedin Part a. e.Find the location of other closed-loop poles for thecompensated system. f.Discuss the validity of your second-orderapproximation. g. Use MATLAB or any other computerprogram to simulate thecompensated system to checkyour design. 10.The unity feedback system shown in Figure P9.1 with G s K s2 is to be designed for a settling time of 1.667 seconds anda 16.3% overshoot. If the compensator zero is placedat 1, do the following: [Section: 9.3] a.Find the coordinates of the dominant poles. b.Find the compensator pole. (problem continues )Problems 507WEBC09 10/28/2014 18:2:14 (Continued ) c.Find the system gain. d.Find the location of all nondominant poles. e.Estimate the accuracy of your second-order approximation. f.Evaluate the steady-state error characteristics. g.Use MATLAB or any other computerprogram to simulate the system and evaluate the actualtransient response characteristicsfor a step input. 11.Given the unity feedback system of Figure P9.1, with G s K s6 s3 s4 s7 s9 do the following: [Section: 9.3] a.Sketch the root locus. b.Find the coordinates of the dominant poles for whichζ0:8. c.Find the gain for which ζ0:8. d.If the system is to be cascade-compensated so thatT s1 second and ζ0:8,ﬁnd the compensator pole if the compensator zero is at  4:5. e.Discuss the validity of your second-orderapproximation. f. Use MATLAB or any other computerprogram to simulate thecompensated and uncompensated systems and compare the results to those expected. Redo Problem 11 using MATLAB inthe following way: a.MATLAB will generate the root locus forthe uncompensated system along withthe 0.8 damping ratio line. You will interactively select the operating point. MATLAB will then inform you ofthe coordinates of the operatingpoint, the gain at the operating point,as well as the estimated %OS,T s, Tp,ζ,ωn,and Kprepresented by a second- order approximation at the operatingpoint. b.MATLAB will display the step response of the uncompensated system. c.Without further input, MATLAB willcalculate the compensated design point and will then ask you to input a valuefor the lead compensator pole from thekeyboard. MATLAB will respond with aplot of the root locus showing the com- pensated design point. MATLAB will then allow you to keep changing thelead compensator pole value from thekeyboard until a root locus is plottedthat goes through the design point. d.For the compensated system, MATLABwill inform you of the coordinatesof the operating point,the gainat the operating point,as well as the estimated %OS, T s,T p,ζ,ωn,and Kp represented by a second-order approx- imation at the operating point. e.MATLAB will then display the stepresponse of the compensated system. f.Change the compensator ’s zero location a few times and collect data on thecompensated system to see if any otherchoices of compensator zero yieldadvantages over the original design. 13.Consider the unity feedback system of Figure P9.1 with G s K s s20 s40 The system is operating at 20% overshoot. Design acompensator to decrease the settling time by a factor of2 without affecting the percent overshoot and do the following: [Section: 9.3] a.Evaluate the uncompensated system ’s dominant poles, gain, and settling time. b.Evaluate the compensated system’ s dominant poles and settling time. c.Evaluate the compensator ’s pole and zero. Find the required gain. d. Use MATLAB or any other computer program to simulate thecompensated and uncompensatedsystems’ step response. 14.The unity feedback system shown in Figure P9.1 with G s K s15 s26s13 is operating with 30% overshoot. [Section: 9.3] a.Find the transfer function of a cascade compensator,the system gain, and the dominant pole location thatwill cut the settling time in half if the compensatorzero is at  7. b.Find other poles and zeros and discuss your second-order approximation. c. Use MATLAB or any othercomputer program to simulate508 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:15 both the uncompensated and compensated systems to see the effect of your compensator. 15.For the unity feedback system of Figure P9.1 with G sK s s1 s210s26 do the following: [Section: 9.3] a.Find the settling time for the system if it is operatingwith 15% overshoot. b.Find the zero of a compensator and the gain, K,so that the settling time is 7 seconds. Assume that the pole ofthe compensator is located at  15. c. Use MATLAB or any other computerprogram to simulate thesystem’ s step response to test the compensator. 16.A unity feedback control system has the following forward transfer function: [Section: 9.3] G s K s2 s4 s12 a.Design a lead compensator to yield a closed-loop step response with 20.5% overshoot and a settling time of3 seconds. Be sure to specify the value of K. b.Is your second-order approximation valid? c. Use MATLAB or any othercomputer program to simulate and compare the transient response of the compensated system tothe predicted transient response. 17.For the unity feedback system of Figure P9.1, with G s K s220s101 s20 the damping ratio for the dominant poles is to be 0.4, andthe settling time is to be 0.5 second. [Section: 9.3] a.Find the coordinates of the dominant poles. b.Find the location of the compensator zero if thecompensator pole is at  15. c.Find the required system gain. d.Compare the performance of the uncompensated andcompensated systems. e. Use MATLAB or any other computerprogram to simulate the system to check your design. Redesign if necessary. 18.Consider the unity feedback system of Figure P9.1, with G sK s3 s5a.Show that the system cannot operate with a settling time of 2/3 second and a percent overshoot of 1.5 % with a simple gain adjustment. b.Design a lead compensator so that the system meetsthe transient response characteristics of Part a. Specify the compensator ’s pole, zero, and the required gain. 19.Given the unity feedback system of Figure P9.1 with G sK s2 s4 s6 s8 Find the transfer function of a lag-lead compensatorthat will yield a settling time 0.5 second shorter thanthat of the uncompensated system. The compensatedsystem also will have a damping ratio of 0.5, andimprove the steady-state error by a factor of 30. Thecompensator zero is at  5. Also, ﬁnd the compensated system ’s gain. Justify any second-order approximations or verify the design through simulation. [Section: 9.4] Redo Problem 19 using a lag-leadcompensator and MATLAB in thefollowing way: a.MATLAB will generate the root locusfor the uncompensated system alongwith the 0.5 damping-ratio line. You will interactively select the operat- ing point. MATLAB will then proceed toinform you of the coordinates of theoperating point,the gain at the oper-ating point, as well as the estimated%OS,T s,Tp,ζ,ωn, and Kprepresented by a second-order approximation at theoperating point. b.MATLAB will display the step response of the uncompensated system. c.Without further input, MATLAB willcalculate the compensated design point and will then ask you to input a valuefor the lead compensator pole from thekeyboard. MATLAB will respond with aplot of the root locus showing the com-pensated design point. MATLAB willthen allow you to keep changing thelead compensator pole value from the keyboard until a root locus is plotted that goes through the design point. d.For the compensated system, MATLAB willinform you of the coordinates of theoperating point,the gain at the operat-ing point,as well as the estimated%OS,T s,Tp,ζ,ωn, and Kprepresented by aProblems 509WEBC09 10/28/2014 18:2:15 second-order approximation at the operating point. e.MATLAB will then display the step response of the compensated system. f.Change the compensator ’s zero location a few times and collect data on thecompensated system to see if any otherchoices of the compensator zero yieldadvantages over the original design. g.Using the steady-state error of theuncompensated system, add a lag com-pensator to yield an improvement of 30 times over the uncompensated system ’s steady-state error, with minimal effect on the designed transientresponse. Have MATLAB plot the stepresponse. Try several values for thelag compensator ’s pole and see the effect on the step response. 21.Given the uncompensated unity feedback system ofFigure P9.1, with G s K s s1 s3 do the following: [Section: 9.4] a.Design a compensator to yield the following speci ﬁ- cations: settling time 2:86 seconds; percent overshoot 4:32%; the steady-state error is to be improved by a factor of 2 over the uncompensatedsystem. b.Compare the transient and steady-state error speciﬁ ca- tions of the uncompensated and compensated systems. c.Compare the gains of the uncompensated andcompensated systems. d.Discuss the validity of your second-orderapproximation. e. Use MATLAB or any other computerprogram to simulate the uncompensated and compensated systems and verify the speciﬁ cations. 22.For the unity feedback system given in Figure P9.1 with G sK s s5 s11 do the following: [Section: 9.4] a.Find the gain, K,for the uncompensated system to operate with 30% overshoot. b.Find the peak time and Kvfor the uncompensated system. c.Design a lag-lead compensator to decrease the peaktime by a factor of 2, decrease the percent overshootby a factor of 2, and improve the steady-state error by a factor of 30. Specify all poles, zeros, and gains. 23.The unity feedback system shown in Figure P9.1 with G sK s24s8 s10 is to be designed to meet the following speci ﬁcations: Overshoot: Less than 22% Settling time: Less than 1.6 seconds Kp15 Do the following: [Section: 9.4] a.Evaluate the performance of the uncompensated system operating at approximately 10% overshoot. b.Design a passive compensator to meet the desired speciﬁcations. c.Use MATLAB to simulate the compensated system. Comparethe response with the desiredspeci ﬁcations. 24.Consider the unity feedback system in Figure P9.1, with G s K s2 s4 The system is operated with 4.32% overshoot. In order toimprove the steady-state error, K pis to be increased by at least a factor of 5. A lag compensator of the form Gc s s0:5 s0:1 is to be used. [Section: 9.4] a.Find the gain required for both the compensated andthe uncompensated systems. b.Find the value of K pfor both the compensated and the uncompensated systems. c.Estimate the percent overshoot and settling time for boththe compensated and the uncompensated systems. d.Discuss the validity of the second-order approxima-tion used for your results in Part c. e. Use MATLAB or any other computer program to simulate the step response for the uncompen-sated and compensated systems. Whatdo you notice about the compensatedsystem ’s response? f.Design a lead compensator that will correct theobjection you notice in Part e. 25.For the unity feedback system in Figure P9.1, with G s K s1 s3 design a PID controller that will yield a peak time of1.122 seconds and a damping ratio of 0.707, with zeroerror for a step input. [Section: 9.4]510 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:16 26.Repeat Problem 25 for a peak time of 1.047 seconds, a damping ratio of 0.5, zero steady-state error for a step input, and with Gs K s1 2 27.For the unity feedback system in Figure P9.1, with G sK s4 s6 s10 do the following: a.Design a controller that will yield no more than25% overshoot and no more than a 2-secondsettling time for a step input and zero steady-stateerror for step and ramp inputs. b. Use MATLAB and verify yourdesign. Redo Problem 27 using MATLAB inthe following way: a.MATLAB will ask for the desired per-cent overshoot, settling time, and PIcompensator zero. b.MATLAB will design the PD controller ’s zero. c.MATLAB will display the root locus ofthe PID-compensated system with thedesired percent overshoot line. d.The user will interactively select theintersection of the root locus and thedesired percent overshoot line. e.MATLAB will display the gain and tran- sient response characteristics of the PID-compensated system. f.MATLAB will display the step responseof the PID-compensated system. g.MATLAB will display the ramp responseof the PID-compensated system. 29.If the system of Figure P9.3 operates with a dampingratio of 0.456 for the dominant second-order poles, ﬁnd the location of all closed-loop poles and zeros. R(s) + –C(s) K (s2 + 2s + 0.36) (s + 3) (s + 2) FIGURE P9.3 30.For the unity feedback system in Figure P9.1, with G sK s s2 s4 s6 do the following: [Section: 9.5]a.Design rate feedback to yield a step response with no more than 15% overshoot and no more than 3 seconds settling time. Use Approach 1. b.Use MATLAB and simulate yourcompensated system. 31.Given the system of Figure P9.4: [Section: 9.5] R(s) C(s) –+ K1 s(s + 2)(s + 5)K s + a–+ FIGURE P9.4 a.Design the value of K1, as well as ain the feedback path of the minor loop, to yield a settling time of4 seconds with 5% overshoot for the step response. b.Design the value of Kto yield a major-loop response with 10% overshoot for a step input. c. Use MATLAB or any othercomputer program to simulatethe step response to the entireclosed-loop system. d. Add a PI compensator to reducethe major-loop steady-stateerror to zero and simulate thestep response using MATLAB or anyother computer program. 32.Design a PI controller to drive the step-response errorto zero for the unity feedback system shown inFigure P9.1, where Gs  K s1  s3  s10  The system operates with a damping factor of0.4. Design for each of the following two cases:(1) compensator zero at  0.1, and (2) compensator zero at  0.7. Compare the speci ﬁcations of the uncompensated and each one of the compensated systems. Simulateeach one of the systems using any software program. 33.An inverted pendulum mounted on a motor-drivencart was introduced in Problem 30 in Chapter 3.Its state-space model was linearized around a station- ary point, x 0=0(Prasad, 2012). At the stationary point, the pendulum point-mass, m, is in the upright position at t=0, and the force applied to the cart, u0,i s Its model was then modi ﬁed in Problem 55 in Chapter 6 to have two output variables: the pendulum angle relative to the y-axis, θ(t), and the horizontal position of the cart, x(t). MATLAB was then used toProblems 511WEBC09 10/28/2014 18:2:17 ﬁnd its eigenvalues. Noting that only one pole (out of four) is located in the left half of the s-plane, we concluded that this unit requires stabilization. To accomplish stability and design an appropriate control system, do the following: a.Draw a signal-ﬂ ow diagram for that unit and use it to develop Simulink models for two feedbacksystems: one to control the cartposition, x(t), and the other to con- trol the pendulum angle, θ(t) . Set the upper and lower saturation limits ofthe second integrator in the angleloop to 100 and  100, respectively, and those limits in the position loopto 10 and  10. b.Use rate feedback with a gain of 12.5 tostabilize the pendulum angle controlsystem. The forward path of each of these systems should include a PD (proportional-plus-derivative) con-troller that adjusts the force appliedto the cart, u(t) . These controllers 3 may be con ﬁgured with the following settings:4 P=5,I=0, and D=5 for the cart position controller P=2,I=0, and D=10 for the pendulum angle controller c.Utilizing scopes to capture the two output responses, use a unit-impulse5 as the reference input in the anglecontrol loop and a unit-step source(con ﬁgured to start at t=0 with a ﬁnal value of 1) as the input for the cartposition control loop. d.If either of the responses has a steady- state error, e( ∞)>2%, a peak time, TP>1.2 seconds, or a percent overshoot, %OS>20.5%, suggest appropriate changes to its controller settings. 34.Identify and realize the following controllers with operational ampli ﬁers. [Section: 9.6] a.s0:01 s b.s235.Identify and realize the following compensators with passive networks. [Section: 9.6] a.s0:1 s0:01 b.s2 s5 c.s0:1 s0:01/C18/C19s1 s10/C18/C19 36.Repeat Problem 35 using operational ampli ﬁers. [Section: 9.6] DESIGN PROBLEMSDESIGN PROBLEMS 37.The room temperature of an 11 m2room is to be con- trolled by varying the power of an indoor radiator. For this speci ﬁc room, the open-loop transfer function from radiator power, _Q s,t ot e m p e r a t u r e ,T (s), is (Thomas ,2005) G sT s _Q s 110 6s2 1:31410 9s 2:6610 13 s30:00163 s2 5:27210 7s 3:53810 11 The system is assumed to be in the closed-loop conﬁguration shown in Figure P9.1. a.For a unit step input, calculate the steady-state error ofthe system. b.Try using the procedure of Section 9.2 to design aPI controller to obtain zero steady-state error forstep inputs without appreciably changing the tran-sient response. Then explain why it is not possibleto do so. c.Design a PI controller of the form G c sK sz s that will reduce the step-response error to zero whilenot changing signi ﬁcantly the transient response. (Hint: Place the zero of the compensator in a positionwhere the closed-loop poles of the uncompensatedroot locus will not be affected signi ﬁcantly.) d. Use Simulink to simulate the systems of Parts bandcand to verify the correctness of your design in Part c. 38.Figure P9.5 shows a two-tank system. The liquidinﬂow to the upper tank can be controlled using a valve and is represented by F The upper tank’ s outﬂow equals the lower tank ’si nﬂow and is repre- sented by F1.T h eo u t ﬂow of the lower tank is F2.T h e objective of the design is to control the liquid level,y(t), in the lower tank. The open-loop transmission for this system isY s Fo sa2a3 s2 a1a4sa1a4 (Romagnoli ,2006). The system will be controlled in a loop analogous to that of Figure P9.1, where the lower3These are PID controllers, in which the integral actions are set to zero to avoid any negative effect on stability. 4Note that a high value for the derivative action of the angle controller and a low value for its proportional gain have been selected to further stabilize the pendulum. 5To create a unit-impulse, use a unit-step source followed by a derivative block.512 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:17 liquid level will be measured and compared to a set point. The resulting error will be fed to a controller, which in turn will open or close the valve feeding the upper tank. F0 F1 F2 FIGURE P9.56 a.Assuming a10:04;a20:0187 ;a31;anda4 0:227, design a lag compensator to obtain a step- response steady-state error of 10% without affectingthe system ’s transient response appreciably. b. Verify your design through MATLAB simulations.39.Figure P9.6( a) shows a heat-exchanger process whose purpose is to maintain the temperature of a liquid at a prescribed temperature. The temperature is measured using a sensor and a transmitter, TT 22, that sends the measurement to acorresponding controller, TC 22, that compares the actualtemperature with a desired temperature set point, SP. Thecontroller automatically opens or closes a valve to allowor prevent the ﬂow of steam to change the temperature in the tank. The corresponding block diagram for this system is shown in Figure P9.6( b)(Smith ,2002 ). Assume the following transfer functions: G v s0:02 4s1;G1 s70 50s1;H s1 12s1 a.Assuming Gc sK,ﬁnd the value of Kthat will result in a dominant pole with ζ0:7. Obtain the corresponding Ts. b.Design a PD controller to obtain the same damping factor as Part abut with a settling time 20% smaller. c.Verify your results through MATLAB simulation. 40.Repeat Problem 39, Parts bandc, using a lead compensator. SP TT(t) Ti(t)Steam Process fluid Condensate returnTC 22 TT 22 (a) + –Gc(s) Gv(s) Gp(s) H(s)Compensator Valve SensorHeat exchanger TSP(s) T(s) (b) FIGURE P9.6 a.Heat-exchanger process;7b.block diagram 6Romagnoli, J.A., and Palazoglu. A. Introduction to Process Control. CRC Press, Boca Raton, 2006. P. 44, Figure 3.4.7Smith, C.A. Automated Continuous Process Control. John Wiley & Sons, New York, NY, 2002. p. 128, Figure 6-1.1.Problems 513WEBC09 10/28/2014 18:2:17 a. Find the transfer function of a motor whose torque- speed curve and load are given in Figure P9.7. b.Design a tachometer compensator to yield a damping ratio of 0.5 for a position control employing a powerampli ﬁer of gain 1 and a preampli ﬁer of gain 5000. c.Compare the transient and steady-state characteristicsof the uncompensated system and the compensatedsystem. RPMTorque 0.5 N-m 5V 60,000 00 2 Motor 44 10 5 kg-m2 1 N-m-s/rad1π FIGURE P9.7 42.You are given the motor whose transfer function isshown in Figure P9.8( a). R(s) + –+ – KfsTachometerC(s) E(s) K125 s(s + 2)Motor Amplifier25 s(s + 2)Ea(s)o(s) (a) (b)θ FIGURE P9.8a.If this motor were the forward transfer function of a unity feedback system, calculate the percent over- shoot and settling time that could be expected. b.You want to improve the closed-loop response. Sincethe motor constants cannot be changed and youcannot use a different motor, an ampli ﬁer and tachometer are inserted into the loop as shown inFigure P9.8( b). Find the values of K 1andKfto yield a percent overshoot of 15% and a settling time of0.5 second. c.Evaluate the steady-state error speci ﬁcations for both the uncompensated and the compensatedsystems. 43.A position control is to be designed with a 20% overshootand a settling time of 2 seconds. You have on hand anampli ﬁer and a power ampli ﬁer whose cascaded transfer function is K 1= s20with which to drive the motor. Two 10-turn pots are available to convert shaft positioninto voltage. A voltage of 5πvolts is placed across the pots. A dc motor whose transfer function is of the form θo s Ea sK s sa is also available. The transfer function of the motor isfound experimentally as follows: The motor and gearedload are driven open-loop by applying a large, short, rectangular pulse to the armature. An oscillogram of the response shows that the motor reached 63% of its ﬁnal output value at 1/2 second after the application of thepulse. Further, with a constant 10 volts dc applied to thearmature, the constant output speed was 100 rad/s. a.Draw a complete block diagram of the system,specifying the transfer function of each componentwhen the system is operating with 20% overshoot. b.W h a tw i l lt h es t e a d y - s t a t ee r r o rb ef o rau n i tr a m pi n p u t ? c.Determine the transient response characteristics. d.If tachometer feedback is used around the motor, asshown in Figure P9.9, ﬁnd the tachometer and the ampli ﬁer gain to meet the original speci ﬁcations. Summarize the transient and st eady-state characteristics. R(s) + –+ – KfTachometerC(s)K1Amplifier Pot MotorPower amp Pots FIGURE P9.9514 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:18 44.Apositioncontrolistobedesignedwitha10%overshoot, a settling time of 1 second, and Kv1000. You have on hand an ampli ﬁer and a power ampli ﬁer whose cascaded transfer function is K1= s40with which to drive the motor. Two 10-turn pots are available to convert shaft position into voltage. A voltage of 20πvolts is placed across the pots. A dc motor whose transfer function is ofthe form θo s Ea sK s sa isalso available. The following data are observed froma dynamometer test at 50 V. At 25 N-m of torque, themotor turns at 1433 rpm. At 75 N-m of torque,the motor turns at 478 rpm. The speed measured atthe load is 0.1 that of the motor. The equivalent inertia,including the load, at the motor armature is 100 kg-m 2, and the equivalent viscous damping, including the load, at the motor armature is 50 N-m-s/rad. a.Draw a complete block diagram of the system, specifying the transfer function of each component. b.Design a passive compensator to meet therequirements in the problem statement. c.Draw the schematic of the compensator showing allcomponent values. Use an operational ampli ﬁer for isolation where necessary. d. Use MATLAB or any other computerprogram to simulate your systemand show that all requirementshave been met. 45.Given the system shown in Figure P9.10, ﬁnd the values of KandK fso that the closed-loop dominant poles will have a damping ratio of 0.5 and the under-damped poles of the minor loop will have a dampingratio of 0.8. R(s) + –K+ – Kf sTachometerC(s) E(s) 1 (s + 1)2(s + 5)AmplifierPower amplifier and plant FIGURE P9.10 46.Given the system in Figure P9.11, ﬁnd the values of K and Kfso that the closed-loop system will have a 4.32% overshoot and the minor loop will have adamping ratio of 0.8. Compare the expectedperformance of the system without tachometer com- pensation to the expected performance with tachometer compensation. R(s) + –K+ – Kf sTachometerC(s) E(s) 1 (s + 1)(s + 5)(s + 10)AmplifierPower amplifier and plant FIGURE P9.11 47.Steam-driven power generators rotate at a constantspeed via a governor that maintains constant steampressure in the turbine. In addition, automatic genera- tion control (AGC) or load frequency control (LFC) is a d d e dt oe n s u r er e l i a b i l i ty and consistency despite load variations or other disturbances that can affectthe distribution line frequency output. A speciﬁ c turbine-governor system can be described only usingthe block diagram of Figure P9.1 in which G s G c sGg sGt sGm s,w h e r e( Khodabakhshian, 2005) Gg s1 0:2s1is the governor ’s transfer function Gt s1 0:5s1is the turbine transfer function Gm s1 10s0:8represents the machine and loadtransfer functions G c(s) is the LFC compensation to be designed a.Assuming Gc sK,ﬁnd the value of Kthat will result in a dominant pole with ζ0:7. Obtain the corresponding Ts. b.Design a PID controller to obtain the same damp-ing factor as in Part a, but with a settling time of 2 seconds and zero steady-state error to step inputcommands. c. Verify your results using aMATLAB simuation. 48.Repeat Problem 47 using a lag-lead compensator insteadof a PID controller. Design for a steady-state error of 1%for a step input command. 49.Digital versatile disc (DVD) players incorporate several control systems for their operations. The control tasks include (1) keeping the laser beam focused on the discsurface, (2) fast track selection, (3) disc rotation speedcontrol, and (4) following a track accurately. In orderto follow a track, the pickup-head radial position iscontrolled via a voltage that operates a voice coilembedded in a magnet con ﬁguration. For a speci ﬁcProblems 515WEBC09 10/28/2014 18:2:18 DVD player, the transfer function is given by P sX s V s 0:63 10:36 305:4ss2 305:42/C18/C19 10:04 248:2ss2 248:22/C18/C19 where x tradial pickup position and v tthe coil input voltage ( Bittanti ,2002 ). a.Assume that the system will be controlled in a closed-loop conﬁ guration, such as the one shown in Figure P9.1. Assuming that the plant, P(s), is cascaded with a proportional compensator,G c sK, plot the root locus of the system. b.Repeat Part ausing MATLAB if your root locus plot wascreated by any other tool. c.Find the range of Kfor closed-loop stability, the resulting damping factor range, and the smallestsettling time. d.Design a notch ﬁlter compensator so that the system ’s dominant poles have a damping factor of ζ0:7w i t h a closed-loop settling time of 0.1 second. e. Simulate the system ’s step response for Part cusing MATLAB. f.Add a PI compensator to the system to achieve zerosteady-state error for a step input without appreciably affecting the transient response achieved in Part b. g. Simulate the system ’s step response for Part eusing MATLAB. 50.A coordinate measuring machine (CMM) measures coordinates on three-dimensional objects. The accuracyof CMMs is affected by temperature changes as well as by mechanical resonances due to joint elasticity. Theseresonances are more pronounced when the machinehas to go over abrupt changes of dimension, such as sharp corners at high speed. Each of the machine linkscan be controlled in a closed-loop con ﬁguration, such as the one shown in Figure P9.12, designed for aspeci ﬁc machine with prismatic (sliding) links. In the ﬁgure, X ref(s) is the commanded position and X(s)i st h e actual position. The minor loop uses a tachometer generatorto obtain the joint speed, while the main loop controls the joint’s position ( Özel,2003). a.Find the value of Kthat will result in a minor loop with ζ0:5. b.Use a notch ﬁlter compensator, G c(s), for the external loop so that it results in a closed-loop damping factor ofζ0:7 with Ts≈4 seconds. c.Use MATLAB to simulate thecompensated system ’s closed- loop step response. 51.An X-4 quadrotor ﬂyer is designed as a small-sized unmanned autonomous vehicle (UAV) that ﬂies mainly indoorsandcanhelpinsearchandrecognizancemissions.To minimize mechanical problems and for simplicity,thisaircraftuses ﬁxedpitchrotorswithspeciallydesigned blades. Therefore, for thrust it is necessary to add a ﬁfth propeller. A simpli ﬁed design of the thrust control design can be modeled as in Figure P9.1 with G sG c sP s where P s1:90978s 0:431/C16/C17 s 9:61/C16/C17s 0:541/C16/C17 represents the dynamics of the thruster rotor gain, the motor, and the battery dynamics. Initially, the system is designed using a proportional compensator given byG c s3(Pounds ,2009 ). a.Calculate the resulting steady-state error for a unitstep input. + –+ – Tachometer generatorCompensator s(s2 + 14.24 s + 3447.91) 0.0466 s(s2 + 1.15 s + 0.33)Plant Xref (s) Gc(s) K574.98X(s) FIGURE P9.12516 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:19 b.Design a lag compensator t o yield half the steady- state error of the proportional compensator, with- out appreciably affecting the system ’st r a n s i e n t response. c.Use MATLAB to simulate theoriginal design and the lagcompensated design. Verify yourresults. 52.Problem 8.54 described an ac/dc conversion andpower distribution system for which droop control isimplemented through the use of a proportionalcontroller to stabilize the dc-bus voltage. For simpli ﬁ- cation, a system with only one source converter and oneload converter was considered. The parameters anddesign considerations presented in that problem,along with some solution results, allow us to represent the block-diagram of that system as shown in the Figure P9.13. H (s)Ev(s) GC(s)+ _Vdc–ref (s) VS–lp(s)(s3 +1225s2 + 5030000s + 62500000)125(s2 + 1225s + 2530000) 200 s + 200Is–ref(s)GP (s) Vs (s) FIGURE P9.13 Here Gc(s) is the transfer function of the controller, Gp(s) represents the forward path of the controlled plant (a conversion and power distribution unit), and H(s) is the transfer function of the feedback low-pass ﬁlter (Karlsson ,2003 ). Prepare a table, such as Table 9.5, where the ﬁrst column, headed Uncompensated ,i sﬁlled in with your results from the proportional design of Problem 8.54, assuming an input step, vdc ref t750u t. Follow Steps 2 –8 as described in Section 9.4 (Example 9.5), to design a proportional-plus-integral- plus-derivative (PID) controller so that the system canoperate with a percent overshoot 4.4 %, a peak time 20% smaller than that of the uncompensated system,and zero steady-state error, e Vstep ∞0. Fill in the remaining two columns of your table, PD-compensated andPID-compensated . 53.Testing of hypersonic ﬂight is performed in wind tunnels where maintaining a constant air pressure is important.Air pressure control is accomplished in several stages.For a speci ﬁc setup, a simpli ﬁed transfer function has been found to be ( Varghese ,2009 ) Ps  Ms  2:369106s27:897107s4:21105 0:015s50:7802 s49:89s318:46s23:377s 0:01937where M(s) is the stem movement of a valve feeding compressed air into the storage tank, and P(s) is the settling chamber pressure. In order to achieve steady-state error, design a PI controller that operates with a damping factorof 0.4. Compare the characteristics of the un-compensated and compensated systems, and use acomputer program to simulate the step response to thecompensated system. 54.Ametering pump is a pump capable of delivering a precise ﬂow rate of ﬂuid. Most metering pumps consist of an electric motor that varies the strike length of ashaft, allowing more or less ﬂu i dt op a s st h r o u g hi t s body. The control of such a valve has been considered and the open-loop transfer function of the pump was f o u n dt ob e( Yu,2011) Us  Ys 1:869 s212:32s0:4582 where the output of the system, Y(s), represents the liquid ﬂow, and the input, U(s), is the command signal to the motor that varies the pump ’s plunger strike length. a.Design a PID controller to reduce the steady-stateerror to zero with a maximum 5% overshoot and a20% reduction in uncompensated settling time. b.Find the characteristics of the uncompensated system. c.Design a PID controller to reduce the steady-state error to zero; achieve a maximum 5% overshoot and a 20% reduction in uncompensated settling time. d.Simulate the step response for the compensatedsystem to verify the validity of your design. 55.A linear model of the α-subsystem of a grid-connected converter ( Mahmood ,2012 ) with a Y-Y transformer was presented as the plant in Problem 69 in Chapter 8. You were asked to ﬁnd the transfer function of that plant, G Ps Vαs  Mαs (see Figure P8.20( b)). a.Use the results of your solution to Problem 69, Chapter 8, to write the open-loop transfer functionin pole-zero form with a unity gain. Then design a PIDcontroller to yield a zero steady-state error for a stepinput with an overshoot of less than 10% and a naturalfrequency of 135.3. b.Plot the time response, c(t), marking on it all relevant characteristics, such as the percent overshoot (if any),rise time, settling time, and ﬁnal steady-state value. Also ﬁnd all closed-loop poles of this system and the velocity error constant, K v. Do you have any observa- tions about the time response and/or the poles?Problems 517WEBC09 10/28/2014 18:2:19 56.Design a PID controller for the drive system of Problem 56, Chapter 8, and shown in Figure P8.15 (Thomsen ,2011 ). Obtain an output response, ωL(t), with an overshoot 15%, a settling time of preferably 0.2 second, but not more than 5 seconds, a zerosteady-state position error, and a velocity error of<2%, for a step input, ω r(t)=260u(t) rad/sec, applied att=0. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 57.Control of HIV/AIDS. It was shown in Chapter 6, Problem 68, that when the virus levels in an HIV/ AIDS patient are controlled using RTIs the linearizedplant model is P sY s U1 s 520 s 10:3844 s32:6817 s20:11s0:0126 Assume that the system is embedded in a con ﬁguration, such as the one shown in Figure P9.1, whereG sG c sP s. Here, Gc(s) is a cascade compen- sator. For simplicity in this problem, choose the dcgain of G c(s) less than zero to obtain a negative- feedback system (the negative signs of Gc(s) and P(s) cancel out) ( Craig ,I. K.,2004 ). a.Consider the uncompensated system withG c s  K.F i n dt h ev a l u eo f Kthat will place all closed-loop poles on the real axis. b.Use MATLAB to simulate theunit-step response of thegain-compensated system. Note the %OS and the T sfrom the simulation. c.Design a PI compensator so that the steady-state errorfor step inputs is zero. Choose a gain value to make allpoles real. d. Use MATLAB to simulate the design in Part c for a unit step input. Compare the simulation to Part b. 58.Hybrid vehicle. In the previous chapter, we used the root locus to design a proportional controller for thespeed control of an HEV. We rearranged the blockdiagram to be a unity feedback system, as shown in the block diagram of Figure P7.31 ( Preitl ,2007 ). The plant and compensator resulted in G s K s0:60 s0:5858  s0:0163  and we found that K=0.78 resulted in a critically damped system.a.Use this design to itemize the performancespeciﬁcations by ﬁlling in a table, similar to Table 9.5, under the column Uncompensated . Take advantage of the results from Chapter 8 or use MATLAB to ﬁnd the entries. Plot c(t) for r(t)=4u(t) volts. b. Now assume that the system speci ﬁcations require zero steady-state error for step inputs,asteady-state error for ramp inputs2%,a %OS 4.32%,and a settling time 4 sec. It should be evident that thisis not accomplished with a propor-tional controller. Thus, start by designing a PI controller to meet therequirements. If necessary, add a PDmode to get a PID controller. Simulateyour ﬁnal design using MATLAB. Fill in the results of this design in the second column of your table with the heading Compensated. c.Now note the following limitations of linear controlsystem modeling: 1.No limit is set on system variables. For example,vehicle acceleration as well as motor and powerampli ﬁer current, torque or power do not have upper limits. 2.It is assumed that to improve the speed of responsein Part b, we could place the PI controller ’s zero on top of the pole closest to the origin. Realistically,such pole-zero cancellation is not always possibleto maintain. If you do not expand yourmodel beyond the describedlimitations if required for accu-racy, unrealistic response char-acteristics, such as rise and settling times could result. Look at your design results includingresponse curves. Are they realis-tic? If not,revise your Simulinkmodel,which you developed forProblem 5.79, according to thefollowing 4 steps: i.Represent the motor armature asaﬁrst-order system with a unity steady-state gain and a timeconstant of 50 ms,which avoidsthe creation of internal alge-braic closed-loops and shouldhave negligible effect on system response;518 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:20 ii.Add a saturation element at the output of the motor armature and set it to an upper limit of 250 A; iii.Use the following PI settings. ThePI settings of the speed controllerare P =61 and I =0.795. The PI set- tings of the torque controller areP=10 and I =6; iv.Run the modi ﬁed model and comment on the graphs obtained for motor cur-rent, car acceleration, and speed. 59.Parabolic trough collector. The parabolic trough collector ( Camacho ,2012 ) is a Type 0 system as can be seen from its transfer function, Gs  137:210 6K s20:0224 s19610 6e 39sWe want the system operating in the critically damped mode, but with reduced steady-state error. Using the root locus and a Padé approximation, e sT1 T 2s 1T 2s, do the following: a.Substitute the Padé approximation for the delay and ﬁnd the gain necessary to have the system operating with a damping factor, ζ0:5. Also, ﬁnd the corresponding steady-state error. b.Design a PI compensator to obtain a zero steady-stateerror while maintaining ζ0:5. c. Simulate the resulting designusing MATLAB to verify yourdesign. Cyber Exploration Laboratory Experiment 9.1 Objectives To perform a trade-off study for lead compensation. To design a PI controller and see its effect upon steady-state error. Minimum Required Software Packages MATLAB, and the Control System Toolbox Prelab 1.How many lead compensator designs will meet the transient response speci ﬁcations of a system? 2.What differences do the lead compensators of Prelab 1 make? 3.Design a lead compensator for a unity negative feedback system with a forward transfer function of G sK s s3 s6to meet the following speci ﬁcations: percent overshoot 20%; settling time 2 seconds. Specify the required gain, K. Estimate the validity of the second-order approximation. 4.What is the total angular contribution of the lead compensator of Prelab 3? 5.Determine the pole and zero of two more lead compensators that will meet the requirements of Prelab 3. 6.What is the expected steady-state error for a step input for each of the lead-compensatedsystems? 7.What is the expected steady-state error for a ramp input for each of the lead-compensatedsystems? 8.Select one of the lead compensator designs and specify a PI controller that can becascaded with the lead compensator that will produce a system with zero steady-stateerror for both step and ramp inputs.Cyber Exploration Laboratory 519WEBC09 10/28/2014 18:2:20 Lab 1.Using the SISO Design Tool, create the design in Prelab 3 and plot the root locus, step response, and ramp response. Take data to determine the percent overshoot, settlingtime, and step and ramp steady-state errors. Record the gain, K. 2.Repeat Lab 1 for each of the designs in Prelab 5. 3.For the design selected in Prelab 8, use the SISO Design Tool and insert the PIcontroller. Plot the step response and measure the percen t overshoot, settling time, and steady-state error. Also, plot the ramp response for the design and measure thesteady-state error. 4.Plot the step and ramp responses for two more values of the PI controller zero. Postlab 1.Make a table showing calculated and actual values for percent overshoot, settlingtime, gain, K, steady-state error for step inputs, and steady-state error for ramp inputs. Use the three systems without the PI controller and the single system with the PIcontroller from Lab 3. 2.Itemize the bene ﬁts of each system without the PI controller. 3.Choose a ﬁnal design and discuss the reasons for your choice. Experiment 9.2 Objective To design a PID controller via LabVIEW Minimum Required Software Packages LabVIEW with the Control Design and Simulation Module Prelab 1.Perform Cyber Exploration Laboratory Experiment 8.3. 2.Use the system described in Cyber Exploration Laboratory Experiment 8.3 and replace the controller described there, Gc sKDsKP, with a PID controller. 3.Design the controller to meet the following requirements: (1) shorten the settling timefound in the design of Cyber Exploration Laboratory Experiment 8.3 to less than 1 sec.,and (2) limit the percent overshoot to no more than 5%. 4.Design a LabVIEW VI to test your design. The front panel inputs will be the PID gainsand the numerator and denominator of the plant. The indicators will be the transferfunctions of the plant, PID controller, and closed-loop system. Finally, provide anindicator for the step-response graph. Lab Run your LabVIEW VI and obtain the step response of the closed-loop system. Postlab Compare the transient and steady-state error performance between the closed-loop step responses of Cyber Exploration Laboratory Experiment 8.3 and thisexperiment. Hardware Interface Laboratory Experiment 9.3 Speed Control Using PI Control Objectives To control the speed of the motor in closed loop using integral control and to investigate the tradeoffs of this approach520 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:20 Material Required Computer with LabView installed; myDAQ; dc brushed gearmotor with Hall Sensor quadrature encoder (  10V to +10V normal operation range); and motor control chip BA6886N (or a transistor circuit substitute) Files Provided at www.wiley.com/college/nise Speed PI Control.vi Signal Conditioning (SubVI).vi PI Controller (SubVI).vi Prelab Answer the following questions: + –R(s)KI sK C(s) st + 1 FIGURE P9.14 For the system shown in Figure P9.14, do the following: 1.Find the closed-loop transfer function from R(s)t oC(s). 2.Draw the root locus as a function of KI. 3.Draw the unit-step response marking the settling time, peak time, and maximum output. Find all the possibilities: overdamped, critically damped, and underdamped. 4.Find an expression for the steady-state error for a unit-step input. Lab Software: Use the Speed PI Control.vi and change the constant on the left to ﬁty o u r motor’ s gear ratio and encoder CPR as shown in Figure P9.15( b). Also change the constants wired to the PI controller. These values should be the maximum motor voltage- dead-zone constant. Change the dead-zone constants inside the signal conditioning block just as you did in Experiment 8.4. FIGURE P9.15 Speed PI Control.vi: a.Front Panel; (ﬁgure continues )Hardware Interface Laboratory 521WEBC09 10/28/2014 18:2:21 Hardware: Same as Experiment 8.4 Procedure: 1.Make the P gain =0, and choose a small I gain. Verify the operation of your closed-loop system. In this experiment we will keep the P gain at 0. 2.Draw a functional block diagram (simila rt ot h a tp r e s e n t e di nC h a p t e r1 )o ft h e system. Do not include the signal conditioning functions, nor the change-of- direction signals. 3.Using the transfer function you found in Experiment 4.6, draw the system’ s root locus. 4.Find the theoretical range of KIin which the system is closed-loop stable. 5.Run your program and system to ﬁnd experimentally the range of KIin which the system is closed-loop stable. 6.Make a judicious choice of three different values of KIfor experimentation. 7.Using the transfer function you found in Experiment 8.4 and the three judicious choicesof proportional gain, complete the following table using hand calculations only(calculators OK, computer simulations are not acceptable). Show all your work. KI TP—Peak time %OS—Percent overshoot Ts—Settling time ess—Steady-state error (step input) Theoretical 8.For each one of the three values of KI, perform step-input experiments. Use a single value of step input for the three values of KI. Make sure that your oscilloscope captures contain the system ’s transient response in its entirety. Show measurements of all the parameters in the Theoretical table above and ﬁll in the following Experimental table. Please note that Ts, the settling time, is hard to measure in the current setting because of FIGURE P9.15 (Continued )b.Block Diagram522 Chapter 9 Design via Root LocusWEBC09 10/28/2014 18:2:21 Bibliography Bittanti, S., Dell’ Orto, F., Di Carlo, A., and Savaresi, S. M. Notch Filtering and Multirate Control for Radial Tracking in High Speed DVD-Players. IEEE Transactions on Consumer Electronics , vol. 48, 2002, pp. 56 –62. Budak, A. Passive and Active Network Analysis and Synthesis . Houghton Mif ﬂin, Boston, MA, 1974. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Craig, J. J. Introduction to Robotics. Mechanics and Control , 3d ed. Prentice Hall, Upper Saddle River, NJ, 2005. D'Azzo, J. J., and Houpis, C. H. Feedback Control System Analysis and Synthesis , 2d ed. McGraw-Hill, New York, 1966. Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA, 1989. Hostetter, G. H., Savant, C. J., Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Johnson, H. et al. Unmanned Free-Swimming Submersible (UFSS )System Description . NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C., 1980. Karlsson, P., and Svensson, J. DC Bus Voltage Control for a Distributed Power System, IEEE Trans. on Power Electronics , vol. 18, no. 6, 2003, pp. 1405 –1412. Khodabakhshian, A., and Golbon, N. Design of a New Load Frequency PID Controller Using QFT. Proceedings of the 13th Mediterranean Conference on Control and Automation, 2005, pp. 970 –975. Kuo, B. C. Automatic Control Systems , 7th ed. Prentice Hall, Upper Saddle River, NJ, 1995. Mahmood, H., and Jiang, J. Modeling and Control System Design of a Grid Connected VSC Considering the Effect of the Interface Transformer Type. IEEE Transactions on Smart Grid , vol. 3, no. 1, March 2012, pp. 122 –134. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Özel, T. Precision Tracking Control of a Horizontal Arm Coordinate Measuring Machine. Proceedings of the IEEE Conference on Control Applications,2 0 0 3 ,p p .1 0 3 –108. Pounds, P. E. I., Mahony, R. E., and Corke, P. I. Design of a Static Thruster for Microair Vehicle Rotorcraft. Journal of Aerospace Engineering , vol. 22, no. 1, 2009, pp. 85 –94.the limited number of analog channels available. Instead of measuring Ts,m a r ko n your oscilloscope the theoretical value using the scope cursors. ( Important: In this experiment stop the VI before restarting it every time you apply a step input. This action will reset the integrator). KI Tp—Peak time %OS—Percent overshoot ess—Steady-state error (step input) Experimental Postlab Make a detailed comparison of your theoretical and experimental tables. Discuss similarities and discrepancies betw een experimental and theoretical and give possible reasons.Bibliography 523WEBC09 10/28/2014 18:2:21 Prasad, L., Tyagi, B., and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Symposium, 2012, pp. 138 –143. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics . IEEE. 2007, pp. 157 –162. Romagnoli, J. A., and Palazoglu, A. Introduction to Process Control . CRC Press, Boca Raton, FL, Smith, C. A. Automated Continuous Process Control. Wiley, New York, 2002. Thomas, B., Soleimani-Mosheni, M., and Fahlén, P. Feed-forward in Temperature Control of Buildings. Energy and Buildings , vol. 37, 2005, pp. 755 –761. Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model-Based Predictive Control for Drive Systems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions On Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Van de Vegte, J. Feedback Control Systems , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Varghese, J., and Binu, L. S. Adaptive Fuzzy PI Controller for Hypersonic Wind Tunnel Pressure Regulation. 10th National Conference on Technological Trends (NCTT09) ,N o v .6 –7, 2009, pp. 184– 187. Yu, S., Wu, J., and Zhang, D. Robust Non-fragile PID Controller Design for the Stroke Regulation of Metering Pumps. Chinese Journal of Chemical Engineering , vol. 19, no. 1, 2011, pp. 83 –88.524 Chapter 9 Design via Root LocusWEBC10 10/28/2014 18:15:50 Frequency Response Techniques Chapter Learning Outcomes After completing this chapter the student will be able to: Deﬁne and plot the frequency response of a system (Section 10.1) Plot asymptotic approximations to the frequency response of a system (Section 10.2) Sketch a Nyquist diagram (Section 10.3 –10.4) Use the Nyquist criterion to determine the stability of a system (Section 10.5) Find stability and gain and phase margins using Nyquist diagrams and Bodeplots (Sections 10.6 –10.7) Find the bandwidth, peak magnitude, and peak frequency of a closed-loop frequency response given the closed-loop time response parameters of peak time, settling time, and percent overshoot (Section 10.8) Find the closed-loop frequency response given the open-loop frequencyresponse (Section 10.9) Find the closed-loop time response parameters of peak time, settlingtime, and percent overshoot given the open-loop frequency response(Section 10.10)10 525WEBC10 10/28/2014 18:15:50 Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with a case study as follows: Given the antenna azimuth position control system shown on the frontendpapers and using frequency response methods, you will be able to ﬁnd the range of gain, K, for stability. You will also be able to ﬁnd percent overshoot, settling time, pea k time, and rise time, given K. 10.1 Introduction The root locus method for transient design, steady-state design, and stability was covered inChapters 8 and 9. In Chapter 8, we covered the simple case of design through gainadjustment, where a trade-off was made between a desired transient response and a desiredsteady-state error. In Chapter 9, the need for this trade-off was eliminated by usingcompensation networks so that transient and steady-state errors could be separately speciﬁed and designed. Further, a desired transient response no longer had to be on the original system ’s root locus. This chapter and Chapter 11 present the design of feedback control systems through gain adjustment and compensation networks from another perspective —that of frequency response. The results of frequency response compensation techniques are not new or different from the results of root locus techniques. Frequency response methods, developed by Nyquist and Bode in the 1930s, are older than the root locus method, which was discovered by Evans in 1948 ( Nyquist , 1932; Bode, 1945). The older method, which is covered in this chapter, is not as intuitive as the root locus. However, frequency response yields a new vantage point from which toview feedback control systems. This technique has distinct advantages in the followingsituations: 1.When modeling transfer functions from physical data, as shown in Figure 10.1 2.When designing lead compensators to meet a steady-state error requirement and a transient response requirement 3.When ﬁnding the stability of nonlinear systems 4.In settling ambiguities when sketching a root locus FIGURE 10.1 National Instruments PXI, Compact RIO, Compact DAQ, and USB hardware plantforms (shown from left to right) coupled withNI LabVIEW software to provide stimulus and acquire signals from physical systems.NI LabVIEW can then be used to analyze data, determine the mathematical model, andprototype and deploy acontroller for the physical system526 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:15:51 Weﬁrst discuss the concept of frequency response, de ﬁne frequency response, derive analytical expressions for the frequency response, plot the frequency response, develop ways of sketching the frequency response, and then apply the concept to control systemanalysis and design. The Concept of Frequency Response In the steady state, sinusoidal inputs to a linear system generate sinusoidal responses of thesame frequency. Even though these responses are of the same frequency as the input, they differin amplitude and phase angle from the input. These differences are functions of frequency. Before de ﬁning frequency response, let us look at a convenient representation of sinusoids. Sinusoids can be represented as complex numbers called phasors .T h e magnitude of the complex number is the amplitude of the sinusoid, and the angle ofthe complex number is the phase angle of the sinusoid. Thus, M 1cos ωtϕ1can be represented as M1ϕ1where the frequency, ω, is implicit. Since a system causes both the amplitude and phase angle of the input to be changed, we can think of the system itself as represented by a complex number, deﬁ ned so that the product of the input phasor an d the system function yields the phasor representation of the output. Consider the mechanical system of Figure 10.2( a). If the input force, f(t), is sinusoidal, the steady-state output response, x(t), of the system is also sinusoidal and at the same frequency as the input. In Figure 10.2( b) the input and output sinusoids are represented by complex numbers, or phasors, Mi ω ϕi ωandMo ωϕo ω, respectively. Here, the M’s are the amplitudes of the sinusoids and the ϕ’s are the phase angles of the sinusoids as shown in Figure 10.2( c). Assume that the system is represented by the complex number, M ω ϕ ω. The output steady-state sinusoid is found by multiplying the complex number representation of the input by the complex number representation of the system. Thus, thesteady-state output sinusoid is M o ωϕo ωMi ωM ωϕi ω ϕ ω (10.1) f(t) = Mi cos(ωt +ϕi) o(ω) (ω) Mass Viscous damperSpring (a) Inputtx(t) (c)Mi(ω) i(ω) M(ω)Mo(ω) Mo = M i Mf(t) io = i +Mi t Output(b)x (t) = Mo cos(ω + ϕo) ϕ ϕ ϕ ϕϕ ϕ FIGURE 10.2 Sinusoidal frequency response: a.system; b.transfer function; c.input and output waveforms10.1 Introduction 527WEBC10 10/28/2014 18:15:52 From Eq. (10.1) we see that the system function is given by M ωMo ω Mi ω(10.2) and ϕ ω ϕo ω  ϕi ω (10.3) Equations (10.2) and (10.3) form our de ﬁnition of frequency response. We call M ωthe magnitude frequency response andϕ ωthephase frequency response . The combination of the magnitude and phase frequency responses is called the frequency response and isM ωϕ ω. In other words, we de ﬁne the magnitude frequency response to be the ratio of the output sinusoid ’s magnitude to the input sinusoid ’s magnitude. We de ﬁne the phase response to be the difference in phase angle between the output and the input sinusoids. Both responses are a function of frequency and apply only to the steady-state sinusoidal responseof the system. Analytical Expressions for Frequency Response N o wt h a tw eh a v ed e ﬁned frequency response, let us obtain the analytical expression for it (Nilsson ,1990). Later in the chapter, we will us e this analytical expression to determine stability, transient response, and steady-state error. Figure 10.3 shows a system, G(s), with the Laplace transform of a general sinusoid, r tAcosωt Bsinωtﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ﬃ A2B2p cosωt tan 1 B=Aas the input. We can represent the input as a phasor in three ways: (1) in polar form, Miϕi,w h e r eM iﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃA2B2p andϕi tan 1 B=A; (2) in rectangular form, A jB;a n d( 3 )u s i n gE u l e r ’sf o r m u l a , Miejϕi. We now solve for the forced response portion of C(s), from which we evaluate the frequency response. From Figure 10.3, C sAsBω s2ω2G s (10.4) We separate the forced solution from the transient solution by performing a partial-fraction expansion on Eq. (10.4). Thus, C sAsBω sjω s jωG s K1 sjωK2 s jωPartial fraction terms from G s(10.5) where K1AsBω s jωG s/C12/C12/C12 s® jω1 2 AjBG  jω12M ie jϕiMGe jϕG MiMG 2e j ϕiϕG(10.6a) K2AsBω sjωG s/C12/C12/C12 s®jω1 2 A jBG jω12M iejϕiMGejϕG MiMG 2ej ϕiϕGK* 1(10.6b) For Eqs. (10.6), K* 1is the complex conjugate of K1, MGjG jωj (10.7)As + Bω s2 + ω2 G(s) C(s) R(s) = FIGURE 10.3 System with sinusoidal input528 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:15:52 and ϕGangle of G jω (10.8) The steady-state response is that portion of the partial-fraction expansion that comes from the input waveform ’s poles, or just the ﬁrst two terms of Eq. (10.5). Hence, the sinusoidal steady-state output, Css(s), is Css sK1 sjωK2 s jω(10.9) Substituting Eqs. (10.6) into Eq. (10.9), we obtain Css sMiMG 2e j ϕiϕG sjωMiMG 2ej ϕiϕG s jω(10.10) Taking the inverse Laplace transformation, we obtain c tMiMGe j ωtϕiϕGej ωtϕiϕG 2/C18/C19 MiMGcos ωtϕiϕG(10.11) which can be represented in phasor form as Moϕo M1ϕ1 MGϕG, where MGϕG is the frequency response function. But from Eqs. (10.7) and (10.8), MGϕGG jω.I n other words, the frequency response of a system whose transfer function is G(s)i s G jω G sjs®jω (10.12) Plotting Frequency Response G jω MG ω<ϕG ωcan be plotted in several ways; two of them are (1) as a function of frequency, with separate magnitude and phase plots; and (2) as a polar plot, where the phasor length is the magnitude and the phasor angle is the phase. When plotting separate magnitude and phase plots, the magnitude curve can be plotted in decibels (dB) vs. log ω, where dB 20 log M.1The phase curve is plotted as phase angle vs. log ω. The motivation for these plots is shown in Section 10.2. Using the concepts covered in Section 8.1, data for the plots also can be obtained using vectors on the s-plane drawn from the poles and zeros of G(s) to the imaginary axis. Here the magnitude response at a particular frequency is the product of the vector lengthsfrom the zeros of G(s) divided by the product of the vector lengths from the poles of G(s), drawn to points on the imaginary axis. The phase response is the sum of the angles from thezeros of G(s) minus the sum of the angles from the poles of G(s) drawn to points on the imaginary axis. Performing this operation for successive points along the imaginary axisyields the data for the frequency response. Remember, each point is equivalent tosubstituting that point, sjω 1, into G(s) and evaluating its value. The plots also can be made from a computer program that calculates the frequency response. For example, the root locus program discussed in Appendix H at www.wiley.com/ college/nise can be used with test points that are on the imaginary axis. The calculated K value at each frequency is the reciprocal of the scaled magnitude response, and thecalculated angle is, directly, the phase angle response at that frequency. The following example demonstrates how to obtain an analytical expression for frequency response and make a plot of the result. 1Throughout this book, “log”is used to mean log 10, or logarithm to the base 10.10.1 Introduction 529WEBC10 10/28/2014 18:15:54 Example 10.1 Frequency Response from the Transfer FunctionFrequency Response from the Transfer Function PROBLEM: Find the analytical expression for the magnitude frequency response and the phase frequency response for a system G s1= s2. Also, plot both the separate magnitude and phase diagrams and the polar plot. SOLUTION: First substitute sjωin the system function and obtain G jω 1= jω2 2 jω= ω24. The magnitude of this complex number, jG jωjM ω1=ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ﬃ ω24p , is the magnitude frequency response. The phase angle ofG jω;ϕ ω  tan 1 ω=2, is the phase frequency response. G jωcan be plotted in two ways: (1) in separate magnitude and phase plots and (2) in a polar plot. Figure 10.4 shows separate magnitude and phase diagrams, where the magnitude diagram is 20 log M ω20 log 1=ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ω24p vs. log ω, and the phase diagram is ϕ ω  tan 1 ω=2vs. log ω. The polar plot, shown in Figure 10.5, is a plot ofM ω<ϕ ω1=ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ω24p < tan 1 ω=2for different ω. 0 –0.05 –0.10 –0.15 –0.20 –0.25∞r/s0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45ReG 10 r/s 9 r/s 8 r/s 7 r/s 6 r/s 5 r/s 4 r/s 3 r/s 2 r/s1 r/s0.9 r/s0.8 r/s0.7 r/s0.6 r/s0.5 r/s0.4 r/s0.3 r/s0.2 r/s0.1 r/s0 r/sGIm Note: r/s = rad/s 0.5ω= ω= FIGURE 10.5 Frequency response plot for G s1= s2: polar plot–6Phase (degrees)0 –90–12 –18 –24 –30 –36 –1011 0 Frequency (rad/s)0.1 100 –20 –30 –40 –50 –60 –70 –80–4220 log M 11 0 Frequency (rad/s)0.1 100FIGURE 10.4 Frequency response plots for G s1= s2: separate magnitude and phase diagrams530 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:15:54 In the previous example, we plotted the separate magnitude and phase responses, as well as the polar plot, using the mathematical expression for the frequency response. Either of these frequency response presentations can also be obtained from the other. You shouldpractice this conversion by looking at Figure 10.4 and obtaining Figure 10.5 usingsuccessive points. For example, at a frequency of 1 rad/s in Figure 10.4, the magnitudeis approximately  7 dB, or 10  7=200:447. The phase plot at 1 rad/s tells us that the phase is about  26 °. Thus on the polar plot, a point of radius 0.447 at an angle of  26 °is plotted and identi ﬁed as 1 rad/s. Continuing in like manner for other frequencies in Figure 10.4, you can obtain Figure 10.5. Similarly, Figure 10.4 can be obtained from Figure 10.5 by selecting a sequence of points in Figure 10.5 and translating them to separate magnitude and phase values. Forexample, drawing a vector from the origin to the point at 2 rad/s in Figure 10.5, we see thatthe magnitude is 20 log 0 :35 9:12 dB and the phase angle is about  45 °. The magnitude and phase angle are then plotted at 2 rad/s in Figure 10.4 on the separate magnitude andphase curves. In this section, we de ﬁned frequency response and saw how to obtain an analytical expression for the frequency response of a system simply by substituting sjωinto G(s). We also saw how to make a plot of G jω. The next section shows how to approximate the magnitude and phase plots in order to sketch them rapidly. 10.2 Asymptotic Approximations: Bode Plots The log-magnitude and phase frequency response curves as functions of log ωare called Bode plots or Bode diagrams. Sketching Bode plots can be simpli ﬁed because they can be approximated as a sequence of straight lines. Straight-line approximations simplify the evaluation of the magnitude and phase frequency response.Skill-Assessment Exercise 10.1 PROBLEM: a.Find analytical expressions for the magnitude and phase responses of G s1 s2 s4 b.Make plots of the log-magnitude and the phase, using log-frequency in rad/s as the ordinate. c.Make a polar plot of the frequency response. ANSWERS: a.M ω1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ﬃ 8 ω22 6ω2q ; for ωﬃﬃﬃ 8p :ϕ ω  arctan6ω 8 ω2/C18/C19 , for ω>ﬃﬃﬃ 8p :ϕ ω  πarctan6ω 8 ω2/C18/C19 /C20/C21 b.See the answer at www.wiley.com/college/nise . c.See the answer at www.wiley.com/college/nise . The complete solution is at www.wiley.com/college/nise .10.2 Asymptotic Approximations: Bode Plots 531WEBC10 10/28/2014 18:15:55 Consider the following transfer function: G sK sz1 sz2∙∙∙ szk sm sp1 sp2∙∙∙ spn(10.13) The magnitude frequency response is the product of the magnitude frequency responses of each term, or jG jωjKj sz1jj sz2j∙∙∙j szkj jsmjj sp1jj sp2j∙∙∙j spnj/C12/C12/C12/C12 s®jω(10.14) Thus, if we know the magnitude response of each pole and zero term, we can ﬁnd the total magnitude response. The process can be simpli ﬁed by working with the logarithm of the magnitude, since the zero terms ’magnitude responses would be added and the pole terms ’magnitude responses subtracted, rather than, respectively, multiplied or divided, to yield the logarithm of the total magnitude response. Converting the magnitude response into dB, we obtain 20 log jG jωj20 log K20 log j sz1j20 log j sz2j ∙∙∙ 20 log jsmj 20 log j sp1j ∙∙∙js®jω(10.15) Thus, if we knew the response of each term, the algebraic sum would yield the totalresponse in dB. Further, if we could make an approximation of each term that would consistonly of straight lines, graphical addition of terms would be greatly simpli ﬁed. Before proceeding, let us look at the phase response. From Eq. (10.13), the phase frequency response is the sum of the phase frequency response curves of the zero terms minus the sumof the phase frequency response curves of the pole terms. Again, since the phase response is the sum of individual terms, straight-line approximations to theseindividual responses simplify graphical addition. Let us now show how to approximate the frequency response of simple pole and zero terms by straight-line approximations. Later we show how to combine these responses tosketch the frequency response of more complicated functions. In subsequent sections, after a discussion of the Nyquist stability criterion, we learn how to use the Bode plots for the analysis and design of stability and transient response. Bode Plots for G(s)=(s+a) Consider a function, G s sa, for which we want to sketch separate logarithmic magnitude and phase response plots. Letting sjω, we have G jω jωaajω a1/C16/C17 (10.16) At low frequencies when ωapproaches zero, G jω≈a (10.17) The magnitude response in dB is 20 log M20 log a (10.18) where MjG jωjand is a constant. Eq. (10.18) is shown plotted in Figure 10.6( a) from ω0:01atoa. At high frequencies where ω a, Eq. (10.16) becomes G jω≈ajω a/C18/C19 aω a/C16/C17 90°ω90° (10.19)532 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:15:56 The magnitude response in dB is 20 log M20 log a20 logω a20 log ω (10.20) where a<ω<∞. Notice from the middle term that the high-frequency approximation is equal to the low-frequency approximation when ωa, and increases for ω>a. If we plot dB, 20 log M, against log ω, Eq. (10.20) becomes a straight line: y20x (10.21) where y20 log M;andxlogω. The line has a slope of 20 when plotted as dB vs. log ω. Since each doubling of frequency causes 20 log ωto increase by 6 dB, the line rises at an equivalent slope of 6 dB/octave, where an octave is a doubling of frequency. This rise begins at ωa, where the low-frequency approximation equals the high-frequency approximation. We call the straight-line approximations asymptotes . The low-frequency approximation is called the low-frequency asymptote , and the high-frequency approximation is called the high-frequency asymptote . The frequency, a, is called the break frequency because it is the break between the low- and the high-frequency asymptotes. Many times it is convenient to draw the line over a decade rather than an octave, where adecade is 10 times the initial frequency. Over one decade, 20 log ωincreases by 20 dB. Thus, a slope of 6 dB/octave is equivalent to a slope of 20 dB/decade. The plot is shown in Figure 10.6( a) from ω0:01ato 100 a. Let us now turn to the phase response, which can be drawn as follows. At the break frequency, a, Eq. (10.16) shows the phase to be 45° . At low frequencies, Eq. (10.17) shows that the phase is 0 °. At high frequencies, Eq. (10.19) shows that the phase is 90 °.T o draw the curve, start one decade 1=10below the break frequency, 0.1 a, with 0 °phase,aa a a a a a 0.01 0.1 10 100a Frequency (rad/s) Frequency (rad/s)90 75 60 45 30 15Phase (degrees) 0(a) (b)Slope = 6 dB/octave Slope = 45°/decade30 + 20 log 24 + 20 log 18 + 20 log 12 + 20 log 6 + 20 log 20 log a aa a 0.01a 0.1 10 100a aaaa 36 + 20 log42 + 20 log20 log M = 20 dB/decade FIGURE 10.6 Bode plots of sa:a.magnitude plot; b.phase plot10.2 Asymptotic Approximations: Bode Plots 533WEBC10 10/28/2014 18:15:58 and draw a line of slope 45°/decade passing through 45° at the break frequency and continuing to 90 °one decade above the break frequency, 10 a. The resulting phase diagram is shown in Figure 10.6( b). It is often convenient to normalize the magnitude and scale the frequency so that the log-magnitude plot will be 0 dB at a break frequency of unity. Normalizing and scaling helps in the following applications: 1.When comparing different ﬁrst- or second-order frequency response plots, each plot will have the same low-frequency asymptote after normalization and the same break frequency after scaling. 2.When sketching the frequency response of a function such as Eq. (10.13), each factor in the numerator and denominator will have the same low-frequency asymptote afternormalization. This common low-frequency asymptote makes it easier to add compo-nents to obtain the Bode plot. To normalize sa,w ef a c t o ro u tt h eq u a n t i t ya and form a s=a1.T h ef r e q u e n c yi s scaled by de ﬁning a new frequency variable, s 1s=a. Then the magnitude is divided by the quantity ato yield 0 dB at the break frequency. Hence, the normalized and scaled function is s11. To obtain the original frequency response, the magnitude and frequency are multiplied by the quantity a. We now use the concepts of normalization and scaling to compare the asymptotic approximation to the actual magnitude and phase plot for sa. Table 10.1 shows the TABLE 10.1 Asymptotic and actual normalized and scaled frequency response data for sa Frequency a20 logM a dBPhase (degrees) (rad/s) Asymptotic Actual Asymptotic Actual 0.01 0 0.00 0.00 0.57 0.02 0 0.00 0.00 1.15 0.04 0 0.01 0.00 2.29 0.06 0 0.02 0.00 3.43 0.08 0 0.03 0.00 4.57 0.1 0 0.04 0.00 5.71 0.2 0 0.17 13.55 11.31 0.4 0 0.64 27.09 21.80 0.6 0 1.34 35.02 30.96 0.8 0 2.15 40.64 38.66 1 0 3.01 45.00 45.00 2 6 6.99 58.55 63.43 4 12 12.30 72.09 75.96 6 15.56 15.68 80.02 80.54 8 18 18.13 85.64 82.87 10 20 20.04 90.00 84.29 20 26.02 26.03 90.00 87.14 40 32.04 32.04 90.00 88.57 60 35.56 35.56 90.00 89.05 80 38.06 38.06 90.00 89.28 100 40 40.00 90.00 89.43534 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:15:59 comparison for the normalized and scaled frequency response of sa. Notice that the actual magnitude curve is never greater than 3.01 dB from the asymptotes. This maximum difference occurs at the break frequency. The maximum difference for the phase curve is5.71 °, which occurs at the decades above and below the break frequency. For convenience, the data in Table 10.1 is plotted in Figures 10.7 and 10.8. We now ﬁnd the Bode plots for other common transfer functions. Actual90 80 70 60 50 40 30 20 10 0 0.01 0.1 1 FrequencyPhase (degrees) (rad/s)a10 100Asymptotic approximation FIGURE 10.8 Asymptotic and actual normalized and scaled phase response of saActual Asymptotic approximation20 18 16 14 12 10 8 6 4 2 00.1 10 120 log(M/a) Frequency(rad/s)a FIGURE 10.7 Asymptotic and actual normalized and scaled magnitude response of sa10.2 Asymptotic Approximations: Bode Plots 535WEBC10 10/28/2014 18:15:59 Bode Plots for G(s)=1/(s+a) Let us ﬁnd the Bode plots for the transfer function G s1 sa1 as a1/C18/C19 (10.22) This function has a low-frequency asymptote of 20 log 1=a, which is found by letting the frequency, s, approach zero. The Bode plot is constant until the break frequency, arad/s, is reached. The plot is then approximated by the high-frequency asymptote found by letting s approach ∞. Thus, at high frequencies G jω1 as a/C18/C19/C12/C12/C12/C12 s®jω1 ajω a/C18/C19 1 a ω a 90°1 ω 90° (10.23) or, in dB, 20 log M20 log1 a 20 logω a 20 log ω (10.24) Notice from the middle term that the high-frequency approximation equals the low- frequency approximation when ωa, and decreases for ω>a. This result is similar to Eq. (10.20), except the slope is negative rather than positive. The Bode log-magnitudediagram will decrease at a rate of 20 dB/decade rather than increase at a rate of 20 dB/decadeafter the break frequency. The phase plot is the negative of the previous example, since the function is the inverse. The phase begins at 0 °and reaches  90°at high frequencies, going through  45°at the break frequency. Both the Bode normalized and scaled log-magnitude and phase plotare shown in Figure 10.9( d). Bode Plots for G(s)=s Our next function, G ss, has only a high-frequency asymptote. Letting sjω,t h e magnitude is 20 log ω, which is the same as Eq. (10.20). Hence, the Bode magnitude plot is a straight line drawn with a 20 dB =decade slope passing through zero dB when ω1. The phase plot, which is a constant 90 °, is shown with the magnitude plot in Figure 10.9( a). FIGURE 10.9 Normalized and scaled Bode plots for a.G ss; b.G s1=s; (ﬁgure continues )02040 –20 –4020 log M 0.01 0.1 1 10 100+6 dB/octave = +20 dB/decade–6 dB/octave = –20 dB/decadePhase (degrees)Frequency (rad/s) 0.01 0.1 1 10 100 Frequency (rad/s)04590 –45 –9002040 –20 –4020 log M 0.01 0.1 1 10 100Phase (degrees)Frequency (rad/s) 0.01 0.1 1 10 100 Frequency (rad/s)04590 –45 –90 (a) (b)G (s) = s G (s) =1sG (s) =1s G (s) = s536 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:1 Bode Plots for G(s)=1/s The frequency response of the inverse of the preceding function, G s1=s, is shown in Figure 10.9(b ) and is a straight line with a  20 dB =decade slope passing through zero dB at ω1. The Bode phase plot is equal to a constant  90 °. We have covered four functions that have ﬁrst-order polynomials in sin the numerator or denominator. Before proceeding to second-order polynomials, let us look at an example of drawing the Bode plots for a function that consists of the product of ﬁrst-order polynomials in the numerator and denominator. The plots will be made by adding together the individual frequency response curves.02040 –20 –4020 log(M/a) 0.01 0.1 1 10 100+6 dB/octave = +20 dB/decadePhase (degrees) 0.01 0.1 1 10 10004590 –45 –9002040 –20–40 0.01 0.1 1 10 100Phase (degrees) 0.01 0.1 1 10 10004590 –45 –90–6 dB/octave = –20 dB/decade +45°/decade –45°/decade (c) (d)20 logMa aFrequency(rad/s)aFrequency(rad/s) aFrequency(rad/s)aFrequency(rad/s)G (s) = (s + a) G (s) = (s + a )G (s) =1 (s+a)G (s) =1 (s+a) FIGURE 10.9 (Continued ) c.G s sa; d.G s1= sa Example 10.2 Bode Plots for Ratio of First-Order FactorsBode Plots for Ratio of First-Order Factors PROBLEM: Draw the Bode plots for the system shown in Figure 10.10, where G sK s3=s s1 s2. SOLUTION: We will make a Bode plot for the open-loop function G sK s3=s s1 s2. The Bode plot is the sum of the Bode plots for each ﬁrst-order term. Thus, it is convenient to use the normalized plot for each of these terms so that the low-frequency asymptote of each term, except the pole at the origin, is at 0 dB, making it easier to add the components of the Bode plot. We rewrite G(s) showing each term normalized to a low-frequency gain of unity. Hence, G s3 2Ks 31/C18/C19 s s1s 21/C18/C19 (10.25) Now determine that the break frequencies are at 1, 2, and 3. The magnitude plot should begin a decade below the lowest break frequency and extend a decade above the highestR(s) –E(s)G(s)C(s) + FIGURE 10.10 Closed-loop unity feedback system10.2 Asymptotic Approximations: Bode Plots 537WEBC10 10/28/2014 18:16:2 break frequency. Hence, we choose 0.1 radian to 100 radians, or three decades, as the extent of our plot. Atω0:1 the low-frequency value of the function is found from Eq. (10.25) using the low-frequency values for all of the  s=a1terms (that is, s0) and the actual value for the sterm in the denominator. Thus, G j0:1≈3 2K=0:115K. The effect of K is to move the magnitude curve up (increasing K) or down (decreasing K) by the amount of 20 log K.Khas no effect upon the phase curve. If we choose K1, the magnitude plot can be denormalized later for any value of Kthat is calculated or known. Figure 10.11( a) shows each component of the Bode log-magnitude frequency response. Summing the components yields the composite plot shown in Figure 10.11( b). The results are summarized in Table 10.2, which can be used to obtain the slopes. Each40 20 –20 –40 –60 –80 0.1 1 10 10040 20 0 –20 –40 –60 –80 00.1 1 10 100 Frequency (rad/s) Frequency (rad/s)(a) (b)20 dB/dec (6 dB/oct) –20 dB/dec (–6 dB/oct) – 40 dB/dec (–12dB/oct)20 log M 20 log M(s + 1)1 –20 dB/dec ( –6 dB/oct) –60 dB/dec (–18 dB/oct)–40 dB/dec (–12 dB/oct)1 s + 122s3 s + 13 FIGURE 10.11 Bode log-magnitude plot for Example 10.2: a.components; b.composite TABLE 10.2 Bode magnitude plot: slope contribution from each pole and zero in Example 10.2 Frequency (rad/s) Description0.1 (Start: Pole at 0)1 (Start: Pole at  1)2 (Start: Pole at  2)3 (Start: Zero at  3) Pole at 0  20  20  20  20 Pole at  10  20  20  20 Pole at  20 0  20  20 Zero at  30 0 0 2 0 Total slope (dB/dec)  20  40  60  40538 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:3 pole and zero is itemized in the ﬁrst column. Reading across the table shows its contribution at each frequency. The last row is the sum of the slopes and correlates with Figure 10.11( b). The Bode magnitude plot for K1 starts at ω0:1 with a value of 20 log 15 23:52 dB, and decreases immediately at a rate of  20 dB =decade, due to the sterm in the denominator. At ω1, the s1term in the denominator begins its 20 dB= decade downward slope and causes an additional 20 dB =decade negative slope, or a total of  40 dB =decade. At ω2, the term  s=21begins its  20 dB= decade slope, adding yet another  20 dB= decade to the resultant plot, or a total of  60 dB =decade slope that continues until ω3. At this frequency, the  s=31term in the numerator begins its positive 20 dB =decade slope. The resultant magnitude plot, therefore, changes from a slope of  60 dB= decade to  40 dB =decade at ω3, and continues at that slope, since there are no other break frequencies. The slopes are easily drawn by sketching straight-line segme nts decreasing by 20 dB over a decade. For example, the initial  20 dB =decade slope is drawn from 23 .52 dB at ω0:1, to 3.52 dB (a 20 dB decrease) at ω1. The  40 dB =decade slope starting at ω1 is drawn by sketching a line segment from 3.52 dB at ω1, to  3 6 . 4 8d B( a4 0d Bd e c r e a s e )a tω 10, and using only the portion from ω1t o ω2. The next slope of  60 dB =decade is drawn by ﬁrst sketching a line segment from ω2t o ω20 (1 decade) that drops down by 60 dB, and using only that portion of the line from ω2t oω3. The ﬁnal slope is drawn by sketching a line segment from ω3t oω30 (1 decade) that drops by 40 dB. This slope continues to the end of the plot. Phase is handled similarly. However, the existence of breaks, a decade below and a decade above the break frequency, requires a little more bookkeeping. Table 10.3 showsthe starting and stopping frequencies of the 45 °=decade slope for each of the poles and zeros. For example, reading across for the pole at  2, we see that the  45°slope starts at a frequency of 0.2 and ends at 20. Filling in the rows for each pole and then summing the columns yields the slope portrait of the resulting phase plot. Looking at the row marked Total slope , we see that the phase plot will have a slope of  45°=decade from a frequency of 0.1 to 0.2. The slope will then increase to  90 °=decade from 0.2 to 0.3. The slope will return to  45°=decade from 0.3 to 10 rad/s. A slope of 0 ensues from 10 to 20 rad/s, followed by a slope of 45 °=decade from 20 to 30 rad/s. Finally, from 30 rad/s to inﬁ nity, the slope is 0 °=decade. The resulting component and composite phase plots are shown in Figure 10.12. Since the pole at the origin yields a constant  90 °phase shift, the plot begins at  90 °and follows the slope portrait just described. TABLE 10.3 Bode phase plot: slope contribution from each pole and zero in Example 10.2 Frequency (rad/s) Description0.1 (Start: Pole at  1)0.2 (Start: Pole at  2)0.3 (Start: Pole at  3)0 (End: Pole at  1)20 (End: Pole at  2)30 (End: Zero at  3) Pole at  1  45  45  45 0 Pole at  2  45  45  45 0 Zero at  34 5 45 45 0 Total slope (deg/dec)  45  90  45 0 45 010.2 Asymptotic Approximations: Bode Plots 539WEBC10 10/28/2014 18:16:4 Bode Plots for G(s)=s2+2ζωns+ωn2 Now that we have covered Bode plots for ﬁrst-order systems, we turn to the Bode log-magnitude and phase plots for second-order polynomials in s. The second-order polynomial is of the form G ss22ζωnsω2 nω2ns2 ω2 n2ζs ωn1/C18/C19 (10.26) Unlike the ﬁrst-order frequency response approximation, the difference between the asymptotic approximation and the actual frequency response can be great for some values ofζ. A correction to the Bode diagrams can be made to improve the accuracy. We ﬁrst derive the asymptotic approximation and then show the difference between the asymptoticapproximation and the actual frequency response curves. At low frequencies, Eq. (10.26) becomes G s≈ω 2 nω2n0° (10.27) The magnitude, M, in dB at low frequencies therefore is 20 log M20 log jG jωj20 log ω2 n (10.28) At high frequencies, G s≈s2(10.29) or G jω≈ ω2ω2180 ° (10.30) The log-magnitude is 20 log M20 log jG jωj20 log ω240 log ω (10.31)(b)(a)–180Phase (degrees) 0.1 1 10 100 Frequency (rad/s)45°/dec –45°/dec –315Phase (degrees) 0.1 1 10 100 Frequency (rad/s)–135–90–4504590 3s –270–225–180–135–90–45°/dec 45°/dec–90°/dec–45°/dec –360+1 3 2s –45°/dec1 ( + 1)s1 +12s FIGURE 10.12 Bode phase plot for Example 10.2: a.components; b.composite540 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:4 Equation (10.31) is a straight line with twice the slope of a ﬁrst-order term (Eq. (10.20)). Its slope is 12 dB/octave, or 40 dB/decade. The low-frequency asymptote (Eq. (10.27)) and the high-frequency asymptote (Eq. (10.31)) are equal when ωωn. Thus, ωnis the break frequency for the second- order polynomial. For convenience in representing systems with different ωn, we normalize and scale ourﬁndings before drawing the asymptotes. Using the normalized and scaled term of Eq. (10.26), we normalize the magnitude, dividing by ω2 n, and scale the frequency, dividing byωn. Thus, we plot G s1=ω2ns212ζs11, where s1s=ωn.G s1has a low-frequency asymptote at 0 dB and a break frequency of 1 rad/s. Figure 10.13( a) shows the asymptotes for the normalized and scaled magnitude plot. We now draw the phase plot. It is 0 °at low frequencies (Eq. (10.27)) and 180 ° at high frequencies (Eq. (10.30)). To ﬁnd the phase at the natural frequency, ﬁrst evaluate G jω: G jω s22ζωnsω2 njs®jω ω2n ω2j2ζωnω (10.32) Then ﬁnd the function value at the natural frequency by substituting ωωn. Since the result is j2ζω2 n, the phase at the natural frequency is 90 °. Figure 10.13( b) shows the phase plotted with frequency scaled by ωn. The phase plot increases at a rate of 90°=decade from 0.1 to 10 and passes through 90 °at 1. Corrections to Second-Order Bode Plots Let us now examine the error between the actual response and the asymptotic approximation of the second-order polynomial. Whereas the ﬁrst-order polynomial has a disparity of no more than 3.01 dB magnitude and 5.71 °phase, the second-order function may have a greater disparity, which depends upon the value of ζ.–12020 log (M )ω2 (a) –45Phase (degrees) (b)–80–4004080120 04590135180 –900.01 0.1 1 10 100 0.01 0.1 1 10 100Slope = 12 dB/octave = 40 dB/decade Slope = 90°/decadenn ωω nωωFIGURE 10.13 Bode asymptotes for normalized and scaled G ss22ζω nsω2 n: a.magnitude; b.phase10.2 Asymptotic Approximations: Bode Plots 541WEBC10 10/28/2014 18:16:12 From Eq. (10.32), the actual magnitude and phase for G ss22ζωnsω2 nare, respectively, Mﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ω2 n ω22 2ζωnω2q (10.33) Phase tan 12ζωnω ω2 n ω2(10.34) These relationships are tabulated in Table 10.4 for a range of values of ζa n dp l o t t e di n Figures 10.14 and 10.15 along with the asymptotic approximations for normalized TABLE 10.4 Data for normalized and scaled log-magnitude and phase plots for s22ζωnsω2 n. Mag 20 log M=ω2n Freq. ω ωnMag (dB) ζ0:1Phase (deg) ζ0:1Mag (dB) ζ0:2Phase (deg) ζ0:2Mag (dB) ζ0:3Phase (deg) ζ0:3 0.10  0.09 1.16  0.08 2.31  0.07 3.47 0.20  0.35 2.39  0.32 4.76  0.29 7.13 0.30  0.80 3.77  0.74 7.51  0.65 11.19 0.40  1.48 5.44  1.36 10.78  1.17 15.95 0.50  2.42 7.59  2.20 14.93  1.85 21.80 0.60  3.73 10.62  3.30 20.56  2.68 29.36 0.70  5.53 15.35  4.70 28.77  3.60 39.47 0.80  8.09 23.96  6.35 41.63  4.44 53.13 0.90  11.64 43.45  7.81 62.18  4.85 70.62 1.00  13.98 90.00  7.96 90.00  4.44 90.00 1.10  10.34 133.67  6.24 115.51  3.19 107.65 1.20  6.00 151.39  3.73 132.51  1.48 121.43 1.30  2.65 159.35  1.27 143.00 0.35 131.50 1.40 0.00 163.74 0.92 149.74 2.11 138.81 1.50 2.18 166.50 2.84 154.36 3.75 144.25 1.60 4.04 168.41 4.54 157.69 5.26 148.39 1.70 5.67 169.80 6.06 160.21 6.64 151.65 1.80 7.12 170.87 7.43 162.18 7.91 154.26 1.90 8.42 171.72 8.69 163.77 9.09 156.41 2.00 9.62 172.41 9.84 165.07 10.19 158.20 3.00 18.09 175.71 18.16 171.47 18.28 167.32 4.00 23.53 176.95 23.57 173.91 23.63 170.91 5.00 27.61 177.61 27.63 175.24 27.67 172.87 6.00 30.89 178.04 30.90 176.08 30.93 174.13 7.00 33.63 178.33 33.64 176.66 33.66 175.00 8.00 35.99 178.55 36.00 177.09 36.01 175.64 9.00 38.06 178.71 38.07 177.42 38.08 176.14 10.00 39.91 178.84 39.92 177.69 39.93 176.53 (table continues )542 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:15 magnitude and scaled frequency. In Figure 10.14, which is normalized to the square of the natural frequency, the normalized log-magnitude at the scaled natural frequencyis20 log 2 ζ. The student should verify that the actual magnitude at the unscaled natural frequency is 20 log 2 ζω 2 n. Table 10.4 and Figures 10.14 and 10.15 can be used to improve accuracy when drawing Bode plots. For example, a magnitude correction of 20 log 2 ζcan be made at the natural, or break, frequency on the Bode asymptotic plot. Bode Plots for G(s)=1/(s2+2ζωns+ωn2) Bode plots for G s1= s22ζωnsω2 ncan be derived similarly to those for G ss22ζωnsω2n.W eﬁnd that the magnitude curve breaks at the natural frequencyFreq. ω ωnMag (dB) ζ0:5Phase (deg) ζ0:5Mag (dB) ζ0:7Phase (deg) ζ0:7Mag (dB) ζ1:0Phase (deg) ζ1:0 0.10  0.04 5.77 0.00 8.05 0.09 11.42 0.20  0.17 11.77 0.00 16.26 0.34 22.62 0.30  0.37 18.25 0.02 24.78 0.75 33.40 0.40  0.63 25.46 0.08 33.69 1.29 43.60 0.50  0.90 33.69 0.22 43.03 1.94 53.13 0.60  1.14 43.15 0.47 52.70 2.67 61.93 0.70  1.25 53.92 0.87 62.51 3.46 69.98 0.80  1.14 65.77 1.41 72.18 4.30 77.32 0.90  0.73 78.08 2.11 81.42 5.15 83.97 1.00 0.00 90.00 2.92 90.00 6.02 90.00 1.10 0.98 100.81 3.83 97.77 6.89 95.45 1.20 2.13 110.14 4.79 104.68 7.75 100.39 1.30 3.36 117.96 5.78 110.76 8.60 104.86 1.40 4.60 124.44 6.78 116.10 9.43 108.92 1.50 5.81 129.81 7.76 120.76 10.24 112.62 1.60 6.98 134.27 8.72 124.85 11.03 115.99 1.70 8.10 138.03 9.66 128.45 11.80 119.07 1.80 9.17 141.22 10.56 131.63 12.55 121.89 1.90 10.18 143.95 11.43 134.46 13.27 124.48 2.00 11.14 146.31 12.26 136.97 13.98 126.87 3.00 18.63 159.44 19.12 152.30 20.00 143.13 4.00 23.82 165.07 24.09 159.53 24.61 151.93 5.00 27.79 168.23 27.96 163.74 28.30 157.38 6.00 31.01 170.27 31.12 166.50 31.36 161.08 7.00 33.72 171.70 33.80 168.46 33.98 163.74 8.00 36.06 172.76 36.12 169.92 36.26 165.75 9.00 38.12 173.58 38.17 171.05 38.28 167.32 10.00 39.96 174.23 40.00 171.95 40.09 168.58TABLE 10.4 Data for normalized and scaled log-magnitude and phase plots for s22ζωnsω2 n. Mag 20 log M=ω2n (Continued )10.2 Asymptotic Approximations: Bode Plots 543WEBC10 10/28/2014 18:16:15 and decreases at a rate of  40 dB =decade. The phase plot is 0 °at low frequencies. At 0 :1ωn it begins a decrease of  90 °=decade and continues until ω10ωn, where it levels off at 180 °. The exact frequency response also follows the same derivation as that of G ss22ζωnsω2 n. The results are summarized in Table 10.5, as well as Figures 10.16 and 10.17. The exact magnitude is the reciprocal of Eq. (10.33), and the exact phase is the negative of Eq. (10.34). The normalized magnitude at the scaled natural frequencyis 20 log 2ζ , which can be used as a correction at the break frequency on the Bode asymptotic plot. Phase (degrees) 0.1 10Asymptote 10204060801001201401601800.5 1.0 1.50.2 0.3 0.7𝜁 = 0.1 nωω FIGURE 10.15 Scaled phase response for s22ζω nsω2 n0.1 1 n10–20–1001020304050𝜁 = 1.5 1.0High-frequency asymptote 0.5 𝜁 = 0.3Low-frequency asymptote 0.2 0.10.7 ωω20 log (M/ω2)n FIGURE 10.14 Normalized and scaled log-magnitude response for s22ζωnsω2 n544 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:23 TABLE 10.5 Data for normalized and scaled log-magnitude and phase plots for 1 = s22ζω nsω2 n. Mag 20 log M=ω2n Freq. ω ωnMag (dB) ζ0:1Phase (deg) ζ0:1Mag (dB) ζ0:2Phase (deg) ζ0:2Mag (dB) ζ0:3Phase (deg) ζ0:3 0.10 0.09  1.16 0.08  2.31 0.07  3.47 0.20 0.35  2.39 0.32  4.76 0.29  7.13 0.30 0.80  3.77 0.74  7.51 0.65  11.19 0.40 1.48  5.44 1.36  10.78 1.17  15.95 0.50 2.42  7.59 2.20  14.93 1.85  21.80 0.60 3.73  10.62 3.30  20.56 2.68  29.36 0.70 5.53  15.35 4.70  28.77 3.60  39.47 0.80 8.09  23.96 6.35  41.63 4.44  53.13 0.90 11.64  43.45 7.81  62.18 4.85  70.62 1.00 13.98  90.00 7.96  90.00 4.44   90.00 1.10 10.34  133.67 6.24  115.51 3.19  107.65 1.20 6.00  151.39 3.73  132.51 1.48  121.43 1.30 2.65  159.35 1.27  143.00  0.35  131.50 1.40 0.00  163.74  0.92  149.74  2.11  138.81 1.50  2.18  166.50  2.84  154.36  3.75  144.25 1.60  4.04  168.41  4.54  157.69  5.26  148.39 1.70  5.67  169.80  6.06  160.21  6.64  151.65 1.80  7.12  170.87  7.43  162.18  7.91  154.26 1.90  8.42  171.72  8.69  163.77  9.09  156.41 2.00  9.62  172.41  9.84  165.07  10.19  158.20 3.00  18.09  175.71  18.16  171.47  18.28  167.32 4.00  23.53  176.95  23.57  173.91  23.63  170.91 5.00  27.61  177.61  27.63  175.24  27.67  172.87 6.00  30.89  178.04  30.90  176.08  30.93  174.13 7.00  33.63  178.33  33.64  176.66  33.66  175.00 8.00  35.99  178.55  36.00  177.09  36.01  175.64 9.00  38.06  178.71  38.07  177.42  38.08  176.14 10.00  39.91  178.84  39.92  177.69  39.93  176.53 (table continues )10.2 Asymptotic Approximations: Bode Plots 545WEBC10 10/28/2014 18:16:26 Freq. ω ωnMag (dB) ζ0:5Phase (deg) ζ0:5Mag (dB) ζ0:7Phase (deg) ζ0:7Mag (dB) ζ1:0Phase (deg) ζ1:0 0.10 0.04  5.77 0.00  8.05  0.09  11.42 0.20 0.17  11.77 0.00  16.26  0.34  22.62 0.30 0.37  18.25  0.02  24.78  0.75  33.40 0.40 0.63  25.46  0.08  33.69  1.29  43.60 0.50 0.90  33.69  0.22  43.03  1.94  53.13 0.60 1.14  43.15  0.47  52.70  2.67  61.93 0.70 1.25  53.92  0.87  62.51  3.46  69.98 0.80 1.14   65.77  1.41  72.18  4.30  77.32 0.90 0.73  78.08  2.11  81.42  5.15  83.97 1.00 0.00  90.00  2.92  90.00  6.02  90.00 1.10  0.98  100.81  3.93  97.77  6.89  95.45 1.20  2.13  110.14  4.79  104.68  7.75  100.39 1.30  3.36  117.96  5.78  110.76  8.60  104.86 1.40  4.60  124.44  6.78  116.10  9.43  108.92 1.50  5.81  129.81  7.76  120.76  10.24  112.62 1.60  6.98  134.27  8.72  124.85  11.03  115.99 1.70  8.10  138.03  9.66  128.45  11.80  119.07 1.80  9.17  141.22  10.56  131.63  12.55  121.89 1.90  10.18  143.95  11.43  134.46  13.27  124.48 2.00  11.14  146.31  12.26  136.97  13.98  126.87 3.00  18.63  159.44  19.12  152.30  20.00  143.13 4.00  23.82  165.07  24.09  159.53  24.61  151.93 5.00  27.79  168.23  27.96  163.74  28.30  157.38 6.00  31.01  170.27  31.12  166.50  31.36  161.08 7.00  33.72  171.70  33.80  168.46  33.98  163.74 8.00  36.06  172.76  36.12  169.92  36.26  165.75 9.00  38.12  173.58  38.17  171.05  38.28  167.32 10.00  39.96  174.23  40.00  171.95  40.09  168.58TABLE 10.5 Data for normalized and scaled log-magnitude and phase plots for 1 = s22ζω nsω2 n. Mag 20 log M=ω2n (Continued )546 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:26 Let us now look at an example of drawing Bode plots for transfer functions that contain second-order factors.0.1 10–50–40–30–20–1001020 High-frequency asymptoteLow-frequency asymptote𝜁 = 0.1 1.51.00.7 0.30.2 𝜁 = 0.5 n120 log (M/ω2)n FIGURE 10.16 Normalized and scaled log-magnitude response for 1= s22ζωnsω2 nPhase (degrees) 0.1 100.5𝜁 = 0.1 1.00.2 Asymptote0.3 0.7 1–180–160–140–120–100–80–60–40–2001.5 n FIGURE 10.17 Scaled phase response for 1 = s22ζω nsω2 n Example 10.3 Bode Plots for Ratio of First- and Second-Order FactorsBode Plots for Ratio of First- and Second-Order Factors PROBLEM: Draw the Bode log-magnitude and phase plots of G(s) for the unity feedback system shown in Figure 10.10, where G s s3= s2 s22s25.10.2 Asymptotic Approximations: Bode Plots 547WEBC10 10/28/2014 18:16:28 SOLUTION: Weﬁrst convert G(s) to show the normalized components that have unity low-frequency gain. The second-order term is normalized by factoring out ω2 n, forming s2 ω2 n2ζ ωns1 (10.35) Thus, G s3 2 25s 31/C16/C17 s 21/C16/C17s2 252 25s1/C18/C19 3 50s 31/C16/C17 s 21/C16/C17s2 252 25s1/C18/C19 (10.36) The Bode log-magnitude diagram is shown in Figure 10.18( b) and is the sum of the individual ﬁrst- and second-order terms of G(s) shown in Figure 10.18( a). We solve this problem by adding the slopes of these component parts, beginning and ending at the appropriate frequencies. The results are summarized in Table 10.6, which can be used to(b)(a)–5020 log M 0.01 100 Frequency (rad/s)20 log M 0.01 Frequency (rad/s)0.1 1 10 –703 50–20 dB/dec20 dB/dec –40–30–20–10010 –60–50–40–30–20–10 100 0.1 1 10–20 dB/decCorrection –40 dB/dec–40 dB/dec 1+ 1 s 2 + s 3 1 1 s2 + 2 s +125 25 FIGURE 10.18 Bode magnitude plot for G s s3=  s2 s22s25: a.components; b.composite TABLE 10.6 Magnitude diagram slopes for Example 10.3 Frequency (rad/s) Description0.01 (Start: Plot)2 (Start: Pole at  2)3 (Start: Zero at  3)5 (Start: ωn5) Pole at  20  20  20  20 Zero at  30 0 2 0 2 0 ωn50 0 0  40 Total slope (dB/dec) 0  20 0  40548 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:29 obtain the slopes. The low-frequency value for G(s), found by letting s0, is 3/50, or  24.44 dB. The Bode magnitude plot starts out at this value and continues until the ﬁrst break frequency at 2 rad/s. Here the pole at  2 yields a  20 dB =decade slope downward until the next break at 3 rad/s. The zero at  3 causes an upward slope of 20 dB =decade, which, when added to the previous  20 dB =decade curve, gives a net slope of 0. At a frequency of 5 rad/s, the second-order term initiates a  40 dB =decade downward slope, which continues to in ﬁnity. The correction to the log-magnitude curve due to the underdamped second-order term can be found by plotting a point  20 log 2 ζabove the asymptotes at the natural frequency. Since ζ0:2 for the second-order term in the denominator of G(s), the correction is 7.96 dB. Points close to the natural frequency can be corrected by taking the values from the curves of Figure 10.16. TABLE 10.7 Phase diagram slopes for Example 10.3 Frequency (rad/s) Description0.2 (Start: Pole at  2)0.3 (Start: Zero at  3)0.5 (Start: ωnat 5)20 (End: Pole at  2)30 (End: Zero at  3)50 (End: ωn5) Pole at  2  45  45  45 0 Zero at  34 5 45 45 0 ωn5  90  90  90 0 Total slope (dB/dec)  45 0  90  45  90 0 –90°/dec–45°/decPhase (degrees)90 45 0 –45 –90 –135 –180 –225 0.01 0.1 1 10 100 Frequency (rad/s) 0 –45 –90 –135 –180 –225 –270 –315(a) (b)Phase (degrees) 0.01 0.1 1 10 100 Frequency (rad/s)–45°/dec3 50 –45°/dec –90°/dec11+ 1 s2 + 2 s +125 251+ 2s –90°/dec45°/decs 3 FIGURE 10.19 Bode phase plot for G s s3=  s2 s22s25: a.components; b.composite10.2 Asymptotic Approximations: Bode Plots 549WEBC10 10/28/2014 18:16:29 In this section, we learned how to construct Bode log-magnitude and Bode phase plots. The Bode plots are separate magnitude and phase frequency response curves for a system, G(s). In the next section, we develop the Nyquist criterion for stability, which makes use of the frequency response of a system. The Bode plots can then be used to determine the stability of a system. 10.3 Introduction to the Nyquist Criterion The Nyquist criterion relates the stability of a closed-loop system to the open-loopfrequency response and open-loop pole location. Thus, knowledge of the open-loop system ’s frequency response yields information about the stability of the closed-loop system. Thisconcept is similar to the root locus, where we began with information about the open-loopsystem, its poles and zeros, and developed transient and stability information about theclosed-loop system. Although the Nyquist criterion will yield stability information at ﬁrst, we will extend the concept to transient response and steady-state errors. Thus, frequency response techniques are an alternate approach to the root locus.We now turn to the phase plot. Table 10.7 is formed to determine the progression of slopes on the phase diagram. The ﬁrst-order pole at  2 yields a phase angle that starts at 0 ° and ends at  90 °via a  45 °=decade slope starting a decade below its break frequency and ending a decade above its break frequency. The ﬁrst-order zero yields a phase angle that starts at 0 °and ends at 90 °via a 45 °=decade slope starting a decade below its break frequency and ending a decade above its break frequency. The second-order poles yield a phase angle that starts at 0 °and ends at  180 °via a  90°=decade slope starting a decade below their natural frequency ωn5and ending a decade above their natural frequency. The slopes, shown in Figure 10.19( a), are summed over each frequency range, and the ﬁnal Bode phase plot is shown in Figure 10.19( b). Students who are using MATLAB should now run ch10p1 in Appendix B.You will learn how to use MATLAB to make Bode plots and list thepoints on the plots. This exercise solves Example 10.3 usingMATLAB. Skill-Assessment Exercise 10.2 PROBLEM: Draw the Bode log-magnitude and phase plots for the system shown in Figure 10.10, where G s s20 s1 s7 s50 ANSWER: The complete solution is at www.wiley.com/college/nise .TryIt 10.1 Use MATLAB, the Control System Toolbox, and the following statements to obtain the Bode plots for the system ofSkill-Assessment Exercise 10.2 G=zpk( [  20] , [  1, 7 , ...  50] , 1) bode (G) ; grid on After the Bode plots appear, click on the curve and drag to read the coordinates.550 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:30 Derivation of the Nyquist Criterion Consider the system of Figure 10.20. The Nyquist criterion can tell us how many closed- loop poles are in the right half-plane. Before deriving the criterion, let us establish four important concepts that will be used during the derivation: (1) the relationshipbetween the poles of 1 G sH sand the poles of G(s)H(s); (2) the relationship between the zeros of 1 G sH sand the poles of the closed-loop transfer function, T(s); (3) the concept of mapping points; and (4) the concept of mapping contours. Letting G sNG DG(10.37a) H sNH DH(10.37b) weﬁnd G sH sNGNH DGDH(10.38a) 1G sH s1NGNH DGDHDGDHNGNH DGDH(10.38b) T sG s 1G sH sNGDH DGDHNGNH(10.38c) From Eqs. (10.38), we conclude that (1) the poles of 1G sH sare the same as the poles of G(s)H(s), the open-loop system, and (2)the zeros of 1G sH sare the same as the poles of T( s), the closed-loop system . Next, let us de ﬁne the term mapping . If we take a complex number on the s-plane and substitute it into a function, F(s), another complex number results. This process is called mapping . For example, substituting s4j3 into the function s22s1yields 16j30. We say that 4 j3 maps into 16 j30 through the function s22s1. Finally, we discuss the concept of mapping contours . Consider the collection of points, called a contour , shown in Figure 10.21 as contour A. Also, assume that F s s z1 s z2... s p1 s p2...(10.39) Contour Acan be mapped through F(s) into contour Bby substituting each point of contour Ainto the function F(s) and plotting the resulting complex numbers. For example, point Q in Figure 10.21 maps into point Q´through the function F(s). The vector approach to performing the calculation, covered in Section 8.1, can be used as an alternative. Some examples of contour mapping are shown in Figure 10.22for some simple F(s). The mapping of each point is de ﬁned by complex arithmetic, where the resulting complex number, R, is evaluated from the complex numbersR(s) + –G(s) H(s)C(s) FIGURE 10.20 Closed-loop control system jω F(s) ImContour A ReContour Bs-plane F-plane Q'Q σ FIGURE 10.21 Mapping contour Athrough function F(s) to contour B10.3 Introduction to the Nyquist Criterion 551WEBC10 10/28/2014 18:16:30 represented by V, as shown in the last column of Figure 10.22. You should verify that if we assume a clockwise direction for mapping the points on contour A, then contour B maps in a clockwise direction if F(s) in Figure 10.22 has just zeros or has just poles that are not encircled by the contour. The contour Bmaps in a counterclockwise direction if F(s) has just poles that are encircled by the contour. Also, you should verify that if the pole or zero of F(s) is enclosed by contour A, the mapping encircles the origin. In the last case of Figure 10.22, the pole and zero rotation cancel, and the mapping does not encircle the origin. Let us now begin the derivation of the Nyquist criterion for stability. We show that a unique relationship exists between the number of poles of F(s) contained inside contour A, the number of zeros of F(s) contained inside contour A, and the number of counterclockwiseVjω z1s F(s) = (s – z1) ImContour A Re R = VContour B RF-plane (a) Vjω p1s-plane F(s) =ImContour A Re R =V Contour BRF-plane (b)1 (s – p1)1 Vjω z1s-planeIm Contour A Re R = VContour B RF-plane (c) Vjω p1 F(s) =Im Contour A Re R =VContour B (d)1 1 R V1jω p1s-planeIm Contour A Re R =Contour BF-plane (e)R z1(s – z1) V2-plane F(s) = (s – z 1) s-plane (s – p1)F-plane F(s) =(s – p1)V2 V1σσσσσ FIGURE 10.22 Examples of contour mapping552 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:31 encirclements of the origin for the mapping of contour B. We then show how this interrelationship can be used to determine the stability of closed-loop systems. This method of determining stability is called the Nyquist criterion. Let us ﬁrst assume that F s1G sH s, with the picture of the poles and zeros of 1G sH sas shown in Figure 10.23 near contour A. Hence, R V1V2= V3V4V5.A s each point Qof the contour Ais substituted into 1 G sH s, a mapped point results on contour B. Assuming that F s1G sH shas two zeros and three poles, each parenthetical term of Eq. (10.39) is a vector in Figure 10.23. As we move around contour Ain a clockwise direction, each vector of Eq. (10.39) that lies inside contour Awill appear to undergo a complete rotation, or a change in angle of 360 °. On the other hand, each vector drawn from the poles and zeros of 1 G sH sthat exists outside contour Awill appear to oscillate and return to its previous position, undergoing a net angular change of 0 °. Each pole or zero factor of 1 G sH swhose vector undergoes a complete rotation around contour Amust yield a change of 360 °in the resultant, R, or a complete rotation of the mapping of contour B. If we move in a clockwise direction along contour A, each zero inside contour Ayields a rotation in the clockwise direction, while each pole inside contour Ayields a rotation in the counterclockwise direction, since poles are in the denominator of Eq. (10.39). Thus, NP Z, where Nequals the number of counterclockwise rotations of contour Babout the origin; Pequals the number of poles of 1 G sH sinside co ntour A, and Zequals the number of zeros of 1 G sH sinside contour A. Since the poles shown in Figure 10.23 are poles of 1 G sH s, we know from Eqs. (10.38) that they are also the poles of G(s)H(s) and are known. But, since the zeros shown in Figure 10.23 are the zeros of 1G sH s, we know from Eqs. (10.38) that they are also the poles of the closed-loop system and are not known . Thus, Pequals the number of enclosed open-loop poles, and Zequals the number of enclosed closed-loop poles. Hence, NP Z, or alternately, ZP N, tells us that the number of closed-loop poles inside the contour (which is the same as the zeros inside the contour) equals the number of open-loop poles of G(s)H(s) inside the contour minus the number of counterclockwise rotations of the mapping about the origin. If we extend the contour to include the entire right half-plane, as shown in Figure 10.24, we can count the number of right-half-plane closed-loop poles inside contour Aand determine a system ’s stability. Since we can count the number of open-loop poles, P, inside the contour, which are the same as the right-half-plane poles of G(s)H(s),the only probl em remaining is how to obtain the mapping and ﬁnd N. Since all of the poles and zeros of G(s)H(s) are known, what if we map through G(s)H(s) instead of 1 G sH s? The resulting contour is the same as a mapping through 1 G sH s, except that it is translated one unit to the left. Thus, we count rotations about  1 instead of rotations about the origin. Hence, the ﬁnal statement of the Nyquist stability criterion is as follows: If a contour, A, that encircles the entire right half-plane is mapped through G(s)H(s), then the number of closed-loop poles, Z, in the right half-plane equalss-planeAjω σ FIGURE 10.24 Contour enclosing right half-plane to determine stabilityF(s) = 1 + G(s)H(s)V2V3V4Q V1jω s-plane Contour A1 + GH-plane Contour BV1RIm Re= V5V2 V3V4V5 Rσ FIGURE 10.23 Vector representation of mapping10.3 Introduction to the Nyquist Criterion 553WEBC10 10/28/2014 18:16:31 the number of open-loop poles, P, that are in the right half-plane minus the number of counterclockwise revolutions, N, around  1of the mapping; that is, Z P N.The mapping is called the Nyquist diagram, or Nyquist plot, of G(s)H(s). We can now see why this method is classi ﬁed as a frequency response technique. Around contour Ain Figure 10.24, the mapping of the points on the jω-axis through the function G(s)H(s) is the same as substituting sjωinto G(s)H(s) to form the frequency response function G jωH jω. We are thus ﬁnding the frequency response of G(s)H(s) over that part of contour Aon the positive jω-axis. In other words, part of the Nyquist diagram is the polar plot of the frequency response of G(s)H(s). Applying the Nyquist Criterion to Determine Stability Before describing how to sketch a Nyquist diagram, let us look at some typical examples thatuse the Nyquist criterion to determine the stability of a system. These examples give us a perspective prior to engaging in the details of mapping. Figure 10.25( a) shows a contour A that does not enclose closed-loop poles, that is, the zeros of 1 G sH s. The contour thus maps through G(s)H(s) into a Nyquist diagram that does not encircle  1. Hence, P0;N0, and ZP N0. Since Zis the number of closed-loop poles inside contour A, which encircles the right half-plane, this system has no right-half-plane poles and is stable. On the other hand, Figure 10.25( b)s h o w sac o n t o u rA that, while it does not enclose open- loop poles, does generate two clockwise encirclements of  1. Thus, P0;N 2, and the system is unstable; it has two closed-loop poles in the right half-plane, since ZP N2. The two closed-loop poles are shown inside contour Ain Figure 10.25( b) as zeros of 1G sH s. You should keep in mind that the existence of these poles is not known a priori. In this example, notice that clockwise encirclements imply a negative value for N. The number of encirclements can be determined by drawing a test radius from  1 in any convenient direction and counting the number of times the Nyquist diagram crosses the testradius. Counterclockwise crossings are positive, and clockwise crossings are negative. Forexample, in Figure 10.25( b), contour Bcrosses the test radius twice in a clockwise direction. Hence, there are  2 encirclements of the point  1. A jω As-planeTest radiusIm GH-plane –1B ReReBIm GH-plane –1 (a) (b)s-plane G(s)H(s) G(s)H(s) = zeros of 1 + G(s)H(s) = poles of closed-loop system= poles of 1 + G(s)H(s) = poles of G(s)H(s) Location is known Location not knownjω σσ FIGURE 10.25 Mapping examples: a.Contour does not enclose closed-loop poles; b.contour does enclose closed-loop poles554 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:33 Before applying the Nyquist criterion to other examples in order to determine a system ’s stability, we must ﬁrst gain experience in sketching Nyquist diagrams. The next section covers the development of this skill. 10.4 Sketching the Nyquist Diagram The contour that encloses the right half-plane can be mapped through the function G(s)H(s) by substituting points along the contour into G(s)H(s). The points along the positive extension of the imaginary axis yield the polar frequency response of G(s)H(s). Approximations can be made to G(s)H(s) for points around the in ﬁnite semicircle by assuming that the vectors originate at the origin. Thus, their length is in ﬁnite, and their angles are easily evaluated. However, most of the time a simple sketch of the Nyquist diagram is all that is needed. A sketch can be obtained rapidly by looking at the vectors of G(s)H(s)a n dt h e i r motion along the contour. In the examples th at follow, we stress this rapid method for sketching the Nyquist diagram. However, the examples also include analytical expressions for G(s)H(s) for each section of the contour to aid you in determining the shape of the Nyquist diagram. Example 10.4 Sketching a Nyquist DiagramSketching a Nyquist Diagram PROBLEM: Speed controls ﬁnd wide application throughout industry and the home. Figure 10.26( a) shows one application: output frequency control of electrical power from a turbine and generator pair. By regulating the speed, the control system ensures that the generated frequency remains within tolerance. Deviations from the desired speed are sensed, and a steam valve is changed to compensate for the speed error. The system block diagram is shown in Figure 10.26( b). Sketch the Nyquist diagram for the system of Figure 10.26. Generator Turbine ControllerValve actuator Desired speed or frequencyFrequency or speed measurements (a)Steam (b)Desired speed + –TurbineAmplifier, valve actuator, and steam valve Generator E (s)Steam pressure TorqueActual speed 100 ( s + 10)1 (s + 3)5 (s + 1)Sensor FIGURE 10.26 a.Turbine and generator; b.block diagram of speed control system for Example 10.410.4 Sketching the Nyquist Diagram 555WEBC10 10/28/2014 18:16:33 SOLUTION: Conceptually, the Nyquist diagram is p lotted by substituting the points of the contour shown in Figure 10.27( a)i n t o G s500= s1 s3 s10.T h i s process is equivalent to performing com plex arithmetic using the vectors of G(s)d r a w n to the points of the contour as shown in Figure 10.27(a )a n d( b). Each pole and zero term of G(s) shown in Figure 10.26( b) is a vector in Figure 10.27( a)a n d( b). The resultant vector, R, found at any point along the contour is in general the product of the zero vectors divided by the product of the pole vectors (see Figure 10.27( c)). Thus, the magnitude of the resultant is the product of the zero lengths divided by the product of the pole lengths, and the angle of the resultant is the sum of the zero angles minusthe sum of the pole angles. As we move in a clockwise direction around the contour from point Ato point Cin Figure 10.27( a), the resultant angle goes from 0° to 390° 270 °,o rf r o m A ´toC´in Figure 10.27( c). Since the angles emanate from poles in the denominator ofG(s) ,t h er o t a t i o no ri n c r e a s ei na n g l ei sr e a l l yad e c r e a s ei na n g l eo ft h ef u n c t i o n G(s); the poles gain 270 °in a counterclockwise direction, which explains why the function loses 270 °. While the resultant moves from A´toC´in Figure 10.27( c), its magnitude changes as the product of the zero lengths divided by the product of the pole lengths. Thus, the Q'Im 50 3ReA' B'–j8.36D'C'–0.874 (c)GH-plane B'=V1V2V3500jω –3 –1 –10C A DB (a)s-plane V1 V2V3C D–3 –1 –10 (b)s-plane Bjω V3V2V1 Aσ σ FIGURE 10.27 Vector evaluation of the Nyquist diagram for Example 10.4: a.vectors on contour at low frequency; b.vectors on contour around in ﬁnity; c.Nyquist diagram556 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:34 resultant goes from a ﬁnite value at zero frequency (at point Aof Figure 10.27( a), there are three ﬁnite pole lengths) to zero magnitude at in ﬁnite frequency at point C(at point Cof Figure 10.27( a), there are three in ﬁnite pole lengths). The mapping from point Ato point Ccan also be explained analytically. From AtoC the collection of points along the contour is imaginary. Hence, from AtoC,G sG jω, or from Figure 10.26( b), G jω500 s1 s3 s10/C12/C12/C12/C12 s®jω500  14ω230j 43ω ω3(10.40) Multiplying the numerator and denominator by t he complex conjugate of the denominator, we obtain G jω 500  14ω230 j 43ω ω3  14ω2302 43ω ω32(10.41) At zero frequency, G jω 500=3050=3. Thus, the Nyquist diagram starts at 50 =3a t an angle of 0 °.A sω increases, the real part remains positive and the imaginary part remains negative. At ωﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 30=14p , the real part becomes negative. At ωﬃﬃﬃﬃﬃ 43p , the Nyquist diagram crosses the negative real axis, since the imaginary term goes to zero. The real value at the axis crossing, point Q´in Figure 10.27( c), found by substituting into Eq. (10.41), is  0.874. Continuing toward ω∞, the real part is negative, and the imaginary part is positive. At in ﬁnite frequency G jω≈j500=ω3, or approximately zero at 90 °. Around the inﬁ nite semicircle from point Cto point Dshown in Figure 10.27(b ), the vectors rotate clockwise, each by 180 °. Hence, the resultant undergoes a counter- clockwise rotation of 3 180 °, starting at point C´a n de n d i n ga tp o i n t D´of Figure 10.27( c). Analytically, we can see this by assuming that around the in ﬁnite semicircle, the vectors originate approximately at the origin and have in ﬁnite length. For any point on the s-plane, the value of G(s) can be found by representing each complex number in polar form, as follows: G s500 R 1ejθ 1 R 3ejθ 3 R 10ejθ 10(10.42) where R iis the magnitude of the complex number si, and θ iis the angle of the complex number si. Around the in ﬁnite semicircle, all R iare in ﬁnite, and we can use our assumption to approximate the angles as if the vectors originated at the origin. Thus,around the in ﬁnite semicircle, G s500 ∞ θ 1θ 3θ 100  θ 1θ 3θ 10 (10.43) At point Cin Figure 10.27( b), the angles are all 90 °. Hence, the resultant is 0  270 °, shown as point C´in Figure 10.27( c). Similarly, at point D,G s0270 °and maps into point D´. You can select intermediate points to verify the spiral whose radius vector approaches zero at the origin, as shown in Figure 10.27( c). The negative imaginary axis can be mapped by realizing that the real part of G jωH jωis always an even function, whereas the imaginary part of G jωH jωis an odd function. That is, the real part will not change sign when negative values of ωare used, whereas the imaginary part will change sign. Thus, the mapping of the negative imaginaryaxis is a mirror image of the mapping of the positive imaginary axis. The mapping of thesection of the contour from points DtoAis drawn as a mirror image about the real axis of the mapping of points AtoC.10.4 Sketching the Nyquist Diagram 557WEBC10 10/28/2014 18:16:36 In the previous example, there were no open-loop poles situated along the contour enclosing the right half-plane. If such poles exist, then a detour around the poles on the contour is required; otherwise, the mapping would go to in ﬁnity in an undetermined way, without angular information. Subsequently, a complete sketch of the Nyquist diagram couldnot be made, and the number of encirclements of  1 could not be found. Let us assume a G sH sN s=sD swhere D(s) has imaginary roots. The sterm in the denominator and the imaginary roots of D(s)a r ep o l e so f G(s)H(s) that lie on the contour, as shown in Figure 10.28( a). To sketch the Nyquist diagram, the contour must detour around each open-loop pole lying on its path. The detour can be to the right of thepole, as shown in Figure 10.28( b), which makes it clear that each pole ’sv e c t o rr o t a t e s through 180 °as we move around the contour near that pole. This knowledge of the angular rotation of the poles on the contour pe rmits us to complete the Nyquist diagram. Of course, our detour must carry us only an in ﬁnitesimal distance into the right half-plane, or else some closed-loop, right-half-plane poles will be excluded in the count. We can also detour to the left of the open-loop poles. In this case, each pole rotates through an angle of  180 °as we detour around it. Again, the detour must be in ﬁnitesimally small, or else we might include some left-half-plane poles in the count. Let us look at anexample.jω jω jω (a)( b)( c)s-plane s-plane s-plane σ σ σ FIGURE 10.28 Detouring around open-loop poles: a.poles on contour; b.detour right; c.detour left Example 10.5 Nyquist Diagram for Open-Loop Function with Poles onContourNyquist Diagram for Open-Loop Function with Poleson Contour PROBLEM: Sketch the Nyquist diagram of the unity feedback system of Figure 10.10, where G s s2=s2. SOLUTION: The system ’s two poles at the origin are on the contour and must be bypassed, as shown in Figure 10.29( a). The mapping starts at point Aand continues in a clockwise direction. Points A,B,C,D,E,a n dF of Figure 10.29( a) map, respectively, into points A´;B´;C´;D´;E´;andF´of Figure 10.29( b). At point A, the two open-loop poles at the origin contribute 2 90°180 °, and the zero contributes 0 °. The total angle at point Ais thus  180 °. Close to the origin, the function is in ﬁnite in magnitude because of the close proximity to the two open-loop poles. Thus, point Amaps into point A´, located at in ﬁnity at an angle of  180 °. Moving from point Ato point Balong the contour yields a net change in angle of 90°from the zero alone. The angles of the poles remain the same. Thus, the mapping changes by 90 °in the counterclockwise direction. The mapped vector goes from  180 °atA´to 90°atB´. At the same time, the magnitude changes from in ﬁnity to zero, since at point Bthere is one in ﬁnite length from the zero divided by two in ﬁnite lengths from the poles.558 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:37 Alternately, the frequency response can be determined analytically from G jω 2jω=  ω2, considering ωgoing from 0 to ∞. At low frequencies, G jω≈2=  ω2,o r∞180 °. At high frequencies, G jω≈j=  ω,o r0   90°. Also, the real and imaginary parts are always negative. As we travel along the contour BCD , the function magnitude stays at zero (one inﬁnite zero length divided by two in ﬁnite pole lengths). As the vectors move through BCD , the zero ’s vector and the two poles ’vectors undergo changes of  180 °each. Thus, the mapped vector undergoes a net change of 180 °, which is the angular change of the zero minus the sum of the angular changes of the poles f 180 2  180  180 g. The mapping is shown as B´C´D´, where the resultant vector changes by 180 °with a magnitude of εthat approaches zero. From the analytical point of view, G sR 2θ 2 R0θ0 R0θ0(10.44) anywhere on the s-plane where R 2θ 2is the vector from the zero at  2 to any point on thes-plane, and R0θ0is the vector from a pole at the origin to any point on the s-plane. Around the in ﬁnite semicircle, all R i∞, and all angles can be approximated as if the vectors originated at the origin. Thus at point B,G s0 90°, since all θ i90°in Eq. (10.44). At point C, all R i∞, and all θ i0°in Eq. (10.44). Thus, G s00°. At point D, allR i∞, and all θ i 90°in Eq. (10.44). Thus, G s090 °. The mapping of the section of the contour from DtoEis a mirror image of the mapping of AtoB. The result is D´toE´. Finally, over the section EFA, the resultant magnitude approaches in ﬁnity. The angle of the zero does not change, but each pole changes by 180 °. This change yields a change in the function of  2180 ° 360 °. Thus, the mapping from E´toA´is shown as inﬁnite in length and rotating  360 °. Analytically, we can use Eq. (10.44) for the points along the contour EFA.A t E,G s 20°= ϵ 90 ° ϵ 90 ° ∞180 °.A t F,G s 20°= ϵ0° ϵ0° ∞0°.A t A,G s 20°= ϵ90 ° ϵ90 °  ∞ 180 °. The Nyquist diagram is now complete, and a test radius drawn from  1i n Figure 10.29( b) shows one counterclockwise revolution, and one clockwise revolution, yielding zero encirclements. Students who are using MATLAB should now run ch10p2 in Appendix B. You will learn how to use MATLAB to make a Nyquist plot andlist the points on the plot. You will also learn how to specifya range for frequency. This exercise solves Example 10.5 usingMATLAB.EA FCB DF' A'E'D' B' –2 Two polesjω Test radiusIm Re–1 (a)( b)GH-plane s-plane σ C' FIGURE 10.29 a.Contour for Example 10.5; b.Nyquist diagram for Example 10.510.4 Sketching the Nyquist Diagram 559WEBC10 10/28/2014 18:16:37 In this section, we learned how to sketch a Nyquist diagram. We saw how to calculate the value of the intersection of the Nyquist diagram with the negative real axis. This intersection is important in determining the number of encirclements of  1. Also, we showed how to sketch the Nyquist diagram when open-loop poles exist on the contour; thiscase required detours around the poles. In the next section, we apply the Nyquist criterion todetermine the stability of feedback control systems. 10.5 Stability via the Nyquist Diagram We now use the Nyquist diagram to determine a system ’s stability, using the simple equation ZP N. The values of P, the number of open-loop poles of G(s)H(s) enclosed by the contour, and N, the number of encirclements the Nyquist diagram makes about  1, are used to determine Z, the number of right-half-plane poles of the closed-loop system. If the closed-loop system has a variable gain in the loop, one question we would like to ask is, “For what range of gain is the system stable? ”This question, previously answered by the root locus method and the Routh-Hurwitz criterion, is now answered via the Nyquistcriterion. The general approach is to set the loop gain equal to unity and draw the Nyquistdiagram. Since gain is simply a multiplying factor, the effect of the gain is to multiply theresultant by a constant anywhere along the Nyquist diagram. For example, consider Figure 10.30, which summarizes the Nyquist approach for a system with variable gain, K. As the gain is varied, we can visualize the Nyquist diagram in Figure 10.30( c) expanding (increased gain) or shrinking (decreased gain) like a balloon.Skill-Assessment Exercise 10.3 PROBLEM: Sketch the Nyquist diagram for the system shown in Figure 10.10 where G s1 s2 s4 Compare your sketch with the polar plot in Skill-Assessment Exercise 10.1(c). ANSWER: The complete solution is located at www.wiley.com/college/nise . A CB –1.33 15 8ω = 11 B' A'C'(a)R(s)+ –E(s) (s – 2)(s – 4)K(s + 3)(s + 5) C(s) –3 –52 4jω (b)s-planeIm Re (c)GH-plane 1–K1σ FIGURE 10.30 Demonstrat- ing Nyquist stability: a.system; b.contour; c.Nyquist diagramTryIt 10.2 Use MATLAB, the Control System Toolbox, and the following statements to plot theNyquist diagram of the systemshown in Figure 10.30( a). G=zpk( [  3, 5] , ... [2,4] ,1) nyquist(G) After the Nyquist diagram appears, click on the curve anddrag to read the coordinates.560 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:39 This motion could move the Nyquist diagram past the  1 point, changing the stability picture. For this system, since P2, the critical point must be encircled by the Nyquist diagram to yield N2 and a stable system. A reduction in gain would place the critical point outside the Nyquist diagram where N0, yielding Z2, an unstable system. From another perspective we can think of the Nyquist diagram as remaining stationary and the  1 point moving along the real axis. In order to do this, we set the gain to unity and position the critical point at  1=Krather than  1. Thus, the critical point appears to move closer to the origin as Kincreases. Finally, if the Nyquist diagram intersects the real axis at  1, then G jωH jω  1. From root locus concepts, when G sH s  1, the variable sis a closed-loop pole of the system. Thus, the frequency at which the Nyquist diagram intersects  1 is the same frequency at which the root locus crosses the jω-axis. Hence, the system is marginally stable if the Nyquist diagram intersects the real axis at  1. In summary, then, if the open-loop system contains a variable gain, K, set K1 and sketch the Nyquist diagram. Consider the critical point to be at  1=Krather than at  1. Adjust the value of Kto yield stability, based upon the Nyquist criterion. Example 10.6 Range of Gain for Stability via the Nyquist CriterionRange of Gain for Stability via the Nyquist Criterion PROBLEM: For the unity feedback system of Figure 10.10, where G s K=s s3 s5,ﬁnd the range of gain, K, for stability, instability, and the value of gain for marginal stability. For marginal stability also ﬁnd the frequency of oscillation. Use the Nyquist criterion. SOLUTION: First set K1 and sketch the Nyquist diagram for the system, using the contour shown in Figure 10.31( a). For all points on the imaginary axis, G jωH jωK s s3 s5/C12/C12/C12/C12 K1 sjω 8ω2 j 15ω ω3 64ω4ω2 15 ω22(10.45) Atω0;G jωH jω  0:0356  j∞. Next ﬁnd the point where the Nyquist diagram intersects the negative real axis. Setting the imaginary part of Eq. (10.45) equal to zero, we ﬁndωﬃﬃﬃﬃﬃ 15p . Substituting this jω –5 –3– 0.0083–115Re ( )b ( )aIm s-plane = 0 + = 0 –= –∞= +∞ = 0 += 0 – =GH-plane ω = –∞ ωω ωω = +∞ ω ωω σ FIGURE 10.31 a.Contour for Example 10.6; b.Nyquist diagram10.5 Stability via the Nyquist Diagram 561WEBC10 10/28/2014 18:16:39 Now that we have used the Nyquist diagram to determine stability, we can develop a simpli ﬁed approach that uses only the mapping of the positive jω-axis. Stability via Mapping Only the Positive jω-Axis Once the stability of a system is determined by the Nyquist criterion, continued evaluation of the system can be simpli ﬁed by using just the mapping of the positive jω-axis. This concept plays a major role in the next two sections, where we discuss stability margin and the implementation of the Nyquist criterion with Bode plots. Consider the system shown in Figure 10.32, which is stable at low values of gain and unstable at high values of gain. Since the contour does not encircle open-loop poles, the Nyquist criterion tells us that we must have no encirclements of  1 for the system to be stable. We can see from the Nyquist diagram that the encirclements of the critical point canbe determined from the mapping of the positive jω-axis alone. If the gain is small, the mapping will pass to the right of  1, and the system will be stable. If the gain is high, the mapping will pass to the left of  1, and the system will be unstable. Thus, this system is stable for the range of loop gain, K, that ensures that the open-loop magnitude is less than unity at that frequency where the phase angle is 180 °(or, equivalently , 180 °). This statement is thus an alternative to the Nyquist criterion for this system. Now consider the system shown in Figure 10.33, which is unstable at low values of gain and stable at high values of gain. Since the contour encloses two open-loop poles, twocounterclockwise encirclements of the critical point are required for stability. Thus, for thiscase the system is stable if the open-loop magnitude is greater than unity at that frequency where the phase angle is 180 °(or, equivalently , 180 °). In summary, ﬁrst determine stability from the Nyquist criterion and the Nyquist diagram. Next, interpret the Nyquist criterion and determine whether the mapping of just thepositive imaginary axis should have a gain of less than or greater than unity at 180 °. If the Nyquist diagram crosses 180 °at multiple frequencies, determine the interpretation from the Nyquist criterion.value of ωback into Eq. (10.45) yields the real part of  0.0083. Finally, at ω∞, G jωH jω G sH sjs®j∞1= j∞30 270 °. From the contour of Figure 10.31( a),P0; for stability Nmust then be equal to zero. From Figure 10.31( b), the system is stable if the critical point lies outside the contour N0, so that ZP N0. Thus, Kcan be increased by 1 =0:0083 120:5 before the Nyquist diagram encircles  1. Hence, for stability, K<120:5. For marginal stability K120:5. At this gain the Nyquist diagram intersects  1, and the frequency of oscillation isﬃﬃﬃﬃﬃ 15p rad/s. ( ) ( )AContours-plane CBjω Root locusIm ReGH-plane A'B' C' –1 abσ FIGURE 10.32 a.Contour and root locus of system that is stable for small gain and unstable for large gain;b.Nyquist diagram562 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:40 A CB A' B'C'Contourjω Root locusIm Re –1s-plane GH-plane ( )b ( )aσ FIGURE 10.33 a.Contour and root locus of system that is unstable for small gain and stable for large gain; b.Nyquist diagram Example 10.7 Stability Design via Mapping Positive jω-Axis Stability Design via Mapping Positive jω-Axis PROBLEM: Find the range of gain for stability and instability, and the gain for marginal stability, for the unity feedba ck system shown in Figure 10.10, where G sK= s22s2 s2. For marginal stability, ﬁnd the radian frequency of oscillation. Use the Nyquist criterion and the mapping of only the positive imaginary axis. SOLUTION: Since the open-loop poles are only in the left-half-plane, the Nyquist criterion tells us that we want no encirclements of  1 for stability. Hence, a gain less than unity at 180 °is required. Begin by letting K1 and draw the portion of the contour along the positive imaginary axis as shown in Figure 10.34( a). In Figure 10.34(b ), the intersection with the negative real axis is found by letting sjωinG(s)H(s), setting the imaginary part equal to zero to ﬁnd the frequency, and then substituting the frequency into the real part of G jωH jω. Thus, for any point on the positive imaginary axis, G jωH jω1 s22s2 s2/C12/C12/C12 s®jω 4 1 ω2 jω 6 ω2 16 1 ω22ω2 6 ω22(10.46) Setting the imaginary part equal to zero, we ﬁndωﬃﬃﬃ 6p . Substituting this value back into Eq. (10.46) yields the real part,   1=20 1=20180 °. This closed-loop system is stable if the magnitude of the frequency response is less than unity at 180 °. Hence, the system is stable for K<20, unstable for K>20, and marginally stable for K20. When the system is marginally stable, the radian frequency of oscillation isﬃﬃﬃ6p . ( )a ( )b–2 –1jω Im ReGH-plane 1 20–1 4jContour 1 AB B' A's-plane σ ω FIGURE 10.34 a.Portion of contour to be mapped for Example 10.7; b.Nyquist diagram of mapping of positive imaginary axis10.5 Stability via the Nyquist Diagram 563WEBC10 10/28/2014 18:16:40 10.6 Gain Margin and Phase Margin via the Nyquist Diagram Now that we know how to sketch and interpret a Nyquist diagram to determine a closed-loop system ’s stability, let us extend our discussion to concepts that will eventually lead us to the design of transient response characteristics via frequency response techniques. Using the Nyquist diagram, we de ﬁne two quantitative measures of how stable a system is. These quantities are called gain margin andphase margin . Systems with greater gain and phase margins can withstand greater changes in system parameters before becoming unstable.In a sense, gain and phase margins can be qualitatively related to the root locus, in that systemswhose poles are farther from the imaginary axis have a greater degree of stability. In the last section, we discussed stability from the point of view of gain at 180 °phase shift. This concept leads to the following de ﬁnitions of gain margin and phase margin: Gain margin, G M. The gain margin is the change in open-loop gain, expressed in decibels (dB), required at 180 °of phase shift to make the closed-loop system unstable. Phase margin, ΦM. The phase margin is the change in open-loop phase shift required at unity gain to make the closed-loop system unstable. These two de ﬁnitions are shown graphically on the Nyquist diagram in Figure 10.35. A s s u m eas y s t e mt h a ti ss t a b l ei ft h e r ea r en oe n c i r c l e m e n t so f  1. Using Figure 10.35, let us focus on the deﬁ nition of gain margin. Here a gain difference between the Nyquist diagram ’s crossing of the real axis at  1=aand the  1 critical point determines the proximity of the system to instability. Thus, if the gain of the system were multiplied by aunits, the Nyquist diagram would intersect the critical point. We then say that the gain margin is aunits, or, expressed in dB, GM20 log a. Notice that the gain margin is the reciprocal of the real-axis crossing expressed in dB. In Figure 10.35, we also see the phase margin graphically displayed. At point Q´, where the gain is unity, arepresents the system ’s proximity to instability. That is, at unity gain, if a phase shift of αdegrees occurs, the system becomes unstable. Hence, the amount of phase margin is α. Later in the chapter, we show that phase margin can be related to the damping ratio. Thus, we will be able to relate frequency response characteristics toSkill-Assessment Exercise 10.4 PROBLEM: For the system shown in Figure 10.10, where G sK s2 s4 s6 do the following: a.Plot the Nyquist diagram. b.Use your Nyquist diagram to ﬁnd the range of gain, K, for stability. ANSWERS: a.See the answer at www.wiley.com/college/nise . b.Stable for K<480 The complete solution is at www.wiley.com/college/nise .564 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:41 transient response characteristics as well as stability. We will also show that the calculations of gain and phase margins are more convenient if Bode plots are usedrather than a Nyquist diagram, such as that shown in Figure 10.35. For now, let us look at an example that shows the calculation of the gain and phase margins.– 1–1a 1Nyquist diagramUnit circleIm Gain margin = GM = 20 log a Phase margin = ΦM = αGain difference before instabilityPhase difference before instabilityGH-plane Re Q'α FIGURE 10.35 Nyquist diagram showing gain and phase margins Example 10.8 Finding Gain and Phase MarginsFinding Gain and Phase Margins PROBLEM: Find the gain and phase margin for the system of Example 10.7 if K6. SOLUTION: Toﬁnd the gain margin, ﬁrstﬁnd the frequency where the Nyquist diagram crosses the negative real axis. Finding G jωH jω, we have G jωH jω6 s22s2 s2/C12/C12/C12/C12 s®jω 64 1 ω2 jω 6 ω2 16 1 ω22ω2 6 ω22(10.47) The Nyquist diagram crosses the real axis at a frequency ofﬃﬃﬃ 6p rad/s. The real part is calculated to be  0.3. Thus, the gain can be increased by 1=0:33:33 before the real part becomes  1. Hence, the gain margin is GM20 log 3: 3310:45 dB (10.48) Toﬁnd the phase margin, ﬁnd the frequency in Eq. (10.47) for which the magnitude is unity. As the problem stands, this calculation requires computational tools, such as a function solver or the program described in Appendix H.2. Later in the chapter we will simplify the process by using Bode plots. Equation (10.47) has unity gain at a frequency of 1.253 rad/s. At this frequency, the phase angle is  112:3°. The difference between this angle and  180 °is 67:7°, which is the phase margin.10.6 Gain Margin and Phase Margin via the Nyquist Diagram 565WEBC10 10/28/2014 18:16:41 In this section, we deﬁ ned gain margin and phase margin and calculated them via the Nyquist diagram. In the next section, we show how to use Bode diagrams to implement the stability calculations perf ormed in Sections 10.5 and 10.6 using the Nyquist diagram. We will see that the Bode plots reduce the time and simplify the calculations required to obtain results. 10.7 Stability, Gain Margin, and Phase Margin via Bode Plots In this section, we determine stability, gain and phase margins, and the range of gainrequired for stability. All of these topics were covered previously in this chapter, usingNyquist diagrams as the tool. Now we use Bode plots to determine these characteristics. Bode plots are subsets of the complete Nyquist diagram but in another form. They are a viable alternative to Nyquist plots, since they are easily drawn without the aid of thecomputational devices or long calculations required for the Nyquist diagram and root locus.You should remember that all calculations applied to stability were derived from and basedupon the Nyquist stability criterion. The Bode plots are an alternate way of visualizing andimplementing the theoretical concepts. Determining Stability Let us look at an example and determine the stability of a system, implementing the Nyquiststability criterion using Bode plots. We will draw a Bode log-magnitude plot and thenStudents who are using MATLAB should now run ch10p3 in Appendix B.You will learn how to use MATLAB to ﬁnd gain margin, phase margin, zero dB frequency, and 180 °frequency. This exercise solves Exam- ple 10.8 using MATLAB. MATLAB ’s LTI Viewer, with the Nyquist diagram selected, is another method that may be used to ﬁnd gain margin, phase margin, zero dB frequency, and 180 °frequency. You are encouraged to study Appendix E, at www.wiley.com/college/nise , which contains a tutorial on the LTI Viewer as well as some examples. Example E.2solves Example 10.8 using the LTI Viewer. Skill-Assessment Exercise 10.5 PROBLEM: Find the gain margin and the 180 °frequency for the problem in Skill-Assessment Exercise 10.4 if K100. ANSWERS: Gain margin 13:62 dB; 180 °frequency 6:63 rad/s The complete solution is at www.wiley.com/college/nise .TryIt 10.3 Use MATLAB, the Control System Toolbox, and the following statements to ﬁnd the gain and phase margins of G(s)H(s)= 100/[( s+2)(s+4)(s+6)] using the Nyquist diagram. G=zpk( [] , [ –2,–4,–6] ,100) nyquist(G)After the Nyquist diagram appears: Right-click in the graph area. Select Characteristics . Select All Stability Margins . Let the mouse rest on the margin points to read the gain and phase margins.566 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:42 determine the value of gain that ensures that the magnitude is less than 0 dB (unity gain) at that frequency where the phase is 180 °. Example 10.9 Range of Gain for Stability via Bode PlotsRange of Gain for Stability via Bode Plots PROBLEM: Use Bode plots to determine the range of Kwithin which the unity feedback system shown in Figure 10.10 is stable. Let G sK= s2 s4 s5. SOLUTION: Since this system has all of its open-loop poles in the left-half-plane, the open-loop system is stable. Hence, from the discussion of Section 10.5, the closed-loop system will be stable if the frequency response has a gain less than unity when the phaseis 180 °. Begin by sketching the Bode magnitude and phase diagrams shown in Figure 10.36. In Section 10.2, we summed normalized plots of each factor of G(s) to create the Bode plot. We saw that at each break frequency, the slope of the resultant Bode plot changed byan amount equal to the new slope that was added. Table 10.6 demonstrates this observation. In this example, we use this fact to draw the Bode plots faster by avoiding the sketching of the response of each term. The low-frequency gain of G(s)H(s) is found by setting sto zero. Thus, the Bode magnitude plot starts at K=40. For convenience, let K40 so that the log-magnitude plot starts at 0 dB. At each break frequency, 2, 4, and 5, a 20 dB/decade increase in negativeslope is drawn, yielding the log-magnitude plot shown in Figure 10.36. The phase diagram begins at 0 °until a decade below the ﬁrst break frequency of 2 rad/s. At 0.2 rad/s the curve decreases at a rate of  45 °/decade, decreasing an additional–20 –4020 log 40 M–60 –80 –100 0.01 100 10 0.1 1 Frequency (rad/s) Frequency (rad/s)0.01 100 10 0.1 10 –120Phase (degrees)0 –270–225–180–135–90–45–20 dB/dec –40 dB/dec –60 dB/dec –45°/dec –90°/dec –135°/dec–90°/dec –45°/dec FIGURE 10.36 Bode log-magnitude and phase diagrams for the system of Example 10.910.7 Stability, Gain Margin, and Phase Margin via Bode Plots 567WEBC10 10/28/2014 18:16:42 Evaluating Gain and Phase Margins Next we show how to evaluate the gain and phase margins by using Bode plots (Figure 10.37). The gain margin is found by using the phase plot to ﬁnd the frequency, ωGM, where the phase angle is 180 °. At this frequency, we look at the magnitude plot to determine the gain margin, GM, which is the gain required to raise the magnitude curve to 0 dB. To illustrate, in the previous example with K40, the gain margin was found to be 20 dB. The phase margin is found by using the magnitude curve to ﬁnd the frequency, ωΦM, where the gain is 0 dB. On the phase curve at that frequency, the phase margin, ΦM, is the difference between the phase value and 180 °.45°/decade at each subsequent frequency (0.4 and 0.5 rad/s) a decade below each break. At a decade above each break frequency, the slopes are reduced by 45 °=decade at each frequency. The Nyquist criterion for this example t ells us that we want zero encirclements of  1 for stability. Thus, we recognize that the Bode log-magnitude plot must be less than unity when the Bode phase plot is 180 °. Accordingly, we see that at a frequency of 7r a d / s ,w h e nt h ep h a s ep l o ti s  180 °, the magnitude plot is  20 dB. Therefore, an increase in gain of +20 dB is possible before the system becomes unstable. Since the gain plot was scaled for a gain of 40, +20 dB (a gain of 10) represents the required increase in gain above 40. Hence, the gain for instability is 40 10400. The ﬁnal result is 0 <K<400 for stability. This result, obtained by approximating the frequency response by Bode asymptotes, can be compared to the result obtained from the actual frequency response, which yields again of 378 at a frequency of 6.16 rad/s. Students who are using MATLAB should now run ch10p4 in Appendix B.You will learn how to use MATLAB to ﬁnd the range of gain for stability via frequency response methods. This exercise solvesExample 10.10 using MATLAB. 0 dBGain plot log ω log ω 180°Phase (degrees)Phase plot MGMM (dB) wGMw MΦ ωΦ ω FIGURE 10.37 Gain and phase margins on the Bode diagrams568 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:43 Skill-Assessment Exercise 10.6 PROBLEM: For the system shown in Figure 10.10, where G sK s5 s20 s50 do the following: a.Draw the Bode log-magnitude and phase plots. b.Find the range of Kfor stability from your Bode plots. c.Evaluate gain margin, phase margin, zero dB frequency, and 180 °frequency from your Bode plots for K10;000. ANSWERS: a.See the answer at www.wiley.com/college/nise . b.K<96;270 c.Gain margin 19:67 dB, phase margin 92:9°, zero dB frequency 7:74 rad/s, and 180 °frequency 36:7 rad/s The complete solution is at www.wiley.com/college/nise .Example 10.10 Gain and Phase Margins from Bode PlotsGain and Phase Margins from Bode Plots PROBLEM: IfK200 in the system of Example 10.9, ﬁnd the gain margin and the phase margin. SOLUTION: The Bode plot in Figure 10.36 is scaled to a gain of 40. If K200 ( ﬁve times as great), the magnitude plot would be 20 log 5 13:98 dB higher. Toﬁnd the gain margin, look at the phase plot and ﬁnd the frequency where the phase is 180 °. At this frequency, determine from the magnitude plot how much the gain can be increased before reaching 0 dB. In Figure 10.36, the phase angle is 180 °at approximately 7 rad/s. On the magnitude plot, the gain is  2013:98 6:02 dB. Thus, the gain margin is 6.02 dB. Toﬁnd the phase margin, we look on the magnitude plot for the frequency where the gain is 0 dB. At this frequency, we look on the phase plot to ﬁnd the difference between the phase and 180 °. This difference is the phase margin. Again, remembering that the magnitude plot of Figure 10.36 is 13.98 dB lower than the actual plot, the 0 dB crossing ( 13.98 dB for the normalized plot shown in Figure 10.36) occurs at 5.5 rad/s. At this frequency the phase angle is  165 °. Thus, the phase margin is  165 °   180 °15°. MATLAB’ s LTI Viewer, with Bode plots selected, is another method that may be used to ﬁnd gain margin, phase margin, zero dB frequency, and 180 °frequency. You are encouraged to study Appendix E at www.wiley.com/college/nise , which contains a tutorial on the LTI Viewer as well as some examples. Example E.3 solves Example 10.10using the LTI Viewer. TryIt 10.4 Use MATLAB, the Control System Toolbox, and the following statements tosolve Skill-AssessmentExercise 10.6(c) using Bode plots. G=zpk( [] , ... [ 5, 20, 50] ,10000) bode(G) grid on After the Bode plot appears: Right-click in the graph area. Select Characteristics . Select All Stability Margins . Let the mouse rest on the margin points to read thegain and phase margins.10.7 Stability, Gain Margin, and Phase Margin via Bode Plots 569WEBC10 10/28/2014 18:16:43 We have seen that the open-loop frequency response curves can be used not only to determine whether a system is stable but to calculate the range of loop gain that will ensure stability. We have also seen how to calculate the gain margin and the phase marginfrom the Bode diagrams. Is it then possible to parallel the root locus technique and analyze and design systems for transient response using frequency response methods? We will begin to explore theanswer in the next section. 10.8 Relation Between Closed-Loop Transient and Closed-Loop Frequency Responses Damping Ratio and Closed-Loop Frequency Response In this section, we will show that a relationship exists between a system ’st r a n s i e n t response and its closed-loop frequency respon se. In particular, consider the second-order feedback control system of Figure 10.38, which we have been using sinceChapter 4, where we derived relationships between the closed-loop transientresponse and the poles of the clo sed-loop transfer function, C s R sT sω2 n s22ζωnsω2 n(10.49) We now derive relationships between the transient response of Eq. (10.49) and characteristics of its frequency response. We de ﬁne these characteristics and relate them to damping ratio, natural frequency, settling time, peak time, and rise time. In Section 10.10, we will show howto use the frequency response of the open-loop transfer function G sω2 n s s2ζωn(10.50) shown in Figure 10.38, to obtain the same transient response characteristics. Let us now ﬁnd the frequency response of Eq. (10.49), de ﬁne characteristics of this response, and relate these characteristics to the transient response. Substituting sjωinto Eq. (10.49), we evaluate the magnitude of the closed-loop frequency response as MjT jωjω2 nﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ ﬃ ω2 n ω224ζ2ω2nω2q (10.51) A representative sketch of the log plot of Eq. (10.51) is shown in Figure 10.39. We now show that a relationship exists be tween the peak value of the closed-loop magnitude response and the damping ratio. Squaring Eq. (10.51), differentiating with respect to ω2, and setting the derivative equal to zero yields the maximum value of M,Mp, where Mp1 2ζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p (10.52) at a frequency, ωp,o f ωpωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2ζ2p (10.53)s(s + 2𝜁ωn)–R(s) + E(s) C(s) n2ω FIGURE 10.38 Second-order closed-loop system570 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:44 Since ζis related to percent overshoot, we can plot Mpvs. percent overshoot. The result is shown in Figure 10.40. Equation (10.52) shows that the maximum magnitude on the frequency response curve is directly related to the damping ratio and, hence, the percent overshoot. Also notice from Eq. (10.53) that the peak frequency, ωp, is not the natural frequency. However, for low values of damping ratio, we can assume that the peak occurs at the natural frequency.Finally, notice that there will not be a peak at frequencies above zero if ζ>0:707. This limiting value of ζfor peaking on the magnitude response curve should not be confused with overshoot on the step response, where there is overshoot for 0 <ζ<1. Response Speed and Closed-Loop Frequency Response Another relationship between the frequency response and time response is between thespeed of the time response (as measured by settling time, peak time, and rise time) and thebandwidth of the closed-loop frequency response. Bandwidth is de ﬁned here as the frequency, ω BW, at which the magnitude response curve is 3 dB down from its value at zero frequency (see Figure 10.39). The bandwidth of a two-pole system can be found by ﬁnding that frequency for which M1=ﬃﬃﬃ 2p (that is,  3 dB) in Eq. (10.51). The derivation is left as an exercise for the student. The result is ωBWωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 4ζ4 4ζ22pq (10.54)12345678 0 1 02 03 04 05 06 07 08 0 Percent overshootMp FIGURE 10.40 Closed-loop frequency response peak vs. percent overshoot for a two-pole system–20–15–10–5510 0 –3 log plog BW Log-frequenc y (rad/s)Magnitude (dB)20 log Mp ω ωFIGURE 10.39 Representa- tive log-magnitude plot of Eq. (10.51)10.8 Relation Between Closed-Loop Transient and Closed-Loop Frequency Responses 571WEBC10 10/28/2014 18:16:44 To relate ωBWto settling time, we substitute ωn4=Tsζ, derived from Eq. (4.42), into Eq. (10.54) and obtain ωBW4 Tsζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 4ζ4 4ζ22qr (10.55) Similarly, since ωnπ= Tpﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p , ωBWπ Tpﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2pﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 4ζ4 4ζ22qr (10.56) To relate the bandwidth to rise time, Tr, we use Figure 4.16, knowing the desired ζandTr. For example, assume ζ0:4 and Tr0:2 second. Using Figure 4.16, the ordinate Trωn1:463, from which ωn1:463=0:27:315 rad/s. Using Eq. (10.54), ωBW10:05 rad/s. Normalized plots of Eqs. (10.55) and (10.56) and the relationship between bandwidth normalized by rise time and damping ratio are shown in Figure 10.41.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 11.51.61.71.81.922.12.2 Damping ratio0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1020406080100120140 44.555.566.57 Damping ratio Damping ratioωBWTs (c)(a)( b)ωBWTpωBWTr0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 FIGURE 10.41 Normalized bandwidth vs. damping ratio for a.settling time; b.peak time; c.rise time Skill-Assessment Exercise 10.7 PROBLEM: Find the closed-loop bandwidth required for 20% overshoot and 2-seconds settling time. ANSWER: ωBW5:79 rad/s The complete solution is at www.wiley.com/college/nise .572 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:45 In this section, we related the closed-loop transient response to the closed-loop frequency response via bandwidth. We continue by relating the closed-loop frequency response to the open-loop frequency response and explaining the impetus. 10.9 Relation Between Closed- and Open-Loop Frequency Responses At this point, we do not have an easy way of ﬁnding the closed-loop frequency response from which we could determine Mpand thus the transient response.2As we have seen, we are equipped to rapidly sketch the open-loop frequency response but not the closed-loopfrequency response. However, if the open-loop response is related to the closed-loop response, we can combine the ease of sketching the open-loop response with the transient response information contained in the closed-loop response. Constant MCircles and Constant NCircles Consider a unity feedback system whose closed-loop transfer function is T sG s 1G s(10.57) The frequency response of this closed-loop function is T jωG jω 1G jω(10.58) Since G jωis a complex number, let G jω P ω jQ ωi nE q .( 1 0 . 5 8 ) ,w h i c h yields T jωP ω jQ ω P ω1   jQ ω(10.59) Therefore, M2jT2 jωjP2 ω Q2 ω P ω 1 2Q2 ω(10.60) Equation (10.60) can be put into the form PM2 M2 1/C18/C19 2 Q2M2 M2 12(10.61) which is the equation of a circle of radius M= M2 1centered at  M2= M2 1;0. These circles, shown plotted in Figure 10.42 for various values of M, are called constant M circles and are the locus of the closed-loop magnitude frequency response for unity feedbacksystems. Thus, if the polar frequency response of an open-loop function, G(s), is plotted and superimposed on top of the constant Mcircles, the closed-loop magnitude frequency response is determined by each intersection of this polar plot with the constant Mcircles. 2At the end of this subsection, we will see how to use MATLAB to obtain closed-loop frequency responses.10.9 Relation Between Closed- and Open-Loop Frequency Responses 573WEBC10 10/28/2014 18:16:45 Before demonstrating the use of the constant Mcircles with an example, let us go through a similar development for the closed-loop phase plot, the constant Ncircles. From Eq. (10.59), the phase angle, ϕ, of the closed-loop response is ϕtan 1Q ω P ω tan 1Q ω P ω 1 tan 1Q ω P ω Q ω P ω 1 1Q ω P ωQ ω P ω 1/C18/C19(10.62) after using tan α β tanα tanβ= 1tanαtanβ. Dropping the functional notation, tanϕNQ P2PQ2(10.63) Equation (10.63) can be put into the form of a circle, P1 2/C18/C192 Q 1 2N/C18/C192 N21 4N2(10.64) which is plotted in Figure 10.43 for various values of N. The circles of this plot are called constant N circles . Superimposing a unity feedback, open-loop frequency response over the constant Ncircles yields the closed-loop phase response of the system. Let us now look at an example of the use of the constant MandNcircles.Im Re –2–112 12 –1 –2 –3 –40.6 0.5M = 0.7M = 1.3 1.4 1.5G-planeM = 1.0 0.42.01.6 1.8 FIGURE 10.42 Constant Mcircles574 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:45 Im Re 12 –1 –2 –33 2 1 –1 –2 –3ϕ = 20° 50°40°25°G-plane 70° –70°–70° –50°–50°–70° –50°30° –25°–30° –20°–4 0 ° FIGURE 10.43 Constant Ncircles Example 10.11 Closed-Loop Frequency Response from Open-Loop Frequency ResponseClosed-Loop Frequency Response from Open-LoopFrequency Response PROBLEM: Find the closed-loop frequency response of the unity feedback system shown in Figure 10.10, where G s50=s s3 s6, using the constant Mcircles, Ncircles, and the open-loop polar frequency response curve. SOLUTION: First evaluate the open-loop frequency function and make a polar frequency response plot superimposed over the constant MandNcircles. The open-loop frequency function is G jω50  9ω2j 18ω ω3(10.65) from which the magnitude, jG jωj, and phase, G jω, can be found and plotted. The polar plot of the open-loop frequency response (Nyquist diagram) is shown superimposed over the MandNcircles in Figure 10.44.10.9 Relation Between Closed- and Open-Loop Frequency Responses 575WEBC10 10/28/2014 18:16:46 The closed-loop magnitude frequency response can now be obtained by ﬁnding the intersection of each point of the Nyquist plot with the Mcircles. The closed-loop phase response can be obtained by ﬁnding the intersection of each point of the Nyquist plot with theNcircles. The result is shown in Figure 10.45.3 Students who are using MATLAB should now run ch10p5 in Appendix B. You will learn how to use MATLAB to ﬁnd the closed-loop frequency response. This exercise solves Example 10.11 using MATLAB.–1.0 –0.8 –0.2 0.2 0 0.4 0.6 0.8 1.0 1.2j0.2 –j0.2 –j0.4 –j0.6 –j0.8 –j1.0 –j1.2 –j1.4 –j1.8–j1.6ω = 0.8 ω = 0.9 ω = 1 ω = 1.3 ω = 1.5 ω = 1.7 ω = 2ω = 3ω = 3.5 ω = 2.5ω = 5ω = 4.2Im Re –0.6 –0.4 FIGURE 10.45 Closed- loop frequency response for Example 10.11Im Re 12 –1 –33 2 1 –1 –2 –350° –4 –20.6 0M = 1.0 040° 0.5M = 0.725° M = 1.3 1.4 1.5G-plane 1.0 ω = 0.870°30° 0.4 –20°–25°–30°–4 0 °1.6 1.8 2.0 1.52.02.53.5 3.0 –70° –50°ϕ = 20° FIGURE 10.44 Nyquist diagram for Example 10.11 and constant MandN circles 3You are cautioned not to use the closed-loop polar plot for the Nyquist criterion. The closed-loop frequency response, however, can be used to determine the closed-loop transient response, as discussed in Section 10.8.576 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:46 Nichols Charts A disadvantage of using the MandNcircles is that changes of gain in the open-loop transfer function, G(s), cannot be handled easily. For example, in the Bode plot, a gain change is handled by moving the Bode magnitude curve up or down an amount equal to the gain change in dB. Since the MandNcircles are not dB plots, changes in gain require each point ofG jωto be multiplied in length by the increase or decrease in gain. Another presentation of the Mand Ncircles, called a Nichols chart ,d i s p l a y s the constant Mcircles in dB, so that changes in gain are as simple to handle as in the Bode plot. A Nichols chart is shown in Figure 10.46. The chart is a plot of open-loopmagnitude in dB vs. open-loop phase angle in degrees. Every point on the Mcircles can be transferred to the Nichols chart. Each point on the constant Mcircles is represented by magnitude and angle (polar coordinates). Converting the magnitude to dB, we cantransfer the point to the Nichols chart, using the polar coordinates with magnitude in dBplotted as the ordinate, and the phase angle plotted as the abscissa. Similarly, the Ncircles also can be transferred to the Nichols chart. For example, assume the function G s K s s1 s2(10.66) Superimposing the frequency response of G(s) on the Nichols chart by plotting magnitude in dB vs. phase angle for a range of frequencies from 0.1 to 1 rad/s, we obtain the plotin Figure 10.47 for K1. If the gain is increased by 10 dB, simply raise the curve for K1 by 10 dB and obtain the curve for K3:16 10 dB . The intersection of the plots of G jωwith the Nichols chart yields the frequency response of the closed-loop system. Students who are using MATLAB should now run ch10p6 in Appendix B.You will learn how to use MATLAB to make a Nichols plot. Thisexercise makes a Nichols plot of G s1=s s1 s2using MATLAB. MATLAB ’s LTI Viewer is an alternative method of obtaining the Nichols chart. You are encouraged to study Appendix E at www.wiley .com/college/nise, which contains a tutorial on the LTI Viewer aswell as some examples. Example E.4 shows how to obtain Figure 10.47using the LTI Viewer. 0.5 –15–10–50510152025 –280 –260 –240 –220 –200 –180 –160 –140 –120 –100 –80 Phase (degrees)Magnitude (dB)0.707421.61.41.21.1 –300°–340° –320°–40°–20° –60°–5° –10° –80° –220° –90° –140° –160° –100° –120° –270°–260° –200° –240° –180°–280°–355° 1.0 0.3 FIGURE 10.46 Nichols chart10.9 Relation Between Closed- and Open-Loop Frequency Responses 577WEBC10 10/28/2014 18:16:47 10.10 Relation Between Closed-Loop Transient and Open-Loop Frequency Responses Damping Ratio From MCircles We can use the results of Example 10.11 to estimate the transient response characteristics of the system. We can ﬁnd the peak of the closed-loop frequency response by ﬁnding the maximum Mcurve tangent to the open-loop frequency response. Then we can ﬁnd the damping ratio, ζ, and subsequently the percent overshoot, via Eq. (10.52). The following example demonstrates the use of the open-loop frequency response and the Mcircles to ﬁnd the damping ratio or, equivalently, the percent overshoot. Example 10.12 Percent Overshoot from Open-Loop Frequency ResponsePercent Overshoot from Open-Loop Frequency Response PROBLEM: Find the damping ratio and the percent overshoot expected from the system of Example 10.11, using the open-loop frequency response and the Mcircles.0.5ω =.1 –15–10–50510152025 –280 –260 –240 –220 –200 –180 –160 –140 –120 –100 –80 Phase (degrees)Magnitude (dB)0.707K=3.16 K=1ω =.1 ω = 1ω = 1421.61.41.21.1 –300°–40°1.0 –270° –90°–20° –60°–5° –10° –260° –200° ––140°0.3 –180° –240° –220° –160° –100° –120°–340°–355° –320° –280° –80°FIGURE 10.47 Nichols chart with frequency response for G sK=s s1 s2 superimoposed. Values forK1 and K3:16 are shown. Skill-Assessment Exercise 10.8 PROBLEM: Given the system shown in Figure 10.10, where G s8000 s5 s20 s50 plot the closed-loop log-magnitude and phase frequency response plots using the following methods: a.MandNcircles b.Nichols chart ANSWER: The complete solution is at www.wiley.com/college/nise .TryIt 10.5 Use MATLAB, the Control System Toolbox, and the following statements to make a Nichols chart of the systemgiven in Skill-AssessmentExercise 10.8 G=zpk( [] , ... [ 5, 20, 50] ,8000) nichols(G) grid on578 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:47 So far in this section, we have tied together the system ’s transient response and the peak value of the closed-loop frequency response as obtained from the open-loop frequency response. We used the Nyquist plots and the MandNcircles to obtain the closed-loop transient response. Another association exists between the open-loop frequency responseand the closed-loop transient response that is easily implemented with the Bode plots,which are easier to draw than the Nyquist plots. Damping Ratio from Phase Margin Let us now derive the relationship between the phase margin and the damping ratio. Thisrelationship will enable us to evaluate the percent overshoot from the phase margin foundfrom the open-loop frequency response. Consider a unity feedback system whose open-loop function G s ω2 n s s2ζωn(10.68) yields the typical second-order, closed-loop transfer function T sω2n s22ζωnsω2 n(10.69) In order to evaluate the phase margin, we ﬁrstﬁnd the frequency for which jG jωj1. Hence, jG jωjω2 n j ω2j2ζωnωj1 (10.70) The frequency, ω1, that satis ﬁes Eq. (10.70) is ω1ωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ  2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 14ζ4qr (10.71) The phase angle of G jωat this frequency is G jω   90 tan 1ω1 2ζωn  90 tan 1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ  2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 4ζ41pq 2ζ(10.72)SOLUTION: Equation (10.52) shows that there is a unique relationship between the closed-loop system ’s damping ratio and the peak value, MP, of the closed-loop system ’s magnitude frequency plot. From Figure 10.44, we see that the Nyquist diagram is tangent to the 1.8 Mcircle. We see that this is the maximum value for the closed-loop frequency response. Thus, Mp1:8. We can solve for ζby rearranging Eq. (10.52) into the following form: ζ4 ζ2 1=4M2 p0 (10.67) Since Mp1:8, then ζ0:29 and 0.96. From Eq. (10.53), a damping ratio larger than 0.707 yields no peak above zero frequency. Thus, we select ζ0:29, which is equivalent to 38.6% overshoot. Care must be taken, however, to be sure we can make a second-order approximation when associating the value of percent overshoot to the value of ζ.A computer simulation of the step response shows 36% overshoot.10.10 Relation Between Closed-Loop Transient and Open-Loop Frequency Responses 579WEBC10 10/28/2014 18:16:48 The difference between the angle of Eq. (10.72) and  180 °is the phase margin, ϕM. Thus, ΦM90 tan 1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ  2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 14ζ4pq 2ζ tan 12ζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ  2ζ2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 14ζ4pq(10.73) Equation (10.73), plotted in Figure 10.48, shows the relationship between phase margin and damping ratio. As an example, Eq. (10.53) tells us that there is no peak frequency if ζ0:707. Hence, there is no peak to the closed-loop magnitude frequency response curve forthis value of damping ratio and larger. Thus, from Figure 10.48, a phase margin of65:52° ζ0:707or larger is required from the open-loop frequency response to ensure there is no peaking in the closed-loop frequency response. Response Speed from Open-Loop Frequency Response Equations (10.55) and (10.56) relate the closed-loop bandwidth to the desired settling orpeak time and the damping ratio. We now show that the closed-loop bandwidth can beestimated from the open-loop frequency response. From the Nichols chart in Figure 10.46,we see the relationship between the open-loop gain and the closed-loop gain. TheM0:707  3d Bcurve, replotted in Figure 10.49 for clarity, shows the open-loop gain when the closed-loop gain is  3 dB. This relationship typically occurs at ω BWif the low-frequency closed-loop gain is 0 dB. We can approximate Figure 10.49 by saying that –7–6–5–4–3–2–10 –280 –260 –240 –220 –200 –180 –160 –140 –120 –100 –80 Open-loo p phase (de grees)Closed-loop magnitude = –3 dBOpen-loop magnitude (dB) –8FIGURE 10.49 Open-loop gain vs. open-loop phase angle for 3 dB closed-loop gain10 02030405060708090 0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0 Damping ratioPhase margin (degrees) FIGURE 10.48 Phase margin vs. damping ratio580 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:48 the closed-loop bandwidth, ωBW(the frequency at which the closed-loop magnitude response is  3 dB), equals the frequency at which the open-loop magnitude response is between  6 and  7:5 dB if the open-loop phase response is between  135 °and 225 °. Then, using a second-order system approximation, Eqs. (10.55) and (10.56) can be used, along with the desired damping ratio, ζ,t oﬁnd settling time and peak time, respectively. Let us look at an example. Example 10.13 Settling and Peak Times from Open-Loop Frequency ResponseSettling and Peak Times from Open-Loop Frequency Response PROBLEM: Given the system of Figure 10.50( a) and the Bode diagrams of Figure 10.50( b), estimate the settling time and peak time. SOLUTION: Using Figure 10.50( b), we estimate the closed-loop bandwidth by ﬁnding the frequency where the open-loop magnitude response is in the range of  6t o 7:5d B if the phase response is in the range of  135 °to 225 °. Since Figure 10.50( b) shows  6t o  7:5 dB at approximately 3.7 rad/s with a phase response in the stated region, ωBW3:7r a d / s . ( )aE(s) 50 s(s + 3)(s + 6)C(s) R(s)+ – 10 6 2 –2 –6 –10–14–18–22–26–30 12 3 4 5 6 7 8 910 Frequency (rad/s)20 log M –100 –120–140–160–180–200–220–240Phase (degrees) 12 3 4 5 6 7 8 910 Frequency (rad/s) ( )b FIGURE 10.50 a.Block diagram; b.Bode diagrams for system of Example 10.1310.10 Relation Between Closed-Loop Transient and Open-Loop Frequency Responses 581WEBC10 10/28/2014 18:16:49 10.11 Steady-State Error Characteristics from Frequency Response In this section, we show how to use Bode diagrams to ﬁnd the values of the static error constants for equivalent unity feedback systems: Kpfor a Type 0 system, Kvfor a Type 1 system, and Kafor a Type 2 system. The results will be obtained from unnormalized and unscaled Bode log-magnitude plots. Position Constant ToﬁndKp, consider the following Type 0 system: G sK∏n i1 szi ∏m i1 spi(10.74) A typical unnormalized and unscaled Bode log-magnitude plot is shown in Figure 10.51( a). The initial value is 20 log M20 log K∏n i1zi ∏m i1pi(10.75)Skill-Assessment Exercise 10.9 PROBLEM: Using the open-loop frequency response for the system in Figure 10.10, where G s100 s s5 estimate the percent overshoot, settling time, and peak time for the closed-loop step response. ANSWERS: %OS44%;Ts1:64 s;andTP0:33 s The complete solution is at www.wiley.com/college/nise .Next ﬁndζvia the phase margin. From Figure 10.50( b), the phase margin is found by ﬁrstﬁnding the frequency at which the magnitude plot is 0 dB. At this frequency, 2.2 rad/s, the phase is about  145 °. Hence, the phase margin is approximately  145 °   180 ° 35°. Using Figure 10.48, ζ0:32. Finally, using Eqs. (10.55) and (10.56), with the values of ωBWandζjust found, Ts4:86 seconds and Tp129 seconds. Checking the analysis with a computer simulation shows Ts5:5 seconds, and Tp1:43 seconds.582 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:49 But for this system KpK∏n i1zi ∏m i1pi(10.76) which is the same as the value of the low-f requency axis. Thus, for an unnormalized and unscaled Bode log-magnitude plot, the low-frequency magnitude is 20 log Kpfor a Type 0 system. Velocity Constant ToﬁndKvfor a Type 1 system, consider the following open-loop transfer function of a Type 1 system: G sK∏n i1 szi s∏m i1 spi(10.77) A typical unnormalized and unscaled Bode log-magnitude diagram is shown in Figure 10.51( b) for this Type 1 system. The Bode plot starts at 20 log M20 log K∏n i1zi ω0∏m i1pi(10.78) The initial  20 dB/decade slope can be thought of as originating from a function, G´ sK∏n i1zi s∏m i1pi(10.79)20 log M 20 log Kp 0 ( )a20 log M 20 log K 0 ( )bi=1n i=10–20 dB/dec Kv 20 log M 0 ( )c–40 dB/dec Kam pi 20 log K i=10mpi2zi i=1n zi FIGURE 10.51 Typical unnormalized and unscaled Bode log-magnitude plots showing the value of static error constants: a.Type 0; b.Type 1; c.Type 210.11 Steady-State Error Characteristics from Frequency Response 583WEBC10 10/28/2014 18:16:50 G´ sintersects the frequency axis when ωK∏n i1zi ∏m i1pi(10.80) But for the original system (Eq. (10.77)), KvK∏n i1zi ∏m i1pi(10.81) which is the same as the frequency-axis intercept, Eq. (10.80). Thus, we can ﬁndKvby extending the initial  20 dB/decade slope to the frequency axis on an unnormalized and unscaled Bode diagram. The intersection with the frequency axis is Kv. Acceleration Constant ToﬁndKafor a Type 2 system, consider the following: G sK∏n i1 szi s2∏m i1 spi(10.82) A typical unnormalized and unscaled Bode plot for a Type 2 system is shown in Figure 10.51( c). The Bode plot starts at 20 log M20 log K∏n i1zi ω2 0∏m i1pi(10.83) The initial  40 dB/decade slope can be thought of as coming from a function, G´ sK∏n i1zi s2∏m i1pi(10.84) G´ sintersects the frequency axis when ωﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ K∏n i1zi ∏m i1pivuuuuut(10.85) But for the original system (Eq. (10.82)), K aK∏n i1zi ∏m i1pi(10.86) Thus, the initial  40 dB/decade slope intersects the frequency axis atﬃﬃﬃﬃﬃﬃ Kap .584 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:50 Example 10.14 Static Error Constants from Bode PlotsStatic Error Constants from Bode Plots PROBLEM: For each unnormalized and unscaled Bode log-magnitude plot shown in Figure 10.52, a.Find the system type. b.Find the value of the appropriate static error constant. SOLUTION: Figure 10.52( a) is a Type 0 system, since the initial slope is zero. The value of Kpis given by the low-frequency asymptote value. Thus, 20 log Kp25, or Kp17:78. 30 25201510 5020 log M 0.1 1 10 Frequency (rad/s) (a) 15–5 –25–45 –65–85 –10520 log M 0.1 1 10 Frequency (rad/s) (b)0 604020 0 –20–40 –6020 log M 0.1 1 10 Frequency (rad/s) (c)–40 dB/dec –20 dB/dec –40 dB/dec Zero dB crossing–20 dB/dec –20 dB/dec Zero dB crossing –40 dB/dec –20 dB/dec FIGURE 10.52 Bode log-magnitude plots for Example 10.1410.11 Steady-State Error Characteristics from Frequency Response 585WEBC10 10/28/2014 18:16:51 10.12 Systems with Time Delay Time delay occurs in control systems when there is a delay between the commanded response and the start of the output response. For example, consider a heating systemthat operates by heating water for pipeline distribution to radiators at distant locations.Since the hot water must ﬂow through the line, the radiators will not begin to get hot until after a speci ﬁed time delay. In other words, the time between the command for more heat and the commencement of the rise in temperature at a distant location along the pipeline is the time delay. Notice that th is is not the same as the transient response or the time it takes the temperature to rise to the desired level. During the time delay, nothing is occurring at the output. Modeling Time Delay Assume that an input, R(s), to a system, G(s), yields an output, C(s). If another system, G´ s, delays the output by Tseconds, the output response is c t T. From Table 2.2, Item 5, the Laplace transform of c t Tise sTC s. Thus, for the system without delay, C sR sG s, and for the system with delay, e sTC sR sG´ s. Dividing theseSkill-Assessment Exercise 10.10 PROBLEM: Find the static error constants for a stable unity feedback system whose open-loop transfer function has the Bode magnitude plot shown in Figure 10.53. ANSWERS: Kp∞;Kv∞;Ka90:25 The complete solution is www.wiley.com/college/nise .Figure 10.52( b) is a Type 1 system, since the initial slope is  20 dB/decade. The value of Kvis the value of the frequency that the initial slope intersects at the zero dB crossing of the frequency axis. Hence, Kv0:55. Figure 10.52( c) is a Type 2 system, since the initial slope is  40 dB/decade. The value ofﬃﬃﬃﬃﬃﬃ Kap is the value of the frequency that the initial slope intersects at the zero dB crossing of the frequency axis. Hence, Ka329. 150 100 50 0 –5020 log M 0.01 0.1 1 10 100 1000 Frequenc y (rad/s) FIGURE 10.53 Bode log-magnitude plot for Skill-Assessment Exercise 10.10586 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:51 two equations, G´ s=G se sT. Thus, a system with time delay Tcan be represented in terms of an equivalent system without time delay as follows: G´ se sTG s (10.87) The effect of introducing time delay into a system can also be seen from the perspective of the frequency response by substituting sjωin Eq. (10.87). Hence, G´ jω e jωTG jω jG jωjf ωTG jωg (10.88) In other words, the time delay does not affect the magnitude frequency response curve ofG jω, but it does subtract a linearly increasing phase shift, ωT, from the phase frequency response plot of G jω. The typical effect of adding time delay can be seen in Figure 10.54. Assume that the gain and phase margins as well as the gain- and phase-margin frequenciesshown in the ﬁgure apply to the system without delay. From the ﬁgure, we see that the r e d u c t i o ni np h a s es h i f tc a u s e db yt h ed e l a y reduces the phase margin. Using a second- order approximation, this reduction in phase margin yields a reduced damping ratio for the closed-loop system and a more oscillato ry response. The reduction of phase also leads to a reduced gain-margin frequency. From the magnitude curve, we can see that a reduced gain-margin frequency leads to reduced gain margin, thus moving the systemcloser to instability. An example of plotting frequency response curves for systems with delay follows.0 dB 180°Gain plot GMM(dB) log ωlog ω Phase (degrees) Phase plot with dela yPhase plot without delayGM ΦMΦM ω ω FIGURE 10.54 Effect of delay upon frequency response Example 10.15 Frequency Response Plots of a System with Time DelayFrequency Response Plots of a System with Time Delay PROBLEM: Plot the frequency response for the system G sK=s s1 s10if there is a time delay of 1 second through the system. Use the Bode plots. SOLUTION: Since the magnitude curve is not affected by the delay, it can be plotted by the methods previously covered in the chapter and is shown in Figure 10.55( a) forK1.10.12 Systems with Time Delay 587WEBC10 10/28/2014 18:16:52 Let us now use the results of Example 10.15 to design stability and analyze transient response and compare the results to the system without time delay.The phase plot, however, is affected by the delay. Figure 10.55( b) shows the result. First draw the phase plot for the delay, e jωT1 ωT1 ω, since T1 from the problem statement. Next draw the phase plot of the system, G jω, using the methods previously covered. Finally, add the two phase curves together to obtain the total phase response for e jωTG jω. Be sure to use consistent units for the phase angles of G jωand the delay; either degrees or radians. Notice that the delay yields a decreased phase margin, since at any frequency the phase angle is more negative. Using a second-order approximation, this decrease inphase margin implies a lower damping ratio and a more oscillatory response for theclosed-loop system. Further, there is a decrease in the gain-margin frequency. On the magnitude curve, note that a reduction in the gain-margin frequency shows up as reduced gain margin, thusmoving the system closer to instability. Students who are using MATLAB should now run ch10p7 in Appendix B.You will learn how to use MATLAB to include time delay on Bode plots. You will also use MATLAB to make multiple plots on one graph and label the plots. This exercise solves Example 10.15using MATLAB. Example 10.16 Range of Gain for Stability for System with Time DelayRange of Gain for Stability for System with Time Delay PROBLEM: The open-loop system with time delay in Example 10.15 is used in a unity feedback con ﬁguration. Do the following: a.Find the range of gain, K, to yield stability. Use Bode plots and frequency response techniques. b.Repeat Part afor the system without time delay.Time delaySystem Total20 0 –20 –40 –60 –8020 log M 0.1 1 10 0.01 Frequency (rad/s) (a) –200 –400 –600 –800Phase (degrees) 0.1 1 0.01 Frequency (rad/s) (b)0 10FIGURE 10.55 Frequency response plots for G sK=s s1 s10 with a delay of 1 second andK1:a.magnitude plot; b.phase plot588 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:53 SOLUTION: a.From Figure 10.55, the phase angle is  180 °at a frequency of 0.81 rad/s for the system with time delay, marked “Total ”on the phase plot. At this frequency, the magnitude curve is at  20.39 dB. Thus, Kcan be raised from its current value of unity to 1020:39=2010:46. Hence, the system is stable for 0 <K10:46. b.If we use the phase curve without delay, marked “System, ” 180 °occurs at a frequency of 3.16 rad/s, and Kcan be raised 40.84 dB or 110.2. Thus, without delay the system is stable for 0 <K110:2, an order of magnitude larger. Example 10.17 Percent Overshoot for System with Time DelayPercent Overshoot for System with Time Delay PROBLEM: The open-loop system with time delay in Example 10.15 is used in a unity feedback con ﬁguration. Do the following: a.Estimate the percent overshoot if K5. Use Bode plots and frequency response techniques. b.Repeat Part afor the system without time delay. SOLUTION: a.Since K5, the magnitude curve of Figure 10.55 is raised by 13.98 dB. The zero dB crossing then occurs at a frequency of 0.47 rad/s with a phase angle of  145 °, as seen from the phase plot marked “Total. ”Therefore, the phase margin is  145 °   180 ° 35°. Assuming a second-order approximation and using Eq. (10.73) or Figure 10.48, we ﬁnd ζ0:33. From Eq. (4.38), %OS33%. The time response, Figure 10.56( a), shows a 38% overshoot instead of the predicted 33%. Notice the time delay at the start of the curve. b.The zero dB crossing occurs at a frequency of 0.47 rad/s with a phase angle of  118 °, as seen from the phase plot marked “System. ”Therefore, the phase margin is  118 °   180 ° 62°. Assuming a second-order approximation and usingc(t) 0.2 0 0 5 10 15 20 25 30 Time (seconds) (a)0.40.60.81.01.21.4 FIGURE 10.56 Step response for closed-loop system with G s5=s s1 s10: a.with a 1-second delay; (ﬁgure continues )10.12 Systems with Time Delay 589WEBC10 10/28/2014 18:16:54 In summary, then, systems with time delay can be handled using previously described frequency response techniques if the phase response is adjusted to re ﬂect the time delay. Typically, time delay reduces gain and phase margins, resulting in increased percent overshoot or instability in the closed-loop response.Eq. (10.73) or Figure 10.48, we ﬁndζ0:64. From Eq. (4.38), %OS7:3%. The time response is shown in Figure 10.56( b). Notice that the system without delay has less overshoot and a smaller settling time.FIGURE 10.56 (Continued ) b.without delay c(t) 02468 1 00.2 00.40.60.81.01.2 2468 1 0 Time (seconds) (b) Skill-Assessment Exercise 10.11 PROBLEM: For the system shown in Figure 10.10, where G s10 s s1 ﬁnd the phase margin if there is a delay in the forward path of a.0s b.0.1 s c.3s ANSWERS: a.18.0 ° b.0.35 ° c. 151 :41° The complete solution is at www.wiley.com/college/nise .TryIt 10.6 Use MATLAB, the Control System Toolbox, and the followingstatements to solve Skill-AssessmentExercise 10.11. For each part of the problem let dthe speci ﬁed delay. G=zpk( [] ,[0,  1] ,10) d=0 [numGd,denGd] =pade... (d,12) Gd=tf(numGd,denGd) Ge=G*Gd bode(Ge)grid on After the Bode diagrams appear: Right-click in the graph area.2. Select Characteristics. Select All Stability Margins. Let the mouse rest on the margin point on the phase plot to read thephase margin.590 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:55 10.13 Obtaining Transfer Functions Experimentally In Chapter 4, we discussed how to obtain th e transfer function of a system through step-response testing. In this section, we show how to obta in the transfer function using sinusoidal frequency response data. The analytical determination of a system ’s transfer function can be difﬁ cult. Individual component values may not be known, or the internal con ﬁguration of the system may not be accessible. In such cases, the frequency response of the system, from input to output, can be obtained experiment a l l ya n du s e dt od e t e r m i n et h et r a n s f e r function. To obtain a frequency response plot experimentally, we use a sinusoidalforce or signal generator at the input to the system and measure the output steady-statesinusoid amplitude and phase angle (see Figure 10.2). Repeating this process at a numberof frequencies yields data for a frequency response plot. Referring to Figure 10.2( b), the amplitude response is M ωM o ω=Mi ω, and the phase response is ϕ ωϕo ω ϕi ω. Once the frequency response is obtained, the transfer function of the system can be estimated from the break frequencies and slopes. Frequency responsemethods can yield a more reﬁ ned estimate of the transfer function than the transient response techniques covered in Chapter 4. Bode plots are a convenient presentation of the frequency response data for the purpose of estimating the transfer function. These plots allow parts of the transfer function tobe determined and extracted, leading the way to further re ﬁnements to ﬁnd the remaining parts of the transfer function. Although experience and intuition are invaluable in the process, the following steps are still offered as a guideline: 1.Look at the Bode magnitude and phase plots and estimate the pole-zero con ﬁguration of the system. Look at the initial slope on the magnitude plot to determine system type. Look at phase excursions to get an idea of the difference between the number of polesand the number of zeros. 2.See if portions of the magnitude and phase curves represent obvious ﬁrst- or second-order pole or zero frequency response plots. 3.See if there is any telltale peaking or depressions in the magnitude response plot thatindicate an underdamped second-order pole or zero, respectively. 4.If any pole or zero responses can be identi ﬁed, overlay appropriate 20 or 40dB/decade lines on the magnitude curve or 45°/decade lines on the phase curve and estimate the break frequencies. For second-order poles or zeros, estimate the damping ratio andnatural frequency from the standard curves given in Section 10.2. 5.Form a transfer function of unity gain using the poles and zeros found. Obtain thefrequency response of this transfer function and subtract this response from the previousfrequency response ( Franklin ,1991 ). You now have a frequency response of reduced complexity from which to begin the process again to extract more of the system’ s poles and zeros. A computer program such as MATLAB is of invaluable help for this step. Let us demonstrate. Example 10.18 Transfer Function from Bode PlotsTransfer Function from Bode Plots PROBLEM: Find the transfer function of the subsystem whose Bode plots are shown in Figure 10.57.10.13 Obtaining Transfer Functions Experimentally 591WEBC10 10/28/2014 18:16:55 SOLUTION: Let us ﬁrst extract the underdamped poles that we suspect, based on the peaking in the magnitude curve. We estimate the natural frequency to be near the peak frequency, or approximately 5 rad/s. From Figure 10.57, we see a peak of about 6.5 dB,which translates into a damping ratio of about ζ0:24 using Eq. (10.52). The unity gain second-order function is thus G 1 sω2 n= s22ζωnsω2n25= s22:4s25. The frequency response plot of this function is made and subtracted from the previous Bode plots to yield the response in Figure 10.58. –15 –20–25–30–35–40–45–50–5520 log M 10 100 1000 1 Frequency (rad/s) 0 –20 –40–60–80 –100Phase (degrees) Frequenc y (rad/s)10 100 1000 1 FIGURE 10.58 Original Bode plots minus response of G1 s25= s22:4s25Phase (degrees) 10000 –50 –100 –150–200–250–300 100 10 1 Fre quenc y (rad/s)20 log M 10000 –50 –100 –150 100 10 1 Frequency (rad/s) FIGURE 10.57 Bode plots for subsystem with undetermined transfer function592 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:56 Overlaying a  20 dB/decade line on the magnitude response and a  45 °/decade line on the phase response, we detect a ﬁnal pole. From the phase response, we estimate the break frequency at 90 rad/s. Subtracting the response of G2 s90= s90from the previous response yields the response in Figure 10.59. Figure 10.59 has a magnitude and phase curve similar to that generated by a lag function. We draw a  20 dB/decade line and ﬁt it to the curves. The break frequencies are read from the ﬁgure as 9 and 30 rad/s. A unity gain transfer function containing a pole at  9a n daz e r oa t  30 is G3 s0:3 s30= s9. Upon subtraction of G1 sG2 sG3 s,w e ﬁnd the magnitude frequency response ﬂat1d B and the phase response ﬂat at  3°5°. We thus conclude that we are ﬁnished extracting dynamic transfer functions. The low-frequency, or dc, value of the original curve is  1 9d B ,o r0 . 1 1 .O u re s t i m a t eo ft h es u b s y s t e m ’s transfer function is G s0:11G1 sG2 sG3 s,o r G s0:1125 s22:4s25/C18/C19 901 s90/C18/C19 0:3s30 s9/C18/C19 74:25s30 s9 s90 s22:4s25(10.89) It is interesting to note that the original curve was obtained from the function G s70s20 s7 s70 s22s25(10.90)Phase (degrees) 10000 –5 –10 –15 –20 –25 –30 –35 100 10 1 Frequenc y (rad/s)20 log M 1000–18 –20 –22 –24 –26 –28 –30 –32 100 10 1 Frequency (rad/s) FIGURE 10.59 Original Bode plot minus response of G1 sG2 s25= s22:4s25 90= s9010.13 Obtaining Transfer Functions Experimentally 593WEBC10 10/28/2014 18:16:56 In this chapter, we derived the relationships between time response performance and the frequency responses of the open- and closed-loop systems. The methods derived, although yielding a different perspective, are simply alternatives to the root locus andsteady-state error analyses previously covered.Skill-Assessment Exercise 10.12 PROBLEM: Estimate G(s), whose Bode log-magnitude and phase plots are shown in Figure 10.60. ANSWER: G s30 s5 s s20 The complete solution is at www.wiley.com/college/nise . –40–30–20–100102020 log M 1 10 100 1000 Frequency (rad/s) –95–90–80 –85–75–60–65 –70–55–50–45Phase (degrees) 1 10 100 1000 Frequenc y (rad/s) FIGURE 10.60 Bode plots for Skill-Assessment Exercise 10.12Students who are using MATLAB should now run ch10 p8 in Appendix B. You will learn how to use MATLAB to subtract Bode plots for thepurpose of estimating transfer functions through si nusoidal testing. This exercise solves a portion of Example 10.18 usingMATLAB.594 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:57 Case Study Antenna Control: Stability Design andT ransient PerformanceAntenna Control: Stability Design and Transient Performance Our ongoing antenna position control system serves now as an example that summarizes the major objectives of the chapter. The case study demonstrates the use of frequency response methods to ﬁnd the range of gain for stability and to design a value of gain to meet a percent overshoot requirement for the closed-loop step response. PROBLEM: Given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 1, use frequency response techniques to ﬁnd the following: a.The range of preampli ﬁer gain, K, required for stability b.Percent overshoot if the preampli ﬁer gain is set to 30 c.The estimated settling time d.The estimated peak time e.The estimated rise time SOLUTION: Using the block diagram (Con ﬁguration 1) shown on the front endpapers and performing block diagram reduction yields the loop gain, G(s)H(s), as G sH s6:63K s s1:71 s1000:0388 K ss 1:711/C16/C17s 1001/C16/C17 (10.91) Letting K1, we have the magnitude and phase frequency response plots shown in Figure 10.61. 0 –180 11 0 Frequency (rad/s)100 0.1 1000 11 0 Frequency (rad/s)100 0.1 1000–180 –200 –220 –240 –260Phase (degrees)–160 –160–140 –140–120 –120–100 –10020 log M–80 –280–80–60–40–20 FIGURE 10.61 Open-loop frequency response plots for the antenna control system K1Case Study 595WEBC10 10/28/2014 18:16:58 Summary Frequency response methods are an alternative to the root locus for analyzing and designing feedback control systems. Frequency response techniques can be used more effectively than transient response to model physical systems in the laboratory. On theother hand, the root locus is more directly related to the time response. The input to a physical system can be sinusoidally varying with known frequency, amplitude, and phase angle. The system ’s output, which is also sinusoidal in the steady state, can then be measured for amplitude and phase angle at different frequencies. Fromthis data, the magnitude frequency response of the system, which is the ratio of the outputamplitude to the input amplitude, can be pl otted and used in place of an analytically obtained magnitude frequency response. Similarly, we can obtain the phase response byﬁnding the difference between the output phase angle and the input phase angle at different frequencies.a.In order to ﬁnd the range of Kfor stability, we notice from Figure 10.61 that the phase response is  180 °atω13:1 rad/s. At this frequency, the magnitude plot is  68.41 dB. The gain, K, can be raised by 68.41 dB. Thus, K2633 will cause the system to be marginally stable. Hence, the system is stable if 0 <K<2633. b.Toﬁnd the percent overshoot if K30, we ﬁrst make a second-order approximation and assume that the second-order transient response equations relating percent overshoot,damping ratio, and phase margin are true for this system. In other words, we assume thatEq. (10.73), which relates damping ratio to phase margin, is valid. If K30, the magnitude curve of Figure 10.61 is moved up by 20 log 30 29:54 dB. Therefore, the adjusted magnitude curve goes through zero dB at ω1. At this frequency, the phase angle is  120 :9°, yielding a phase margin of 59.1 °. Using Eq. (10.73) or Figure 10.48, ζ0:6, or 9.48% overshoot. A computer simulation shows 10%. c.To estimate the settling time, we make a second-order approximation and useEq. (10.55). Since K30 (29.54 dB), the open-loop magnitude response is  7d B when the normalized magnitude response of Figure 10.61 is  36.54 dB. Thus, the estimated bandwidth is 1.8 rad/s. Using Eq. (10.55), T s4:25 seconds. A computer simulation shows a settling time of about 4.4 seconds. d.Using the estimated bandwidth found in Part calong with Eq. (10.56) and the damping ratio found in a, we estimate the peak time to be 2.5 seconds. A computer simulation shows a peak time of 2.8 seconds. e.To estimate the rise time, we use Figure 4.16 and ﬁnd that the normalized rise time for a damping ratio of 0.6 is 1.854. Using Eq. (10.54), the estimated bandwidth found inc, and ζ0:6, we ﬁndω n1:57. Using the normalized rise time and ωn,w e ﬁnd Tr1:854=1:571:18 seconds. A simulation shows a rise time of 1.2 seconds. CHALLENGE: You are now given a problem to test your knowledge of this chapter ’s objectives. You are given the antenna azimuth position control system shown on the frontendpapers, Con ﬁguration 3. Record the block diagram parameters in the table shown on the front endpapers for Con ﬁguration 3 for use in subsequent case study challenge problems. Using frequency response methods, do the following: a.Find the range of gain for stability. b.Find the percent overshoot for a step input if the gain, K, equals 3. c. Repeat Parts aandbusing MATLAB.596 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:58 The frequency response of a system can be represented either as a polar plot or as separate magnitude and phase diagrams. As a polar plot, the magnitude response is the length of a vector drawn from the origin to a point on the curve, whereas the phase responseis the angle of that vector. In the polar plot, frequency is implicit and is represented by eachpoint on the polar curve. The polar plot of G(s)H(s) is known as a Nyquist diagram . Separate magnitude and phase diagrams, sometimes referred to as Bode plots , present the data with frequency explicitly enumerated along the abscissa. The magnitudecurve can be a plot of log-magnitude versus log-frequency. The other graph is a plot ofphase angle versus log-frequency. An advantage of Bode plots over the Nyquist diagram is that they can easily be drawn using asymptotic approximations to the actual curve. The Nyquist criterion sets forth the theoretical foundation from which the frequency response can be used to determine a system ’s stability. Using the Nyquist criterion and Nyquist diagram, or the Nyquis t criterion and Bode plots, we can determine as y s t e m ’s stability. Frequency response methods give us not only stability information but also transient response information. By de ﬁning such frequency response quantities as gain margin and phase margin, the transient response can be analyzed or designed. Gain margin is the amount that the gain of a system can be increased before instability occurs if the phase angle is constant at 180 °.Phase margin is the amount that the phase angle can be changed before instability occurs if the gain is held at unity. While the open-loop frequency response leads to the results for stability and transient response just described, other desi gn tools relate the closed-loop frequency response peak and bandwidth to the transient response. Since the closed-loop responseis not as easy to obtain as the open-loop res ponse, because of the unavailability of the closed-loop poles, we use graphical aids in order to obtain the closed-loop frequency response from the open-loop frequency response. These graphical aids are the MandN circles and the Nichols chart. By superimposing the open-loop frequency response over theMand Ncircles or the Nichols chart, we are able to obtain the closed-loop frequency response and then analyze and design for transient response. Today, with the availability of computers and appropriate software, frequency response plots can be obtained without relying on the graphical techniques describedin this chapter. The program used for the root locus calculations and described inAppendix H.2 is one such program. MATLAB is another. We concluded the chapter discussion by showing how to obtain a reasonable estimate of a transfer function using its frequency response, which can be obtainedexperimentally. Obtaining transfer functions this way yields more accuracy than transientresponse testing. This chapter primarily has examined analysis of feedback control systems via frequency response techniques. We developed the relationships between frequencyresponse and both stability and transient response. In the next chapter, we apply theconcepts to the design of feedback control systems, using the Bode plots. Review Questions 1.Name four advantages of frequency response techniques over the root locus. 2.Deﬁne frequency response as applied to a physical system. 3.Name two ways to plot the frequency response. 4.Brieﬂy describe how to obtain the frequency response analytically. 5.Deﬁne Bode plots. 6.Each pole of a system contributes how much of a slope to the Bode magnitude plot?Review Questions 597WEBC10 10/28/2014 18:16:58 7.A system with only four poles and no zeros would exhibit what value of slope at high frequencies in a Bode magnitude plot? 8.A system with four poles and two zeros would exhibit what value of slope at high frequencies in a Bode magnitude plot? 9.Describe the asymptotic phase response of a system with a single pole at  2. 10.What is the major difference between Bode magnitude plots for ﬁrst-order systems and for second-order systems? 11.For a system with three poles at  4, what is the maximum difference between the asymptotic approximation and the actual magnitude response? 12.Brieﬂy state the Nyquist criterion. 13.What does the Nyquist criterion tell us? 14.What is a Nyquist diagram? 15.Why is the Nyquist criterion called a frequency response method? 16.When sketching a Nyquist diagram, what must be done with open-loop poles on theimaginary axis? 17.What simpli ﬁcation to the Nyquist criterion can we usually make for systems that are open-loop stable? 18.What simpli ﬁcation to the Nyquist criterion can we usually make for systems that are open-loop unstable? 19.Deﬁne gain margin. 20.Deﬁne phase margin. 21.Name two different frequency response characteristics that can be used to determine asystem ’s transient response. 22.Name three different methods of ﬁnding the closed-loop frequency response from the open-loop transfer function. 23.Brieﬂy explain how to ﬁnd the static error constant from the Bode magnitude plot. 24.Describe the change in the open-loop frequency response magnitude plot if time delay is added to the plant. 25.If the phase response of a pure time delay were plotted on a linear phase versus linear frequency plot, what would be the shape of the curve? 26.When successively extracting component transfer functions from experimentalfrequency response data, how do you know when you are ﬁnished? Problems 1.Find analytical expressions for the magnitude and phaseresponse for each G(s) below. [Section: 10.1] a.G s1 s s2 s4 b.G s s5 s2 s4 c.G s s3 s5 s s2 s4 2.For each function in Problem 1, make a plot of thelog-magnitude and the phase, using log-frequencyin rad/s as the ordinate. Do not use asymptoticapproximations. [ Section: 10.1] 3.For each function in Problem 1, make a polar plot of thefrequency response. [Section: 10.1] 4.For each function in Problem 1, sketch the Bodeasymptotic magnitude and asymptotic phase plots.Compare your results with your answers to Problem 1.[Section: 10.2] 5.Sketch the Nyquist diagram for each of the systems in Figure P10.1. [Section: 10.4]598 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:16:58 + –50 s(s + 3)(s + 6)E(s) R(s) C(s) + E(s) R(s) C(s)+ 50 s2(s + 1)R(s) C(s) (s + 4) + 20 s(s + 1)R(s) C(s) (s + 4)(s + 3)System 1 – ––System 2 System 4System 3 100(s + 5) s(s + 3)(s2 + 4) FIGURE P10.1 6.Draw the polar plot from the separate magnitude and phase curves shown in Figure P10.2. [Section: 10.1]7.Draw the separate magnitude and phase curves from the polar plot shown in Figur e P10.3. [Section: 10.1]Imaginary axis8 6420 –2 –4 –6 –8 Real axis10 8 6 4 2 –2 –4× 10–3 × 10–31087 6 5 4 3 2ω =1 0 FIGURE P10.3Phase (deg) 1000 –50 –100 –150 –200 10 1 0.1 Frequenc y (rad/s)20 log M 1000 –10–20–30–40 10 1 0.1 Frequency (rad/s) FIGURE P10.2Problems 599WEBC10 10/28/2014 18:16:59 8.Write a program in MATLAB that will do the following: a.Plot the Nyquist diagram of a system b.Display the real-axis crossing value and frequency Apply your program to a unity feedback system with G sK s5 s26s100 s24s25 9.Using the Nyquist criterion, ﬁnd out whether each system of Problem 5 is stable. [Section: 10.3] 10.Using the Nyquist criterion, ﬁnd the range of Kfor stability for each of the systems in Figure P10.4.[Section: 10.3] + K (s + 2)R(s) C(s) + (s + 2)(s + 4)R(s) C(s) System 2System 1 + K(s – 1) (s + 1) (s – 2) (s + 2)R(s) C(s) System 31 (s + 4)(s + 6) – –– 1 sK(s2 – 4s + 13) FIGURE P10.4 11.For each system of Problem 10, ﬁnd the gain margin and phase margin if the value of Kin each part of Problem 10 is [Section: 10.6] a.K1000 b.K100 c.K0:1 12.Write a program in MATLAB thatwill do the following: a.Allow a value of gain, K, to be entered from the keyboardb.Display the Bode plots of a system for the entered value of K c.Calculate and display the gain and phase margin for the entered valueofK Test your program on a unity feedback system with G sK=s s3 s12. Use MATLAB ’s LTI Viewer to ﬁnd the gain margin, phase margin,zero dB frequency, and 180 °frequency for a unity feedback system with G s8000 s6 s20 s35 Use the following methods: a.The Nyquist diagram b.Bode plots 14.Derive Eq. (10.54), the closed-loop bandwidth interms of ζandω nof a two-pole system. [Section: 10.8] 15.For each closed-loop system with the following performance characteristics, ﬁnd the closed-loop bandwidth: [Section: 10.8] a.ζ0:2;Ts3 seconds b.ζ0:2;Tp3 seconds c.Ts4 seconds ;Tp2 seconds d.ζ0:3;Tr4 seconds : 16.Consider the unity feedback system of Figure 10.10. For each G(s) that follows, use the MandNcircles to make a plot of the closed-loop frequency response:[Section: 10.9] a.G s10 s s1 s2 b.G s1000 s3 s4 s5 s6 c.G s50 s3 s s2 s4 17.Repeat Problem 16,using the Nichols chart in place oftheMandNcircles. [Section: 10.9] 18.Using the results of Problem 16, estimate the percent overshoot that can be expected in the step response for each system shown. [Section: 10.10] 19.Use the results of Problem 17 to estimate the percentovershoot if the gain term in the numerator of the600 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:0 forward path of each part of the problem is respec- tively changed as follows: [Section: 10.10] a.From 10 to 30 b.From 1000 to 2500 c.From 50 to 75 20.Write a program in MATLAB that will do the following: a.Allow a value of gain, K, to be entered from the keyboard b.Display the closed-loop magnitude andphase frequency response plots of aunity feedback system with an open-loop transfer function, KG(s) c.Calculate and display the peak magni-tude, frequency of the peak magnitude,and bandwidth for the closed-loopfrequency response and the entered value of K Test your program on the system of Figure P10.5 for K50. K(s + 5) s(s2 + 4s +16)+ –R(s) E(s) C(s) FIGURE P10.5 21.Use MATLAB ’s LTI Viewer with the Nichols plot to ﬁnd the gain margin, phase margin, zero dB frequency, and 180 °frequency for a unity feedback system with the forward-path transferfunction G s5 s6 s s24s15 22.Write a program in MATLAB thatwill do the following: a.Make a Nichols plot of an open-looptransfer function b.Allow the user to read the Nichols plotdisplay and enter the value of M p c.Make closed-loop magnitude and phase plots d.Display the expected values of percent overshoot, settling time, and peak time e.Plot the closed-loop step response Test your program on a unity feedback system with the forward-path transferfunctionG s5 s6 s s24s15 and explain any discrepancies. 23.Using Bode plots, estimate the transient response of thesystems in Figure P10.6. [Section: 10.10] + 100(s + 2) s(s + 1)(s + 4)R(s) C(s) – System 1 + 50(s + 3)(s + 5) s(s + 2)(s + 4)(s + 6)E(s) R(s) C(s) – System 2 FIGURE P10.6 24.For the system of Figure P10.5, do the following: [Section: 10.10] a.Plot the Bode magnitude and phase plots. b.Assuming a second-order approximation, estimatethe transient response of the system if K2. c. Use MATLAB or any other programto check your assumptions by simulating the step response of thesystem. Write a program in MATLAB thatwill use an open-loop transfer function, G(s), to do the following: a.Make a Bode plot b.Use frequency response methods toestimate the percent overshoot, settling time, and peak time c.Plot the closed-loop step response Test your program by comparing the results to those obtained for the systemsof Problem 23. 26.The Bode plots for a plant, G(s), used in a unity feedback system are shown in Figure P10.7. Do the following: a.Find the gain margin, phase margin, zero dB frequency,180 °frequency, and the closed-loop bandwidth. b.Use your results in Part ato estimate the damping ratio, percent overshoot, settling time, and peak time. 27.The open-loop frequency response shown in Figure P10.8 was experimentally obtained from aunity feedback system. Estimate the percent overshootand steady-state error of the closed-loop system. [Sections: 10.10, 10.11]Problems 601WEBC10 10/28/2014 18:17:0 20 0 –20 –90 –135 –180–225 –270–40 –60 –80 –100 10 –1100 Frequency (rad/s) Frequency (rad/s)20 log M Phase (degrees)101102 10–1100101102 FIGURE P10.7 60 40 20 0 –100 –100 –120 –140 –160 –180 –200 –220 –240 –260–80 –280–800.1 1 Frequency (rad/s)10 0.01 100–60–40–2020 log M 0.1 1 Frequency (rad/s)10 0.01 100Phase (degrees) FIGURE P10.8602 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:0 28.Consider the system in Figure P10.9. [Section: 10.12] R(s) + C(s)Delay50 (s + 2)(s + 5)E(s) – FIGURE P10.9 a.Find the phase margin if the system is stable for time delays of 0, 0.1, 0.2, 0.5, and 1 second. b.Find the gain margin if the system is stable for each ofthe time delays given in Part a. c.For what time delays mentioned in Part ais the system stable? d.For each time delay that makes the system unstable, how much reduction in gain is required for the system to be stable? 29.Given a unity feedback system with the forward-pathtransfer function G s K s1 s3 s6and a delay of 0.5 second, ﬁnd the range of gain, K,t o yield stability. Use Bode plots and frequency responsetechniques. [Section: 10.12] 30.Given a unity feedback system with the forward-pathtransfer function G s K s s1 s15 and a delay of 0.2 second, make a second-orderapproximation and estimate the percent overshoot ifK30. Use Bode plots and frequency response techniques. [Section: 10.12] Use the MATLAB function pade(T,n)to model the delay in Problem 30.Obtain the unit step response and eval-uate your second-order approximationin Problem 30. 32.For the Bode plots shown in Figure P10.10, determinethe transfer function by hand or via MATLAB.[Section: 10.13] 4020 log M Phase (degrees)20 –20 –90 –135 –180–40 –60 –80 10–1100101102103 10–1100101102103Frequency (rad/s) Frequency (rad/s)0 FIGURE P10.10Problems 603WEBC10 10/28/2014 18:17:1 33.Repeat Problem 32 for the Bode plots shown in Figure P10.11. [Section: 10.13] 34.An overhead crane consists of a horizontally movingtrolley of mass m Tdragging a load of mass mL,w h i c h dangles from its bottom surface at the end of a ropeofﬁxed length, L. The position of the trolley is controlled in the feedback con ﬁguration shown in Figure 10.20. Here, G sKP s;H1, and P sXT s FT s1 mTs2ω2 0 s2 s2aω2 0 The input is fT(t), the input force applied to the trolley. The output is xT(t), the trolley displacement. Also, ω0ﬃﬃﬃg Lr anda mLmT=mT(Marttinen ,1990 ) Make a qualitative Bode plot of the system assuming a>1. 35.A room ’s temperature can be controlled by varying the radiator power. In a speci ﬁc room, the transfer function from indoor radiator power, _Q, to room temperature, Tin °Ci s( Thomas ,2005 ) P sT s _Q s  110 6s2 1:31410 9s 2:6610 13 s30:00163 s2 5:27210 7s 3:53810 11The system is controlled in the closed-loop con ﬁguration shown in Figure 10.20 with G sKP s;H1. a.Draw the corresponding Nyquist diagram for K1. b.Obtain the gain and phase margins. c.Find the range of Kfor the closed-loop stability. Compare your result with that of Problem 58, Chapter 6. 36.The open-loop dynamics from dc voltage armature to angular position of a robotic manipulator joint is given byP s48500 s22:89s(Low, 2005 ). a.Draw by hand a Bode plot using asymptotic approximations for magnitude and phase. b.Use MATLAB to plot the exactBode plot and compare with yoursketch from Part a. 37.Problem 47, Chapter 8 discusses a magnetic levitation system with a plant transfer function P s  1300 s2 8602 (Galvão ,2003 ). Assume that the plant is in cascade with an M(s) and that the system will be controlled by the loop shown in Figure 10.20, where G sM sP s andH1. For each M(s) that follows, draw the Nyquist diagram when K1, and ﬁnd the range of closed-loop stability for K>0. a.M s  K b.M s K s200 s1000 (problem continues )15 10 5 0 –10 –2020 log M Frequency (rad/s) 50 0 –50 –100 –150Phase (degrees) 11 0 100 0.1 Frequenc y (rad/s)–5 –15 –20011 0 100 0.1 FIGURE P10.11604 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:1 (Continued ) c.Compare your results with those obtained in Problem 47, Chapter 8. 38.A simple modi ﬁed and linearized model for the transfer function of a certain bicycle from steer angle ( δ) to roll angle ( φ) is given by ( Åstrom ,2005 ) P sφ s δ s12 s20 s225 Assume the rider can be represented by a gain K, and that the closed-loop system is shown in Figure 10.20 with G sKP sandH1. Use MATLAB and the Nyquist stability criterion to ﬁnd the range of Kfor closed-loop stability. 39.The control of the radial pickup position of a digitalversatile disk (DVD) was discussed in Problem 48,Chapter 9. There, the open-loop transfer function fromcoil input voltage to radial pickup position was given as(Bittanti ,2002 ) P s 0:63 10:36 305:4ss2 305:42/C18/C19 10:04 248:2ss2 248:22/C18/C19 Assume the plant is in cascade with a controller, M s0:5 s1:63 s s0:27 and in the closed-loop con ﬁguration shown in Fig- ure 10.20, where G sM sP sandH1. Do the following: a.Draw the open-loop frequency response in a Nicholschart. b.Predict the system ’s response to a unit step input. Calculate the % OS,c ﬁnal, and Ts. c.Verify the results of Part b using MATLAB simulations. 40.A ship ’s roll can be stabilized with a control system. A voltage applied to the ﬁns’actuators creates a roll torque that is applied to the ship. The ship, in response to the rolltorque, yields a roll angle. Assuming the block diagramfor the roll control system shown in Figure P10.12,determine the gain and phase margins for the system.41.The linearized model of a particular network link working under TCP/IP and controlled using a random early detection (RED) algorithm can be describedby Figure 10.20 where G sM sP s;H1, and (Hollot ,2001 ) M s 0:005L s0:005;P s140625 e 0:1s s2:67 s10 a.Plot the Nichols chart for L1. Is the system closed-loop stable? b.Find the range of Lfor closed-loop stability. c.Use the Nichols chart to predict % OSandTsfor L0:95. Make a hand sketch of the expected unit step response. d.Verify Part cwith a Simulink unit step response simulation. 42.In the TCP/IP network link of Problem 41, let L0:8, but assume that the amount of delay is an unknown variable. a.Plot the Nyquist diagram of the system for zero delay,and obtain the phase margin. b.Find the maximum delay allowed for closed-loopstability. 43.An experimental holographic media storage systemuses a ﬂexible photopolymer disk. During rotation, the disk tilts, making information retrieval difﬁ cult. A system that compensates for the tilt has beendeveloped. For this, a laser beam is focused on the disk surface and disk varia tions are measured through reﬂection. A mirror is in turn adjusted to align with the disk and makes information retrieval possible. The system can be represented by a unity feedback systemin which a controller with transfer function G C s78:575 s4362 s132 s8030  and a plant P s1:163108 s3962:5s25:958105s1:16108 form an open loop transmission L sGc sP s (Kim,2009 ). +5TransducerFin actuator 0.5 s + 5Ship roll dynamics 9 s2 + 1.2s + 9Desired roll angle, θd(s) Voltage Torque –Roll angle error, θe(s) Actual roll angle, θ a(s) FIGURE P10.12 Block diagram of a ship ’s roll-stabilizing systemProblems 605WEBC10 10/28/2014 18:17:2 a.Use MATLAB to obtain the system ’s Nyquist diagram. Find out if the system is stable. b.Find the system ’s phase margin. c.Use the value of phase margin obtained inb. to calculate the expected sys- tem’s overshoot to a step input. d.Simulate the system’ s response to a unit step input and verify the %OScalculated in c. 44.The design of cruise control systems in heavy vehicles,such as big rigs, is especially challenging due to theextreme variations in payload. Assume that the fre-quency response for the transfer function from fuelmass ﬂow to vehicle speed is shown in Figure P10.13. 0 –10 –20–30–40Magnitude (dB) Phase (deg)–50–60 90 45 0 –45–90 Frequenc y (rad/s)10–610–510–410–310–210–1100101102103104 FIGURE P10.13 This response includes the dynamics of the engine, the gear box, the propulsion shaft, the differen- tial, the drive shafts, the chassis, the payload, and tire dynamics. Assume that the system is controlled in a closed-loop, unity-feedback loop using a proportionalcompensator ( van der Zalm ,2008 ). a.MakeaplotoftheNyquistdiagramthatcorrespondstothe Bode plot of Figure P10.13. b.Assuming there are no open-loop poles in the righthalf-plane, ﬁnd out if the system is closed-loop stable when the proportional gain K=1. c.Find the range of positive Kfor which the system is closed-loop stable. 45.Use LabVIEW with the ControlDesign and Simulation Module and MathScript RT Module to dothe following: Modify the CDEx Nyquist Analysis.vi to obtainthe range of Kfor stability using theNyquist plot for any system you enter. In addition, design a LabVIEW VI that will accept as an input the polynomialnumerator and polynomial denominatorof an open-loop transfer function andobtain a Nyquist plot for a value ofK=10,000. Your VI will also display the following as generated from theNyquist plot: (1) gain margin, (2) phase margin, (3) zero dB frequency, and (4) 180 degrees frequency. Use the system andresults of Skill-Assessment Exercise10.6 to test your VIs. 46.Use LabVIEW with the Control Design and Simulation Module, and MathScript RT Module to build a VI that will accept an open-loop transferfunction, plot the Bode diagram, and plotthe closed-loop step response. Your VIwill also use the CD Parametric TimeResponse VI to display (1) rise time, (2) peak time, (3) settling time, (4) percent overshoot, (5) steady-state value, and(6) peak value. Use the system in Skill-Assessment Exercise 10.9 to test your VI.Compare the results obtained from your VIwith those obtained in Skill-AssessmentExercise 10.9. The block diagram of a cascadesystem used to control waterlevel in a steam generator of anuclear power plant (Wang, 2009 ) was pre- sentedinFigureP6.14.Inthat system, the level controller, G LC(s), is the master controller and the feed-water ﬂow con- troller, GFC(s), is the slave controller. Consider that the inner feedback loopis replaced by its equivalent transferfunction, G WX(s). Using numerical values in (Wang, 2009 ) and ( Bhambhani, 2008 ) the transfer functions with a 1 second pure delay are: Gfw s2e τs s T1s12e s s 25s1; GWX s 4s1 3 3:333s1; GLC sKPLCKDLCs1:5 10s1606 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:2 Use MATLAB or any other program to: a.Obtain Bode magnitude and phase plots for this system using a ﬁfth-order Padé approximation (available in MATLAB). Note on these plots, if applicable, thegain and phase margins. b.Plot the response of the system, c(t), to a unit step input, r(t)=u(t). Note on the c(t) curve the rise time, T r, the settling time, Ts, the ﬁnal value of the output, and, if applicable, the percent overshoot, %OS, and mid peak time, Tp. c.Repeat the above two steps for a pure delay of 1.5 seconds. 48.Fruit ﬂies’ﬂight dynamics are interesting to study because they provide a proof-of-concept frameworkand inspiration for the invention of man-made machines.In an experiment ( Roth,2012 ),ﬂies are stimulated to follow, in ﬂight, an oscillating vertical bar. Through frequency response measurements, the obtained open-loop transfer function from stimulus stripe position to avoltage proportional to wingbeat amplitudes is G se  0:032s0:181s21:23s8:68 s320:6s2277s1098 Assume a unit feedback system. a.Make a Bode plot of the open-loop transfer function. b.Find the gain and phase margins. c.Use a computer program to make a plot of thecorresponding Nyquist diagram. d.Use the result in Part btoﬁnd the range of Kfor closed-loop stability if the open-loop transfer functionbecomes KG(s). 49.In order to self-balance a bicycle, its open-loop transferfunction is found to be ( Lam,2011 ): G s θ s U s 334019 s45126 :16s32470 :7s2428419 s 34040 where θ(s) is the angle of the bicycle with respect to the vertical, and U(s) is the voltage applied to the motor that drives a ﬂywheel used to stabilize the bicycle. Note that the bicycle is open-loop unstablewith one open-loop pole in the right half-plane. a.Draw the Nyquist diagram of the system. b.Find the system ’s gain and phase margins. c.Assuming a unit feedback system, ﬁnd the range of K for closed-loop stability if the forward path transferfunction is KG(s).d.Assuming a second-order approximation, what is the expected % OSifK=0.141? e.Use a computer program to simulate your system for a unit-step response using the valueofKin Part d. Modify the MATLAB program youdeveloped in Problem 10.20 to dothe following: a.Display the closed-loop magnitude and phase frequency response plots for the drivesystem( Thomsen,2011 )presented in Problem 56, Chapter 8. Using thegraph properties, specify the valueofKin the Bode plot title. b.Calculate and display the closed-looptransfer function, T(s), the peak magnitude, frequency of the peak magni-tude, and bandwidth for the closed-loop frequency response at the following two values of the proportional controller ’s gain, K=K P=3.2 and 10. 51.Al i n e a rm o d e lo ft h e α-subsystem of a grid- connected voltage-source converter (VSC) with aY-Y transformer (Mahmood ,2012) was presented in Problem 69, Chapter 8. In Figure P8.20( b), G C(s)=KandGP(s)i sg i v e ni nap o l ez e r of o r m (with a unity gain and slightly modiﬁ ed parameters) as follows: GP sVα s Mα s s2200  s220 s2120s16106 Use MATLAB and frequency response techniques to obtainthe Bode plots for this systemandﬁnd the following: a.The range of Kfor system stability b.The gain margin, phase margin, zero dB frequency, and 180° frequency, if K= 5×10 52.A new measurement-based technique to design ﬁxed- structure controllers for unknown SISO systems, which does not require system identi ﬁcation, has been proposed. The fourth -order transfer function s h o w nb e l o wa n dm o d i ﬁed to have a unity steady- s t a t eg a i ni su s e da sa ne x a m p l e( Khadraoui ,2013 ). G s0:1111 4s25s1 s43:1s30:85s20:87s0:1111 The interested reader is referred to the reference to explore this new technique. In this problem and itsProblems 607WEBC10 10/28/2014 18:17:3 companion design problem in Chapter 11, however, we take a standard approach as covered in Chapters 10 and 11. Assuming that a cascade- connected proportionalcontroller, G C(s)=K, is used, utilize MATLAB and frequency responsetechniques to obtain the Bode plots forthis system and ﬁnd: a.The range of Kfor system stability b.The gain margin, phase margin, zero dBfrequency, and 180 °frequency, if K=0.3. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 53.Control of HIV/AIDS. The linearized model for an HIV/AIDS patient treated with RTIs was obtained in Chapter 6 as ( Craig ,2004 ); P s Y s U1 s 520 s 10:3844 s32:6817 s20:11s0:0126 a.Consider this plant in the feedback con ﬁguration in Figure 10.20 with G sP sandH s1. Obtain the Nyquist diagram. Evaluate the system for closed-loop stability. b.Consider this plant in the feedback con ﬁguration in Figure 10.20 with G s  P sandH s1. Obtain the Nyquist diagram. Evaluate the systemfor closed-loop stability. Obtain the gain and phase margins. Hybrid vehicle. In Problem 71, Chapter 8, we used MATLAB to plotthe root locus for the speed control of an HEV rearranged as a unity-feedbacksystem, as shown in Figure P7.31 ( Preitl , 2007 ). The plant and compensator were given by G s K s0:6 s0:5858  s0:0163  and we found that K=0.78, resulted in a critically damped system. a.Use MATLAB or any other program toplot the following:i.The Bode magnitude and phase plots for that system, and ii.The response of the system, c(t), to a step input, r(t)=4u(t). Note on thec(t) curve the rise time, T r, and settling time, Ts,a sw e l la st h e ﬁnal value of the output. b.Now add an integral gain to the control- ler,suchthattheplantandcompensatortransfer function becomes G sK1 sZc s0:6 s s0:5858  s0:0163  where K1=0.78 and ZcK2 K10:4. Use MATLAB or any other program to do thefollowing: i.Plot the Bode magnitude and phaseplots for this case. ii.Obtain the response of the systemto a step input, r(t)=4u(t). Plot c(t) and note on it the rise time, T r, percent overshoot, % OS, peak time, Tp, and settling time, Ts. c.Does the response obtained in Parts a orbresembleasecond-orderoverdamped, critically damped, or underdampedresponse? Explain. 55.Parabolic trough collector. As discussed in Section 10.12, the Nyquist stability criterion can be applied tosystems with pure time delay without the need forrational approximations as required in Problems 8.72 and 9.59. You will verify this by applying the Nyquist stability criterion to the parabolic trough collector byassuming a unity-feedback system and a forward-pathtransfer function ( Camacho ,2012), G s 137:210 6K s20:0224 s19610 6e 39s a.Draw the corresponding Nyquist diagram for K=1. b.Use the Nyquist diagram to ﬁnd the range of Kfor which the system is closed-loop stable. c.Find the value of Kthat will make the system marginally stable and the associated frequency ofoscillation.608 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:3 Cyber Exploration Laboratory Experiment 10.1 Objectives To examine the relationships between open-loop frequency response and stability, open-loop frequency response and closed-loop transient response, and the effect of additional closed-loop poles and zeros upon the ability to predict closed-loop transientresponse Minimum Required Software Packages MATLAB, and the Control System Toolbox Prelab 1.Sketch the Nyquist diagram for a unity negative feedback system with a forward transfer function of G sK s s2 s10. From your Nyquist plot, determine the range of gain, K, for stability. 2.Find the phase margins required for second-order closed-loop step responses with the following percent overshoots: 5%, 10%, 20%, 30%. Lab 1.Using the SISO Design Tool, produce the f ollowing plots simultaneously for the system of Prelab 1: root locus, Nyquist diagram, and step response. Make plots for thefollowing values of K: 50, 100, the value for marginal stability found in Prelab 1, and a value above that found for marginal stability. Use the zoom tools when required toproduce an illustrative plot. Finally, change the gain by grabbing and moving theclosed-loop poles along the root locus and note the changes in the Nyquist diagramand step response. 2.Using the SISO Design Tool, produce Bode plots and closed-loop step responses for a unity negative feedback system with a forward transfer function of G s K s s102. Produce these plots for each value of phase margin found in Prelab 2. Adjust the gain to arrive at the desired phase margin by grabbing the Bode magnitude curve and moving itup or down. Observe the effects, if any, upon the Bode phase plot. For each case, recordthe value of gain and the location of the closed-loop poles. 3.Repeat Lab 2 for G s K s s10. Postlab 1.Make a table showing calculated and actual values for the range of gain for stability asfound in Prelab 1 and Lab 1. 2.Make a table from the data obtained in Lab 2 itemizing phase margin, percent overshoot,and the location of the closed-loop poles. 3.Make a table from the data obtained in Lab 3 itemizing phase margin, percent overshoot,and the location of the closed-loop poles. 4.For each Postlab task 1 to 3, explain any discrepancies between the actual valuesobtained and those expected. Experiment 10.2 Objectives To use LabVIEW and Nichols charts to determine the closed-loop time response performanceCyber Exploration Laboratory 609WEBC10 10/28/2014 18:17:4 Bibliography Åstrom, K., Klein, R. E., and Lennartsson, A. Bicycle Dynamics and Control. IEEE Control System , August 2005, pp. 26 –47. Bhambhani, V., and Chen, YQ. Experimental Study of Fractional Order Proportional Integral (FOPI) Controller for Water Level Control. 47th IEEE Conference on Decision and Control , 2008, pp. 1791 –1796. Bittanti, S., Dell’ Orto, F., DiCarlo, A., and Savaresi, S. M. Notch Filtering and Multirate Control for Radial Tracking in High Speed DVD-Players. IEEE Transactions on Consumer Electronics, vol. 48. 2002, pp. 56 –62. Bode, H. W. Network Analysis and Feedback Ampli ﬁer Design . Van Nostrand, Princeton, NJ, 1945. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA, 1989. Franklin, G., Powell, J. D., and Emami-Naeini, A. Feedback Control of Dynamic Systems , 2d ed. Addison-Wesley, Reading, MA, 1991. Galvão, R. K. H., Yoneyama, T., and de Araújo, F. M. U. A Simple Technique for Identifying a Linearized Model for a Didactic Magnetic Levitation System. IEEE Transactions on Education , vol. 46, no. 1, February 2003, pp. 22 –25. Hollot, C. V., Misra, V., Towsley, D., and Gong, W. A Control Theoretic Analysis of RED. Proceedings of IEEE INFOCOM, 2001, pp. 1510 –1519. Hostetter, G. H., Savant, C. J., Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Khadraoui, S., Nounou, H., Nounou, M., Datta, A., and Bhattacharyya, S. P. A measurement-based approach for tuning of reduced-order controllers. American Control Conference (ACC), June 2013, pp. 3876 –3881. Kim, S.-H., Kim, J. H., Yang, J., Yang, H., Park, J.-Y., and Park, Y.-P. Tilt Detection and Servo Control Method for the Holographic Data Storage System. Microsyst Technol , vol. 15, 2009. pp. 1695 –1700.Minimum Required Software Packages LabVIEW, Control Design and Simulation Module, MathScript RT Module, and MATLAB Prelab 1.Assume a unity-feedback system with a forward-path transfer function, G s100 s s5. Use MATLAB or any method to determine gain and phase margins. In addition, ﬁnd the percent overshoot, settling time, and peak time of the closed-loop step response. 2.Design a LabVIEW VI that will create a Nic hols chart. Adjust the Nichols chart’ s scale to estimate gain and phase margins. Then, prompt the user to enter the values of gain and phase margins found from the N ichols chart. In response, your VI will produce the percent o vershoot, settling time, and peak time of the closed-loop step response. Lab Run your VI for the system given in the Prelab. Test your VI with other systems of your choice. Postlab Compare the closed-loop performance calculated in the Prelab with those produced by your VI.610 Chapter 10 Frequency Response TechniquesWEBC10 10/28/2014 18:17:4 Kuo, B. C. Automatic Control Systems , 5th ed. Prentice Hall, Upper Saddle River, NJ, 1987. Kuo, F. F. Network Analysis and Synthesis . Wiley, New York, 1966. Lam, P. Y. Gyroscopic Stabilization of a Kid-Size Bicycle. IEEE 5th International Conference on Cybernetics and Intelligent Systems , 2011, pp. 247 –252. Low, K. H., Wang, H., Liew, K. M., and Cai, Y. Modeling and Motion Control of Robotic Hand for Telemanipulation Application. International Journal of Software Engineering and Knowledge Engineering , vol. 15, 2005, pp. 147 –152. Mahmood, H., and Jiang, J. Modeling and Control System Design of a Grid Connected VSC Considering the Effect of the Interface Transformer Type. IEEE Transactions on Smart Grid , vol. 3, no. 1, March 2012, pp. 122 –134. Marttinen, A., Virkkunen, J., and Salminen, R. T. Control Study with Pilot Crane. IEEE Transactions on Education , vol. 33, no. 3, August 1990, pp. 298 –305. Nilsson, J. W. Electric Circuits , 3d ed. Addison-Wesley, Reading, MA, 1990. Nyquist, H. Regeneration Theory. Bell Systems Technical Journal, January 1932, pp. 126 –147. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics. IEEE, 2007, pp. 157 –162. Roth, E., Reiser, M. B., Dickinson, M. H., Noah, J., and Cowan, N. J. A Task-level Model for Optomotor Yaw Regulation in Drosophila Melanogaster: A Frequency-Domain System Identi ﬁcation Approach. 51st IEEE Conference on Decision and Control , December 10–13, 2012, pp. 3721 –3726. Thomas, B., Soleimani-Mosheni, M., and Fahlén, P. Feed-forward in Temperature Control of Buildings. Energy and Buildings , vol. 37, 2005, pp. 755 –761. Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-based State Space Control, and Model-Based Predictive Control for Drive Systems With Elastically Coupled Loads —A Comparative Study. IEEE Transactions on Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Van der Zalm, G., Huisman, R., Steinbuch, M., and Veldpaus, F. Frequency Domain Approach for the Design of Heavy-Duty Vehicle Speed Controllers. Int. J. Heavy Vehicle Systems , vol. 15, no. 1, pp. 107 –123. Wang, X.-K., Yang, X.-H., Liu, G., and Qian, H. Adaptive Neuro-Fuzzy Inference System PID Controller for Steam Generator Water Level of Nuclear Power Plant, Proceedings of the Eighth International Conference on Machine Learning and Cybernetics , 2009, pp. 567 –572.Bibliography 611WEBC10 10/28/2014 18:17:4 Page 612WEBC11 10/28/2014 18:21:5 Design via Frequency Response Chapter Learning Outcomes After completing this chapter the student will be able to: Use frequency response techniques to adjust the gain to meet a transient response speci ﬁcation (Sections 11.1 –11.2) Use frequency response techniques to design cascade compensators to improve the steady-state error (Section 11.3) Use frequency response techniques to design cascade compensators to improve the transient response (Section 11.4) Use frequency response techniques to design cascade compensators to improve both the steady-state error and the transient response (Section 11.5) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with casestudies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to use frequency response techniques to design thegain to meet a transient response speci ﬁcation. Given the antenna azimuth position control system shown on the frontendpapers, you will be able to use frequency response techniques to design acascade compensator to meet both transient and steady-state error speci ﬁcations.11 613WEBC11 10/28/2014 18:21:5 11.1 Introduction In Chapter 8, we designed the transient response of a control system by adjusting the gain along the root locus. The design process consisted of ﬁnding the transient response speci ﬁcation on the root locus, setting the gain accordingly, and settling for the resulting steady-state error. The disadvantage of design by gain adjustment is that only thetransient response and steady-state error re presented by points along the root locus are available. In order to meet transient response speci ﬁcations represented by points not on the root locus and, independently, steady-state error requirements, we designed cascade compensatorsin Chapter 9. In this chapter, we use Bode plots to parallel the root locus design process fromChapters 8 and 9. Let us begin by drawing some general comparisons between root locus and frequency response design. Stability and transient response design via gain adjustment . Frequency response design methods, unlike root locus methods, can be implemented conveniently without acomputer or other tool except for testing the design. We can easily draw Bode plots using asymptotic approximations and read the gain from the plots. Root locus requires repeated trials to ﬁnd the desired design point from which the gain can be obtained. For example, in designing gain to meet a percent overshoot requirement, root locus requires the search of aradial line for the point where the open-loop transfer function yields an angle of 180 °.T o evaluate the range of gain for stability, root locus requires a search of the jω-axis for 180 °.O f course, if one uses a computer program, such as MATLAB, the computational disadvantageof root locus vanishes. Transient response design via cascade compensation. Frequency response methods are not as intuitive as the root locus, and it is something of an art to design cascadecompensation with the methods of this chapter. With root locus, we can identify a speci ﬁc point as having a desired transient response characteristic. We can then design cascadecompensation to operate at that point and meet the transient response speci ﬁcations. In Chapter 10, we learned that phase margin is related to percent overshoot (Eq. (10.73)) andbandwidth is related to both damping ratio and settling time or peak time (Eqs. (10.55) and(10.56)). These equations are rather complicated. When we design cascade compensationusing frequency response methods to improve the transient response, we strive to reshape the open-loop transfer function ’s frequency response to meet both the phase-margin requirement (percent overshoot) and the bandwidth requirement (settling or peak time). There is no easy way to relate all the requirements prior to the reshaping task. Thus, thereshaping of the open-loop transfer function ’s frequency response can lead to several trials until all transient response requirements are met. Steady-state error design via cascade compensation . An advantage of using frequency design techniques is the ability to design derivative compensation, such as lead compensation,to speed up the system and at the same time build in a desired steady-state error requirement that can be met by the lead compensator alone. Recall that in using root locus there are an inﬁnite number of possible solutions to the design of a lead compensator. One of the differences between these solutions is the steady-state error. We must make numerous triesto arrive at the solution that yields the required steady-state error performance. With frequencyresponse techniques, we build the steady-state error requirement right into the design of thelead compensator. You are encouraged to re ﬂect on the advantages and disadvantages of root locus and frequency response techniques as you progress through this chapter. Let us take a closer look at frequency response design. When designing via frequency response methods, we use the concepts of stability, transient response, and steady-state error that we learned in Chapter 10. First, the Nyquist criterion tells us how to determine if a system is stable. Typically, an open-loop stable614 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:5 system is stable in closed-loop if the open-loop magnitude frequency response has a gain of less than 0 dB at the frequency where the phase frequency response is 180° . Second, percent overshoot is reduced by increasing the phase margin, and the speed of the response is increased by increasing the bandwidth. Finally, steady-state error is improved by increasingthe low-frequency magnitude responses, even if the high-frequency magnitude response isattenuated. These, then, are the basic facts underlying our design for stability, transient response, and steady-state error using frequency response methods, where the Nyquist criterion andthe Nyquist diagram compose the underlying theory behind the design process. Thus, even though we use the Bode plots for ease in obtaining the frequency response, the design process can be veri ﬁed with the Nyquist diagram when questions arise about interpreting the Bode plots. In particular, when the structure of the system is changed withadditional compensator poles and zeros, t he Nyquist diagram can offer a valuable perspective. The emphasis in this chapter is on the design of lag, lead, and lag-lead compensation. General design concepts are presented ﬁrst, followed by step-by-step procedures. These procedures are only suggestions, and you are encouraged to develop other procedures to arrive at the same goals. Although the concepts in general apply to the design of PI, PD, and PID controllers, in the interest of brevity, detailed procedures and examples will not bepresented. You are encouraged to extrapolate the concepts and designs covered and applythem to problems involving PI, PD, and PID compensation presented at the end of thischapter. Finally, the compensators developed in this chapter can be implemented with therealizations discussed in Section 9.6. 11.2 Transient Response via Gain Adjustment Let us begin our discussion of design via frequency response methods by discussing the linkbetween phase margin, transient response, and gain. In Section 10.10, the relationshipbetween damping ratio (equivalently percent overshoot) and phase margin was derived forG sω 2 n=s s2ζωn. Thus, if we can vary the phase margin, we can vary the percent overshoot. Looking at Figure 11.1, we see that if we desire a phase margin, ΦM, represented byCD, we would have to raise the magnitude curve by AB. Thus, a simple gain adjustment can be used to design phase margin and, hence, percent overshoot. M (dB) A BRequired increase in gain Phase (degrees) Clog ω –180log ω D0 ΦMωΦM FIGURE 11.1 Bode plots showing gain adjustment for a desired phase margin11.2 Transient Response via Gain Adjustment 615WEBC11 10/28/2014 18:21:5 We now outline a procedure by which we can determine the gain to meet a percent overshoot requirement using the open-loop frequency response and assuming dominant second-order closed-loop poles. Design Procedure 1.Draw the Bode magnitude and phase plots for a convenient value of gain. 2.Using Eqs. (4.39) and (10.73), determine the required phase margin from the percent overshoot. 3.Find the frequency, ωΦM, on the Bode phase diagram that yields the desired phase margin, CD, as shown on Figure 11.1. 4.Change the gain by an amount ABto force the magnitude curve to go through 0 dB at ωΦM. The amount of gain adjustment is the additional gain needed to produce the required phase margin. We now look at an example of designing the gain of a third-order system for percent overshoot. Example 11.1 Transient Response Design via Gain AdjustmentTransient Response Design via Gain Adjustment PROBLEM: For the position control system shown in Figure 11.2, ﬁnd the value of preampli ﬁer gain, K, to yield a 9.5% overshoot in the transient response for a step input. Use only frequency response methods. SOLUTION: We will now follow the previously described gain adjustment design procedure. 1.Choose K3:6 to start the magnitude plot at 0 dB at ω0:1 in Figure 11.3. 2.Using Eq. (4.39), a 9.5% overshoot implies ζ0:6 for the closed-loop dominant poles. Equation (10.73) yields a 59.2 °phase margin for a damping ratio of 0.6. 3.Locate on the phase plot the frequency that yields a 59.2 °phase margin. This frequency is found where the phase angle is the difference between  180 °and 59.2 °,o r 120:8°. The value of the phase-margin frequency is 14.8 rad/s. 4.At a frequency of 14.8 rad/s on the magnitude plot, the gain is found to be  44.2 dB. This magnitude has to be raised to 0 dB to yield the required phase margin. Since the log-magnitude plot was drawn for K3:6, a 44.2 dB increase, or K 3:6162:2583:9, would yield the required phase margin for 9.48% overshoot.+ –Shaft position K1 s1 (s + 36)100 (s + 100)Desired position R(s) C(s)Shaft velocity PreamplifierPower amplifierMotor and load FIGURE 11.2 System for Example 11.1616 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:7 The gain-adjusted open-loop transfer function is G s58;390 s s36 s100(11.1) Table 11.1 summarizes a computer simulation of the gain-compensated system. Students who are using MATLAB should now run ch11p1 in Appendix B. You will learn how to use MATLAB to design a gain to meet a percentovershoot speci ﬁcation using Bode plots. This exercise solves Example 11.1 using MATLAB.0 –10 –20 –30 –40 –50 –60 –70–800.1 1 10 100 Frequency (rad/s)20 log MMagnitude after gain adjustment Magnitude before gain adjustmentPhase (degrees)–80 –100 –120 –140 –160–180 –200 –2200.1 1 10 100 Fre quenc y (rad/s) FIGURE 11.3 Bode magnitude and phase plots for Example 11.1 TABLE 11.1 Characteristic of gain-compensated system of Example 11.1 Parameter Proposed speci ﬁcation Actual value Kv — 16.22 Phase margin 59.2 ° 59.2 ° Phase-margin frequency — 14.8 rad/s Percent overshoot 9.5 10 Peak time — 0.18 second11.2 Transient Response via Gain Adjustment 617WEBC11 10/28/2014 18:21:7 In this section, we paralleled our work in Chapter 8 with a discussion of transient response design through gain adjustment. In the next three sections, we parallel the root locus compensator design in Chapter 9 and discuss the design of lag, lead, and lag-leadcompensation via Bode diagrams. 11.3 Lag Compensation In Chapter 9, we used the root locus to design lag networks and PI controllers. Recall thatthese compensators permitted us to design for steady-state error without appreciablyaffecting the transient response. In this section, we provide a parallel development usingthe Bode diagrams. Visualizing Lag Compensation The function of the lag compensator as seen on Bode diagrams is to (1) improve the staticerror constant by increasing only the low-frequency gain without any resulting instability,and (2) increase the phase margin of the system to yield the desired transient response. Theseconcepts are illustrated in Figure 11.4. The uncompensated system is unstable, since the gain at 180 °is greater than 0 dB. The lag compensator, while not changing the low-frequency gain, does reduce the high-frequency gain. 1Thus, the low-frequency gain of the system can be made high to yieldSkill-Assessment Exercise 11.1 PROBLEM: For a unity feedback system with a forward transfer function G sK s s50 s120 use frequency response techniques to ﬁnd the value of gain, K, to yield a closed-loop step response with 20% overshoot. ANSWER: K194;200 The complete solution is located at www.wiley.com/college/nise . In the SISOTOOL Window for TryIt 11.1 : 1.Select Import . . . in the File menu. 2.Click on Gin the System Data Window and click Browse ... 3.In the Model Import Window select radio button Workspace and select Gin Available Models . Click Import, then Close. 4.Click Ok in the System Data Window. 5.Right-click in the Bode graph area and be sure all selections under Show are checked. 6.Grab the stability margin point in the magnitude diagram and raise the magnitude curve until the phase curve shows the phase margin calculated by the program andshown in the MATLAB Command Window as Pm. 7.Right-click in the Bode plot area, select Edit Compensator . . . and read the gain under Compensator in the resulting window. 1The name lag compensator comes from the fact that the typical phase angle response for the compensator, as shown in Figure 11.4, is always negative, or lagging in phase angle.TryIt 11.1 Use MATLAB, the Control System Toolbox, and thefollowing statements to solveSkill-Assessment Exercise 11.1. pos=20 z=(-log(pos/100) ) / ... (sqrt(pi^2 +... log(pos/100) ^2) ) Pm=atan(2*z/ ... (sqrt(-2*z^2 +... sqrt(1 +4*z^4) ) ) ) *... (180/pi) G=zpk ( [] ,... [0,-50,-120] ,1) sisotool618 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:8 a large Kvwithout creating instability. This stabilizing effect of the lag network comes about because the gain at 180 °of phase is reduced below 0 dB. Through judicious design, the magnitude curve can be reshaped, as shown in Figure 11.4, to go through 0 dB at the desired phase margin. Thus, both Kvand the desired transient response can be obtained. We now enumerate a design procedure. Design Procedure 1.Set the gain, K, to the value that satis ﬁes the steady-state error speci ﬁcation and plot the Bode magnitude and phase diagrams for this value of gain. 2.Find the frequency where the phase margin is 5 °to 12 °greater than the phase margin that yields the desired transient response ( Ogata ,1990 ). This step compensates for the fact that the phase of the lag compensator may still contribute anywhere from  5°to 12°of phase at the phase-margin frequency. 3.Select a lag compensator whose magnitude response yields a composite Bode magnitudediagram that goes through 0 dB at the frequency found in Step 2 as follows: Draw thecompensator ’s high-frequency asymptote to yield 0 dB for the compensated system at the frequency found in Step 2. Thus, if the gain at the frequency found in Step 2 is 20 log K PM, then the compensator ’s high-frequency asymptote will be set at  20 log KPM. Select the upper break frequency to be 1 decade below the frequency found in Step 2;2select the low-frequency asymptote to be at 0 dB. Connect the compensator ’s high- and low-frequency asymptotes with a  20 dB/decade line to locate the lower break frequency. 4.Reset the system gain, K, to compensate for any attenuation in the lag network in order to keep the static error constant the same as that found in Step 1. From these steps, you see that we are relying upon the initial gain setting to meet the steady-state requirements. Then, we rely upon the lag compensator ’s 20 dB/decade slope to meet the transient response requirement by setting the 0 dB crossing of themagnitude plot.log ω Desired phasePhase (degrees) –180log ωKvM (dB) Compensated systemUncompensated system Lag compensator Uncompensated system Compensated systemPhase-margin frequency Lag compensator FIGURE 11.4 Visualizing lag compensation 2This value of break frequency ensures that there will be only  5°to 12°phase contribution from the compensator at the frequency found in Step 2.11.3 Lag Compensation 619WEBC11 10/28/2014 18:21:9 The transfer function of the lag compensator is Gc ss1 T s1 αT(11.2) where α>1. Figure 11.5 shows the frequency response curves for the lag compensator. The range of high frequencies shown in the phase plot is where we will design our phase margin. This region is after the second break frequency of the lag compensator, where we can rely on the attenuation characteristics of the lag network to reduce the total open-loop gain to unity at the phase-margin frequency. Further, in this region the phase response of the compensatorwill have minimal effect on our design of the phase margin. Since there is still some effect,approximately 5 °to 12 °, we will add this amount to our phase margin to compensate for the phase response of the lag compensator (see Step 2).20 – 20– 10 – 30 – 40 – 50 – 6018 16 1412 10 86 4 2 0 00.00120 log MPhase (degrees)0.01 0.1 Frequency (rad/s) Frequency (rad/s)11 01 00 0.001 0.01 0.1 11 01 00Range of frequencies for the design of the phase margin FIGURE 11.5 Frequency response plots of a lag compensator, Gc s s0:1= s 0:01 Example 11.2 Lag Compensation DesignLag Compensation Design PROBLEM: Given the system of Figure 11.2, use Bode diagrams to design a lag compensator to yield a tenfold improvement in steady-state error over the gain-compensated system while keeping the percent overshoot at 9.5%. SOLUTION: We will follow the previously described lag compensation design procedure. 1.From Example 11.1 a gain, K, of 583.9 yields a 9.5% overshoot. Thus, for this system, Kv16:22. For a tenfold improvement in steady-state error, Kvmust increase by a factor of 10, or Kv162:2. Therefore, the value of Kin Figure 11.2 equals 5839, and620 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:9 the open-loop transfer function is G s583;900 s s36 s100(11.3) The Bode plots for K5839 are shown in Figure 11.6. 2.The phase margin required for a 9.5% overshoot ζ0:6is found from Eq. (10.73) to be 59.2 °. We increase this value of phase margin by 10° to 69.2 °in order to compensate for the phase angle contribution of the lag compensator. Now ﬁnd the frequency where the phase margin is 69.2 °. This frequency occurs at a phase angle of  180 °69:2° 110:8°and is 9.8 rad/s. At this frequency, the magnitude plot must go through 0 dB. The magnitude at 9.8 rad/s is now +24 dB (exact, that is, nonasymptotic). Thus, the lag compensator must provide  24 dB attenuation at 9.8 rad/s. 3.&4. We now design the compensator. First draw the high-frequency asymptote at  24 dB. Arbitrarily select the higher break frequency to be about one decade below the phase-margin frequency, or 0.98 rad/s. Starting at the intersection of this frequency with the lag compensator ’s high-frequency asymptote, draw a  20 dB/decade line until 0 dB is reached. The compensator must have a dc gain of unity to retain the value of Kv that we have already designed by setting K5839. The lower break frequency is found to be 0.062 rad/s. Hence, the lag compensator ’s transfer function is Gc s0:063 s0:98 s0:062(11.4) where the gain of the compensator is 0.063 to yield a dc gain of unity.0.01 0.1 1 10 100 Frequenc y (rad/s)0 –50 –100 –150 –200–250Phase (degrees)Lag compensator Uncompensated system Lag-compensated system84 726048362412 0 –12–24–36–48–60 0.01 0.1 1 10 100 Frequency (rad/s)20 log M Lag compensatorUncompensated system Compensated system FIGURE 11.6 Bode plots for Example 11.211.3 Lag Compensation 621WEBC11 10/28/2014 18:21:11 The compensated system ’s forward transfer function is thus G sGc s36;786 s0:98 s s36 s100 s0:062(11.5) The characteristics of the compensated system, found from a simulation and exact frequency response plots, are summarized in Table 11.2. Students who are using MATLAB should now run ch11p2 in Appendix B.You will learn how to use MATLAB to design a lag compensator. Youwill enter the value of gain to meet the steady-state errorrequirement as well as the desired percent overshoot. MATLABthen designs a lag compensator using Bode plots, evaluates K v, and generates a closed-loop step response. This exercise solves Example 11.2 using MATLAB.TABLE 11.2 Characteristics of the lag-compensated system of Example 11.2 Parameter Proposed speci ﬁcation Actual value Kv 162.2 161.5 Phase margin 59.2 ° 62° Phase-margin frequency — 11 rad/s Percent overshoot 9.5 10 Peak time — 0.25 second Skill-Assessment Exercise 11.2 PROBLEM: Design a lag compensator for the system in Skill-Assessment Exercise 11.1 that will improve the steady-state error tenfold, while still operating with 20% overshoot. ANSWER: Glag s0:0691 s2:04 s0:141;G s1;942;000 s s50 s120 The complete solution is at www.wiley.com/college/nise . TryIt 11.2 Use MATLAB, the Control System Toolbox, and the following statements to solve Skill-Assessment Exercise 11.2. pos=20 Ts=0.2 z=( log(pos/100) ) / (sqrt(pi^2 +log(pos/100) ^2) ) Pm=atan(2*z/ (sqrt(  2*z^2 +sqrt(1 +4*z^4) ) ) ) * (180/pi) Wbw=(4/ (Ts*z) ) *sqrt( (1  2*z^2) +sqrt(4*z^4-4*z^2 +2) ) K=1942000 G=zpk( [] , [0,  50, 120],K ) sisotool(G,1) (TryIt continues)622 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:11 In this section, we showed how to design a lag compensator to improve the steady-state error while keeping the transient response relatively unaffected. We next discuss how to improve the transient response using frequency response methods. 11.4 Lead Compensation For second-order systems, we derived the relationship between phase margin and percent overshoot as well as the relationship between closed-loop bandwidth and other time-domainspeciﬁcations, such as settling time, peak time, and rise time. When we designed the lag network to improve the steady-state error, we wanted a minimal effect on the phase diagramin order to yield an imperceptible change in the transient response. However, in designinglead compensators via Bode plots, we want to change the phase diagram. We want toincrease the phase margin to reduce the percent overshoot, and increase the gain crossoverto realize a faster transient response. Visualizing Lead Compensation The lead compensator increases the bandwidth by increasing the gain crossover frequency.At the same time, the phase diagram is raised at higher frequencies. The result is a largerphase margin and a higher phase-margin frequency. In the time domain, lower percentovershoots (larger phase margins) with smaller peak times (higher phase-margin frequencies) is the result. The concepts are shown in Figure 11.7. The uncompensated system has a small phase margin ( B) and a low phase-margin frequency ( A). Using a phase lead compensator, the phase angle plot (compensated system) is raised for higher frequencies. 3At the same time, the gain crossover frequency in the magnitude plot is increased from Arad/s to Crad/s. These effects yield a larger phase margin (D), a higher phase-margin frequency ( C), and a larger bandwidth. One advantage of the frequency response technique over the root locus is that we can implement a steady-state error requirement and then design a transient response. Thisspeciﬁcation of transient response with the constraint of a steady-state error is easier to implement with the frequency response technique than with the root locus. Notice that the initial slope, which determines the steady-state error, is not affected by the design for thetransient response. 3The name lead compensator comes from the fact that the typical phase angle response shown in Figure 11.7 is always positive, or leading in phase angle.(TryIt continued ) When the SISO Design for SISO Design Task Window appears: Right-click on the Bode plot area and select Grid. Note the phase margin shown in the MATLAB Command Window. Using the Bode phase plot, estimate the frequency at which the phase margin from Step 2 occurs. On the SISO Design for SISO Design Task Window toolbar , click on the red zero. Place the zero of the compensator by clicking on the gain plot at a frequency that is 1/10 that found in Step 3. On the SISO Design for SISO Design Task Window toolbar , click on the red pole. Place the pole of the compensator by clicking on the gain plot to the left of the compensator zero. Grab the pole with the mouse and move it until the phase plot shows a P.M. equal to that found in Step 2. Right-click in the Bode plot area and select Edit Compensator . . . Read the lag compensator in the Control and Estimation Tools Manager Window.11.4 Lead Compensation 623WEBC11 10/28/2014 18:21:11 Lead Compensator Frequency Response Let us ﬁrst look at the frequency response characteristics of a lead network and derive some valuable relationships that will help us in the design process. Figure 11.8 shows plots of the lead network Gc s1 βs1 T s1 βT(11.6) for various values of β,w h e r e β<1. Notice that the peaks of the phase curve vary in maximum angle and in the frequency at which the maximum occurs. The dc gain of the compensator is set to unity with the coef ﬁcient 1 =β, in order not to change the dc gain designed for the static error constant when the compensator is inserted into the system. In order to design a lead compensator and change both the phase margin and phase-margin frequency, it is helpful to have an analytical expression for the maximumvalue of phase and the frequency at which the maximum value of phase occurs, asshown in Figure 11.8. From Eq. (11.6) the phase angle of the lead compensator, ϕ c,i s ϕctan 1ωT tan 1ωβT (11.7) Differentiating with respect to ω, we obtain dϕc dωT 1 ωT2 βT 1 ωβT2(11.8)M (dB) log ω Phase (degrees)Uncompensated systemACompensated systemCompensator C Compensator Compensated system BD –180 –270Uncompensated systemlog ω 00 FIGURE 11.7 Visualizing lead compensation624 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:11 Setting Eq. (11.8) equal to zero, we ﬁnd that the frequency, ωmax, at which the maximum phase angle, ϕmax, occurs is ωmax1 Tﬃﬃﬃ βp (11.9) Substituting Eq. (11.9) into Eq. (11.6) with sjωmax, Gc jωmax1 βjωmax1 T jωmax1 βTj1ﬃﬃﬃ βp1 jﬃﬃﬃβp 1(11.10) Making use of tan ϕ 1 ϕ2 tanϕ1 tanϕ2= 1tanϕ1tanϕ2, the maximum phase shift of the compensator, ϕmax,i s ϕmaxtan 11 β 2ﬃﬃﬃ βpsin 11 β 1β(11.11) and the compensator ’s magnitude at ωmaxis jGc jωmaxj1ﬃﬃﬃβp (11.12) We are now ready to enumerate a design procedure.20 log M Phase (degrees)0.1 0.111 0β = 0.2 ωTωT20 20 1030405060 018 16 14 12 10 86 4 2 0 100 11 0 100β = 0.2β = 0.1 β = 0.3 β = 0.4 β = 0.5β = 0.1 β = 0.3 β = 0.4 β = 0.5 FIGURE 11.8 Frequency response of a lead compensator, Gc s1=β s1=T= s1=βT11.4 Lead Compensation 625WEBC11 10/28/2014 18:21:13 Design Procedure 1.Find the closed-loop bandwidth required to meet the settling time, peak time, or rise time requirement (see Eqs. (10.54) through (10.56)). 2.Since the lead compensator has negligible effect at low frequencies, set the gain, K,o f the uncompensated system to the value that satis ﬁes the steady-state error requirement. 3.Plot the Bode magnitude and phase diagrams for this value of gain and determine theuncompensated system ’s phase margin. 4.Find the phase margin to meet the damping ratio or percent overshoot requirement. Then evaluate the additional phase contribution required from the compensator. 4 5.Determine the value of β(see Eqs. (11.6) and (11.11)) from the lead compensator ’s required phase contribution. 6.Determine the compensator ’s magnitude at the peak of the phase curve (Eq. (11.12)). 7.Determine the new phase-margin frequency by ﬁnding where the uncompensated system ’s magnitude curve is the negative of the lead compensator ’s magnitude at the peak of the compensator ’s phase curve. 8.Design the lead compensator ’s break frequencies, using Eqs. (11.6) and (11.9) to ﬁnd Tand the break frequencies. 9.Reset the system gain to compensate for the lead compensator ’s gain. 10.Check the bandwidth to be sure the speed requirement in Step 1 has been met. 11.Simulate to be sure all requirements are met. 12.Redesign, if necessary, to meet requirements. From these steps, we see that we are increasing both the amount of phase margin (improving percent overshoot) and the gain crossover frequency (increasing the speed).Now that we have enumerated a procedure with which we can design a lead compensator to improve the transient response, let us demonstrate. Example 11.3 Lead Compensation DesignLead Compensation Design PROBLEM: Given the system of Figure 11.2, design a lead compensator to yield a 20% overshoot and Kv40, with a peak time of 0.1 second. SOLUTION: The uncompensated system is G s100K=s s36 s100. We will follow the outlined procedure. 1.Weﬁrst look at the closed-loop bandwidth needed to meet the speed requirement imposed by Tp0:1 second. From Eq. (10.56), with Tp0:1 second and ζ0:456 (i.e., 20% overshoot), a closed-loop bandwidth of 46.6 rad/s is required. 2.In order to meet the speci ﬁcation of Kv40,Kmust be set at 1440, yielding G s144;000=s s36 s100. 4We know that the phase-margin frequency will be increased after the insertion of the compensator. At this new phase-margin frequency, the system ’s phase will be smaller than originally estimated, as seen by comparing points BandDin Figure 11.7. Hence, an additional phase should be added to that provided by the lead compensator to correct for the phase reduction caused by the original system.626 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:13 3.The uncompensated system ’s frequency response plots for K1440 are shown in Figure 11.9. 4.A 20% overshoot implies a phase margin of 48.1 °. The uncompensated system with K1440 has a phase margin of 34 °at a phase-margin frequency of 29.6. To increase the phase margin, we insert a lead network that adds enough phase to yield a4 8 . 1 °phase margin. Since we know that the lead network will also increase the phase-margin frequency, we add a correction factor to compensate for the loweruncompensated system ’s phase angle at this higher phase-margin frequency. Since we do not know the higher phase-margin frequency, we assume a correction factorof 10 °. Thus, the total phase contribution required from the compensator is 48:1° 34°10°24:1°. In summary, our compensated system should have a phase margin of 48.1 °with a bandwidth of 46.6 rad/s. If the system ’s characteristics are not acceptable after the design, then a redesign with a different correction factormay be necessary. 5.Using Eq. (11.11), β0:42 for ϕ max24:1°. 6.From Eq. (11.12), the lead compensator ’s magnitude is 3.76 dB at ωmax. 7.If we select ωmaxto be the new phase-margin frequency, the uncompensated system ’s magnitude at this frequency must be  3.76 dB to yield a 0 dB crossover at ωmaxfor the compensated system. The uncompensated system passes through  3.76 dB at ωmax39 rad/s. This frequency is thus the new phase-margin frequency. 8.We now ﬁnd the lead compensator ’s break frequencies. From Eq. (11.9), 1 =T25:3 and 1 =βT60:2.100020 log MPhase (degrees) 100100 0 Frequency (rad/sec)11 101036 24 12 –12 –24 –360 – 45 45 –90 –135 –180 –225 –270 1000Frequency (rad/sec)Lead compensator Compensated system Uncompensated system Lead compensator Compensated systemUncompensated system FIGURE 11.9 Bode plots for lead compensation in Example 11.311.4 Lead Compensation 627WEBC11 10/28/2014 18:21:15 9.Hence, the compensator is given by Gc s1 βs1 T s1 βT2:38s25:3 s60:2(11.13) where 2.38 is the gain required to keep the dc gain of the compensator at unity so that Kv40 after the compensator is inserted. Theﬁnal, compensated open-loop transfer function is then Gc sG s342;600 s25:3 s s36 s100 s60:2(11.14) 10.From Figure 11.9, the lead-compensated open-loop magnitude response is  7d B at approximately 68.8 rad/s. Thus, we estimate the closed-loop bandwidth to be68.8 rad/s. Since this bandwidth exceeds t he requirement of 46.6 rad/s, we assume t h ep e a kt i m es p e c i ﬁcation is met. This conclusio n about the peak time is based upon a second-order and asymptotic appr oximation that will be checked via simulation. 11.Figure 11.9 summarizes the design and shows the effect of the compensation. Finalresults, obtained from a simulation and the actual (nonasymptotic) frequencyresponse, are shown in Table 11.3. Notice the increase in phase margin, phase-margin frequency, and closed-loop bandwidth after the lead compensator was addedto the gain-adjusted system. The peak time and the steady-state error requirementshave been met, although the phase margin is less than that proposed and thepercent overshoot is 2.6% larger than proposed. Finally, if the performance is notacceptable, a redesign is necessary. Students who are using MATLAB should now run ch11p3 in Appendix B. You will learn how to use MATLAB to design a lead compensator. Youwill enter the desired percent overshoot, peak time, and K v. MATLAB then designs a lead compensator using Bode plots, evaluates Kv, and generates a closed-loop step response. This exercise solves Example 11.3 using MATLAB.TABLE 11.3 Characteristic of the lead-compensated system of Example 11.3 ParameterProposed speci ﬁcationActual gain- compensated valueActual lead- compensated value Kv 40 40 40 Phase margin 48.1 ° 34° 45.5 ° Phase-margin frequency — 29.6 rad/s 39 rad/s Closed-loop bandwidth 46.6 rad/s 50 rad/s 68.8 rad/s Percent overshoot 20 37 22.6 Peak time 0.1 second 0.1 second 0.075 second628 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:16 Keep in mind that the previous examples were designs for third-order systems and must be simulated to ensure the desired transient results. In the next section, we look at lag-lead compensation to improve steady-state error and transient response. 11.5 Lag-Lead Compensation In Section 9.4, using root locus, we designed lag-lead compensation to improve the transientresponse and steady-state error. Figure 11.10 is an example of a system to which lag-leadcompensation can be applied. In this section we repeat the design, using frequency responsetechniques. One method is to design the lag compensation to lower the high-frequency gain,Skill-Assessment Exercise 11.3 PROBLEM: Design a lead compensator for the system in Skill-Assessment Exercise 11.1 to meet the following speciﬁ cations: %OS20%;Ts0:2sa n d Kv50. ANSWER: Glead s2:27 s33:2 s75:4;G s300;000 s s50 s120 The complete solution is at www.wiley.com/college/nise . TryIt 11.3 Use MATLAB, the Control System Toolbox, and the following statements to solve Skill-Assessment Exercise 11.3. pos=20 Ts=0.2 z=(-log(pos/100) ) / (sqrt(pi^2 +log(pos/100) ^2) ) Pm=atan(2*z/ (sqrt(-2*z^2 +sqrt(1 +4*z^4) ) ) )*(180/pi) Wbw=(4/ (Ts*z) ) *sqrt( (1-2*z^2) +sqrt(4*z^4-4*z^2 +2) ) K=50*50*120 G=zpk( [] , [0,-50,-120] ,K) sisotool(G,1) When the SISO Design for SISO Design Task Window appears: Right-click on the Bode plot area and select Grid. Note the phase margin and bandwidth shown in the MATLAB Command Window. On the SISO Design for SISO Design Task Window toolbar, click on the red pole. Place the pole of the compensator by clicking on the gain plot at a frequency that is to the right of the desired bandwidth found in Step 2. On the SISO Design for SISO Design Task Window toolbar, click on the red zero. Place the zero of the compensator by clicking on the gain plot to the left of the desired bandwidth. Reshape the Bode plots: alternately grab the pole and the zero with the mouse and alternately move them along the phase plot until the phase plot shows a P.M. equal to that found in Step 2 and a phase- margin frequency close to the bandwidth found in Step 2. Right-click in the Bode plot area and select Edit Compensator ... Read the lead compensator in the Control and Estimation Tools Manager Window.11.5 Lag-Lead Compensation 629WEBC11 10/28/2014 18:21:16 stabilize the system, and improve the steady-state error and then design a lead compensator to meet the phase-margin requirements. Let us look at another method. Section 9.6 describes a passive lag-lead network that can be used in place of separate lag and lead networks. It may be more economical to use a single, passive network thatperforms both tasks, since the buffer ampli ﬁer that separates the lag network from the lead network may be eliminated. In this section, we emphasize lag-lead design, using a single,passive lag-lead network. The transfer function of a single, passive lag-lead network is G c sGLead sGLag ss1 T1 sγ T10 BB@1 CCAs1 T2 s1 γT20 BB@1 CCA(11.15) where γ>1. The ﬁrst term in parentheses produces the lead compensation, and the second term in parentheses produces the lag compensation. The constraint that we must follow here is that the single value γreplaces the quantity αfor the lag network in Eq. (11.2) and the quantity βfor the lead network in Eq. (11.6). For our design, αandβmust be reciprocals of each other. An example of the frequency response of the passive lag-lead is shown inFigure 11.11. We are now ready to enumerate a design procedure. Design Procedure 1.Using a second-order approximation, ﬁnd the closed-loop bandwidth required to meet the settling time, peak time, or rise time requirement (see Eqs. (10.55) and (10.56)). 2.Set the gain, K, to the value required by the steady-state error speci ﬁcation. 3.Plot the Bode magnitude and phase diagrams for this value of gain. (a) Katharina Bosse/laif/Redux Pictures. (b) Katharina Bosse/laif/Redux Pictures. FIGURE 11.10 a.The National Advanced Driving Simulator at the University of Iowa; b.test driving the simulator with its realistic graphics630 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:16 4.Using a second-order approximation, calculate the phase margin to meet the damping ratio or percent overshoot requirement, using Eq. (10.73). 5.Select a new phase-margin frequency near ωBW. 6.At the new phase-margin frequency, determine the additional amount of phase leadrequired to meet the phase-margin requirement. Add a small contribution that will berequired after the addition of the lag compensator. 7.Design the lag compensator by selecting the higher break frequency one decade belowthe new phase-margin frequency. The design of the lag compensator is not critical, andany design for the proper phase margin will be relegated to the lead compensator. Thelag compensator simply provides stabilization of the system with the gain required forthe steady-state error speci ﬁcation. Find the value of γfrom the lead compensator ’s requirements. Using the phase required from the lead compensator, the phase responsecurve of Figure 11.8 can be used to ﬁnd the value of γ1=β. This value, along with the previously found lag ’s upper break frequency, allows us to ﬁnd the lag ’s lower break frequency. 8.Design the lead compensator. Using the value of γfrom the lag compensator design and the value assumed for the new phase-margin frequency, ﬁnd the lower and upper break frequencies for the lead compensator, using Eq. (11.9) and solvingforT. 9.Check the bandwidth to be sure the speed requirement in Step 1 has been met. 10.Redesign if phase-margin or transient speci ﬁcations are not met, as shown by analysis or simulation.20 log M Phase (degrees) Frequency (rad/s)100 10 1 0.1 0.01 0.001100 10 1 0.1 0.01 0.001– 35– 30– 25– 20– 15– 10– 50 – 80– 60– 40– 20020406080Frequency (rad/s)20 30 5040Asymptotes for 20 30 40 5050 40 30 20 10 FIGURE 11.11 Sample frequency response curves for a lag-lead compensator, Gc s s1 s0:1= sγs0:1 γ/C18/C19 /C20/C2111.5 Lag-Lead Compensation 631WEBC11 10/28/2014 18:21:18 Let us demonstrate the procedure with an example. Example 11.4 Lag-Lead Compensation DesignLag-Lead Compensation Design PROBLEM: Given a unity feedback system where G sK=s s1 s4, design a passive lag-lead compensator using Bode diagrams to yield a 13.25% overshoot, a peak time of 2 seconds, and Kv12. SOLUTION: We will follow the steps previously mentioned in this section for lag-lead design. 1.The bandwidth required for a 2-seconds peak time is 2.29 rad/s. 2.In order to meet the steady-state error requirement, Kv12, the value of Kis 48. 3.The Bode plots for the uncompensated system with K48 are shown in Figure 11.12. We can see that the system is unstable. 4.The required phase margin to yield a 13.25% overshoot is 55 °. 5.Let us select ω1:8 rad/s as the new phase-margin frequency. 6.At this frequency, the uncompensated phase is  176 °and would require, if we add a  5°contribution from the lag compensator, a 56 °contribution from the lead portion of the compensator. 7.The design of the lag compensator is next. The lag compensator allows us to keep the gain of 48 required for Kv12 and not have to lower the gain to stabilize the system. As long as the lag compensator stabilizes the system, the design parameters are notcritical, since the phase margin will be designed with the lead compensator. Thus, choose the lag compensator so that its phase response will have minimal effect at the new phase-margin frequency. Let us choose the lag compensator ’s higher break frequency to be 1 decade below the new phase-margin frequency, at 0.18 rad/s. Sincewe need to add 56 °of phase shift with the lead compensator at ω1:8r a d / s ,w ee s t i m a t e from Figure 11.8 that, if γ10:6( s i n c e γ1=β;β0:094), we can obtain about 56 °of phase shift from the lead compensator. Thus with γ10:6 and a new phase-margin frequency of ω1:8 rad/s, the transfer function of the lag compensator is G lag s1 γs1 T2/C18/C19 s1 γT2/C18/C19 1 10:6 s0:183 s0:0172 (11.16) where the gain term, 1 =γ, keeps the dc gain of the lag compensator at 0 dB. The lag-compensated system ’s open-loop transfer function is Glag-comp s4:53 s0:183 s s1 s4 s0:0172 (11.17) 8.Now we design the lead compensator. At ω1:8, the lag-compensated system has a phase angle of 180 °. Using the values of ωmax1:8 and β0:094, Eq. (11.9) yields the lower break, 1= T10:56 rad/s. The higher break is then 1 =βT15:96 rad/s. The lead compensator is Glead sγs1 T1/C18/C19 sγ T1/C18/C19 10:6 s0:56 s5:96(11.18)632 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:19 The lag-lead-compensated system ’s open-loop transfer function is Glag-lead-comp s48 s0:183 s0:56 s s1 s4 s0:0172  s5:96(11.19) 9.Now check the bandwidth. The closed-loop bandwidth is equal to that frequency where the open-loop magnitude response is approximately  7 dB. From Figure 11.12, the magnitude is  7 dB at approximately 3 rad/s. This bandwidth exceeds that required to meet the peak time requirement. The design is now checked with a simulation to obtain actual performance values. Table 11.4 summarizes the system ’s characteristics. The peak time requirement is also met. Again, if the requirements were not met, a redesign would be necessary. Students who are using MATLAB should now run ch11p4 in Appendix B. You will learn how to use MATLAB to design a lag-lead compensator. You will enter the desired percent overshoot, peak time, and Kv. MATLAB then designs a lag-lead compensator using Bode plots,evaluates K v, and generates a closed-loop step response. This exercise solves Example 11.4 using MATLAB..01 0.1 1 10 10084 726048362412 0 –12 –24 –36 –48 –60 Frequency (rad/s)20 log M 0.01 0.1 1 10 100–250100 Frequenc y (rad/s)Phase (degrees) –300–200–150–100–50050 Lag-lead-compensated systemLag-compensated systemLag-lead compensator Uncompensated systemUncompensated system Lag-lead compensatorLag-lead-compensated systemLag-compensated system FIGURE 11.12 Bode plots for lag-lead compensation in Example 11.4 TABLE 11.4 Characteristics of gain-compensated system of Example 11.4 Parameter Proposed speci ﬁcation Actual value Kv 12 12 Phase margin 55° 59.3 ° Phase-margin frequency — 1.63 rad/s Closed-loop bandwidth 2.29 rad/s 3 rad/s Percent overshoot 13.25 10.2 Peak time 2.0 seconds 1.61 seconds11.5 Lag-Lead Compensation 633WEBC11 10/28/2014 18:21:19 For a ﬁnal example, we include the design of a lag-lead compensator using a Nichols chart. Recall from Chapter 10 that the Nichols chart contains a presentation of both the open-loop frequency response and the closed-loop frequency response. The axes of theNichols chart are the open-loop magnitude and phase ( yandxaxis, respectively). The open- loop frequency response is plotted using the coordinates of the Nichols chart at eachfrequency. The open-loop plot is overlaying a grid that yields the closed-loop magnitudeand phase. Thus, we have a presentation of both the open- and closed-loop responses.Thus, a design can be implemented that reshapes the Nichols plot to meet both open-andclosed-loop frequency speci ﬁcations. From a Nichols chart, we can see simultaneously the following frequency response speciﬁcations that are used to design a desired time response: (1) phase margin, (2) gain margin, (3) closed-loop bandwidth, and (4) closed-loop peak amplitude. In the following example, we ﬁrst specify the following: (1) maximum allowable percent overshoot, (2) maximum allowable peak time, and (3) minimum allowable staticerror constant. We ﬁrst design the lead compensator to meet the transient requirements followed by the lag compensator design to meet the steady-state error requirement.Although calculations could be made by hand, we will use MATLAB and SISOTOOL to make and shape the Nichols plot. Let us ﬁrst outline the steps that we will take in the example: 1.Calculate the damping ratio from the percent overshoot requirement using Eq. (4.39) 2.Calculate the peak amplitude, M p, of the closed-loop response using Eq. (10.52) and the damping ratio found in (1). 3.Calculate the minimum closed-loop bandwidth to meet the peak time requirement usingEq. (10.56), with peak time and the damping ratio from (1). 4.Plot the open-loop response on the Nichols chart. 5.Raise the open-loop gain until the open-loop plot is tangent to the required closed-loopmagnitude curve, yielding the proper M p. 6.Place the lead zero at this point of tangency and the lead pole at a higher frequency. Zeros and poles are added in SISOTOOL by clicking either one on the tool bar and then clicking the position on the open-loop frequency response curve where you desire toadd the zero or pole. 7.Adjust the positions of the lead zero and pole until the open-loop frequency responseplot is tangent to the same M pcurve, but at the approximate frequency found in (3). This yields the proper closed-loop peak and proper bandwidth to yield the desired percentovershoot and peak time, respectively. 8.Evaluate the open-loop transfer function, which is the product of the plant and the leadcompensator, and determine the static error constant. 9.If the static error constant is lower than required, a lag compensator must now be designed. Determine how much improvement in the static error constant isrequired. 10.Recalling that the lag pole is at a frequency below that of the lag zero, place alag pole and zero at frequencies below the lead compensator and adjust to yieldthe desired improvement in static erro r constant. As an example, recall from Eq. (9.5) that the improvement in static error constant for a Type 1 system isequal to the ratio of the lag zero value divided by the lag pole value. Readjust thegain if necessary.634 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:20 Example 11.5 Lag-Lead Design Using the Nichols Chart, MATLAB, andSISO TOOLLag-Lead Design Using the Nichols Chart, MATLAB,and SISOTOOL PROBLEM: Design a lag-lead compensator for the plant, G sK s s5 s10,t o meet the following requirements: (1) a maximum of 20% overshoot, (2) a peak time of no more than 0.5 seconds, (3) a static error constant of no less than 6. SOLUTION: We follow the steps enumerated immediately above, 1.Using Eq. (4.39), ζ0:456 for 20% overshoot. 2.Using Eq. (10.52), Mp1:231:81 dB for ζ0:456. 3.Using Eq. (10.56), ωBW9:3 r/s for ζ0:456 and Tp0:5. 4.Plot the open-loop frequency response curve on the Nichols chart for K=1. 5.Raise the open-loop frequency response curve until it is tangent to the closed-loop peak of 1.81 dB curve as shown in Figure 11.13. The frequency at the tangent point isapproximately 3 r/s, which can be found by letting your mouse rest on the point oftangency. On the menu bar, select Designs/Edit Compensator . . . and ﬁnd the gain added to the plant. Thus, the plant is now G s 150 s s5 s10. The gain-adjusted closed-loop step response is shown in Figure 11.14. Notice that the peak time is about1 second and must be decreased. 6.Place the lead zero at this point of tangency and the lead pole at a higher frequency. 7.Adjust the positions of the lead zero and pole until the open-loop frequency responseplot is tangent to the same M pcurve, but at the approximate frequency found in 3. FIGURE 11.13 Nichols chart after gain adjustment11.5 Lag-Lead Compensation 635WEBC11 10/28/2014 18:21:21 FIGURE 11.14 Gain- adjusted closed-loop step response FIGURE 11.15 Nichols chart after lag-lead compensation636 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:22 8.Checking Designs/Edit Compensator . . . shows G sGlead s1286 s1:4 s s5 s10 s12, which yields a Kv3. 9.We now add lag compensation to improve the static error constant by at least 2. 10.Now add a lag pole at  0.004 and a lag zero at  0.008. Readjust the gain to yield the same tangency as after the insertion of the lead. The ﬁnal forward path is found to be G sGlead sGlag s1381 s1:4 s0:008 s s5 s10 s12 s0:004. The ﬁnal Nichols chart is shown in Figure 11.15, and the compensated time response is shown in Figure 11.16. Notice that the time response has the expected slow climb to the ﬁnal value that is typical of lag compensation. If your design requirements require a faster climb to the ﬁnal response, then redesign the system with a larger bandwidth or attempt a designonly with lead compensation. A problem at the end of the chapter provides theopportunity for practice. FIGURE 11.16 Lag-lead compensated closed-loop step response Skill-Assessment Exercise 11.4 PROBLEM: Design a lag-lead compensator for a unity feedback system with the forward-path transfer function G sK s s8 s30 to meet the following speci ﬁcations: %OS10%;Tp0:6s , a n d Kv10. Use frequency response techniques. ANSWER: Glag s0:456 s0:602 s0:275;Glead s2:19 s4:07 s8:93;K2400 : The complete solution is at www.wiley.com/college/nise .11.5 Lag-Lead Compensation 637WEBC11 10/28/2014 18:21:24 Case Studies Our ongoing antenna azimuth position control system serves now as an example to summarize the major objectives of the chapter. The following cases demonstrate the use offrequency response methods to (1) design a value of gain to meet a percent overshootrequirement for the closed-loop step response and (2) design cascade compensation tomeet both transient and steady-state error requirements. Antenna Control: Gain DesignAntenna Control: Gain Design PROBLEM: Given the antenna azimuth position control system shown on the front end- papers, Con ﬁguration 1, use frequency response techniques to do the following: a.Find the preampli ﬁer gain required for a closed-loop response of 20% overshoot for a step input. b.Estimate the settling time. SOLUTION: The block diagram for the control system is shown on the inside front cover (Conﬁguration 1). The loop gain, after block diagram reduction, is G s6:63K s s1:71 s1000:0388 K ss 1:711/C16/C17s 1001/C16/C17 (11.20) Letting K1, the magnitude and phase frequency response plots are shown in Figure 10.61. a.ToﬁndKto yield a 20% overshoot, we ﬁrst make a second-order approximation and assume that the second-order transient response equations relating percent overshoot,damping ratio, and phase margin are true for this system. Thus, a 20% overshoot implies adamping ratio of 0.456. Using Eq. (10.73), this damping ratio implies a phase margin of48.1 °. The phase angle should therefore be  180 °48:1°  131:9°. The phase angle is 131 :9°atω1:49 rad/s, where the gain is  34.1 dB. Thus K34:1d B 50:7 for a 20% overshoot. Since the system is third-order, the second-order approximation should be checked. A computer simulation shows a 20% overshoot for the step response. b.Adjusting the magnitude plot of Figure 10.61 for K50:7, we ﬁnd 7d Ba t ω2:5 rad/s, which yields a closed-loop bandwidth of 2.5 rad/s. Using Eq. (10.55) with ζ0:456 and ω BW2:5, we ﬁndTs4:63 seconds. A computer simulation shows a settling time of approximately 5 seconds. CHALLENGE: We now give you a problem to test your knowledge of this chapter ’s objectives. You are given the antenna azimuth position control system shown on the inside front cover (Con ﬁguration 3). Using frequency response methods, do the following: a.Find the value of Kto yield 25% overshoot for a step input. b.Repeat Part ausing MATLAB. Antenna Control: Cascade Compensation DesignAntenna Control: Cascade Compensation Design PROBLEM: Given the antenna azimuth position control system block diagram shown on the front endpapers, Con ﬁguration 1, use frequency response techniques and design cascade compensation for a closed-loop response of 20% overshoot for a step input, a ﬁvefold improvement in steady-state error over the gain-compensated system operating at 20% overshoot, and a settling time of 3.5 seconds.638 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:24 SOLUTION: Following the lag-lead design procedure, we ﬁrst determine the value of gain, K, required to meet the steady-state error requirement. 1.Using Eq. (10.55) with ζ0:456, and Ts3:5 seconds, the required bandwidth is 3.3 rad/s. 2.From the preceding case study, the gain-compensated system ’s open-loop transfer function was, for K50:7, G sH s6:63K s s1:71 s100336:14 s s1:71 s100(11.21) This function yields Kv1:97. If K254, then Kv9:85, a ﬁvefold improvement. 3.The frequency response curves of Figure 10.61, which are plotted for K1, will be used for the solution. 4.Using a second-order approximation, a 20% overshoot requires a phase margin of 48.1° . 5.Select ω3 rad/s to be the new phase-margin frequency. 6.The phase angle at the selected phase-margin frequency is  152 °. This is a phase margin of 28 °. Allowing for a 5 °contribution from the lag compensator, the lead compensator must contribute 48:1° 28°5°25:1°. 7.The design of the lag compensator now follows. Choose the lag compensator upperbreak one decade below the new phase-margin frequency, or 0.3 rad/s. Figure 11.8says that we can obtain 25.1 °phase shift from the lead if β0:4o rγ1=β2:5. Thus, the lower break for the lag is at 1 = γT0:3=2:50:12 rad/s. Hence, G lag s0:4 s0:3 s0:12(11.22) 8.Finally, design the lead compensator. Using Eq. (11.9), we have T1 ωmaxﬃﬃﬃ βp1 3ﬃﬃﬃﬃﬃﬃ ﬃ 0:4p 0:527 (11.23) Therefore, the lead compensator lower break frequency is 1 =T1:9r a d / s ,a n dt h e upper break frequency is 1 = βT4:75 rad/s. Thus, the lag-lead-compensated forward path is Glag-lead-comp s 6:63 254 s0:3 s1:9 s s1:71 s100 s0:12 s4:75(11.24) 9.A plot of the open-loop frequency response for the lag-lead-compensated system shows  7 dB at 5.3 rad/s. Thus, the bandwidth meets the design requirements for settling time. A simulation of the compen sated system shows a 20% overshoot and a settling time of approximately 3.2 secon ds, compared to a 20% overshoot for the uncompensated system and a settling time of approximately 5 seconds. Kvfor the c o m p e n s a t e ds y s t e mi s9 . 8 5c o m p a r e dt ot h eu n c o m p e n s a t e ds y s t e mv a l u eo f1 . 9 7 . CHALLENGE: We now give you a problem to test your knowledge of this chapter ’s objectives. You are given the antenna azimuth position control system shown onCase Studies 639WEBC11 10/28/2014 18:21:25 Summary This chapter covered the design of feedback control systems using frequency response techniques. We learned how to design by gain adjustment as well as cascaded lag, lead, andlag-lead compensation. Time response characteristics were related to the phase margin,phase-margin frequency, and bandwidth. Design by gain adjustment consisted of adjusting the gain to meet a phase-margin speciﬁcation. We located the phase-margin frequency and adjusted the gain to 0 dB. A lag compensator is basically a low-pass ﬁlter. The low-frequency gain can be raised to improve the steady-state error, and the high-frequency gain is reduced to yield stability.Lag compensation consists of setting the gain to meet the steady-state error requirement andthen reducing the high-frequency gain to create stability and meet the phase-marginrequirement for the transient response. A lead compensator is basically a high-pass ﬁlter. The lead compensator increases the high-frequency gain while keeping the low-frequency gain the same. Thus, the steady-state error can be designed ﬁrst. At the same time, the lead compensator increases the phase angle at high frequencies. The effect is to produce a faster, stable system, since the uncompensated phase margin now occurs at a higher frequency. A lag-lead compensator combines the advantages of both the lag and the lead compensator. First, the lag compensator is designed to yield the proper steady-state errorwith improved stability. Next, the lead compensator is designed to speed up the transientresponse. If a single network is used as the lag-lead, additional design considerations areapplied so that the ratio of the lag zero to the lag pole is the same as the ratio of the lead pole to the lead zero. In the next chapter, we return to state space and develop methods to design desired transient and steady-state error characteristics. Review Questions 1.What major advantage does compensator design by frequency response have over root locus design? 2.How is gain adjustment related to the transient response on the Bode diagrams? 3.Brieﬂy explain how a lag network allows the low-frequency gain to be increased to improve steady-state error without having the system become unstable. 4.From the Bode plot perspective, brie ﬂy explain how the lag network does not appreciably affect the speed of the transient response. 5.Why is the phase margin increased above that desired when designing a lag compensator? 6.Compare the following for uncompensated and lag-compensated systems designed to yield the same transient response: low-frequency gain, phase-margin frequency, gain curve value around the phase-margin frequency, and phase curve values aroundthe phase-margin frequency.the front endpapers (Con ﬁguration 3). Using frequency response methods, do the following: a.Design a lag-lead compensator to yield a 15% overshoot and Kv20. In order to speed up the system, the compensated system ’s phase-margin frequency will be set to 4.6 times the phase-margin frequency of the uncompensated system. b.Repeat Part ausing MATLAB.640 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:25 7.From the Bode diagram viewpoint, brie ﬂy explain how a lead network increases the speed of the transient response. 8.Based upon your answer to Question 7, explain why lead networks do not cause instability. 9.Why is a correction factor added to the phase margin required to meet the transientresponse? 10.When designing a lag-lead network, what difference is there in the design of the lagportion as compared to a separate lag compensator? Problems 1.Design the value of gain, K, for a gain margin of 10 dB in the unity feedback system of Figure P11.1 if[Section: 11.2] a.G sK s4 s10 s15 b.G sK s s4 s10 c.G sK s2 s s4 s6 s10 R(s) C(s) + _G(s) FIGURE P11.1 2.For each of the systems in Problem 1, design the gain, K, for a phase margin of 40 °. [Section: 11.2] 3.Given the unity feedback system of Figure P11.1, use frequency response methods to determine the value of gain, K, to yield a step response with a 20% overshoot if [Section: 11.2] a.G sK s s8 s15 b.G sK s4 s s8 s10 s15 c.G sK s2 s7 s s6 s8 s10 s15 4.Given the unity feedback system of Figure P11.1 with G sK s10 s15 s s2 s5 s20 do the following: [Section: 11.2]a.Use frequency response methods to determine the value of gain, K, to yield a step response with a 20% overshoot. Make any required second-order approximations. b.Use MATLAB or any other computer program to test your second-order approximation by simulating thesystem for your designed value of K. 5.The unity feedback system of Figure P11.1 with G s K s s7 is operating with 15% overshoot. Using frequencyresponse techniques, design a compensator to yield K v 50 with the phase-margin frequency and phase marginremaining approximately the same as in the uncompensated system. [Section: 11.3] 6.Given the unity feedback system of Figure P11.1 with G sK s10 s11 s s3 s6 s9 do the following: [Section: 11.3] a.Use frequency response methods to design a lag compensator to yield Kv1000 and 15% overshoot for the step response. Make any required second-orderapproximations. b. Use MATLAB or any other computerprogram to test your second- order approximation by simulating the system for your designed value of Kand lag compensator. 7.The unity feedback system shown in Figure P11.1 with G sK s1 s5 s10 is operating with 15% overshoot. Using frequencyresponse methods, design a compensator to yield aProblems 641WEBC11 10/28/2014 18:21:26 ﬁvefold improvement in steady-state error without appreciably changing the transient response. [Section: 11.3] 8.Design a lag compensator so that the system of FigureP11.1 where G sK s4 s2 s6 s8 operates with a 45 °phase margin and a static error constant of 100. [Section: 11.3] 9.Design a PI controller for the system of Figure 11.2 that will yield zero steady-state error for a ramp input and a 9.48% overshoot for a step input. [Section: 11.3] 10.For the system of Problem 6, do the following:[Section: 11.3] a.Use frequency response methods to ﬁnd the gain, K, required to yield about 15% overshoot. Make anyrequired second-order approximations. b.Use frequency response methods to design a PI compensator to yield zero steady-state error for a ramp input without appreciably changing thetransient response characteristics designed inParta. c. Use MATLAB or any other computerprogram to test your second-order approximation by simulating thesystem for your designed value of Kand PI compensator. Write a MATLAB program that willdesign a PI controller assuming asecond-order approximation as follows: a.Allow the user to input from the key-board the desired percent overshoot b.Design a PI controller and gain to yieldzero steady-state error for a closed-loop step response as well as meet the percent overshoot speciﬁ cation c.Display the compensated closed-loopstep response Test your program on G s K s5 s10 and 25% overshoot. 12.Design a compensator for the unity feedback system of Figure P11.1 with G sK s s2 s10 s25 to yield a Kv4 and a phase margin of 45 °. [Section: 11.4]13.Consider the unity feedback system of Figure P11.1 with G sK s s5 s20 The uncompensated system has about 55% overshootand a peak time of 0.5 second when K v10. Do the following: [Section: 11.4] a.Use frequency response methods to design a lead compensator to reduce the percent overshoot to 10%, while keeping the peak time and steady-stateerror about the same or less. Make any requiredsecond-order approximations. b. Use MATLAB or any other computerprogram to test your second-order approximation by simulating thesystem for your designed value of K. 14.The unity feedback system of Figure P11.1 with G s K s4 s2 s5 s12 is operating with 20% overshoot. [Section: 11.4] a.Find the settling time. b.Find Kp. c.Find the phase margin and the phase-marginfrequency. d.Using frequency response techniques, design acompensator that will yield a threefold improvementinK pand a twofold reduction in settling time while keeping the overshoot at 20%. 15.Repeat the design of Example 11.3 in the text using a PD controller. [Section: 11.4] 16.RepeatProblem13usingaPDcompensator.[Section:11.4] 17.Write a MATLAB program that willdesign a lead compensator assuming second-order approximationsas follows: a.Allow the user to input from the key-board the desired percent overshoot,peak time, and gain required to meet asteady-state error speci ﬁcation b.Display the gain-compensated Bodeplot c.Calculate the required phase marginand bandwidth d.Display the pole, zero, and gain of thelead compensator e.Display the compensated Bode plot f.Output the step response of the lead- compensatedsystemtotestyoursecond- order approximation642 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:27 Test your program on a unity feedback system where G sK s1 s s2 s6 and the following speci ﬁcations are to be met: percent overshoot =10%, peak time =0.1 second, and Kv30. 18.Repeat Problem 17 for a PD controller. 19.Use frequency response methods to design a lag-leadcompensator for a unity feedback system where G sK s5 s s2 s10 and the following speci ﬁcations are to be met: percent overshoot =10%, settling time =0.2 second, and Kv1000. [Section: 11.4] 20.Write a MATLAB program that willdesign a lag-lead compensator assuming second-order approximations as follows: [Section: 11.5] a.Allow the user to input from the key-board the desired percent overshoot,settling time, and gain required tomeetasteady-stateerrorspeci ﬁcation b.Displaythegain-compensatedBodeplot c.Calculate the required phase marginand bandwidth d.Display the poles, zeros, and the gainof the lag-lead compensator e.Display the lag-lead-compensated Bodeplot f.Display the step response of the lag-lead compensated system to test your second-order approximation Use your program to do Problem 19. 21.Given a unity feedback system with G s K s s1:75 s6 design a PID controller to yield zero steady-state error for a ramp input, as well as a 20% overshoot, and a peak timeless than 1.8 seconds for a step input. Use only frequency response methods. [Section: 11.5] A unity feedback system has G sK s s3 s6If this system has an associated 0.5 seconddelay, use MATLAB to design the value of Kfor 20% overshoot. Make any necessary second-order approximations, but testyour assumptions by simulating yourdesign. The delay can be represented bycascading the MATLAB function padé (T ,n) with G(s), where Tis the delay in seconds andnistheorderofthePadeapproximation (use 5). Write the program to do thefollowing: a.Accept your value of percent overshootfrom the keyboard b.Display the Bode plot for K=1 c.Calculate the required phase marginand ﬁnd the phase-margin frequency and the magnitude at the phase-marginfrequency d.Calculate and display the value of K DESIGN PROBLEMSDESIGN PROBLEMS The model for a speci ﬁc linearized TCP/IP computer network queue, working under a random early detection (RED) algorith m, has been modeled using the block diagram of Figure P11.1, whereG sM sP s,w i t h M s 0:005L s0:005 and P s140;625e 0:1s s2:67 s10 Also, Lis a parameter to be varied ( Hollot ,2001 ). a.Adjust Lto obtain a 15% overshoot in the transient response for step inputs. b.Verify Part awith a Simulink unit step response simulation. An electric ventricular assist device (EVAD) that helpspump blood concurrently to a defective natural heart insick patients can be shown to have a transfer function G s Pao s Em s1361 s269s70:85 The input, Em(s), is the motor ’s armature voltage, and the output is Pao(s), the aortic blood pressure ( Tasch ,1990 ). The EVAD will be controlled in the closed-loopconﬁguration shown in Figure P11.1. a.Design a phase lag compensator to achieve a tenfoldimprovement in the steady-state error to step inputswithoutappreciablyaffectingthetransientresponseofthe uncompensated system. (problem continues )Problems 643WEBC11 10/28/2014 18:21:27 (Continued ) b.Use MATLAB to simulate the uncompensated and compensated systems for a unit step input. A Tower Trainer 60 Unmanned Aerial Vehicle has atransfer function P sh s δe s  34:16s3 144:4s27047 s557:2 s513:18s495:93s314:61s231:94s where δe sis the elevator angle and h(s) is the change in altitude ( Barkana ,2005 ). a.Assuming the airplane is controlled in the closed- loop conﬁ guration of Figure P11.1 with G sKP s,ﬁnd the value of Kthat will result in a 30 °phase margin. b.For the value of Kcalculated in Part a, obtain the corresponding gain margin. c.Obtain estimates for the system ’s%OS and settling times Tsfor step inputs. d.Simulate the step response of the system using MATLAB. e.Explain the simulation results and discuss anyinaccuracies in the estimates obtained in Part c. The transfer function from applied force to armdisplacement for the arm of a hard disk drive hasbeen identiﬁ ed as G s X s F s3:3333 104 s2 The position of the arm will be controlled using the feedback loop shown in Figure P11.1 ( Yan,2003 ). a.Design a lead compensator to achieve closed-loop stability with a transient response of 16% over-shoot and a settling time of 2 msec for a step input.b. Verify your design through MATLAB simulations. For the heat exchange system described in Problem 39, Chapter 9 ( Smith ,2002 ): a.Design a passive lag-lead compensator to achieve5% steady-state error with a transient response of10% overshoot and a settling time of 60 seconds forstep inputs. b. Use MATLAB to simulate and verify your design. Active front steering is used in front-steering four- wheel cars to control the yaw rate of the vehicle as afunction of changes in wheel-steering commands. Fora certain car, and under certain conditions, it has beenshown that the transfer function from steering wheel angle to yaw rate is given by ( Zhang ,2008 ): P s 28:4s119:7 s27:15s14:7 The system is controlle di nau n i t y - f e e d b a c kc o n ﬁguration. a.Use the Nichols chart and follow the procedure of Example 11.5 to design a lag-lead compensator such that the system has zero steady-state error for a step input. The bandwidth of the closed-loop system mustbeω B10 rad/sec. Let the open-loop magnitude response peak be less than 1 dB and the steady-stateerror constant K v20. b.Relax the bandwidth requirement to ωB10 rad/sec. Design the system for a steady-state error of zero for astep input. Let the open-loop magnitude responsepeak be less than 1 dB and K v20 using only a lead compensator. c.Simulate the step responseof both designs using MATLAB. Figure P11.2 illustrates a set of booms used for thedelivery of chemicals in agriculture ( Sun,2011 ). Each Controller Infrared distance sensorInfrared distance sensorHydraulic cylinder driving singal Connected to the vehicle Four-rod suspension FIGURE P11.25 5Sun, J., and Miao, Y. Modeling and simulation of the agricultural sprayer boom leveling system. IEEE Third International Conf. on Measuring Tech. and Mechatronics Automation, 2011 , pp. 613 –618. Figure 2, p. 613. 2011 Third International Conference on Measuring Technology and Mechatronics Automation by IEEE. Reproduced with permission of IEEE in the format Republish in a book via Copyright Clearance Center.644 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:28 of the booms has equally spaced nozzles, the purpose of which is to maintain a constant gap between the nozzles and the soil despite car movements due toroad unevenness. The booms are tethered to a vehicle(not shown in ﬁgure), and the gap is measured using an infrared sensor. This measurement is fed to a controllerthat drives two hydraulic cylinders to adjust the boom ’s positions. Under certain operating conditions, it wasfound that the system can be described by the unity- feedback con ﬁguration of Figure P11.1 where G s K s2:7810 4 s2 602s 601/C18/C19509:3 s2 21323s 2131/C18/C19 a.Design a lag compensator to achieve Kv30, and %OS=10%. b.Use a computer program to obtain the step responseof the closed-loop system and verify its performance. The amount of leftover moisture in a grain drying conveyor process can be controlled by varying theconveyor ’s motor speed ( Mansor ,2011). Although the process is highly variable, the transfer function atone of the operating points has been found to be G s 0:0169 s0:03558 3:368s33:762s232:19s1e 27s A unity feedback system will be built around this plant such as the one shown in Figure P11.1 to maintain grain moisture at speci ﬁed levels. The speci ﬁcations are:ess0 for a unit-step input; essis half that of the uncompensated system for a ramp input; settling time=500 seconds, and % OS=13%. Since the system is Type 0, it must be augmented to a Type 1 using an integrator in order to achieve ess0 for a step input. In addition, a phase lead-lag compensa-tor will be required to achieve the speci ﬁcations. Simulate your design using a computer program. Problem 52 in Chapter 10 mentioned a measurement-based technique to design ﬁxed-structure controllers, which does not require system identi ﬁcation. In that problem, we assumed a plant transfer functionof (Khadraoui ,2013) G s 0:1111 4s25s1 s43:1s30:85s20:87s0:1111 Again, the interested reader is directed to the reference for further study. In this problem, however,we use the design and analysis techniques developed inthis and the previous chapters.Use MATLAB and Bode plots to design a PID controller, Gc(s), to yield zero steady-state error for astep input, an overshoot of 10 to 20%,and a settling time of 20 to 50 seconds.Start your design assuming an overshootof 10% and a settling time of 50 seconds.Consider the design acceptable if thePID-controlled response satis ﬁes the above requirements. PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS 32.Control of HIV/AIDS. In Chapter 6, the model for an HIV/AIDS patient treated with RTIs was linearized and shown to be P s Y s U1 s 520 s 10:3844 s32:6817 s20:11s0:0126  520 s0:02 s2:2644  s20:04s0:0048  It is assumed here that the patient will be treated and monitored using the closed-loop con ﬁguration shown in Figure P11.1 Since the plant has a negative dc gain,assume for simplicity that G sG c sP sand Gc 0<0. Assume also that the speci ﬁcations for the design are (1) zero steady-state error for step inputs,(2) overdamped time-domain response, and (3) settlingtime T s≈100 days ( Craig ,2004 ). a.The overdamped speci ﬁcation requires a ΦM≈90°. Find the corresponding bandwidth required to satisfythe settling time requirement. b.The zero steady-state error speci ﬁcation implies that the open-loop transfer function must be augmentedto Type 1. The  0.02 zero of the plant adds too much phase lead at low frequencies, and the complexconjugate poles, if left uncompensated within the loop, result in undesired oscillations in the time domain. Thus, as an initial approach to compensation for thissystem we can try G c s K s20:04s0:0048  s s0:02 ForK1, make a Bode plot of the resulting system. Obtain the value of Knecessary to achieve the design demands. Check for closed-loop stability. c.Simulate the unit step responseof the system using MATLAB. Adjust Kto achieve the desired response.Problems 645WEBC11 10/28/2014 18:21:29 33.Hybrid vehicle. In Part bof Problem 54 in Chapter 10, we used a proportional-plus-integral (PI) speed controller that resulted in an overshoot of 20% anda settling time, T s3:92 seconds ( Preitl, 2007). a.Now assume that the system speci ﬁcations require a s t e a d y - s t a t ee r r o ro fz e r of o ras t e pi n p u t ,ar a m pinput steady-state error 2%, a %OS 4.32%, and a settling time 4 seconds. One way to achieve these requirements is to cancel the PI-controller ’s zero, Z I, with the real pole of the uncompensated system closest to the origin (located at  0.0163). Assuming exact cancellation is possible, the plant and controller transfer function becomes G sK s0:6 s s0:5858  Design the system to meet the requirements. You mayuse the following steps: i.Set the gain, K, to the value required by the steady- state error speci ﬁcations. Plot the Bode magnitude and phase diagrams. ii.Calculate the required phase margin to meet thedamping ratio or equivalently the %OS requirement, using Eq. (10.73). If the phase margin found fromthe Bode plot obtained in Step iis greater than the required value, simulate the system to check whetherthe settling time is less than 4 seconds and whetherthe requirement of a % OS4.32% has been met. Redesign if the simulation shows that the %OS and/or the steady-state error requirements have notbeen met. If all requirements are met, you have completed the design. b.In most cases, perfect pole-zero cancellation is not possible. Assume that you want to check whathappens if the PI-controller ’s zero changes by ±20%, e.g., if Z Imoves to:Case 1 : 0:01304 or to Case 2 : 0:01956 : The plant and controller transfer function in these cases will be, respectively: Case 1 :G sK s0:6 s0:01304  s s0:0163  s0:5858  Case 2 :G sK s0:6 s0:01956  s s0:0163  s0:5858  SetKin each case to the value required by the steady-state error speci ﬁcations and plot the Bode magnitude and phase diagrams. Simulate the closed-loop step response for each of the three locations ofZ I: pole/zero cancellation, Case 1, and Case 2, given in the problem. Do the responses obtained resemble a second- order overdamped, critically damped, or underdamped response? Is there a need to add a derivative mode? 34.Parabolic trough collector. In order to reduce the steady-state error of the parabolic trough collector sys- tem, a PI controller is added to the open-loop transferfunction so that ( Camacho ,2012 ) G s137:210 6K s0:01 s s20:0224 s19610 6e 39s a.Draw the new resulting Nyquist diagram when K=1. b.Find the range of Kfor closed-loop stability. c.Use a phase margin argument to ﬁnd the value of K that will yield ζ0:5 damping factor. d.Using the value found in Part a, simulate the system for a unit-step response using a computer program. Cyber Exploration Laboratory Experiment 11.1 Objectives To design a PID controller using MATLAB ’s SISO Design Tool; To observe the effect of a PI and a PD controller on the magnitude and phase responses at each step of the design of a PID controller Minimum Required Software Packages MATLAB, and the Control System Toolbox Prelab 1.What is the phase margin required for 12% overshoot? 2.What is the bandwidth required for 12% overshoot and a peak time of 2 seconds?646 Chapter 11 Design via Frequency ResponseWEBC11 10/28/2014 18:21:29 Bibliography Barkana, I. Classical and Simple Adaptive Control of Nonminimum Phase Autopilot Design. Journal of Guidance, Control, and Dynamics , vol. 28, 2005, pp. 631 –638. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. D’Azzo, J. J., and Houpis, C. H. Feedback Control System Analysis and Synthesis , 2d ed. McGraw-Hill, New York, 1966.3.Given a unity feedback system with G sK s s1 s4, what is the gain, K, required to yield the phase margin found in Prelab 1? What is the phase-margin frequency? 4.Design a PI controller to yield a phase margin 5 °more than that found in Prelab 1. 5.Complete the design of a PID controller for the system of Prelab 3. Lab 1.Using MATLAB ’s SISO Design Tool, set up the system of Prelab 3 and display the open-loop Bode plots and the closed-loop step response. 2.Drag the Bode magnitude plot in a vertical direction until the phase margin found in Prelab 1 is obtained. Record the gain K, the phase margin, the phase-margin frequency, the percent overshoot, and the peak time. Move the magnitude curve up and down andnote the effect upon the phase curve, the phase margin, and the phase-margin frequency. 3.Design the PI controller by adding a pole at the origin and a zero one decade below thephase-margin frequency found in Lab 2. Readjust the gain to yield a phase margin 5 ° higher than that found in Prelab 1. Record the gain K, the phase margin, the phase- margin frequency, the percent overshoot, and the peak time. Move the zero back andforth in the vicinity of its current location and note the effect on the magnitude and phasecurve. Move the magnitude curve up and down and note its effect on the phase curve, thephase margin, and the phase-margin frequency. 4.Design the PD portion of the PID controller by ﬁrst adjusting the magnitude curve to yield a phase-margin frequency slightly below the bandwidth calculated in Prelab 2.Add a zero to the system and move it until you obtain the phase margin calculated inPrelab 1. Move the zero and note its effect. Move the magnitude curve and note its effect. Postlab 1.Compare the Prelab PID design with that obtained via the SISO Design Tool. Inparticular, compare the gain K, the phase margin, the phase-margin frequency, the percent overshoot, and the peak time. 2.For the uncompensated system, describe the effect of changing gain on the phase curve,the phase margin, and the phase-margin frequency. 3.For the PI-compensated system, describe the effect of changing gain on the phase curve, the phase margin, and the phase-margin frequency. Repeat for changes in the zero location. 4.For the PID-compensated system, describe the effect of changing gain on the phasecurve, the phase margin, and the phase-margin frequency. Repeat for changes in the PDzero location.Bibliography 647WEBC11 10/28/2014 18:21:29 Dorf, R. C. Modern Control Systems , 5th ed. Addison-Wesley, Reading, MA, 1989. Flower, T. L., and Son, M. Motor Drive Mechanics and Control Electronics for a High Performance Plotter. HP Journal, November 1981, pp. 12 –15. Hollot, C. V., Misra, V., Towsley, D., and Gong, W. A Control Theoretic Analysis of RED. Proceedings of IEEE INFOCOM, 2001, pp. 1510 –1519. Hostetter, G. H., Savant, C. J., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Khadraoui, S., Nounou, H., Nounou, M., Datta, A., and Bhattacharyya, S. P. A Measurement-based approach for tuning of reduced-order controllers. American Control Conference (ACC ), June 2013, pp. 3876 –3881. Kuo, B. C. Automatic Control Systems , 5th ed. Prentice Hall, Upper Saddle River, NJ, 1987. Mansor, H., Noor, S. B. M., Ahmad, R. K. R., and Taip, F. S. Online Quantitative feedback theory (QFT)-based self-tuning controller for grain drying process. Scienti ﬁc Research and Essays , vol. 6, no. 31, December 16, 2011, pp. 6520 –6534. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Phillips, C. L., and Harbor, R. D. Feedback Control Systems . Prentice Hall, Upper Saddle River, NJ, Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Inteligence and Informatics . IEEE, 2007, pp. 157 –162. Raven, F. H. Automatic Control Engineering , 4th ed. McGraw-Hill, New York, 1987. Smith, C. A. Automated Continuous Process Control. Wiley, New York, 2002. Sun, J., and Miao, Y. Modeling and simulation of the agricultural sprayer boom leveling system. IEEE Third International Conf. on Measuring Tech. and Mechatronics Automation , 2011, pp. 613 –618. Tasch, U., Koontz, J. W., Ignatoski, M. A., and Geselowitz, D. B. An Adaptive Aortic Pressure Observer for the Penn State Electric Ventricular Assist Device. IEEE Transactions on Biomedical Engineering , vol. 37, 1990, pp. 374 –383. Yan, T., and Lin, R. Experimental Modeling and Compensation of Pivot Nonlinearity in Hard Disk Drives. IEEE Transactions on Magnetics , vol. 39, 2003, pp. 1064 –1069. Zhang, J.-Y., Kim, J.-W., Lee, K.-B., and Kim, Y.-B. Development of an Active Front Steering (AFS) System With QFT Control. International Journal of Automotive Technology , vol. 9, no. 6, 2008, pp. 695 –702.648 Chapter 11 Design via Frequency ResponseWEBC12 10/29/2014 8:56:15 Design via State Space This chapter covers only state-space methods. Chapter Learning Outcomes After completing this chapter the student will be able to: Design a state-feedback controller using pole placement for systems represented in phase-variable form to meet transient response speci ﬁcations (Sections 12.1 –12.2) Determine if a system is controllable (Section 12.3) Design a state-feedback controller using pole placement for systems not represented in phase-variable form to meet transient response speci ﬁcations (Section 12.4) Design a state-feedback observer using pole placement for systems representedin observer canonical form (Section 12.5) Determine if a system is observable (Section 12.6) Design a state-feedback observer using pole placement for systems notrepresented in observer canonical form (Section 12.7) Design steady-state error characteristics for systems represented in state space (Section 12.8)12 649WEBC12 10/29/2014 8:56:16 Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with case studies as follows: Given the antenna azimuth position control system shown on the frontendpapers, you will be able to specify all closed-loop poles and then designa state-feedback controller to meet transient response speci ﬁcations. Given the antenna azimuth position control system shown on the fronte n d p a p e r s ,y o uw i l lb ea b l et od e s i g na no b s e r v e rt oe s t i m a t et h es t a t e s . Given the antenna azimuth position control system shown on the frontendpapers, you will be able to combine the controller and observerdesigns into a viable compensator for the system. 12.1 Introduction Chapter 3 introduced the concepts of state-space analysis and system modeling. We showed that state-space methods, like transform methods, are simply tools for analyzing and designing feedback control systems. However, state-space techniques can be applied to a wider class ofsystems than transform methods. Systems with nonlinearities, such as that shown in Figure 12.1,and multiple-input, multiple-output systems are just two of the candidates for the state-spaceapproach. In this book, however, we apply the approach only to linear systems. In Chapters 9 and 11, we applied frequency domain methods to system design. The basic design technique is to create a compensator in cascade with the plant or in the feedbackpath that has the correct additional poles and zeros to yield a desired transient response and steady-state error. One of the drawbacks of frequency domain methods of design, using either root locus or frequency response techniques, is that after designing the location of the dominant Robin Nelson/Zuma PressFIGURE 12.1 A robot in a hospital pharmacy selects medications by bar code1 1Tadeo F., Perez, Loepez O., and Alvarez T. Control of Neutralization Processes by Robust Loopsharing. IEEE Trans. on Cont. Syst. Tech. , vol. 8, no. 2, 2000. Fig. 2, p. 239. IEEE Transactions on Control Systems Technology by Institute of Electrical and Electronics Engineers; IEEE Control Systems Society Reproduced with permission of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.650 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:16 second-order pair of poles, we keep our ﬁngers crossed, hoping that the higher-order poles do not affect the second-order approximation. What we would like to be able to do is specify allclosed-loop poles of the higher-order system. Frequency domain methods of design do not allow us to specify all poles in systems of order higher than 2 because they do not allowfor a suf ﬁcient number of unknown parameters to place all of the closed-loop poles uniquely. One gain to adjust, or compensator pole and zero to select, does not yield asufﬁcient number of parameters to place all the closed-loop poles at desired locations. Remember, to place nunknown quantities, you need nadjustable parameters. State-space methods solve this problem by introducing into the system (1) other adjustable parameters and (2) the technique for ﬁnding these parameter values, so that we can properly place all poles of the closed-loop system. 2 On the other hand, state-space methods do not allow the speci ﬁcation of closed-loop zero locations, which frequency domain methods do allow through placement of the lead compensator zero. This is a disadvantage of state-space methods, since the location of thezero does affect the transient response. Also, a state-space design may prove to be verysensitive to parameter changes. Finally, there is a wide range of computational support for state-space methods; many software packages support the matrix algebra required by the design process. However, asmentioned before, the advantages of computer support are balanced by the loss of graphicinsight into a design problem that the frequency domain methods yield. This chapter should be considered only an introduction to state-space design; we introduce one state-space design technique and apply it only to linear systems. Advancedstudy is required to apply state-space techniques to the design of systems beyond the scopeof this textbook. 12.2 Controller Design This section shows how to introduce additional parameters into a system so that we cancontrol the location of all closed-loop poles. An nth-order feedback control system has an nth-order closed-loop characteristic equation of the form s nan 1sn 1∙∙∙a1sa00 12.1 Since the coef ﬁcient of the highest power of sis unity, there are ncoefﬁcients whose values determine the system ’s closed-loop pole locations. Thus, if we can introduce nadjustable parameters into the system and relate them to the coefﬁ cients in Eq. (12.1), all of the poles of the closed-loop system can be set to any desired location. Topology for Pole Placement In order to lay the groundwork for the approach, consider a plant represented in statespace by _xAxBu (12.2a) yCx (12.2b) and shown pictorially in Figure 12.2( a), where light lines are scalars and the heavy lines are vectors. 2This is an advantage as long as we know where to place the higher-order poles, which is not always the case. One course of action is to place the higher-order poles far from the dominant second-order poles or near a closed-loop zero to keep the second-order system design valid. Another approach is to use optimal control concepts, which are beyond the scope of this text.12.2 Controller Design 651WEBC12 10/29/2014 8:56:16 In a typical feedback control system, the output, y, is fed back to the summing junction. It is now that the topology of the design changes. Instead of feeding back y, what if we feed back all of the state variables? If each state variable is fed back to the control, u, through a gain, ki, there would be ngains, ki, that could be adjusted to yield the required closed-loop pole values. The feedback through the gains, ki, is represented in Figure 12.2( b) by the feedback vector  K. The state equations for the closed-loop system of Figure 12.2( a) can be written by inspection as _xAxBuAxB  Kxr A BKxBr (12.3a) yCx (12.3b) Before continuing, you should have a good idea of how the feedback system of Figure 12.2( b) is actually implemented. As an example, assume a plant signal-ﬂow graph in phase-variable form, as shown in Figure 12.3( a). Each state variable is then fed back to the plant’s input, u, through a gain, ki, as shown in Figure 12.3( b). Although we will cover other representations later in the chapter, the phase-variable form, with its typical lower companion system matrix, or the controller canonical form, with its typical upper companion system matrix, yields the simplest evaluation of the feedback gains. In the ensuing discussion, we use the phase-variable form to develop and demonstrate the concepts.End-of-chapter problems will give you an opportunity to develop and test the concepts for thecontroller canonical form. The design of state-variable feedback for closed-loop pole placement consists of equating the characteristic equation of a closed-loop system, such as that shown inFigure 12.3( b), to a desired characteristic equation and then ﬁnding the values of the feedback gains, k i. If a plant like that shown in Figure 12.3( a) is of high order and not represented in phase-variable or controller can onical form, the solution for the ki’s can be intricate. Thus, it is advisable to transfor m the system to either of these forms, design theki’s, and then transform the system back to its original represen tation. We performu B+ +Cx y A u B+ +Cx y A+ r + –K(a) (b)xx ∫ ∫ FIGURE 12.2 a.State-space representation of a plant; b.plant with state-variable feedback652 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:16 this conversion in Section 12.4, where we develop a method for performing the transformations. Until then, let us direct our attention to plants represented inphase-variable form. Pole Placement for Plants in Phase-Variable Form To apply pole-placement methodology to plants represented in phase-variable form, we takethe following steps: 1.Represent the plant in phase-variable form. 2.Feed back each phase variable to the input of the plant through a gain, k i. 3.Find the characteristic equation for the closed-loop system represented in Step 2. 4.Decide upon all closed-loop pole locations and determine an equivalent characteristic equation. 5.Equate like coefﬁ cients of the characteristic equ ations from Steps 3 and 4 and solve forki.x1u1 x3 x2 x1yc1c3 –a0–a1–a2 (a) u1 x3 x2yc1c2c3 –a0–a1–a2 (b)r1 –k3 –k2 –k1c2 1 s1 s1 s 1 s1 s1 s FIGURE 12.3 a.Phase- variable representation for plant; b.plant with state-variable feedback12.2 Controller Design 653WEBC12 10/29/2014 8:56:17 Following these steps, the phase-variable representation of the plant is given by Eq. (12.2), with A010 ∙∙∙ 0 001 ∙∙∙ 0 ...............  a0 a1 a2∙∙∙  an 12 66666643 7777775;B0 0 ... 12 66666643 7777775; Cc 1c2∙∙∙ cn 12.4 The characteristic equation of the plant is thus snan 1sn 1∙∙∙a1sa00 12.5 Now form the closed-loop system by feeding back each state variable to u, forming u Kx 12.6 where Kk1k2∙∙∙ kn 12.7 The ki’s are the phase variables’ feedback gains. Using Eq. (12.3 a) with Eqs. (12.4) and (12.7), the system matrix, A BK, for the closed-loop system is A BK010 ∙∙∙ 0 001 ∙∙∙ 0 ...............   a0k1  a1k2  a2k3∙∙∙   an 1kn2 6666643 777775 12.8 Since Eq. (12.8) is in phase-variable form, the characteristic equation of the closed-loop system can be written by inspection as det sI  A BK  s n an 1knsn 1 an 2kn 1sn 2 ∙∙∙ a1k2s a0k10 12.9 Notice the relationship between Eqs. (12.5) and (12.9). For plants represented in phase-variable form, we can write by inspection the closed-loop characteristic equation from theopen-loop characteristic equation by adding the appropriate k ito each coef ﬁcient. Now assume that the desired characteristic equation for proper pole placement is sndn 1sn 1dn 2sn 2∙∙∙d2s2d1sd00 12.10  where the di’s are the desired coef ﬁcients. Equating Eqs. (12.9) and (12.10), we obtain diaiki1i0;1;2;...; n 1 12.11 654 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:18 from which ki1di ai 12.12  Now that we have found the denominator of the closed-loop transfer function, let us ﬁnd the numerator. For systems represented in phase-variable form, we learned that the numerator polynomial is formed from the coef ﬁcients of the output coupling matrix, C. Since Figures 12.3( a) and ( b) are both in phase-variable form and have the same output coupling matrix, we conclude that the numerators of their transfer functions are the same. Let us look at a design example. Example 12.1 Controller Design for Phase-Variable FormController Design for Phase-Variable Form PROBLEM: Given the plant G s20 s5 s s1 s4 12.13  design the phase-variable feedback gains to yield 9.5% overshoot and a settling time of 0.74 second. SOLUTION: We begin by calculating the desired closed-loop characteristic equation. Using the transient response requirements, the closed-loop poles are  5:4j7:2. Since the system is third-order, we must select an other closed-loop pole. The closed-loop s y s t e mw i l lh a v eaz e r oa t  5, the same as the open-loop system. We could select the third closed-loop pole to cancel the closed-loop zero. However, to demonstrate the effect of the third pole and the design proces s, including the need for simulation, let us choose  5.1 as the location of the third closed-loop pole. Now draw the signal- ﬂow diagram for the plant . The result is shown in Figure 12.4(a ). Next feed back all state variables to the control, u, through gains ki, as shown in Figure 12.4( b). Writing the closed-loop system ’s state equations from Figure 12.4(b ), we have _x01 0 00 1  k1  4k2  5k32 643 75x0 0 12 643 75r (12.14a) y100 20 0 x (12.14b) Comparing Eqs. (12.14) to Eqs. (12.3), we identify the closed-loop system matrix as A BK01 0 00 1  k1  4k2  5k32 643 75 12.15  Toﬁnd the closed-loop system ’s characteristic equation, form det sI  A BK  s3 5k3s2 4k2sk10 12.16  This equation must match the desired characteristic equation s315:9s2136 :08s413 :10 12.17 12.2 Controller Design 655WEBC12 10/29/2014 8:56:18 formed from the poles  5:4j7:2; 5:4 j7:2, and  5.1, which were previously determined. Equating the coef ﬁcients of Eqs. (12.16) and (12.17), we obtain k1413 :1;k2132 :08;k310:9 12.18  Finally, the zero term of the closed-loop transfer function is the same as the zero term of the open-loop system, or s5. Using Eqs. (12.14), we obtain the following state-space representation of the closed- loop system: _x01 0 00 1  413 :1 136 :08  15 :92 435x0 012 435r (12.19a) y100 20 0 x (12.19b) The transfer function is T s 20 s5 s315:9s2136 :08s413 :1 12.20  Figure 12.5, a simulation of the closed-loop system, shows 11.5% overshoot and a settling time of 0.8 second. A redesign with the third pole canceling the zero at  5 will yield performance equal to the requirements. Since the steady-state response approaches 0.24 instead of unity, there is a large steady-state error. Design techniques to reduce this error are discussed in Section 12.8.x1u1 x3 x2 x1100 y20 –4 x31 u1 rx2y –5 –k3–4 –k2 –k1(a) (b)–51 s1 s1 s 1 s1 s1 s20 100 FIGURE 12.4 a.Phase- variable representation for plant of Example 12.1; b.plant with state-variable feedback656 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:19 In this section, we showed how to design feedback gains for plants represented in phase-variable form in order to place all of the closed-loop system ’s poles at desired locations on the s-plane. On the surface, it appears that the method should always work forStudents who are using MATLAB should now run ch12 p1 in Appendix B. You will learn how to use MATLAB to design a controller for phase variables using pole placement. MATLAB will plot the step response of the designed system. This exercise solves Example 12.1 using MATLAB. 0 00.30 2.0 Time (seconds)c(t)0.25 0.200.15 0.100.05 1.5 1.0 0.5FIGURE 12.5 Simulation of closed-loop system of Example 12.1 Skill-Assessment Exercise 12.1 PROBLEMS: For the plant G s100 s10 s s3 s12 represented in the state space in phase-variable form by _xAxBu010 0010 36  152 6643 775x0 012 6643 775u yCx1000 100 0/C2/C3 x design the phase-variable feedback gains to yield 5% overshoot and a peak time of 0.3 second. ANSWER: K2094 373 :11 4 :97 The complete solution is located at www.wiley.com/college/nise .TryIt 12.1 Use MATLAB, the Control System Toolbox, and the following statements to solvefor the phase-variablefeedback gains to place the poles of the system in Skill- Assessment Exercise 12.1 at 3j5; 3 j5, and  10. A=[0 1 0 001 0 36 15] B=[0;0;1] poles =[ 3+5j , ...  3 5j, 10] K=acker(A,B,poles)12.2 Controller Design 657WEBC12 10/29/2014 8:56:19 any system. However, this is not the case. The conditions that must exist in order to uniquely place the closed-loop poles where we want them is the topic of the next section. 12.3 Controllability Consider the parallel form shown in Figure 12.6( a). To control the pole location of the closed-loop system, we are saying implicitly that the control signal, u, can control the behavior of each state variable in x. If any one of the state variables cannot be controlled by the control u, then we cannot place the poles of the system where we desire. For example, in Figure 12.6( b), ifx1were not controllable by the control signal and if x1also exhibited an unstable response due to a nonzero initial condition, there would be no way to effect a state-feedback design to stabilize x1. State variable x1would perform in its own way regardless of the control signal, u. Thus, in some systems, a state-feedback design is not possible. We now make the following de ﬁnition based upon the previous discussion: If an input to a system can be found that takes every state variable from a desired initial state to a desired ﬁnal state, the system is said to be controllable ; otherwise, the system is uncontrollable . Pole placement is a viable design technique only for systems that are controllable. This section shows how to determine, a priori, whether pole placement is a viable design technique for a controller. Controllability by Inspection We can explore controllability from another viewpoint: that of the state equation itself. When the system matrix is diagonal, as it is for the parallel form, it is apparent whetheror not the system is controllable. For example, the state equation for Figure 12.6( a)i s _x a 1 00 0  a2 0 00  a32 643 75x1 112 643 75u 12.21  or _x 1 a1x1 u (12.22a) _x2  a2x2 u (12.22b) _x3  a3x3u (12.22c) Since each of Eqs. (12.22) is independent and decoupled from the rest, the control u affects each of the state variables. This is controllability from another perspective. Now let us look at the state equations for the system of Figure 12.6( b): _x a4 00 0  a5 0 00  a62 435x0 112 435u 12.23  or _x 1 a4x1 (12.24a) _x2  a5x2 u (12.24b) _x3  a6x3u (12.24c)u x1 y11 1 (a)–a3x3–a2–a1 K2 u x1 y1 1 (b)–a6x3 x2 –a5–a4K3 K5K4 K6K1 x21 s 1 s 1 s 1 s 1 s 1 s FIGURE 12.6 Comparison of a.controllable and b.uncontrollable systems658 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:20 From the state equations in (12.23) or (12.24), we see that state variable x1is not controlled by the control u. Thus, the system is said to be uncontrollable. In summary, a system with distinct eigenvalues and a diagonal system matrix is controllable if the input coupling matrix Bdoes not have any rows that are zero. The Controllability Matrix Tests for controllability that we have so far explored cannot be used for representations of the system other than the diagonal or parallel form with distinct eigenvalues. The problemof visualizing controllability gets more complicated if the system has multiple poles, eventhough it is represented in parallel form. Further, one cannot always determine controllabilityby inspection for systems that are not represented in parallel form. In other forms, the existenceof paths from the input to the state variables is not a criterion for controllability since theequations are not decoupled. In order to be able to determine controllability or, alternatively, to design state feedback for a plant under any representation or choice of state variables, a matrix can be derived thatmust have a particular property if all state variables are to be controlled by the plant input, u. We now state the requirement for controllability, including the form, property, and name ofthis matrix. 3 Annth-order plant whose state equation is _xAxBu 12.25  is completely controllable4if the matrix CMBA BA2B∙∙∙ An 1B 12.26  is of rank n, where CMis called the controllability matrix.5As an example, let us choose a system represented in parallel form with multiple roots. Example 12.2 Controllability via the Controllability MatrixControllability via the Controllability Matrix PROBLEM: Given the system of Figure 12.7, represented by a signal-ﬂow diagram, determine its controllability. –1 –1 –10 10 –21u11 10 y x3x1 x21 s1 s 1 s FIGURE 12.7 System for Example 12.2 3See the work listed in the Bibliography by Ogata (1990 :699–702) for the derivation. 4Completely controllable means that all state variables are controllable. This textbook uses controllable to mean completely controllable . 5See Appendix G at www.wiley.com/college/nise for the de ﬁnition of rank. For single-input systems, instead of specifying rank n, we can say that CMmust be nonsingular, possess an inverse, or have linearly independent rows and columns.12.3 Controllability 659WEBC12 10/29/2014 8:56:20 In the previous example, we found that even though an element of the input coupling matrix was zero, the system was controllable. If we look at Figure 12.7, we can see why. In thisﬁgure, all of the state variables are driven by the input u. On the other hand, if we disconnect the input at either dx1=dt;dx2=dt,o rdx3=dt,a t least one state variable would not be controllable. To see the effect, let us disconnect theinput at dx 2=dt. This causes the Bmatrix to become B0 012 643 75 12.29  We can see that the system is now uncontrollable, since x 1andx2are no longer controlled by the input. This conclusion is borne out by the controllability matrix, which is now CMBA BA2B/C2/C3 00 0 00 0 1 242 643 75 12.30  Not only is the determinant of this matrix equal to zero, but so is the determinant of any 2 2 submatrix. Thus, the rank of Eq. (12.30) is 1. The system is uncontrollable because the rank ofCMis 1, which is less than the order, 3, of the system.SOLUTION: The state equation for the system written from the signal-ﬂow diagram is _xAxBu 110 0 10 00  22 643 75x0 1 12 643 75u 12.27  Atﬁrst, it would appear that the system is not controllable because of the zero in the Bmatrix. Remember, though, that this con ﬁguration leads to uncontrollability only if the poles are real and distinct. In this case, we have multiple poles at  1. The controllability matrix is CMBA BA2B/C2/C3 01  2 1 11 1 242 643 75 12.28  The rank of CMequals the number of linearly independent rows or columns. The rank can be found by ﬁnding the highest-order square submatrix that is nonsingular. The determinant of CM 1. Since the determinant is not zero, the 3 3 matrix is nonsingular, and the rank of CMis 3. We conclude that the system is controllable since the rank of CMequals the system order. Thus, the poles of the system can be placed using state-variable feedback design. Students who are using MATLAB should now run ch12p2 in Appendix B. You will learn how to use MATLAB to test a system for controlla-bility. This exercise solves Example 12.2 using MATLAB.660 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:21 In summary, then, pole-placement design through state-variable feedback is simpli ﬁed by using the phase-variable form for the plant ’s state equations. However, controllability, the ability for pole-placement design to succeed, can be visualized best in the parallel form, where the system matrix is diagonal with distinct roots. In any event, the controllability matrix willalways tell the designer whether the implementation is viable for state-feedback design. The next section shows how to design state-variable feedback for systems not represented in phase-variable form. We use the controllability matrix as a tool for trans-forming a system to phase-variable form for the design of state-variable feedback. 12.4 Alternative Approaches to Controller Design Section 12.2 showed how to design state-variable feedback to yield desired closed-loop poles. We demonstrated this method using systems represented in phase-variable form and saw how simple it was to calculate the feedback gains. Many times the physics of theproblem requires feedback from state variables that are not phase variables. For thesesystems we have some choices for a design methodology. Theﬁrst method consists of matching the coef ﬁcients of det sI  A BKwith the coefﬁcients of the desired characteristic equation, which is the same method we used for systems represented in phase variables. This technique, in general, leads to dif ﬁcult calculations of the feedback gains, especially for higher-order systems not represented with phase variables. Let us illustrate this technique with an example.Skill-Assessment Exercise 12.2 PROBLEM: Determine whether the system _xAxBu 112 0 15 03  42 643 75x2 112 643 75u is controllable. ANSWER: Controllable The complete solution is located at www.wiley.com/college/nise .TryIt 12.2 U s eM A T L A B ,t h eC o n t r o l System Toolbox, and thefollowing statements to solve Skill-Assessment Exercise 12.2. A=[ 112 0 15 03  4] B=[2;1;1] Cm=ctrb (A,B) Rank=rank (Cm) Example 12.3 Controller Design by Matching CoefficientsController Design by Matching Coefficients PROBLEM: Given a plant, Y s=U s10= s1 s2, design state feedback for the plant represented in cascade form to yield a 15% overshoot with a settling time of 0.5 second. SOLUTION: The signal- ﬂow diagram for the plant in cascade form is shown in Figure 12.8( a). Figure 12.8( b) shows the system with state feedback added. Writing the state equations from Figure 12.8( b), we have _x 21  k1  k21/C20/C21 x0 1/C20/C21 r (12.31a) y10 0 x (12.31b)12.4 Alternative Approaches to Controller Design 661WEBC12 10/29/2014 8:56:21 The second method consists of transforming the system to phase variables, designing the feedback gains, and transforming the designed system back to its original state-variable representation.6This method requires that we ﬁrst develop the transformation between a system and its representation in phase-variable form. Assume a plant not represented in phase-variable form _zAzBu (12.34a) yCz (12.34b) whose controllability matrix is CMzBA BA2B∙∙∙An 1B 12.35 where the characteristic equation is s2 k23s 2k2k120 12.32  Using the transient response requirements stated in the problem, we obtain the desiredcharacteristic equation s 216s239 :50 12.33  Equating the middle coef ﬁcients of Eqs. (12.32) and (12.33), we ﬁndk213. Equating the last coef ﬁcients of these equations along with the result for k2yields k1211 :5.u1 x21 x110 y –1 x21 1 u1 r x110 y –1 –2 –k2 –k1(a) (b)–21 s1 s 1 s1 s FIGURE 12.8 a.Signal- ﬂow graph in cascade form for G s10= s1 s2; b.system with state feedback added 6See the discussions of Ackermann ’s formula in ( Franklin ,1994 ) and ( Ogata ,1990 ), listed in the Bibliography.662 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:22 Assume that the system can be transformed into the phase-variable ( x) representation with the transformation zPx 12.36  Substituting this transformation into Eqs. (12.34), we get _xP 1APx P 1Bu (12.37a) yCPx (12.37b) whose controllability matrix is CMxP 1B P 1AP P 1B P 1AP2 P 1B∙∙∙ P 1APn 1 P 1B P 1B P 1AP P 1B P 1AP P 1AP P 1B ∙∙∙ P 1AP P 1AP P 1AP∙∙∙ P 1AP P 1B P 1BA BA2B∙∙∙ An 1B 12.38  Substituting Eq. (12.35) into (12.38) and solving for P, we obtain PCMzC 1 Mx 12.39  Thus, the transformation matrix, P, can be found from the two controllability matrices. After transforming the system to phase variables, we design the feedback gains as in Section 12.2. Hence, including both feedback and input, u Kxxr, Eqs. (12.37) becomes _xP 1APx  P 1BK xxP 1Br  P 1AP P 1BK xxP 1Br(12.40a) yCPx (12.40b) Since this equation is in phase-variable form, the zeros of this closed-loop system are determined from the polynomial formed from the elements of CP, as explained in Section 12.2. Using xP 1z, we transform Eqs. (12.40) from phase variables back to the original representation and get _zAz BK xP 1zBr A BK xP 1zBr (12.41a) yCz (12.41b) Comparing Eqs. (12.41) with (12.3), the state variable feedback gain, Kz, for the original system is KzKxP 1 12.42  The transfer function of this closed-loop system is the same as the transfer function forEqs. (12.40), since Eqs. (12.40) and (12.41) represent the same system. Thus, the zeros ofthe closed-loop transfer function are the same as the zeros of the uncompensated plant,based upon the development in Section 12.2. Let us demonstrate with a design example.12.4 Alternative Approaches to Controller Design 663WEBC12 10/29/2014 8:56:25 Example 12.4 Controller Design by TransformationController Design by Transformation PROBLEM: Design a state-variable feedback controller to yield a 20.8% overshoot and a settling time of 4 seconds for a plant, G s s4 s1 s2 s5 12.43  that is represented in cascade form as shown in Figure 12.9. SOLUTION: First ﬁnd the state equations and the controllability matrix. The state equations written from Figure 12.9 are _zAzzBzu 510 0 21 00  12 643 75z0 012 643 75u (12.44a) yC zz  110 z (12.44b) from which the controllability matrix is evaluated as CMzBzAzBzA2 zBz/C2/C3 001 01  3 1 112 643 75 12.45  Since the determinant of CMzis 1, the system is controllable. We now convert the system to phase variables by ﬁrstﬁnding the characteristic equation and using this equation to write the phase-variable form. The characteristic equation, det sI Az,i s det sI Azs38s217s100 12.46  Using the coef ﬁcients of Eq. (12.46) and our knowledge of the phase-variable form, we write the phase-variable representation of the system as _xAxxBxu01 0 00 1  10  17  82 643 75x0 0 12 643 75u (12.47a) y410 x (12.47b)u z31 z21 z14 –1 –2 –5y1 11 s1 s1 s FIGURE 12.9 Signal- ﬂow graph for plant of Example 12.4664 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:26 The output equation was written using the coef ﬁcients of the numerator of Eq. (12.43), since the transfer function must be the same for the two representations. The controllability matrix, CMx, for the phase-variable system is CMxBxAxBxA2 xBx/C2/C3 001 01  8 1 84 72 643 75 12.48  Using Eq. (12.39), we can now calculate the transformation matrix between the two systems as PCMzC 1 Mx100 510 10 7 12 643 75 12.49  We now design the controller using the phase-variable representation and then use Eq. (12.49) to transform the design back to the original representation. For a 20.8% overshoot and a settling time of 4 seconds, a factor of the characteristic equation of thedesigned closed-loop system is s 22s5. Since the closed-loop zero will be at s 4, we choose the third closed-loop pole to cancel the closed-loop zero. Hence, the totalcharacteristic equation of the desired closed-loop system is D s s4 s 22s5s36s213s200 12.50  The state equations for the phase-variable form with state-variable feedback are _x Ax BxKxx01 0 00 1   10k1x  17k2x  8k3x2 643 75x (12.51a) y410 x (12.51b) The characteristic equation for Eqs. (12.51) is det sI  Ax BxKx  s3 8k3xs2 17k2xs 10k1x 0 12.52  Comparing Eq. (12.50) with (12.52), we see that Kxk1xk2xk3x 10  4  2 12.53  Using Eqs. (12.42) and (12.49), we can transform the controller back to the original system as KzKxP 1  20 10  2 12.54  Theﬁnal closed-loop system with state-variable feedback is shown in Figure 12.10, with the input applied as shown.12.4 Alternative Approaches to Controller Design 665WEBC12 10/29/2014 8:56:27 Let us now verify our design. The state equations for the designed system shown in Figure 12.10 with input rare _z Az BzKzzBzr 51 0 0  21 20  10 12 643 75z0 0 12 643 75r (12.55a) yCzz  110 z (12.55b) Using Eq. (3.73) to ﬁnd the closed-loop transfer function, we obtain T s s4 s36s213s201 s22s5 12.56  The requirements for our design have been met. Students who are using MATLAB should now run ch12p3 in Appendix B. You will learn how to use MATLAB to design a controller for a plant not represented in phase-variable form. You will see that MATLABdoes not require transformation to phase-variable form. This exercise solves Example 12.4 using MATLAB.–1 –2 20–10–5r1 u11 z31 z24 z1y1 21 s1 s1 s FIGURE 12.10 Designed system with state-variable feedback for Example 12.4 Skill-Assessment Exercise 12.3 PROBLEM: Design a linear state-feedback contro ller to yield 20% overshoot and a settling time of 2 seconds for a plant G s s6 s9 s8 s7 that is represented in state space in cascade form by _zAzBu 710 0 81 00  92 6643 775z0 012 6643 775u yCz  110/C2/C3 z ANSWER: K z  40:23 62 :24  14 The complete solution is located at www.wiley.com/college/nise .666 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:27 In this section, we saw how to design state-variable feedback for plants not represented in phase-variable form. Using controllability matrices, we were able to transform a plant to phase-variable form, design the controller, and ﬁnally transform the controller design back to the plant ’s original representation. The design of the controller relies on the availability of the states for feedback. In the next section, we discuss the designof state-variable feedback when some or all of the states are not available. 12.5 Observer Design Controller design relies upon access to the state variables for feedback through adjustablegains. This access can be provided by hardware. For example, gyros can measure positionand velocity on a space vehicle. Sometimes it is impractical to use this hardware for reasonsof cost, accuracy, or availability. For example, in powered ﬂight of space vehicles, inertial measuring units can be used to calculate the acceleration. However, their alignmentdeteriorates with time; thus, other means of measuring acceleration may be desirable(Rockwell International ,1984 ). In other applications, some of the state variables may not be available at all, or it is too costly to measure them or send them to the controller. If thestate variables are not available because of system con ﬁguration or cost, it is possible to estimate the states. Estimated states, rather than actual states, are then fed to the controller.One scheme is shown in Figure 12.11( a). An observer , sometimes called an estimator ,i s used to calculate state variables that are not accessible from the plant. Here the observer is amodel of the plant. Plant ObserverPlant output, y Estimated output, y+ Controlleru +r = 0 (a)Plant Observer+ Controlleru +r = 0 Estimated states, (b) LAB+ ++ – To controlleru (c)+Estimated output, yCx x.Plant output, y xEstimated states, x Plant output, yˆˆ ˆ ˆ ˆ ˆ Estimated error output∫ FIGURE 12.11 State- feedback design using an observer to estimate unavailable state variables: a.open-loop observer; b.closed-loop observer; c.exploded view of a closed-loop observer, showing feedback arrangement to reducestate-variable estimation error12.5 Observer Design 667WEBC12 10/29/2014 8:56:27 Let us look at the disadvantages of such a con ﬁguration. Assume a plant, _xAxBu (12.57a) yCx (12.57b) and an observer, _^xA^xBu (12.58a) ^yC^x (12.58b) Subtracting Eqs. (12.58) from (12.57), we obtain _x _^xA x ^x (12.59a) y ^yC x ^x (12.59b) Thus, the dynamics of the difference between the actual and estimated states is unforced, and if the plant is stable, this difference, due to differences in initial state vectors, approaches zero. However, the speed of convergence between the actual state and the estimated state is the same as the transient response of the plant since the characteristicequation for Eq. (12.59a) is the same as that for Eq. (12.57a). Since the convergence is tooslow, we seek a way to speed up the observer and make its response time much faster thanthat of the controlled closed-loop system, so t hat, effectively, the controller will receive the estimated states instantaneously. To increase the speed of convergence between the actual and estimated states, we use feedback, shown conceptually in Figure 12.11( b) and in more detail in Figure 12.11( c). The error between the outputs of the plant and the observer is fed back to the derivatives of theobserver ’s states. The system corrects to drive this error to zero. With feedback we can design a desired transient response into the observer that is much quicker than that of theplant or controlled closed-loop system. When we implemented the controller, we found that the phase-variable or controller canonical form yielded an easy solution for the controller gains. In designing an observer, itis the observer canonical form that yields the easy solution for the observer gains.Figure 12.12( a) shows an example of a third-order plant represented in observer canonical form. In Figure 12.12( b), the plant is con ﬁgured as an observer with the addition of feedback, as previously described. The design of the observer is separate from the design of the controller. Similar to the design of the controller vector, K, the design of the observer consists of evaluating the constant vector, L, so that the transient response of the observer is faster than the response of the controlled loop in order to yield a rapidly updated estimate of the state vector. We nowderive the design methodology. We will ﬁrstﬁndthe state equations for the error between the actual state vector and the estimated state vector, x ^x.T h e nw ew i l l ﬁnd the characteristic equation for the error system and evaluate the required Lto meet a rapid transient response for the observer. Writing the state equations of the observer from Figure 12.11( c), we have _^xA^xBuL y ^y (12.60a) ^yC^x (12.60b)668 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:28 But the state equations for the plant are _xAxBu (12.61a) yCx (12.61b) Subtracting Eqs. (12.60) from (12.61), we obtain _x _^xA x ^x L y ^y (12.62a) y ^yC x ^x (12.62b) where x ^xis the error between the actual state vector and the estimated state vector, and y ^yis the error between the actual output and the estimated output. Substituting the output equation into the state equation, we obtain the state equation for the error between the estimated state vector and the actual state vector: _x _^x A LC x ^x (12.63a) y ^yC x ^x (12.63b)ub1 x3ˆ1 x2ˆ1 x1ˆ1 yˆ –a2 –a1 –a0b2b3 (a) b3 b2 ub1 x3ˆ1 x2ˆ1 x1ˆ1 yˆ–11 y –a2 –a1 –a0 l3l2l1 (b)1 s1 s1 s 1 s1 s1 s FIGURE 12.12 Third-order observer in observer canonical form: a.before the addition of feedback; b.after the addition of feedback12.5 Observer Design 669WEBC12 10/29/2014 8:56:28 Letting ex x ^x, we have _ex A LCex (12.64a) y ^yCex (12.64b) Equation (12.64a) is unforced. If the eigenvalues are all negative, the estimated state vector error, ex, will decay to zero. The design then consists of solving for the values of Lto yield a desired characteristic equation or response for Eqs. (12.64). The characteristic equation is found from Eqs. (12.64) to be detλI  A LC 0 12.65  Now we select the eigenvalues of the observer to yield stability and a desired transient response that is faster than the controlled closed-loop response. These eigenvalues deter-mine a characteristic equation that we set equal to Eq. (12.65) to solve for L. Let us demonstrate the procedure for an nth-order plant represented in observer canonical form. We ﬁrst evaluate A LC. The form of A,L, and Ccan be derived by extrapolating the form of these matrices from a third-order plant, which you can derive fromFigure 12.12. Thus, A LC a n 1100 ∙∙∙ 0  an 2010 ∙∙∙ 0 ..................  a1000 ∙∙∙ 1  a0000 ∙∙∙ 02 6666666666643 777777777775 l 1 l2 ... ln 1 ln2 6666666666643 7777777777751000 ∙∙∙ 0/C2/C3   an 1l1100 ∙∙∙ 0   an 2l2010 ∙∙∙ 0 ..................   a1ln 1000 ∙∙∙ 1   a0ln000 ∙∙∙ 02 6666666666643 777777777775 12.66  The characteristic equation for A LCis s n an 1l1sn 1 an 2l2sn 2∙∙∙ a1ln 1s a0ln0 12.67  Notice the relationship between Eq. (12.67) and the characteristic equation, det sI A0, for the plant, which is snan 1sn 1an 2sn 2∙∙∙a1sa00 12.68 670 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:29 Thus, if desired, Eq. (12.67) can be written by inspection if the plant is represented in observer canonical form. We now equate Eq. (12.67) with the desired closed-loop observer characteristic equation, which is chosen on the basis of a desired transient response.Assume the desired characteristic equation is s ndn 1sn 1dn 2sn 2∙∙∙d1sd00 12.69  We can now solve for the li’s by equating the coef ﬁcients of Eqs. (12.67) and (12.69): lidn i an ii1;2;...; n 12.70  Let us demonstrate the design of an observer using the observer canonical form. Insubsequent sections we will show how to design the observer for other than observercanonical form. Example 12.5 Observer Design for Observer Canonical FormObserver Design for Observer Canonical Form PROBLEM: Design an observer for the plant G s s4 s1 s2 s5s4 s38s217s10 12.71  which is represented in observer canonical form. The observer will respond 10 times faster than the controlled loop designed in Example 12.4. SOLUTION: 1.First represent the estimated plant in observer canonical form. The result is shown in Figure 12.13( a). 2.Now form the difference between the plant ’s actual output, y, and the observer ’s estimated output, ^y, and add the feedback paths from this difference to the derivative of each state variable. The result is shown in Figure 12.13( b). 3.Next ﬁnd the characteristic polynomial. The state equations for the estimated plant shown in Figure 12.13(a ) are _^xA^xBu 810  17 0 1  10 0 02 643 75^x0 142 643 75u (12.72a) ^yC^x100 ^x (12.72b) From Eqs. (12.64) and (12.66), the observer error is _e x A LCex  8l110   17l201   10l3002 643 75ex 12.73 12.5 Observer Design 671WEBC12 10/29/2014 8:56:29 Using Eq. (12.65), we obtain the characteristic polynomial s3 8l1s2 17l2s 10l3 12.74  4.Now evaluate the desired polynomial, set the coef ﬁcients equal to those of Eq. (12.74), and solve for the gains, li. From Eq. (12.50), the closed-loop controlled system has dominant second-order poles at  1j2. To make our observer 10 times faster, we design the observer poles to be at  10j20. We select the third pole to be 10 times the real part of the dominant second-order poles, or  100. Hence, the desired characteristic polynomial is s100 s220s500s3120s22500 s50;000 12.75  Equating Eqs. (12.74) and (12.75), we ﬁnd l1112 ;l22483, and l349;990. A simulation of the observer with an input of r t100tis shown in Figure 12.14. The initial conditions of the plant were all zero, and the initial condition of ^x1was 0.5. Since the dominant pole of the observer is  10j20, the expected settling time should be about 0.4 second. It is interesting to note the slower response in Figure 12.14( b),1 1u4 xˆ311 1 yˆ –8 –17 –10 u4 x3ˆ11 x1ˆ1 – 11 y –8 –17 –10 l3l2l1(a) (b)ˆx1ˆx2 ˆx2 yˆ1 s1 s1 s 1 s1 s1 s FIGURE 12.13 a.Signal- ﬂow graph of a system using observer canonical form variables; b.additional feedback to create observer672 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:30 where the observer gains are disconnected, and the observer is simply a copy of the plant with a different initial condition. Students who are using MATLAB should now run ch12p4 in Appendix B. You will learn how to use MATLAB to design an observer using poleplacement. This exercise solves Example 12.5 using MATLAB.0.5 0.40.30.20.1 0 –0.1 –0.2 –0.3 –0.4 –0.5y, y 0 0.1 0.2 0.3 Time (seconds)y 0.50.40.30.20.1 0 –0.1 –0.2 –0.3 –0.4 –0.5y, y 0 0.1 0.2 0.3yy(a) Time (seconds) (b)ˆˆˆ yˆ FIGURE 12.14 Simulation showing response of observer: a.closed-loop; b.open-loop with observer gains disconnected Skill-Assessment Exercise 12.4 PROBLEM: Design an observer for the plant G s s6 s7 s8 s9 whose estimated plant is represented in state space in observer canonical form as _^xA^xBu 24 1 0  191 0 1  504 0 02 6643 775^x0 162 6643 775u ^yC^x100/C2/C3^x The observer will respond 10 times faster than the controlled loop designed in Skill-Assessment Exercise 12.3. ANSWER: L216 9730 383 ;696 T, where T signi ﬁes vector transpose The complete solution is located at www.wiley.com/college/nise .TryIt 12.3 Use MATLAB, the Control System Toolbox, and the following statements to solve Skill-Assessment Exercise 12.4. A=[ 24 1 0  191 0 1  504 0 0] C=[1 0 0] pos=20 Ts=2 z=( log(pos/100) ) /... (sqrt(pi^2 +... log(pos/100) ^2) ) ; wn=4/ (z*Ts) ; r=roots( [1,2*z*wn, ... wn^2] ) ; poles =10* [r' 10*... real(r(1) ) ] l=acker(A',C',poles) '12.5 Observer Design 673WEBC12 10/29/2014 8:56:30 In this section, we designed an observer in observer canonical form that uses the output of a system to estimate the state variables. In the next section, we examine the conditions under which an observer cannot be designed. 12.6 Observability Recall that the ability to control all of the state variables is a requirement for the design of a controller. State-variable feedback gains cannot be designed if any state variable is uncontrollable. Uncontrollability can be viewed best withdiagonalized systems. The signal-ﬂ ow graph showed clearly that the uncontrollable state variable was not connected to the control signal of thesystem. A similar concept governs our ability to create a design for an observer. Speci ﬁcally, we are using the output of a system to deduce the state variables. If any state variable has no effect upon the output, then we cannot evaluate this state variable by observing the output. The ability to observe a state variable from the output is best seen from the diagonalized system. Figure 12.15( a) shows a system where each state variable can be observed at the output since each is connected to the output. Figure 12.15( b) is an example of a system where all state variables cannot be observed at the output. Here x 1is not connected to the output and could not be estimated from a measurement of the output. We now make the followingdeﬁnition based upon the previous discussion: If the initial-state vector, x(t 0), can be found from u(t) and y(t) measured over a ﬁnite interval of time from t0, the system is said to be observable ; otherwise the system is said to be unobservable . Simply stated, observability is the ability to deduce the state variables from a knowledge of the input, u(t), and the output, y(t). Pole placement for an observer is a viable design technique only for systems that are observable. This section shows how to determine, a priori, whether or not pole placement is a viabledesign technique for an observer. Observability by Inspection We can also explore observability from the output equation of a diagonalizedsystem. The output equation for the diagonalized system of Figure 12.15( a)i s yCx111 x 12.76  On the other hand, the output equation for the unobservable system ofFigure 12.15( b)i s yCx011 x 12.77  Notice that the ﬁrst column of Eq. (12.77) is zero. For systems represented in parallel form with distinct eigenvalues, if any column of the output coupling matrix is zero, the diagonalsystem is not observable. The Observability Matrix Again, as for controllability, systems represented in other than diagonalized form cannot bereliably evaluated for observability by inspection. In order to determine observability forsystems under any representation or choice of state variables, a matrix can be derived thatmust have a particular property if all state variables are to be observed at the output. We now state the requirements for observability, including the form, property, and name of this matrix.x1 –a4K4 1 x2 1 x3uy (b)–a5 –a6K5 K6x1 1 –a1K1 1 x2 1 x3uy (a)–a2 –a3K2 K31 s 1 s 1 s 1 s 1 s 1 s FIGURE 12.15 Comparison of a.observable, and b.unobservable systems674 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:31 Annth-order plant whose state and output equations are, respectively, _xAxBu (12.78a) yCx (12.78b) is completely observable7if the matrix OMC CA ... CAn 12 66666643 7777775 12.79  is of rank n, where O Mis called the observability matrix .8 The following two examples illustrate the use of the observability matrix. Example 12.6 Observability via the Observability MatrixObservability via the Observability Matrix PROBLEM: Determine if the system of Figure 12.16 is observable. SOLUTION: The state and output equations for the system are _xAxBu010 001  4 3  22 643 75x0 012 643 75u (12.80a) yCx051 x (12.80b)x31 u x1y –2 –3 –4x251 1 s1 s1 s FIGURE 12.16 System of Example 12.6 7Completely observable means that all state variables are observable. This textbook uses observable to mean completely observable . 8SeeOgata (1990 :706–708) for a derivation.12.6 Observability 675WEBC12 10/29/2014 8:56:31 Thus, the observability matrix, OM,i s OMC CA CA22 643 7505 1  4  33  12  13  92 643 75 12.81  Since the determinant of OMequals  344, OMis of full rank equal to 3. The system is thus observable. You might have been misled and concluded by inspection that the system is unobservable because the state variable x1is not fed directly to the output. Remember that conclusions about observability by in spection are valid only for diagonalized systems that have distinct eigenvalues. Students who are using MATLAB should now run ch12p5 in Appendix B. You will learn how to use MATLAB to test a system for observability. This exercise solves Example 12.6 using MATLAB. Example 12.7 Unobservability via the Observability MatrixUnobservability via the Observability Matrix PROBLEM: Determine whether the system of Figure 12.17 is observable. SOLUTION: The state and output equations for the system are _xAxBu01  5  21 =4"# x0 1"# u (12.82a) yCx54 x (12.82b) The observability matrix, OM, for this system is OMC CA"# 54  20  16"# 12.83 1 x2u x14 y –5–21 451 s1 s FIGURE 12.17 System of Example 12.7676 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:32 Now that we have discussed observability and the observability matrix, we are ready to talk about the design of an observer for a plant not represented in observer canonical form. 12.7 Alternative Approaches to Observer Design Earlier in the chapter, we discussed how to design controllers for systems notrepresented in phase-variable form. One method is to match the coef ﬁcients of detsI  A BKwith the coef ﬁcients of the desired char acteristic polynomial. This method can yield dif ﬁcult calculations for higher-order systems. Another method is to transform the plant to phase-variable form, design the controller, and transfer thedesign back to its original representation. The transformations were derived from thecontrollability matrix. In this section, we use a similar idea for the design of observers not represented in observer canonical form. One method is to match the coef ﬁcients of det sI  A LC with the coef ﬁcients of the desired characteristic polynomial. Again, this method can yield difﬁcult calculations for higher-order systems. Another method is ﬁrst to transform the plant to observer canonical form so that the design equations are simple, then perform the design in observer canonical form, and ﬁnally transform the design back to the original representation. Let us pursue this second method. First we will derive the transformation between a system representation and its representation in observer canonical form. Assume a plant not represented in observer canonical form, _zAzBu (12.84a) yCz (12.84b)The determinant for this observability matrix equals 0. Thus, the observability matrix doesnot have full rank, and the system is not observable. Again, you might conclude by inspection that the system is observable because all states feed the output. Remember that observability by inspection is valid only for adiagonalized representation of a system with distinct eigenvalues. Skill-Assessment Exercise 12.5 PROBLEM: Determine whether the system _xAxBu 2  1  3 0 21  7  8  92 643 75x2 122 643 75u yCx468 x is observable. ANSWER: Observable The complete solution is located at www.wiley.com/college/nise .TryIt 12.4 Use MATLAB, the Control System Toolbox, and the following statements to solve Skill-Assessment Exercise 12.5. A=[ 21 3 0 21  7 8 9] C=[4 6 8] Om=obsv (A,C) Rank=rank (Om)12.7 Alternative Approaches to Observer Design 677WEBC12 10/29/2014 8:56:32 whose observability matrix is OMzC CA CA2 ... CAn 2 CAn 12 666666666643 77777777775 12.85  Now assume that the system can be transformed to the observer canonical form, x, with the transformation zPx 12.86  Substituting Eq. (12.86) into Eqs. (12.84) and premultiplying the state equation by P  1,w e ﬁnd that the state equations in observer canonical form are _xP 1APx P 1Bu (12.87a) yCPx (12.87b) whose observability matrix, OMx,i s OMxCP CP P 1AP CP P 1AP P 1AP ... CP P 1AP P 1AP∙∙∙ P 1AP2 6666666643 777777775C CA CA 2 ... CAn 12 6666666643 777777775P 12.88  Substituting Eq. (12.85) into (12.88) and solving for P, we obtain PO  1 MzOMx 12.89  Thus, the transformation, P, can be found from the two observability matrices. After transforming the plant to observer canonical form, we design the feedback gains, Lx, as in Section 12.5. Using the matrices from Eqs. (12.87) and the form suggested by Eqs. (12.64), we have _ex P 1AP LxCPex (12.90a) y ^yCPe x (12.90b) Since xP 1z, and ^xP 1^z, then exx ^xP 1ez. Substituting exP 1ezinto Eqs. (12.90) transforms Eqs. (12.90) back to the original representation. The result is _ez A PLxCez (12.91a) y ^yCez (12.91b)678 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:34 Comparing Eq. (12.91a) to (12.64a), we see that the observer gain vector is LzLPx 12.92  We now demonstrate the design of an observer for a plant not represented in observer canonical form. The ﬁrst example uses transformations to and from observer canonical form. The second example matches coef ﬁcients without the transformation. This method, however, can become difﬁ cult if the system order is high. Example 12.8 Observer Design by TransformationObserver Design by Transformation PROBLEM: Design an observer for the plant G s1 s1 s2 s5 12.93  represented in cascade form. The closed-loop performance of the observer is governed by the characteristic polynomial used in Example 12.5: s3120s22500 s50;000. SOLUTION: First represent the plant in its original cascade form. _zAzBu 510 0 21 00  12 643 75z0 012 643 75u (12.94a) yCz100 z (12.94b) The observability matrix, O Mz,i s OMzC CA CA22 643 7510 0  51 0 25  712 643 75 12.95  whose determinant equals 1. Hence, the plant is observable. The characteristic equation for the plant is det sI As38s217s100 12.96  We can use the coef ﬁcients of this characteristic polynomial to form the observer canonical form _xAxxBxu (12.97a) yCxx (12.97b) where Ax 810  17 0 1  10 0 02 6643 775;C x100/C2/C3 12.98 12.7 Alternative Approaches to Observer Design 679WEBC12 10/29/2014 8:56:35 The observability matrix for the observer canonical form is OMxCx CxAx CxA2 x2 643 7510 0  81 0 47  812 643 75 12.99  We now design the observer for the observer canonical form. First form Ax LxCx, Ax LxCx 810  17 0 1  10 0 02 643 75 l1 l2 l32 643 75100/C2/C3   8l110   17l201   10l3002 643 75 12.100  whose characteristic polynomial is detsI  Ax LxCx  s3 8l1s2 17l2s 10l3 12.101  Equating this polynomial to the desired closed-loop observer characteristic equation, s3120s22500 s50;000, we ﬁnd Lx112 2483 49;9902 643 75 12.102  Now transform the design back to the original representation. Using Eq. (12.89), the transformation matrix is PO 1 MzOMx10 0  31 0 1 112 643 75 12.103  1 s1 –1u1 s1 1 s1 1 y 1–2 –5 1 1 s1 1 –1 –2 –5s1 s1 11 47,6192,147112–1 yˆ ez ObserverPlant z3 z2 z1 z3 z2 z1 ˆ ˆ ˆ FIGURE 12.18 Observer design680 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:36 Transforming Lxto the original representation, we obtain LzPLx112 2147 47;6192 643 75 12.104  Theﬁnal con ﬁguration is shown in Figure 12.18. A simulation of the observer is shown in Figure 12.19( a). To demonstrate the effect of the observer design, Figure 12.19( b) shows the reduced speed if the observer is simply a copy of the plant and all observer feedback paths are disconnected. Students who are using MATLAB should now run ch12p6 in Appendix B. You will learn how to use MATLAB to design an observer for a plant not represented in observer canonical form. You will see that MATLAB does not require transformation to observer canonicalform. This exercise solves Example 12.8 using MATLAB. 01 23 Time (seconds) y (a) y yyy, y 01 23 Time (seconds) (b)00.6 0.4 0.2 –0.6–0.4–0.200.6 0.4 0.2 –0.6–0.4–0.2ˆˆy, yˆ ˆ FIGURE 12.19 Observer design step response simulation: a.closed-loop observer; b.open-loop observer with observer gains disconnected Example 12.9 Observer Design by Matching CoefficientsObserver Design by Matching Coefficients PROBLEM: A time-scaled model for the body ’s blood glucose level is shown in Eq. (12.105). The output is the deviation in glucose concentration from its mean value in mg/100 ml, and the input is the intravenous glucose injection rate in g/kg/hr(Milhorn ,1966 ). G s407 s0:916 s1:27 s2:69 12.105 12.7 Alternative Approaches to Observer Design 681WEBC12 10/29/2014 8:56:36 Design an observer for the phase variables with a transient response described by ζ0:7a n d ωn100. SOLUTION: We can ﬁrst model the plant in phase-variable form. The result is shown in Figure 12.20(a ). For the plant, A01  3:42  3:96"# ;C372 :81 407/C2/C3 12.106  Calculation of the observability matrix, OMCC A T, shows that the plant is observable and we can proceed with the design. Next ﬁnd the characteristic equation of the observer. First we have A LC01  3:42  3:96"#  l1 l2"# 372 :81 407/C2/C3  372 :81l1 1 407l1   3:42372 :81l2  3:96407l2"# 12.107 u1 x2 x1372.81 y –3.96 –3.42407 ( )a u1 x21 372.81 yˆ–11 y407 –38.397 35.506–3.42–3.96 ( )bˆx1ˆ1 s1 s1 s 1 s FIGURE 12.20 a.Plant; b.designed observer for Example 12.9682 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:37 Now evaluate det λI  A LC 0 in order to obtain the characteristic equation: detλI  A LC  det λ372 :81l1  1 407l1 3:42372 :81l2 λ3:96407l2"# λ2 3:96372 :81l1407l2λ 3:4284:39l1372 :81l2 0 12.108  From the problem statement, we want ζ0:7 and ωn100. Thus, λ2140λ10;0000 12.109  Comparing the coef ﬁcients of Eqs. (12.108) and (12.109), we ﬁnd the values l1andl2to be  38.397 and 35.506, respectively. Using Eq. (12.60), where A01  3:42  3:96"# ;B0 1"# ;C372 :81 407/C2/C3 ; L 38 :397 35:506"# 12.110  the observer is implemented and shown in Figure 12.20( b). Skill-Assessment Exercise 12.6 PROBLEM: Design an observer for the plant G s1 s7 s8 s9 whose estimated plant is represented in state space in cascade form as _^zA^zBu 710 0 81 00  92 6643 775^z0 012 6643 775u ^yC^x100/C2/C3^z The closed-loop step response of the observer is to have 10% overshoot with a 0.1 second settling time. ANSWER: L z456 28;640 1:541062 643 75 The complete solution is located at www.wiley.com/college/nise .12.7 Alternative Approaches to Observer Design 683WEBC12 10/29/2014 8:56:37 Now that we have explored transient response design using state-space techniques, let us turn to the design of steady-state error characteristics. 12.8 Steady-State Error Design via Integral Control In Section 7.8, we discussed how to analyze systems represented in state space for steady-state error. In this section, we discuss how to design systems represented in state space for steady-state error. Consider Figure 12.21. The previously designed controller discussed in Section 12.2 is shown inside the dashed box. A feedback path from the output has been added to form the error, e, which is fed forward to the controlled plant via an integrator. The integrator increases the system type and reduces the previous ﬁnite error to zero. We will now derive the form of the state equations for the system of Figure 12.21 and then use that form todesign a controller. Thus, we will be able to design a system for zero steady-state error for astep input as well as design the desired transient response. An additional state variable, x N, has been added at the output of the leftmost integrator. The error is the derivative of this variable. Now, from Figure 12.21, _xNr Cx 12.111  Writing the state equations from Figure 12.21, we have _xAxBu (12.112a) _xN Cxr (12.112b) yCx (12.112c) Equations (12.112) can be written as augmented vectors and matrices. Hence, _x _xN"# A0  C0"# x xN"# B 0"# u0 1"# r (12.113a) yC0/C2/C3 x xN/C20/C21 (12.113b) But u KxKexN  K K e/C2/C3 x xN/C20/C21 12.114  reBC Ke A –KxN + ++ +u xx y + –∫∫ FIGURE 12.21 Integral control for steady-state error design684 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:39 Substituting Eq. (12.114) into (12.113a) and simplifying, we obtain _x _xN"#  A BKBK e  C 0"#x xN"# 0 1"# r (12.115a) yC0/C2/C3 x xN"# (12.115b) Thus, the system type has been increased, and we can use the characteristic equation associated with Eq. (12.115a) to design KandKeto yield the desired transient response. Realize, we now have an additional pole to place. The effect on the transient response of anyclosed-loop zeros in the ﬁnal design must also be taken into consideration. One possible assumption is that the closed-loop zeros will be the same as those of the open-loop plant.This assumption, which of course must be checked, suggests placing higher-order poles atthe closed-loop zero locations. Let us demonstrate with an example. Example 12.10 Design of Integral ControlDesign of Integral Control PROBLEM: Consider the plant of Eqs. (12.116): _x01  3  5/C20/C21 x0 1/C20/C21 u (12.116a) y10 x (12.116b) a.Design a controller without integral control to yield a 10% overshoot and a settling time of 0.5 second. Evaluate the steady-state error for a unit step input. b.Repeat the design of Part ausing integral control. Evaluate the steady-state error for a unit step input. SOLUTION: a.Using the requirements for settling time and percent overshoot, we ﬁnd that the desired characteristic polynomial is s216s183 :1 12.117  Since the plant is represented in phase-variable form, the characteristic polynomial for thecontrolled plant with state-variable feedback is s 2 5k2s 3k1 12.118  Equating the coef ﬁcients of Eqs. (12.117) and (12.118), we have Kk1k2 180 :11 1  12.119 12.8 Steady-State Error Design via Integral Control 685WEBC12 10/29/2014 8:56:40 From Eqs. (12.3), the controlled plant with state-variable feedback represented in phase- variable form is _x A BKxBr01  183 :1 16/C20/C21 x0 1/C20/C21 r (12.120a) yCx10 x (12.120b) Using Eq. (7.96), we ﬁnd that the steady-state error for a step input is e ∞1C A BK 1B 110/C2/C3 01  183 :1 16"# 10 1"# 0:995 12.121  b.We now use Eqs. (12.115) to represent the integral-controlled plant as follows: _x1 _x2 _xN2 6643 77501  3  5"#  0 1"# k1k2/C2/C3 !01"# K e  10/C2/C3 02 6643 775x1 x2 xN2 6643 7750 012 6643 775r 01 0   3k 1  5k2Ke  10 02 6643 775x 1 x2 xN2 6643 7750 012 6643 775r (12.122a) y100/C2/C3x 1 x2 xN2 435 (12.122b) Using Eq. (3.73) and the plant of Eqs. (12.116), we ﬁnd that the transfer function of the plant is G s1= s 25s3. The desired characteristic polynomial for the closed- loop integral-controlled system is shown in Eq. (12.117). Since the plant has no zeros, we assume no zeros for the closed-loop system and augment Eq. (12.117) with a third pole, s100, which has a real part greater than ﬁve times that of the desired dominant second- order poles. The desired third-order closed-loop system characteristic polynomial is s100 s 216s183 :1s3116s21783 :1s18;310 12.123  The characteristic polynomial for the system of Eqs. (12.112) is s3 5k2s2 3k1sKe 12.124  Matching coef ﬁcients from Eqs. (12.123) and (12.124), we obtain k11780 :1 (12.125a) k2111 (12.125b) ke18;310 (12.125c)686 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:41 Now that we have designed controllers and observers for transient response and steady-state error, we summarize the chapter with a case study demonstrating the design process.Substituting these values into Eqs. (12.122) yields this closed-loop integral-controlledsystem: _x 1 _x2 _xN2 643 7501 0  1783 :1 116 18 ;310  1002 435x 1 x2 xN24350 012 435r (12.126a) y100/C2/C3x 1 x2 xN2435 (12.126b) In order to check our assumption for the zero, we now apply Eq. (3.73) to Eqs. (12.126) and ﬁnd the closed-loop transfer function to be T s 18;310 s3116s21783 :1s18;310 12.127  Since the transfer function matches our design, we have the desired transient response. Now let us ﬁnd the steady-state error for a unit step input. Applying Eq. (7.96) to Eqs. (12.126), we obtain e ∞1100/C2/C301 0  1783 :1 116 18 ;310  1002643 75 10 0 12 643 750 12.128  Thus, the system behaves like a Type 1 system. Skill-Assessment Exercise 12.7 PROBLEM: Design an integral controller for the plant _x01  7  9"# x0 1"# u y41/C2/C3 x to yield a step response with 10% overshoot, a peak time of 2 seconds, and zero steady-state error. ANSWER: K2:21  2:7;Ke3:79 The complete solution is located at www.wiley.com/college/nise .12.8 Steady-State Error Design via Integral Control 687WEBC12 10/29/2014 8:56:43 Case Study Antenna Control: Design of Controller and ObserverAntenna Control: Design of Controller and Observer In this case study, we use our ongoing antenna azimuth position control system to demonstrate the combined design of a controller and an observer. We will assume that the states are not available and must be estimated from the output. The block diagram ofthe original system is shown on the front endpapers, Con ﬁguration 1. Arbitrarily setting the preampli ﬁer gain to 200 and removing the existing feedback, the forward transfer function is simpli ﬁed to that shown in Figure 12.22. The case study will specify a transient response for the system and a faster transient response for the observer. The ﬁnal design con ﬁguration will consist of the plant, the observer, and the controller, as shown conceptually in Figure 12.23. The design of theobserver and the controller will be separate. PROBLEM: Using the simpli ﬁed block diagram of the plant for the antenna azimuth position control system shown in Figure 12.22 , design a controller to yield a 10% overshoot and a settling time of 1 second. Place the third pole 10 times as far from the imaginary axis as the second-order dominant pair. Assume that the state variables of the plant are not accessible and design an observer to estimate the states. The desired transient response for the observer is a 10% overshoot1325 s(s + 1.71)(s + 100)U(s) = E(s) Y(s) = o(s)θ FIGURE 12.22 Simpli ﬁed block diagram of antenna control system shown on the front endpapers (Con ﬁguration 1) with K200 C Axx r = 0 + +B +u BPlant AxxObserver ++ –KCy + ye Controller++ – ˆ u y ˆ Lˆ∫ ∫ FIGURE 12.23 Conceptual state-space design con ﬁguration, showing plant, observer, and controller688 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:44 and a natural frequency 10 times as great as the system response above. As in the case of the controller, place the third pole 10 times as far from the imaginary axis as the observer ’s dominant second-order pair. SOLUTION: Controller Design: Weﬁrst design the controller by ﬁnding the desired characteristic equation. A 10% overshoot and a settling time of 1 second yield ζ0:591 and ωn6:77. Thus, the characteristic equation for the dominant poles is s28s45:80, where the dominant poles are located at  4j5:46. The third pole will be 10 times as far from the imaginary axis, or at  40. Hence, the desired characteristic equation for the closed-loop system is s28s45:8 s40s348s2365 :8s1832 0 12.129  Next we ﬁnd the actual characteristic equation of the closed-loop system. The ﬁrst step is to model the closed-loop system in state space and then ﬁnd its characteristic equation. From Figure 12.22, the transfer function of the plant is G s1325 s s1:71 s1001325 s s2101 :71s171 12.130  Using phase variables, this transfer function is converted to the signal- ﬂow graph shown in Figure 12.24, and the state equations are written as follows: _x010 001 0 171  101 :712 643 75x0 0 12 643 75uAxBu (12.131a) y1325 0 0 xCx (12.131b) We now pause in our design to evaluate the controllability of the system. The controllability matrix, CM,i s CMBA BA2B/C2/C300 1 01  101 :71 1 101 :71 10 ;173 :922 643 75 12.132  The determinant of CMis 1; thus, the system is controllable. Continuing with the design of the controller, we show the controller ’s conﬁguration with the feedback from all state variables in Figure 12.25. We now ﬁnd the characteristicu1 x3 x2 x11325 y –101.71 –1711 s1 s1 s FIGURE 12.24 Signal- ﬂow graph for G s1325 =s s2101 :71s171Case Study 689WEBC12 10/29/2014 8:56:44 equation of the system of Figure 12.25. From Eq. (12.7) and Eq. (12.131a), the system matrix, A BK,i s A BK01 0 00 1  k1  171k2  101 :71k32 643 75 12.133  Thus, the closed-loop system ’s characteristic equation is detsI  A BK  s3 101 :71k3s2 171k2sk10 12.134  Matching the coef ﬁcients of Eq. (12.129) with those of Eq. (12.134), we evaluate the ki’s as follows: k11832 (12.135a) k2194 :8 (12.135b) k3 53:71 (12.135c) Observer Design: Before designing the observer, we test the system for observability. Using the AandCmatrices from Eqs. (12.131), the observability matrix, OM,i s OMC CA CA22 6643 7751325 0 0 0 1325 0 0 0 13252 6643 775 12.136  The determinant of O Mis 13253. Thus, OMis of rank 3, and the system is observable. We now proceed to design the observer. Since the order of the system is not high, we will design the observer directly without ﬁrst converting to observer canonical form. From Eq. (12.64a) we need ﬁrst to ﬁndA LC.AandCfrom Eqs. (12.131) along with Ll1 l2 l32 643 75 12.137 u1 x3 x2 x11325 y –101.71 –171 –k1–k2–k31 s1 s1 s FIGURE 12.25 Plant with state-variable feedback for controller design690 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:45 are used to evaluate A LCas follows: A LC 1325 l1 10  1325 l2 01  1325 l3 171  101 :712 643 75 12.138  The characteristic equation for the observer is now evaluated as detλI  A LC λ3 1325 l1101 :71λ2  134 ;800l11325 l2171λ  226 ;600l1134 ;800l21325 l3 0 12.139  From the problem statement, the poles of the observer are to be placed to yield a 10% overshoot and a natural frequency 10 times that of the system ’s dominant pair of poles. Thus, the observer ’s dominant poles yield s2 20:59167:7s67:72 s280s4583 . The real part of the roots of this polynomial is  40. The third pole is then placed 10 times farther from the imaginary axis at  400. The composite characteristic equation for the observer is s280s4583  s400s3480s236;580s1;833 ;0000 12.140  Matching coef ﬁcients from Eqs. (12.139) and (12.140), we solve for the observer gains: l10:286 (12.141a) l2 1:57 (12.141b) l31494 (12.141c) Figure 12.26, which follows the general con ﬁguration of Figure 12.23, shows the completed design, including the controller and the observer. The results of the design are shown in Figure 12.27. Figure 12.27( a) shows the impulse response of the closed-loop system without any difference between the plant and its modeling as an observer. The undershoot and settling time approximately meet therequirements set forth in the problem statement of 10% and 1 second, respectively. InFigure 12.27( b), we see the response designed into the observer. An initial condition of 0.006 was given to x 1in the plant to make the modeling of the plant and observer different. Notice that the observer ’s response follows the plant ’s response by the time 0.06 second is reached. CHALLENGE: You are now given a case study to test your knowledge of this chapter ’s objectives: You are given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 3. If the preampli ﬁer gain K20, do the following: a.Design a controller to yield 15% overshoot and a settling time of 2 seconds. Place the third pole 10 times as far from the imaginary axis as the second-order dominant pole pair. Use physical variables as follows: power ampli ﬁer output, motor angular velocity, and motor displacement. b.Redraw the schematic shown on the front endpapers, showing a tachometer that yields rate feedback along with any added gains or attenuators required to implement thestate-variable feedback gains.Case Study 691WEBC12 10/29/2014 8:56:45 1.0 –1.0 0 1.0 1.6 2.00.5–00.51.52.02.5 0.4 0.6 0.8 1.2 1.4 1.8 0.2 Time (seconds) (a)y,yˆ Time (seconds) (b)y,yˆ 0.05 0.06 0.07 0.08 0.09 0.1 0y yˆ 0.04 0.03 0.02 0.01024681012141618FIGURE 12.27 Designed response of antenna azimuth position control system: a.impulse response —plant and observer with the same initialconditions, x 1 0 ^x1 0 0; b.portion of impulse response —plant and observer with different initial conditions, ^x1 0 0:006 for the plant, ^x1 0 0 for the observer1 u11 yˆ1325 –1 x3ˆ x2ˆ x1ˆ –101.71 –171 l2= –1.57l1= 0.286 3l= 1494Observer–k1 = –1832 ControllerPlanty 1 1 –k2 = –194.8 –k3 = 53.71 1 s1 s1 s FIGURE 12.26 Completed state-space design for the antenna azimuth position control system, showingcontroller and observer692 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:45 Summary This chapter has followed the path established by Chapters 9 and 11 —control system design. Chapter 9 used root locus techniques to design a control system with a desired transient response. Sinusoidal frequency response techniques for design were covered inChapter 11, and in this chapter we used state-space design techniques. State-space design consists of specifying the system ’s desired pole locations and then designing a controller consisting of state-variable feedback gains to meet these requirements.If the state variables are not available, an observer is designed to emulate the plant and provideestimated state variables. Controller design consists of feeding back the state variables to the input, u, of the system through speci ﬁed gains. The values of these gains are found by matching the coefﬁcients of the system ’s characteristic equation with the coef ﬁcients of the desired characteristic equation. In some cases, the control signal, u, cannot affect one or more state variables. We call such a system uncontrollable. For this system, a total design is not possible. Using the controllability matrix, a designer can tell whether or not a system iscontrollable prior to the design. Observer design consists of feeding back the error between the actual output and the estimated output. This error is fed back through speci ﬁed gains to the derivatives of the estimated state variables. The values of these gains are also found by matching thecoefﬁcients of the observer ’s characteristic equation with the coef ﬁcients of the desired characteristic equation. The response of the observer is designed to be faster than that ofthe controller, so the estimated state variables effectively appear instantaneously at thecontroller. For some systems, the state variables cannot be deduced from the output ofthe system, as is required by the observer. We call such systems unobservable . Using the observability matrix, the designer can tell whether or not a system is observable. Observerscan be designed only for observable systems. Finally, we discussed ways of improving the steady-state error performance of systems represented in state space. The addition of an integration before the controlledplant yields improvement in the steady-state error. In this chapter, this additional integrationwas incorporated into the controller design. Three advantages of state-space design are apparent. First, in contrast to the root locus method, all pole locations can be speci ﬁed to ensure a negligible effect of the nondominant poles upon the transient response. With the root locus, we were forced to justify an assumptionthat the nondominant poles did not appreciably affect the transient response. We were not always able to do so. Second, with the use of an observer, we are no longer forced to acquire the actual system variables for feedback. The advantage here is that sometimes the variablescannot be physically accessed, or it may be too expensive to provide that access. Finally, themethods shown lend themselves to design automation using the digital computer.c.Assume that the tachometer is not available to provide rate feedback. Design anobserver to estimate the physical variables' states. The observer will respond with 10% overshoot and a natural frequency 10 times as great as the system response. Place the observer ’s third pole 10 times as far from the imaginary axis as the observer ’s dominant second-order pole pair. d.Redraw the schematic on the front endpapers, showing the implementation of thecontroller and the observer. e. Repeat Parts aandcusing MATLAB.Summary 693WEBC12 10/29/2014 8:56:45 A disadvantage of the design methods covered in this chapter is the designer ’s inability to design the location of open- or closed-loop zeros that may affect the transient response. In root locus or frequency response design, the zeros of the lag or leadcompensator can be speci ﬁed. Another disadvantage of state-space methods concerns the designer ’s ability to relate all pole locations to the desired response; this relationship is not always apparent. Also, once the de sign is completed, we may not be satisﬁ ed with the sensitivity to parameter changes. Finally, as previously discussed, state-space techniques do not satisfy our intuition as much as root locus techniques, where the effect of parameter changes can be immediately seen as changes in closed-loop pole locations. In the next chapter we return to the frequency domain and design digital systems using gain adjustment and cascade compensation. Review Questions 1.Brieﬂy describe an advantage that state-space techniques have over root locus techniques in the placement of closed-loop poles for transient response design. 2.Brieﬂy describe the design procedure for a controller. 3.Different signal- ﬂow graphs can represent the same system. Which form facilitates the calculation of the variable gains during controller design? 4.In order to effect a complete controller design, a system must be controllable. Describe the physical meaning of controllability. 5.Under what conditions can inspection of the signal-ﬂ ow graph of a system yield immediate determination of controllability? 6.In order to determine controllability mathem atically, the controllability matrix is formed, and its rank evaluated. What is the ﬁnal step in determining controllability if the controllability ma trix is a square matrix? 7.What is an observer? 8.Under what conditions would you use an observer in your state-space design of acontrol system? 9.Brieﬂy describe the con ﬁguration of an observer. 10.What plant representation lends itself to easier design of an observer? 11.Brieﬂy describe the design technique for an observer, given the con ﬁguration you described in Question 9. 12.Compare the major difference in the tran sient response of an observer to that of a controller. Why does this difference exist? 13.From what equation do we ﬁnd the characteristic equation of the controller- compensated system? 14.From what equation do we ﬁnd the characteristic equation of the observer? 15.In order to effect a complete observer desig n, a system must be observable. Describe the physical meaning of observability. 16.Under what conditions can inspection of the signal-ﬂ ow graph of a system yield immediate determination of observability? 17.In order to determine observability mathematically, the observability matrix isformed and its rank evaluated. What is the ﬁnal step in determining observability if the observability matrix is a square matrix?694 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:46 Problems 1.Consider the following open-loop transfer functions, where G sY s=U s.Y(s) is the Laplace transform of the output, and U(s) is the Laplace transform of the input control signal: i.G s s3 s42 ii.G ss s5 s7 iii.G s20s s7 s3 s7 s9 iv.G s30 s2 s3 s4 s5 s6 v.G ss28s15 s24s10 s23s12 For each of these transfer functions, do the following: [Section: 12.2] a.Draw the signal- ﬂow graph in phase-variable form. b.Add state-variable feedback to the signal- ﬂow graph. c.For each closed-loop signal- ﬂow graph, write the state equations. d.Write, by inspection , the closed-loop transfer function, T(s), for your closed-loop signal-ﬂ ow graphs. e.Verify your answers for T(s)b yﬁnding the closed- loop transfer functions from the state equations and Eq. (3.73). 2.The following open-loop transfer functions can be represented by signal- ﬂow graphs in cascade form. i.G s30 s2 s7 s s3 s5 ii.G s5 s23s7 s2 s22s10 For each, do the following: [Section: 12.4] a.Draw the signal- ﬂow graph and show the state-variable feedback. b.Find the closed-loop transfer function with state-variable feedback. 3.The following open-loop transfer functions can berepresented by signal- ﬂow graphs in parallel form. i.G s 50 s27s25 s s10 s20 ii.G s50 s3 s4 s5 s6 s7For each, do the following: [Section: 12.4] a.Draw the signal- ﬂow graph and show the state-variable feedback. b.Find the closed-loop transfer function with state-variable feedback. 4.Given the following open-loop plant, [Section: 12.2] G s50 s1 s3 s10 design a controller to yield a 10% overshoot anda settling time of 0.5 second. Place the third pole10 times as far from the imaginary axis as the dominantpole pair. Use the phase variables for state-variablefeedback. 5.Section 12.2 showed that controller design is easier toimplement if the uncompensated system is represented inphase-variable form with its typical lower companionmatrix. We alluded to the fact that the design can just aseasily progress using the controller canonical form withits upper companion matrix. [Section: 12.2] a.Redo the general controller design covered inSection 12.2, assuming that the plant is represented in controller canonical form rather than phase- variable form. b.Apply your derivation to Example 12.1 if theuncompensated plant is represented in controllercanonical form. 6.Given the following open-loop plant: [Section: 12.2] G s 100 s2 s25 s1 s3 s5 design a controller to yield 10% overshoot with a peaktime of 0.5 second. Use the controller canonical form forstate-variable feedback. 7.Given the following open-loop plant: [Section: 12.2] G s 20 s2 s s5 s7 design a controller to yield a 10% overshoot and a settlingtime of 2 seconds. Place the third pole 10 times as farfrom the imaginary axis as the dominant pole pair. Usethe phase variables for state-variable feedback. 8.Repeat Problem 4 assuming that the plant is representedin the cascade form. Do not convert to phase-variableform. [Section: 12.4] 9.Repeat Problem 7 assuming that the plant is repre- sented in the parallel form. Do not convert tophase-variable form. [Section: 12.4]Problems 695WEBC12 10/29/2014 8:56:46 a. Given the plant shown in Figure P12.1, what relationship exists between b1andb2to make the system uncontrollable? b.What values of b2will make the system un- controllable if b1=1? [Section: 12.3] y u –1x11 x2b2 1 –5b1 –31 s1 s FIGURE P12.111.For each of the plants represented by signal-ﬂow graphsin Figure P12.2, determine the controllability. If the controllability can be determined by inspection, statethat it can and then verify your conclusions usingthe controllability matrix. [Section: 12.3] Use MATLAB to determine the controllability of the systems of Figure P12.2( d) and ( f). 13.In Section 12.4, we discussed how to design a con-troller for systems not represented in phase-variableform with its typical lower companion matrix. Wedescribed how to convert the system to phase-variable form, design the controller, and convert back to the original representation. This technique can be appliedjust as easily if the original representation is convertedto controller canonical form with its typical uppercompanion matrix. Redo Example 12.4 in the textby designing the controller after converting theuncompensated plant to controller canonicalform. [Section: 12.4] 5 5x1 x2y –25 x31 –2 –31 u 1x21 x15y 5 x3 –31–2 –2u1 (a) (b) x3 –61 111 1 y u x2x1 –5–4 y u –6–5x11 1 x2–211 x1y1 x21 x312 –3u –4 (c)1 –5–3x3 x21 1 1 y u –4x11 (d) (e) (f)1 s1 s 1 s1 s 1 s1 s 1 s1 s1 s1 s1 s1 s 1 s 1 s 1 s1 s1 s FIGURE P12.2696 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:46 14.Consider the following transfer function: G s s6 s3 s8 s10 If the system is represented in cascade form, as shown in Figure P12.3, design a controller to yield a closed- loop response of 10% overs hoot with a settling time of 1 second. Design the controller by ﬁrst transforming the plant to phase variables. [Section: 12.4] 15.Use MATLAB to design the controller gains for the system given in Problem 14. 16.Repeat Problem 14 assuming that the plant is represented in parallel form. [Section: 12.4] 17.The open-loop system of Problem 14 is represented as shown in Figure P12.4. If the output of each block is assigned to be a state variable, design the controllergains for feedback from these state variables.[Section: 12.4] 18.If an open-loop plant G s 100 s s4 s10 is represented in parallel form, design a controller toyield a closed-loop response of 20% overshoot and apeak time of 0.2 second. Design the controller by ﬁrst transforming the plant to controller canonical form.[Section: 12.4] For a speci ﬁc individual, the linear time-invariant model ofthe hypothalamic-pituitary-adrenal axis of the endocrine system withﬁve state variables has been found to be (Kyrylov ,2005 )_x 1 _x2 _x3 _x4 _x52 66666666643 7777777775 0:014 0  1:40 0 0:023  0:023  0:023 0 0 0:134 0 :67  0:67 0 :38 0 :003264 00 0 :06  0:06 0 00 0 :0017 0  0:0012 66666666643 7777777775 x 1 x2 x3 x4 x52 66666666643 77777777751 0 0 0 02 66666666643 7777777775d 0 Thestate-variablede ﬁnitionsweregiven in Problem 23, Chapter 3. a.Use MATLAB to determine if the system is controllable. b.Use MATLAB to express the matrices A and B in phase-variable form. 20.Consider the plant G s1 s s2 s5 whose state variables are not available. Design an observer for the observer canonical variables to yield a transient response described by ζ0:6 and ωn50. Place the third pole 10 times farther from the imaginary axis than the dominant poles. [Section: 12.5] 21.Design an observer for the plant G s10 s3 s7 s15 1 s+1 01 s+8 s+3s+6U(s) Y(s) Z3(s) Z2(s) FIGURE P12.3 1 s+31 s+8 s+1 0s+6U(s) Y(s)=Z 1(s) Z3(s) Z2(s) FIGURE P12.4Problems 697WEBC12 10/29/2014 8:56:47 operating with 10% overshoot and 2 seconds peak time. Design the observer to respond 10 times as fast as the plant. Place the observer third pole 20 times as far fromthe imaginary axis as the observer dominant poles.Assume the plant is represented in observer canonicalform. [Section: 12.5] 22.Repeat Problem 20 assuming that the plant is representedin phase-variable form. Do not convert to observercanonical form. [Section: 12.7] 23.Consider the plant G s s2 s5 s9 whose phase variables are not available. Design anobserver for the phase variables with a transient responsedescribed by ζ0:6 and ω n120. Do not convert to observer canonical form. [Section: 12.7] 24.Determine whether or not each of the systems shown inFigure P12.2 is observable. [Section: 12.6] Use MATLAB to determine theobservability of the systemsof Figure P12.2( a) and ( f). a. Given the plant of Figure P12.5, what relationshipmust exist between c 1andc2in order for the system to be unobservable? b.What values of c1will make the system uncontrollable if c2=1? [Section: 12.6] y u –1–21 x2c1c2 x11 s1 s FIGURE P12.5 27.Design an observer for the plant G s1 s5 s13 s20 represented in cascade form. Transform the plantto observer canonical form for the design. Thentransform the design back to cascade form. Thecharacteristic po lynomial for the observer is to be s 3600s240;000s1;500 ;000.28.Use MATLAB to design the observer gains for the system given in Problem 27. 29.Repeat Problem 27 assuming that the plant is representedin parallel form. [Section: 12.7] 30.Design an observer for G s45 s3 s5 s10 represented in phase-variable form with a desiredperformance of 10% overshoot and a settling time of0.5 second. The observer will be 10 times as fast as theplant, and the observer ’s nondominant pole will be 10 times as far from the imaginary axis as the observer ’s dominant poles. Design the observer by ﬁrst converting to observer canonical form. [Section: 12.7] 31.Observability and controllability properties depend onthe state-space representation chosen for a givensystem. In general, observa bility and controllability are affected when pole-zero cancellations are presentin the transfer function. Consider the following twosystems with representations: _x iAixiBir yCixi; A101  2 3"# ;B10 1"# ;C120/C2/C3 A201 000 1  6  11  62 6643 775;B 20 012 6643 775;C 2620/C2/C3 a.Show that both systems have the same transfer function Gi sY s R safter pole-zero cancellations. b.Evaluate the observability of both systems. 32.Given the plant _x 11 02"# x0 1"# u;y11/C2/C3 x design an integral controller to yield a 15% overshoot, 0.6-second settling time, and zero steady-state error for a step input. [Section: 12.8] 33.Repeat Problem 32 for the following plant: [Section: 12.8] _x 21 0 5"# x0 1"# u;y11/C2/C3 x698 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:48 DESIGN PROBLEMSDESIGN PROBLEMS 34.Problem 22 in Chapter 3 introduced the model for patients treated under a regimen of a single day ofGlargine insulin ( Tarín ,2005 ). The model to ﬁnd the response for a speci ﬁc patient to medication can be expressed in phase-variable form with A01 0 00 1  501 :610  6 128 :810 3 854 10 32 643 75; B1 002 643 75;C0:7810  441:410 40:01/C2/C3 ; D0 The state variables will take on a different signi ﬁcance in this expression, but the input and the output remain the same. Recall that u=external insulin ﬂow, and y=plasma insulin concentration. a.Obtain a state-feedback gain matrix so that theclosed-loop system will have two of its poles placedat 1=15 and the third pole at  1=2. b. Use MATLAB to verify that thepoles appear at the positionsspeci ﬁed in Part a. 35.Figure P12.6 shows a continuous stirred tank reactorin which an aqueous solution of sodium acetate(CH 3COONa) is neutralized in the mixing tank with hydrochloric acid (HCl) to maintain a particular pH inthe mixing tank. The amount of acid in the mix is controlled by varying the rotational speed of a feeding peristalticpump. A nominal linearized transfer function fromHClﬂowrate to pH has been shown to be ( Tadeo ,2000 ) G s  0:9580 10 4s 0:01197 10 4 s30:5250 s20:01265 s0:000078 a.Write the system in state-space phase-variable form. b.Use state-feedback methods to design a matrix K that will yield an overdamped output pH responsewith a settling time of T s≈5 min for a step input change in pH. c.Simulate the step response ofthe resulting closed-loop system using MATLAB. 36.In the dc-dc converter of Problem 67, Chapter 4 ( Van Dijk , 1995), with L6m H , C1m F , R100Ω, a 50% PWM duty cycle, and assuming the system ’s output is the voltage across the capacitor, the model can be expressed as _i L _uC"# 0  83 :33 500  10"# iL uC"# 166 :67 0"# Es y01/C2/C3 iL uC"# Inlet streampH measurementControlsignal Control acid stream Peristaltic pump Acid tank Mixin g tank Liquid pumpLiquid tank FIGURE P12.69 9Tadeo F., Perez, Loepez O., and Alvarez T. Control of Neutralization Processes by Robust Loopsharing. IEEE Trans. on Cont. Syst. Tech. , vol. 8, no. 2, Fig. 2, p. 239. IEEE Transactions on Control Systems Technology by Institute of Electrical and Electronics Engineers; IEEE Control Systems Society. Reproduced with permission of Institute of Electrical and Electronics Engineers, in the format Republish in a book via Copyright Clearance Center.Problems 699WEBC12 10/29/2014 8:56:48 a.Find the system ’s transfer function. b.Express the system’ s state equations in phase- variable form. c.Find a set of state-feedback gains to obtain 20% overshoot and a settling time of 0.5 second in thephase-variable system. d.Obtain the corresponding set of state-feedbackgains in the original system. e.Verify that the set of gains in Part dplaces the closed-loop poles at the desired positions. f. Simulate the unit stepresponse of the system usingMATLAB. a. Design an observer for the dc-dc converter ofProblem 36. The observer should have time con-stants 10 times smaller than those of the originalsystem. b. Simulate your system andobserver for a unit step inputusing Simulink. Assume that theinitial conditions for the original system are x 02 1/C20/C21 .The observer should have initial conditions ^x 00 0/C20/C21 . a. Design an observer for the neutralization system using the continuous stirred tank reactor of Prob- lem 35. The observer should have time constants 10 times smaller than those of the original system.Assume that the original state variables are thoseobtained in the phase-variable representation. b. Simulate your system andobserver for a unit step inputusing Simulink. Assume that theinitial conditions for the original system are x 0 1  10 32 The observer should have initial conditions ^x 00 002 39. a. Redesign the dc-dc converter system of Problem 36 to include integral control. b. Simulate your system for a stepinput using Simulink and verifythat the speci ﬁcations are met. In particular, verify that the system has zero steady-state error.40.The use of feedback control to vary the pitch angle inthe blades of a variable speed wind turbine allows power generation optimization under variable windconditions (Liu ,2008). At a speci ﬁc operating point, it is possible to linearize tur bine models. For example, the model of a three-blade turbine with a 15 m radiusworking in 12 m/s wind-speed and generating 220 Vcan be expressed as _x 5 000 0 0 010 0  10 :5229  1066 :67 3:38028 23 :5107 0 09 9 3 :804 3 :125  23 :5107 0 00 0 1 0  102 66666666643 7777777775x 5 0 0 0 02 66666666643 7777777775u y0001 :223x10 50/C2/C3 x where the state variable vector is given by xβξ _ξω gωgm/C2/C3 Here, β=pitch angle of the wind turbine blades, ξ= relative angle of the secondary shaft, ωg=generator speed, and ωgm=generator measurement speed. The system input is u, the pitch angle reference, and the output is y, the active power generated. a.Find a state feedback vector gain such that the system responds with a 10% overshoot and a settling time of 2 seconds for a step input. b.Use MATLAB to verify the operation of the system understate feedback. 41.The study of the ﬂexible links, such as the one shown in Figure P12.7, is important because of their appli-cation to the control of ﬂexible lightweight robots (Saini ,2012 ). The ﬂexible link angle is de ﬂected by a servomotor. It is assumed that the base angle,θ t, and the tip angular de ﬂection relative to the undeformed link, α t, can be measured. For a speci ﬁc setup, a state-space model of the system was700 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:49 developed. The state vector is xθαω _α/C2/C3T, where ω t _θ tand input u tis the voltage applied to the servomotor. Thus the system is represented as _xAxBu,yCxwhere A00 10 00 0106 7 3 :07  35 :1667 0 0 1023 :07 35 :1667 02 666643 77775 B0 0 61:7325  61 :73252 666643 77775 C1100/C2/C3 It is desired to build state-feedback compensation around this system so that the system ’s characteristic equation becomes D s s10 In order to do this: a.Find the system ’s controllability matrix CMOand show that the system is controllable. b.Find the original system ’s characteristic equation and use it to ﬁnd a phase-variable representation of the system. c.Find the phase-variable system ’s controllability matrix CMPand then ﬁnd the transformation matrix PCMOC 1 MP. d.Use the phase-variable representation to ﬁnd a feedback gain matrix KPk1pk2pk3pk4p/C2/C3 that will place the closed-loop poles in the desired positions. e.Find the corresponding feedback gain matrix KOKPP 1. L Ttθ, ω θθ + αα FIGURE P12.710 42.We want to use an observer in a textile machine to estimate the state variables. The 2-input, 1-output system’ s model is _xAxBu;yCx,w h e r e( Cardona ,2010)A01 0  52 :6532  4:9353  2768 :1557  0:001213 0  0:061062 643 75 B00 00 0:001613  0:0018122 643 75 C100/C2/C3 a.Find the system ’s observability matrix OMzand show that the system is observable. b.Find the original system ’s characteristic equation and use it to ﬁnd an observable canonical represen- tation of the system. c.Find the observable canonical system ’s observabil- ity matrix OMxand then ﬁnd the transformation matrix PO 1 MzOMx. d.Use the observable canonical representation to ﬁnd an observer gain matrix Lxl1xl2xl3xl4x/C2/C3Tso that the observer characteristic polynomial is D ss330s2316s1160. e.Find the corresponding observer gain matrix LzPLx. 43.An inverted pendulum mounted on a motor-driven cartwas presented in Problem 30, Chapter 3. Its state-space model was linearized (Prasad ,2012) around a stationary point, x 00, corresponding to the pendulum point-mass, m, being in the upright position att=0 .I t sm o d e lw a st h e nm o d i ﬁed in Problem 55, Chapter 6, to have two output variables: the pendulum angle relative to the y-axis, θ t, and the horizontal position of the cart, x(t). Noting that the unit requires stabilization, you were asked in Problem 33, Chapter 9, to develop Simulink models for two feed-back systems: one to control the cart position, x(t),a n d the second to control the pendulum angle, θ t. Modify the second model, using state-feedback ampli ﬁers with appropriate gains (in addition to the rate feedback ampli ﬁer and the PD controller), to improve the unit-impulse response of the angle control loop.Compare the response you get here with that obtainedfor Problem 33, Chapter 9. 44.Let the plant in the drive system with an elasticallycoupled load ( Thomsen ,2011 ) shown in Figure P8.15 be G p sY s M s250 s21:2s12500  s38:1s262003 s31250 where Y sΩL s, the load speed. Represent Gp sin observer canonical form. Then design an observer for it,such that it responds 10 times faster than the output, y(t), ifG C sKP. [Section: 12.5]10Saini, S. C., Sharma , Y., Bhandari, M ., and Satija, U. Comparison of Pole Placement and LQR Applied to Single Link Flexible Manipulator, International Conference on Communication Systems and Network Technologies ,I E E E Computer Society, 2012, pp. 843 –847, Figure 3, p. 844.Problems 701WEBC12 10/29/2014 8:56:50 PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS Control of HIV/AIDS. The linearized model of HIV infection when RTIs are used for treatment was intro- duced in Chapter 4 and repeated here for convenience(Craig ,2004 ): _T _T * _v2 643 75 0:04167 0  0:0058 0:0217  0:24 0 :0058 0 100  2:42 643 75T T* v2 643 75 5:2  5:2 02 643 75u1 y001/C2/C3T T* v2 643 75 Trepresents the number of healthy T-cells, T*the number of infected cells, and vthe number of free viruses. a.Design a state-feedback scheme to obtain (1)zero steady-state error for step inputs (2)10% overshoot (3)a settling time of approximately 100 days (Hint: the system ’s transfer function has an open-loop zero at approximately  0.02. Use one of the poles in the desired closed-loop-pole polynomial to eliminate this zero. Place the higher-order pole 6.25 times fartherthan the dominant pair.) b. Simulate the unit step responseof your design using Simulink. Hybrid vehicle . In Problem 32, Chapter 3, we introduced the idea that when an electric motor is the sole motive forceprovider for a hybrid electric vehicle (HEV), the forward paths of all HEV topologies are similar. It was noted that, in general, the forward path of an HEV cruise control system can be represented by a block diagram similarto that of Figure P3.18 ( Preitl, 2007 ). The diagram is shown in Figure P12.8, with t he parameters substitutedby their numerical values from Problem 69, Chapter 6; the motor armature represented as a ﬁrst-order system with a unity steady-state gain and a time constant of 50 ms; and the power ampliﬁ er gain set to 50. Whereas the state variables remain as the motor angular speed, ωt ,a n d armature current, I at , we assume now that we have only one input variable, uct , the command voltage from the electronic control unit, and one output variable, car speed,vrω=i tot0:06154 ω. The change in the load torque, Tct , is represented as an internal feedback proportional toωt . Looking at the diagram, the state equations may be written as _Ia _ω"#  20  40 0:2491  0:0191"# Ia ω"# 0 1000"# uc t y tv t00 :05154 Ia ω"# a.Design an integral controller for % OS4.32%, a settling time, Ts4.4 sec, and a zero steady-state error for a step input (Hint: To account for the effectof the integral controller on the transient response, useT s=4 seconds in your calculation of the value of the naturalfrequency, ωn,oftherequireddominantpoles). b.Use MATLAB to verify that the design requirements are met. Parabolic trough collector. A parabolic trough collector can be designed using state-space tech- niques. For simplicity, pure time delay will be ignoredhere, although it could be handled in several differentways. Consider the open-loop transfer function (Camacho, 2012): G s 137 :210 6K s20:0224 s19610 6 Design a state feedback controller with integral control to yield zero steady-state error, such that the system transient response results in a damping factor ofζ0:5 with a settling time T s200 sec. Simulate the step response of your designed system using a com-puter program. 2 0.03787 2050 1.8++–– – 0.10.06154s + 20 ua(t)Ia(t) Ia(t)Tf (t)Tc (t) ω (t)T(t) uc(t)eb(t) 1 7.226 sω (t)ν (t) FIGURE P12.8702 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:50 Cyber Exploration Laboratory Experiment 12.1 Objective To simulate a system that has been designed for transient response via a state-space controller and observer. Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.This experiment is based upon your design of a controller and observer as speci ﬁed in the Case Study Challenge problem in Chapter 12. Once you have completed the controller and observer design in that problem, go on to Prelab 2. 2.What is the controller gain vector for your design of the system speci ﬁed in the Case Study Challenge problem in Chapter 12? 3.What is the observer gain vector for your design of the system speci ﬁed in the Case Study Challenge problem in Chapter 12? 4.Draw a Simulink diagram to simulate the system. Show the system, the controller, andthe observer using the physical variables speci ﬁed in the Case Study Challenge problem in Chapter 12. Lab 1.Using Simulink and your diagram from Prelab 4, produce the Simulink diagram fromwhich you can simulate the response. 2.Produce response plots of the system and the observer for a step input. 3.Measure the percent overshoot and the settling time for both plots. Postlab 1.Make a table showing the design speci ﬁcations and the simulation results for percent overshoot and settling time. 2.Compare the design speci ﬁcations with the simulation results for both the system response and the observer response. Explain any discrepancies. 3.Describe any problems you had implementing your design. Experiment 12.2 Objective To use LabVIEW to design a controller and observer Minimum Required Software Packages LabVIEW, the Control Design and Simulation Module, and the MathScript RT Module. Prelab Create a LabVIEW VI that will design the controller and observer for the Antenna Control Case Study in this chapter. Your VI will have the following inputs: phase- variable form of the plant, the controller poles, and the observer poles to meet therequirements. Your indicators will display the following: the phase-variable equation ofthe plant, whether or not the system is controllable, the observer canonical equation of the observer, whether or not the system is observable, the gains for the controller, and the gains for the observer. Also provide the impulse response and initial response curves shown inFigure 12.27. In addition, provide similar response curves for the state variables. Lab Run your VI and collect the data from which to compare the results of the case study with those found from your VI.Cyber Exploration Laboratory 703WEBC12 10/29/2014 8:56:50 Bibliography Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Cardona, J. E., and Cárdenas, M. O. Design and implementation of a state observer for a textile machine, IEEE ANDESCON , 2010, pp. 1 –6. Craig, I. K, Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. D’Azzo, J. J., and Houpis, C. H. Linear Control System Analysis and Design: Conventional and Modern , 3d ed. McGraw-Hill, New York, 1988. Franklin, G. F, Powell, J. D, and Emami-Naeini, A. Feedback Control of Dynamic Systems , 3d ed. Addison-Wesley, Reading, MA, 1994. Hostetter, G. H, Savant, C. J. Jr., and Stefani, R. T. Design of Feedback Control Systems , 2d ed. Saunders College Publishing, New York, 1989. Kailath, T. Linear Systems . Prentice Hall, Upper Saddle River, NJ, 1980. Kyrylov, V., Severyanova, L. A., and Vieira, A. Modeling Robust Oscillatory Behavior of the Hypothalamic-Pitui tary-Adrenal Axis. IEEE Transactions on Biomedical Engineering ,v o l . 52, no. 12, 2005, pp. 1977 –1983. Liu, J.-H., Xu, D.-P., and Yang, X.-Y. Multi-Objective Power Control of a Variable Speed Wind Turbine Based on Theory. Proceedings of the Seventh International Conference on Machine Learning and Cybernetics , July 2008, pp. 2036 –2041. Luenberger, D. G. Observing the State of a Linear System. IEEE Transactions on Military Electronics , vol. MIL-8, April 1964, pp. 74 –80. Milhorn, H. T. Jr., The Application of Control Theory to Physiological Systems . W. B. Saunders, Philadelphia, 1966. Ogata, K. Modern Control Engineering , 2d ed. Prentice Hall, Upper Saddle River, NJ, 1990. Ogata, K. State Space Analysis of Control Systems . Prentice Hall, Upper Saddle River, NJ, 1967. Prasad, L., Tyagi, B., and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller & LQR. IEEE Computer Society Sixth Asia Modeling Symposium , 2012, pp.138–143. Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. Fourth International Symposium on Applied Computational Intelligence and Informatics . IEEE, 2007, pp. 157 –162. Rockwell International. Space Shuttle Transportation System . 1984 (press information). Saini, S. C., Sharma, Y., Bhandari, M., and Satija, U. Comparison of Pole Placement and LQR Applied to Single Link Flexible Manipulator. International Conference on Communication Systems and Network Technologies , IEEE Computer Society, 2012, pp. 843 –847. Shinners, S. M. Modern Control System Theory and Design . Wiley, New York, 1992. Sinha, N. K. Control Systems . Holt, Rinehart & Winston, New York, 1986. Tadeo, F., Pérez López, O., and Alvarez, T. Control of Neutralization Processes by Robust Loop-shaping. IEEE Transactions on Control Systems Technology , vol. 8, no. 2, 2000, pp. 236 –246. Tarín, C., Teufel, E., Picó, J., Bondia, J., and P ﬂeiderer, H. J. Comprehensive Pharmacokinetic Model of Insulin Glargine and Other Insulin Formulations. IEEE Transactions on Biomedical Engineering , vol. 52, no. 12, 2005, pp. 1994 –2005.Postlab Compare and summarize the results found from your VI with those of the Chapter 12 Antenna Control Case Study.704 Chapter 12 Design via State SpaceWEBC12 10/29/2014 8:56:50 Thomsen, S., Hoffmann, N., and Fuchs, F. W. PI Control, PI-Based State Space Control, and Model-Based Predictive Control for Drive Systems With Elastically Coupled Loads— A Comparative Study. IEEE Transactions on Industrial Electronics , vol. 58, no. 8, August 2011, pp. 3647 –3657. Timothy, L. K, and Bona, B. E. State Space Analysis: An Introduction . McGraw-Hill, New York, Van Dijk, E., Spruijt, J. N., O ’Sullivan, D. M., and Klaasens, J. B. PWM-Switch Modeling of DC-DC Converters. IEEE Transactions on Power Electronics , vol. 10, 1995, pp. 659 –665.Bibliography 705WEBC12 10/29/2014 8:56:50 Page 706WEBC13 10/28/2014 20:49:39 Digital Control Systems Chapter Learning Outcomes After completing this chapter the student will be able to: Model the digital computer in a feedback system (Sections 13.1 –13.2) Find z- and inverse z-transforms of time and Laplace functions (Section 13.3) Find sampled-data transfer functions (Section 13.4) Reduce an interconnection of sampled-data transfer functions to a single sampled-data transfer function (Section 13.5) Determine whether a sampled-data system is stable and determine samplingrates for stability (Section 13.6) Design digital systems to meet steady-state error speci ﬁcation (Section 13.7) Design digital systems to meet transient response speci ﬁcations using gain adjustment (Sections 13.8 –13.9) Design cascade compensation for digital systems (Sections 13.10 –13.11) Case Study Learning Outcomes You will be able to demonstrate your knowledge of the chapter objectives with acase study as follows: Given the analog antenna azimuth position control system shown on the frontendpapers and in Figure 13.1( a), you will be able to convert the system to a digital system as shown in Figure 13.1( b) and then design the gain to meet a transient response speci ﬁcation.13 707WEBC13 10/28/2014 20:49:39 Given the digital antenna azimuth position control system shown in Figure 13.1( b), y o uw i l lb ea b l et od e s i g nad i g i t a lc a s c a d ec o m p e n s a t o rt oi m p r o v et h et r a n s i e n t response. 13.1 Introduction This chapter is an introduction to digital control systems and will cover only frequency-domain analysis and design. You are encouraged to pursue the study of state-spacetechniques in an advanced course in sampled-data control systems. In this chapter, weintroduce analysis and design of stability, steady-state error, and transient response forcomputer-controlled systems. With the development of the minicomputer in the mid-1960s and the microcomputer in the mid-1970s, physical systems need no longer be controlled by expensive mainframecomputers. For example, milling operations that required mainframe computers in the pastcan now be controlled by a personal computer. The digital computer can perform two functions: (1) supervisory —external to the feedback loop; and (2) control —internal to the feedback loop. Examples of supervisory functions consist of scheduling tasks, monitoring parameters and variables for out-of-rangeCableA/D D/A (b)ComputerDesired azimuth angle inputPotentiometer Azimuth angle output(a)Azimuth angle outputAntenna Antenn aθo(t) θo(t)θi(t) FIGURE 13.1 Conversion of antenna azimuth position control system from a.analog control to b.digital control708 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:39 values, or initiating safety shutdown. Control functions are of primary interest to us, since a computer that performs within the feedback loop replaces the methods of compensation heretofore discussed. Examples of control functions are lead and lag compensation. Transfer functions, representing compensators built with analog components, are now replaced with a digital computer that performs calculations that emulate the physicalcompensator. What advantages are there to replacing analog components with a digitalcomputer? Advantages of Digital Computers The use of digital computers in the loop yields the following advantages over analogsystems: (1) reduced cost, (2) ﬂexibility in response to design changes, and (3) noise immunity. Modern control systems require control of numerous loops at the same time—pressure, position, velocity, and tension, for example. In the steel industry, a single digital computer can replace numerous analog controllers with a subsequent reduction in cost. Where analog controllers implied numerous adjustments and resulting hardware,digital systems are now installed. Banks of equipment, meters, and knobs are replaced withcomputer terminals, where information about settings and performance is obtained throughmenus and screen displays. Digital computers in the loop can yield a degree of ﬂexibility in response to changes in design. Any changes or modi ﬁcations that are required in the future can be implemented with simple software changes rather than expensive hardware modiﬁcations. Finally, digital systems exhibit more noise immunity than analog systems by virtue of the methods of implementation. Where then is the computer placed in the loop? Remember that the digital computer is controlling numerous loops; thus, its position in the loop depends upon the function it performs. Typically, the computer replaces the cascade compensator and is thus positionedat the place shown in Figure 13.2( a). The signals r,e,f,a n dc shown in Figure 13.2( a) can take on two forms: digital or analog. Up to this point we have used analog sig nals exclusively. Digital signals, which consist of a sequence of binary numbers, can be found in loops containing digitalcomputers. Loops containing both analog and digital signals must provide a means for conversion from one form to the other as required by each subsystem. A device that converts analogsignals to digital signals is called an analog-to-digital (A/D)converter . Conversely, a device that converts digital signals to analog signals is called a digital-to-analog (D/A)converter . r –+r c –+ Digital computerPlantf e A/DDigital computerD/A Plantc(a) (b) FIGURE 13.2 a.Placement of the digital computer within the loop; b.detailed block diagram showing placement of A/D and D/A converters13.1 Introduction 709WEBC13 10/28/2014 20:49:40 For example, in Figure 13.2( b), if the plant output, c, and the system input, r, are analog signals, then an analog-to-digital converter must be provided at the input to the digital computer. Also, if the plant input, f, is an analog signal, then a digital-to-analog converter must be provided at the output of the digital computer. Digital-to-Analog Conversion Digital-to-analog conversion is simple and effectively instan-taneous. Properly weighted voltages are summed together toyield the analog output. For example, in Figure 13.3, threeweighted voltages are summed. The three-bit binary code isrepresented by the switches. Thus, if the binary number is110 2, the center and bottom switches are on, and the analog output is 6 volts. In actual use, the switches are electronic andare set by the input binary code. Analog-to-Digital Conversion Analog-to-digital conversion, on the other hand, is a two-stepprocess and is not instantaneous. There is a delay between the input analog voltage and the output digital word. In an analog- to-digital converter, the analog signal is ﬁrst converted to a sampled signal and then converted to a sequence of binary numbers, the digital signal. The sampling rate must be at least twice the bandwidth of the signal, or else there will be distortion. This minimum sampling frequency is called the Nyquist sampling rate . 1 In Figure 13.4( a), we start with the analog signal. In Figure 13.4( b), we see the analog signal sampled at periodic intervals and held over the sampling interval by a device called a zero-order sample-and-hold (z.o.h .) that yields a staircase approximation to the analog signal. Higher-order holds, such as a ﬁrst-order hold, generate more complex and more accurate waveshapes between samples. For example, a ﬁrst-order hold generates a ramp between the samples. Samples are held before being digitized because the analog-to-digitalconverter converts the voltage to a digital number via a digital counter, which takes time toreach the correct digital number. Hence, the constant analog voltage must be present duringthe conversion process. After sampling and holding, the analog-to-digital converter converts the sample to a digital number (as shown in Figure 13.4( c)), which is arrived at in the following manner. The dynamic range of the analog signal ’s voltage is divided into discrete levels, and each level is assigned a digital number. For example, in Figure 13.4( b), the analog signal is divided into eight levels. A three-bit digital number can represent each of the eight levels asshown in the ﬁgure. Thus, the difference between quantization levels is M=8 volts, where M is the maximum analog voltage. In general, for any system, this difference is M=2 nvolts, where nis the number of binary bits used for the analog-to-digital conversion. Looking at Figure 13.4( b), we can see that there will be an associated error for each digitized analog value except the voltages at the boundaries such as M=8 and 2 M=8. We call this error the quantization error . Assuming that the quantization process rounds off the analog voltage to the next higher or lower level, the maximum value of the quantizationerror is 1 =2 the difference between quantization levels in the range of analog voltages from 0t o1 5 M=16. In general, for any system using roundoff, the quantization error will be 1=2 M=2 nM=2n1. We have now covered the basic concepts of digital systems. We found out why they are used, where the digital computer is placed in the loop, and how to convert between1 2 4 1 voltMost significant bitLeast significant bitAnalog output +++ FIGURE 13.3 Digital-to-analog converter 1SeeOgata (1987: 170 –177) for a detailed discussion.710 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:40 analog and digital signals. Since the computer can replace the compensator, we have to realize that the computer is working with a quantized amplitude re presentation of the analog signal, formed from values of the an alog signal, at discrete intervals of time. Ignoring the quantization error, we see that the computer performs just as thecompensator does, except that signals pass through the computer only at the sampledintervals of time. We will ﬁnd that the sampling of data has an unusual effect upon the performance of a closed-loop feedback system, since stability and transient response are now dependent upon the sampling rate. If the sampling rate is too slow, the system can be unstable, since the values are not being updated rapidly enough. If we are to analyze and design feedback control systems with digital computers in the loop, we must be able to modelthe digital computer and associated digital-to-analog and analog-to-digital converters.The modeling of the digital computer along with associated converters is covered in thenext section. 13.2 Modeling the Digital Computer If we think about it, the form of the signals in a loop is not as important as what happensto them. For example, if analog-to-digital c onversion could happen instantaneously, and time samples occurred at intervals of time that approached zero, there would be no needto differentiate between the digital sign als and the analog signals. Thus, previous analysis and design techniques would be valid regardless of the presence of the digitalcomputer. The fact that signals are sampled at speci ﬁed intervals and held causes the system performance to change with changes in sampling rate. Basically, then, the computer ’s effect upon the signal comes from this sampling and holding. Thus, in order to model digitalcontrol systems, we must come up with a mathematical representation of this sample-and-hold process.12345Digital number 000 011100101101110110110110110123 4 Time (seconds)5000 2345 Time (seconds) (b) (a) Time (seconds) (c)1M/82M/83M/84M/85M/86M/87M/8 f (t) 01M/82M/83M/84M/85M/86M/87M/8 000001010011101110111 1001 Digital numberf (t) FIGURE 13.4 Steps in analog-to-digital conversion: a.analog signal; b.analog signal after sample-and-hold; c.conversion of samples to digital numbers13.2 Modeling the Digital Computer 711WEBC13 10/28/2014 20:49:40 Modeling the Sampler Our objective at this point is to derive a mathematical model for the digital computer as represented by a sampler and zero-order hold. Our goal is to represent the computer as a transfer function similar to that for any subs ystem. When signals are sampled, however, the Laplace transform that we have dealt with becomes a bit unwieldy. The Laplacetransform can be replaced by another related transform called the z-transform .T h e z-transform will arise naturally from our deve lopment of the mathematical representation of the computer. Consider the models for sampling shown in Figure 13.5. The model in Figure 13.5( a) is a switch turning on and off at a uniform sampling rate. In Figure 13.5( b), sampling can also be considered to be the product of the time waveform to be sampled, f(t), and a sampling function, s(t). If s(t) is a sequence of pulses of width T W, constant amplitude, and uniform rate as shown, the sampled output, f* TW t, will consist of a sequence of sections of f(t) at regular intervals. This view is equivalent to the switch model of Figure 13.5( a). We can now write the time equation of the sampled waveform, f* TW t. Using the model shown in Figure 13.5( b), we have f*T W tf ts tf tX∞ k ∞u t kT u t kT Tw 13.1 where kis an integer between  ∞and∞,Tis the period of the pulse train, and TWis the pulse width. Since Eq. (13.1) is the product of two time functions, taking the Laplace transform in order to ﬁnd a transfer function is not simple. A simpli ﬁcation can be made if we assume that the pulse width, TW, is small in comparison to the period, T,s u c ht h a t f(t) can f(t)* Pulse width = TW T2T3T T2T3T T2T3Tf(t) tt f(t) t t ts(t)f(t)(a) (b)fTW(t) *fTW(t) *fTW(t)*fTW(t) Pulse width = TW Pulse width = TWs(t) FIGURE 13.5 Two views of uniform-rate sampling: a.switch opening and closing; b.product of time waveform and sampling waveform712 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:41 be considered constant during the sampling interval. Over the sampling interval, then, f tf kT. Hence, f* TW tX∞ k ∞f kTu t kT u t kT TW 13.2 for small TW. Equation (13.2) can be further simpli ﬁed through insight provided by the Laplace transform. Taking the Laplace transform of Eq. (13.2), we have F* TW sX∞ k ∞f kTe kTs s e kTs TWs s/C20/C21 X∞ k ∞f kT1 e TWs s/C20/C21 e kTs 13.3 Replacing e TWswith its series expansion, we obtain F* TW sX∞ k ∞f kT1 1 TWs TWs2 2! ∙∙∙/C26/C27 s2 66643 7775e kTs 13.4 For small TW, Eq. (13.4) becomes F* TW sX∞ k ∞f kTTWs s/C20/C21 e kTsX∞ k ∞f kTTWe kTs 13.5 Finally, converting back to the time domain, we have f* TW tTWX∞ k ∞f kTδ t kT 13.6 where δ t kTare Dirac delta functions. Thus, the result of sampling with rectangular pulses can be thought of as a series of delta functions whose area is the product of the rectangular pulse width and the amplitude of the sampled waveform, or TWf kT. Equation (13.6) is portrayed in Figure 13.6. The sampler is divided into two parts: (1) an ideal sampler described by the portion of Eq. (13.6) that is not dependent upon thesampling waveform characteristics, f* tX∞ k ∞f kTδ t kT 13.7 and (2) the portion dependent upon the sampling waveform ’s characteristics, TW. f *(t)Ideal sampler f(t)TW Σ–∞∞ Σ–∞∞ = f(kT) δ(t – kT) = TW f(kT) δ(t – kT)*fTW(t)FIGURE 13.6 Model of sampling with a uniform rectangular pulse train13.2 Modeling the Digital Computer 713WEBC13 10/28/2014 20:49:41 Modeling the Zero-Order Hold Theﬁnal step in modeling the digital computer is modeling the zero-order hold that follows the sampler. Figure 13.7 summarizes the function of the zero-order hold, which is to hold the last sampled value of f(t). If we assume an ideal sampler (equivalent to setting TW1), then f* tis represented by a sequence of delta functions. The zero-order hold yields a staircase approximation to f(t). Hence, the output from the hold is a sequence of step functions whose amplitude is f(t) at the sampling instant, or f(kT). We have previously seen that the transfer function of any linear system is identical to the Laplace transform of the impulse response,since the Laplace transform of a unit impulse or delta function input is unity. Since a singleimpulse from the sampler yields a step over the sampling interval, the Laplace transform ofthis step, G h(s), which is the impulse response of the zero-order hold, is the transfer function of the zero-order hold. Using an impulse at zero time, the transform of the resulting step thatstarts at t0 and ends at tTis Gh s1 e Ts s 13.8 In a physical system, samples of the input time waveform, f(kT), are held over the sampling interval. We can see from Eq. (13.8) that the hold circuit integrates the input andholds its value over the sampling interval. Since the area under the delta functions comingfrom the ideal sampler is f(kT), we can then integrate the ideal sampled waveform and obtain the same result as for the physical system. In other words, if the ideal sampled signal, f * t, is followed by a hold, we can use the ideal sampled waveform as the input, rather than f* TW t. In this section, we modeled the digital computer by cascading two elements: (1) an ideal sampler and (2) a zero-order hold. Together, the model is known as a zero-order sample-and-hold . The ideal sampler is modeled by Eq. (13.7), and the zero-order hold is modeled by Eq. (13.8). In the next section, we start to create a transform approach to digital systems by introducing the z-transform. 13.3 The z-Transform The effect of sampling within a system is pronounced. Whereas the stability and transientresponse of analog systems depend upon gain and component values, sampled-data systemstability and transient response also depend upon sampling rate. Our goal is to develop atransform that contains the information of sampling from which sampled-data systems can bemodeled with transfer functions, analyzed, and designed with the ease and insight we enjoyed with the Laplace transform. We now develop such a transform and use the information from the last section to obtain sampled-data transfer functions for physical systems.Ideal sampler f *(t) f(t) Holdfh(t) t t tf(t) f *(t) f(kT) δ(t kT ) –fh(t) FIGURE 13.7 Ideal sampling and the zero-order hold714 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:42 Equation (13.7) is the ideal sampled waveform. Taking the Laplace transform of this sampled time waveform, we obtain F* sX∞ k0f kTe kTs 13.9 Now, letting zeTs, Eq. (13.9) can be written as F zX∞ k0f kTz k 13.10  Equation (13.10) de ﬁnes the z-transform . That is, an F(z) can be transformed to f(kT), or an f(kT) can be transformed to F(z). Alternately, we can write f kT⇆ F z 13.11  Paralleling the development of the Laplace transform, we can form a table relating f(kT), the value of the sampled time function at the sampling instants, to F(z). Let us look at an example. Example 13.1 z-Transform of a Time Functionz-Transform of a Time Function PROBLEM: Find the z-transform of a sampled unit ramp. SOLUTION: For a unit ramp, f kTkT. Hence the ideal sampled step can be written from Eq. (13.7) as f* tX∞ k0ktδ t kT 13.12  Taking the Laplace transform, we obtain F* sX∞ k0kTe kTs 13.13  Converting to the z-transform by letting e kTsz k, we have F zX∞ k0kTz kTX∞ k0kz kT z 12z 23z 3∙∙∙ 13.14  Equation (13.14) can be converted to a closed form by forming the series for zF(z) and subtracting F(z). Multiplying Eq. (13.14) by z, we get zF zT 12z 13z 2∙∙∙ 13.15  Subtracting Eq. (13.14) from Eq. (13.15), we obtain zF z F z z 1F zT 1z 1z 2∙∙∙ 13.16  But 1 1 z 11z 1z 2z 3∙∙∙ 13.17 13.3 The z-Transform 715WEBC13 10/28/2014 20:49:47 The example demonstrates that any function of s,F* s, that represents a sampled time waveform can be transformed into a function of z,F(z). The ﬁnal result, F zTz= z 12, is in a closed form, unlike F* s. If this is the case for numerous other sampled time waveforms, then we have the convenient transform that we were looking for. In a similar way, z-transforms for other waveforms can be obtained that parallel the table of Laplace transforms in Chapter 2. A partial table of z-transforms is shown in Table 13.1, and a partial table of z-transform theorems is shown in Table 13.2. For functions not in the table, we must perform an inverse z-transform calculation similar towhich can be veri ﬁed by performing the indicated division. Substituting Eq. (13.17) into (13.16) and solving for F(z) yields F zTz z 12 13.18  as the z-transform of f kTkT. Students who are performing the MATLAB exercises and want toexplore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch13sp1 in Appendix F located at www.wiley.com/ college/nise . You will learn how to ﬁnd the z-transform of time functions. Example 13.1 will be solved using MATLAB and theSymbolic Math Toolbox. TABLE 13.1 Partial table of z- and s-transforms f(t) F(s) F(z) f(kT) u(t) 1 sz z 1u(kT) t 1 s2Tz z 12kT tn n! sn1lim a®0  1ndn danz z e aT/C20/C21 kTn e at 1 saz z e aTe akT tne at n! san1  1ndn danz z e aT/C20/C21 kTne akT sin ωtω s2ω2zsinωT z2 2zcosωT1sinωkT cos ωts s2ω2z z cosωT z2 2zcosωT1cosωkT e atsinωtω sa2ω2ze aTsinωT z2 2ze aTcosωTe 2aTe akTsinωkT e atcosωt sa sa2ω2z2 ze aTcosωT z2 2ze aTcosωTe 2aTe akTcosωkT716 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:50 the inverse Laplace transform by partial-fraction expansion. Let us now see how we can work in the reverse direction and ﬁnd the time function from its z-transform. The Inverse z-Transform Two methods for ﬁnding the inverse z-transform (the sampled time function from its z-transform) will be described: (1) partial-fraction expansion and (2) the power series method. Regardless of the method used, remember that, since the z-transform came from the sampled waveform, the inverse z-transform will yield only the values of the time function at the sampling instants. Keep this in mind as we proceed, because even as we obtain closed-form time functions as results, they are valid only at sampling instants. Inverse z-Transforms via Partial-Fraction Expansion Recall that the Laplace transform consists of a partial fraction that yields a sum of terms leading to exponentials, that is,A= sa. Taking this lead and looking at Table 13.1, we ﬁnd that sampled exponential time functions are related to their z-transforms as follows: e akT⇆z z eaT 13.19  We thus predict that a partial-fraction expansion should be of the following form: F zAz z z1Bz z z2∙∙∙ 13.20  Since our partial-fraction expansion of F(s) did not contain terms with sin the numerator of the partial fractions, we ﬁrst form F z=zto eliminate the zterms in the numerator, perform a partial-fraction expansion of F z=z,a n dﬁ nally multiply the result by zto replace the z’s in the numerator. An example follows.TABLE 13.2 z-transform theorems Theorem Name zfaf tg  aF z Linearity theorem zff1 tf2 tg  F1 zF2 z Linearity theorem zfe aTf tg  F eaTz Complex differentiation zff t nTg  z nF z Real translation zftf tg   TzdF z dzComplex differentiation 6.f 0 lim z®∞F z Initial value theorem 7.f ∞lim z®1 1 z 1F z Final value theorem Note: kTmay be substituted for tin the table. Example 13.2 Inverse z-Transform via Partial-Fraction Expansion Inverse z-Transform via Partial-Fraction Expansion PROBLEM: Given the function in Eq. (13.21), ﬁnd the sampled time function. F z0:5z z 0:5 z 0:7 13.21 13.3 The z-Transform 717WEBC13 10/28/2014 20:49:51 Inverse z-Transform via the Power Series Method The values of the sampled time waveform can also be found directly from F(z). Although this method does not yield closed-form expressions for f(kT), it can be used for plotting. The method consists of performing the indicated division, which yields a power series for F(z). The power series can then be easily transformed into F* sandf* t.SOLUTION: B e g i nb yd i v i d i n gE q .( 1 3 . 2 1 )b yz and performing a partial-fraction expansion. F z z0:5 z 0:5 z 0:7A z 0:5B z 0:7 2:5 z 0:52:5 z 0:7 13.22  Next, multiply through by z. F z0:5z z 0:5 z 0:7 2:5z z 0:52:5z z 0:7 13.23  Using Table 13.1, we ﬁnd the inverse z-transform of each partial fraction. Hence, the value of the time function at the sampling instants is f kT  2:5 0:5k2:5 0:7k 13.24  Also, from Eqs. (13.7) and (13.24), the ideal sampled time function is f* tX∞ k ∞f kTδ t kTX∞ k ∞ 2:5 0:5k2:5 0:7kδ t kT 13.25  If we substitute k0;1;2, and 3, we can ﬁnd the ﬁrst four samples of the ideal sampled time waveform. Hence, f* t0δ t0:5δ t T0:6δ t 2T0:545δ t 3T 13.26  Students who are performing the MATLAB exercises and want to explore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch13sp2 in Appendix F located at www.wiley.com/ college/nise . You will learn how to ﬁnd the inverse z-transform of sampled time functions. Example 13.2 will be solved using MATLAB and the Symbolic Math Toolbox. Example 13.3 Inverse z-Transform via Power Series Inverse z-Transform via Power Series PROBLEM: Given the function in Eq. (13.21), ﬁnd the sampled time function. SOLUTION: Begin by converting the numerator and denominator of F(z)t o polynomials in z. F z0:5z z 0:5 z 0:70:5z z2 1:2z0:35 13.27 718 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:52 13.4 Transfer Functions N o wt h a tw eh a v ee s t a b l i s h e dt h ez -transform, let us apply it to physical systems by ﬁnding transfer functions of sampled-data systems. Consider the continuous system shown in Figure 13.8( a). If the input is sampled as shown in Figure 13.8( b), the output is still a continuous signal. If, however, we are satis ﬁed with ﬁnding the output at the sampling instants and not in between, the representation of the sampled-data system can be greatly simpli ﬁed. Our assumption is visually described in Figure 13.8( c), where the output is conceptually sampled in synchronization with the input by a phantom sampler.Now perform the indicated division. z2 1:2z0:35/C1 0:5z0:5z 10:6z 20:545z 3 0:5z 0:60:175z 1 0:6 0:175z 1 0:6 0:720z 10:21 0:545z 1 0:21 13:28 Using the numerator and the de ﬁnition of z, we obtain F* s0:5e Ts0:6e 2Ts0:545e 3Ts∙∙∙ 13.29  from which f* t0:5δ t T0:6δ t 2T0:545δ t 3T ∙∙∙ 13.30  You should compare Eq. (13.30) with Eq. (13.26), the result obtained via partial expansion. Skill-Assessment Exercise 13.1 PROBLEM: Derive the z-transform for f tsinωtu t. ANSWER: F zz 1sin ωT 1 2z 1cos ωTz 2 The complete solution is located at www.wiley.com/college/nise . Skill-Assessment Exercise 13.2 PROBLEM: Find f kTifF zz z1 z2 z 0:5 z 0:7 z 0:9: ANSWER: f kT46:875 0:5k 114:75 0:7k68:875 0:9k The complete solution is located at www.wiley.com/college/nise .13.4 Transfer Functions 719WEBC13 10/28/2014 20:49:52 Using the concept described in Figure 13.8( c), we derive the pulse transfer function ofG(s). Derivation of the Pulse Transfer Function Using Eq. (13.7), we ﬁnd that the sampled input, r*(t), to the system of Figure 13.8( c)i s r* tX∞ n0r nTδ t nT 13.31  which is a sum of impulses. Since the impulse response of a system, G(s), isg(t), we can write the time output of G(s) as the sum of impulse responses generated by the input, Eq. (13.31). Thus, c tX∞ n0r nTg t nT 13.32  From Eq. (13.10), C zX∞ k0c kTz k 13.33  Using Eq. (13.32) with tkT, we obtain c kTX∞ n0r nTg kT nT 13.34  Substituting Eq. (13.34) into Eq. (13.33), we obtain C zX∞ k0X∞ n0r nTg k nTz k 13.35 G(s)C(s) R(s) G(s)C(s) R(s)(a) (b) G(s)C(s) R(s) (c)R (s) R (s) C (s) Note: Phantom sam pler is shown in color.** * FIGURE 13.8 Sampled-data systems: a.continuous; b.sampled input; c.sampled input and output720 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:54 Letting mk n,w e ﬁnd C zX∞ mn0X∞ n0r nTg mTz  mn X∞ m0g mTz m()X∞ n0r nTz n() 13.36  where the lower limit, mn, was changed to m. The reasoning is that mn0 yields negative values of mfor all n>0. But, since g mT0 for all m<0,mis not less than zero. Alternately, g t0 for t<0. Thus, n0 in the ﬁrst sum ’s lower limit. Using the de ﬁnition of the z-transform, Eq. (13.36) becomes C zX∞ m0g mTz mX∞ n0r nTz nG zR z 13.37  Equation (13.37) is a very important result, since it shows that the transform of the sampled output is the product of the transforms of the sampled input and the pulse transfer function of the system. Remember that although the output of the system is a continuous function, we had to make an assumption of a sampled output (phantom sampler) in order to arrive at thecompact result of Eq. (13.37). One way of ﬁnding the pulse transfer function, G(z), is to start with G(s),ﬁndg(t), and then use Table 13.1 to ﬁndG(z). Let us look at an example. Example 13.4 Converting G1(s) in Cascade with z.o.h. to G(z) Converting G1(s) in Cascade with z.o.h. to G(z) PROBLEM: Given a z.o.h. in cascade with G1 s s2= s1or G s1 e Ts s s2 s1 13.38  ﬁnd the sampled-data transfer function, G(z), if the sampling time, T, is 0.5 second. SOLUTION: Equation (13.38) represents a common occurrence in digital control systems, namely a transfer function in cascade with a zero-order hold. Speci ﬁcally, G1 s s2= s1is in cascade with a zero-order hold, 1 e Ts=s. We can formulate ageneralsolutiontothistypeofproblembymovingthe sinthedenominatorofthezero-order hold to G1 s, yielding G s 1 e TsG1 s s 13.39  from which G z 1 z 1zG1 s s/C26/C27 z 1 zzG1 s s/C26/C27 13.40  Thus, begin the solution by ﬁnding the impulse response (inverse Laplace transform) of G1 s=s. Hence, G2 sG1 s ss2 s s1A sB s12 s 1 s1 13.41 13.4 Transfer Functions 721WEBC13 10/28/2014 20:49:54 Students who are using MATLAB should now run ch13p2 in Appendix B. You will learn how to use MATLAB to convert G(s)t oG (z) when G(s)i s not in cascade with a zero-order hold. This is the same as ﬁnding thez-transform of G(s). Students who are using MATLAB should now run ch13p3 in Appendix B. You will learn how to create digital transfer functions directly. Students who are using MATLAB should now run ch13p4 in Appendix B. You will learn how to use MATLAB to convert G(z)t oG (s) when G(s)i s not in cascade with a zero-order hold. This is the same as ﬁnding the Laplace transform of G(z).Taking the inverse Laplace transform, we get g2 t2 e t 13.42  from which g2 kT2 e kt 13.43  Using Table 13.1, we ﬁnd G2 z2z z 1 z z e T 13.44  Substituting T0:5 yields G2 zzG1 s s/C26/C27 2z z 1 z z 0:607z2 0:213z z 1 z 0:607 13.45  From Eq. (13.40), G zz 1 zG2 zz 0:213 z 0:607 13.46  Students who are using MATLAB should now run ch13p1 in Appendix B.You will learn how to use MATLAB to convert G 1(s)in cascade with a zero-order hold to G(z). This exercise solves Example 13.4 using MATLAB. Students who are performing the MATLAB exercises and want toexplore the added capability of MATLAB ’s Symbolic Math Toolbox should now run ch13sp3 in Appendix F located at www.wiley.com/ college/nise . MATLAB ’s Symbolic Math Toolbox yields an alterna- tive method of ﬁnding the z-transform of a transfer function in cascade with a zero-order hold. Example 13.4 will be solved usingMATLAB and the Symbolic Math Toolbox with a method that followsclosely the hand calculation shown in that example.TryIt 13.1 Use MATLAB, the Control System Toolbox, and thefollowing statements to ﬁnd G 1 sin Example 13.4 given G(z) in Eq. (13.46) num=0.213 ; den=0.607 ; K=1; T=0.5 ; Gz=zpk(num,den,K,T) Gs=d2c(Gz, 'zoh' ) Skill-Assessment Exercise 13.3 PROBLEM: Find G(z) for G s8= s4in cascade with a zero-order sample and hold. The sampling period is 0.25 second. ANSWER: G z1:264= z 0:3679  The complete solution is located at www.wiley.com/college/nise .TryIt 13.2 Use MATLAB, the Control System Toolbox, and the following statements to solve Skill-Assessment Exercise 13.3. Gs=zpk( [] ,  4,8) Gz=c2d(Gs,0.25, 'zoh' )722 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:55 The major discovery in this section is that once the pulse transfer function, G(z), of a system is obtained, the transform of the sampled output response, C(z), for a given sampled input can be evaluated using the relationship C zR zG z. Finally, the time function can be found by taking the inverse z-transform, as covered in Section 13.3. In the next section, we look at block diagram reduction for digital systems. 13.5 Block Diagram Reduction Up to this point, we have de ﬁned the z-transform and the sampled-data system transfer function and have shown how to obtain the sampled response. Basically, we are paralleling our discussions of the Laplace transform in Chapters 2 and 4. We now draw a parallel withsome of the objectives of Chapter 5, namely block diagram reduction. Our objective here isto be able to ﬁnd the closed-loop sampled-data transfer function of an arrangement of subsystems that have a computer in the loop. When manipulating block diagrams for sampled-data systems, you must be careful to remember the de ﬁnition of the sampled-data system transfer function (derived in the last section) to avoid mistakes. For example, zfG 1 sG2 sg6G1 zG2 z, where zfG1 sG2 sg denotes the z-transform. The s-domain functions have to be multiplied together before taking the z-transform. In the ensuing discussion, we use the notation G1G2 sto denote a single function that is G1 sG2 safter evaluating the product. Hence, zfG1 sG2 sg  zfG1G2 sg  G1G2 z6G1 zG2 z. Let us look at the sampled-data systems shown in Figure 13.9. The sampled-data systems are shown under the column marked s. Their z-transforms are shown under the column marked z. The standard system that we derived earlier is shown in Figure 13.9( a), where the transform of the output, C(z), is equal to R(z)G(z). This system forms the basis for the other entries in Figure 13.9. In Figure 13.9( b), there is no sampler between G1 sandG2 s. Thus, we can think of a single function, G1 sG2 s, denoted G1G2 s, existing between the two samplers and yielding a single transfer function, as shown in Figure 13.9( a). Hence, the pulse transfer function is zfG1G2 sg  G1G2 z. The transform of the output, C zR zG1G2 z. In Figure 13.9( c), we have the cascaded two subsystems of the type shown in Figure 13.9( a). For this case, then, the z-transform is the product of the two z-transforms, or G2 zG1 z. Hence the transform of the output C zR zG2 zG1 z. R(s) R*(s)G(s)C(s) C*(s) (a) (b) (c) (d)R(s) R*(s) C(s) C*(s) R(s) R*(s)G2(s)C(s) C*(s)G1(s) R(s)G2(s)C(s) C*(s)G1(s)R(s)G1(s) [R(s)G1(s)]*G(z) G2(z)G1(z) G2(z)R(z) R(z) R(z) RG1(z)C(z) C(z) C(z) C(z)G2G1(z) G2(s) G1(s)sz FIGURE 13.9 Sampled-data systems and their z-transforms13.5 Block Diagram Reduction 723WEBC13 10/28/2014 20:49:55 Finally, in Figure 13.9( d), we see that the continuous signal entering the sampler is R sG1 s. Thus, the model is the same as Figure 13.9( a) with R(s) replaced by R sG1 s, andG2 sin Figure 13.9( d) replacing G(s) in Figure 13.9( a). The z-transform of the input to G2 siszfR sG1 sg  zfRG 1 sg  RG1 z. The pulse transfer function for the system G2 sisG2 z. Hence, the output C zRG 1 zG2 z. Using the basic forms shown in Figure 13.9, we can now ﬁnd the z-transform of feedback control systems. We have shown that any system, G(s), with sampled input and sampled output, such as that shown in Figure 13.9( a), can be represented as a sampled-data transfer function, G(z). Thus, we want to perform block diagram manipulations that result in subsystems, as well as the entire feedback system, that have sampled inputs and sampled outputs. Then we can make the transformation to sampled-data transfer functions. Anexample follows. Example 13.5 Pulse Transfer Function of a Feedback SystemPulse Transfer Function of a Feedback System PROBLEM: Find the z-transform of the system shown in Figure 13.10( a). SOLUTION: The objective of the problem is to proceed in an orderly fashion, starting with the block diagram of Figure 13.10( a) and reducing it to the one shown in Figure 13.10( f). One operation we can always perform is to place a phantom sampler at the output of any subsystem that has a sampled input, provided that the nature of the signal sent to any FIGURE 13.10 Steps in block diagram reduction of a sampled-data system(ﬁgure continues )(b) C(s) R*(s) + – S1R(s) S2G(s)C*(s) S4 S1 S3G(s)H(s) (c)C(s) R*(s) + – S1R(s) S2G(s)C*(s) S4 S3H(s)(a)C(s) + – S1R(s)G(s) H(s) Note: Phantom sam plers are shown in color.724 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:56 other subsystem is not changed. For example in Figure 13.10( b), phantom sampler S4 can be added. The justi ﬁcation for this, of course, is that the output of a sampled-data system can only be found at the sampling instants anyway, and the signal is not an input to any other block. Another operation that can be performed is to add phantom samplers S2 and S3 at the input to a summing junction whose output is sampled. The justi ﬁcation for this operation is that the sampled sum is equivalent to the sum of the sampled inputs, provided, of course,that all samplers are synchronized. Next, move sampler S1 and G(s) to the right past the pickoff point, as shown in Figure 13.10( c). The motivation for this move is to yield a sampler at the input of G(s)H(s) to match Figure 13.9( b). Also, G(s) with sampler S1 at the input and sampler S4 at the output matches Figure 13.9( a). The closed-loop system now has a sampled input and a sampled output. G(s)H(s) with samplers S1 and S3 becomes GH(z), and G(s) with samplers S1 and S4 becomes G(z), as shown in Figure 13.10( d). Also, converting R *(s)t oR(z) and C*(s)t o C(z), we now have the system represented totally in the z-domain. The equations derived in Chapter 5 for transfer functions represented with the Laplace transform can be used for sampled-data transfer functions with only a change invariables from stoz. Thus, using the feedback formula, we obtain the ﬁrst block of Figure 13.10( e). Finally, multiplication of the cascaded sampled-data systems yields the ﬁnal result shown in Figure 13.10( f).C(z) R(z) + –G(z) GH(z) (d) C(z) G(z) 1 + GH(z) ( f )R(z) C(z) 1 1 + GH(z) (e)R(z)G(z) FIGURE 13.10 (Continued ) Skill-Assessment Exercise 13.4 PROBLEM: Find T zC z=R zfor the system shown in Figure 13.11. ANSWER: T zG1G2 z 1HG 1G2 z The complete solution is located at www.wiley.com/college/nise .R(s)G1(s)+ –G2(s)C(s) H(s)FIGURE 13.11 Digital system for Skill-Assessment Exercise 13.413.5 Block Diagram Reduction 725WEBC13 10/28/2014 20:49:56 This section paralleled Chapter 5 by showing how to obtain the closed-loop, sampled- data transfer function for a collection of subsystems. The next section parallels the discussion of stability in Chapter 6. 13.6 Stability The glaring difference between analog feedback control systems and digital feedback control systems, such as the one shown in Figure 13.12, is the effect that the sampling rate has on the transient response. Changes in sampling rate not only change the nature of theresponse from overdamped to underdamped, but also can turn a stable system into anunstable one. As we proceed with our discussion, these effects will become apparent. Youare encouraged to be on the lookout. We now discuss the stability of digital systems from two perspectives: (1) z-plane and (2)s-plane. We will see that the Routh-Hurwitz criterion can be used only if we perform our analysis and design on the s-plane. Digital System Stability via the z-Plane In the s-plane, the region of stability is the left half-plane. If the transfer function, G(s), is transformed into a sampled-data transfer function, G(z), the region of stability on the z-plane can be evaluated from the de ﬁnition, zeTs. Letting sαjω, we obtain zeTseT αjωeαTejωT eαT cosωTjsinωT eαTωT 13.47  since cosωTjsinωT1ωT. Each region of the s-plane can be mapped into a corresponding region on the z-plane (see Figure 13.13). Points that have positive values of αare in the right half of the s-plane, FIGURE 13.12 A lathe using digital numerical control726 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:58 region C. From Eq. (13.47), the magnitudes of the mapped points are eαT>1. Thus points in the right half of the s-plane map into points outside the unit circle on the z-plane. Points on the jω-axis, region B, have zero values of αand yield points on the z-plane with magnitude =1, the unit circle. Hence, points on the jω-axis in the s-plane map into points on the unit circle on the z-plane. Finally, points on the s-plane that yield negative values of α(left–half-plane roots, region A) map into the inside of the unit circle on the z-plane. Thus, a digital control system is (1) stable if all poles of the closed-loop transfer function, T(z), are inside the unit circle on the z-plane; (2) unstable if any pole is outside the unit circle and/or there are poles of multiplicity greater than one on the unit circle; and (3) marginally stable if poles of multiplicity 1 are on the unit circle and all other poles are inside the unit circle. Let us look at an example.CIm s-plane ReIm z-plane Re CAAB B FIGURE 13.13 Mapping regions of the s-plane onto thez-plane Example 13.6 Modeling and StabilityModeling and Stability PROBLEM: The missile shown in Figure 13.14( a) can be aerodynamically controlled by torques created by the de ﬂection of control surfaces on the missile ’s body. The commands to de ﬂect these control surfaces come from a computer that uses tracking data along with programmed guidance equations to determine whether the missile is on track. The information from the guidance equations is used to develop ﬂight-control commands for the missile. A simpli ﬁed model is shown in Figure 13.14( b). Here the computer performs the function of controller by using tracking information to develop inputcommands to the missile. An accelerometer in the missile detects the actual acceleration,which is fed back to the computer. Find the closed-loop digital transfer function for this system and determine if the system is stable for K20 and K100 with a sampling interval of T0:1 second. SOLUTION: The input to the control system is an acceleration command developed by the computer. The computer can be modeled by a sample-and-hold. The s-plane model is shown in Figure 13.14( c). The ﬁrst step in ﬁnding the z-plane model is to ﬁndG(z), the forward-path transfer function. From Figure 13.14( c)o r( d), G s 1 e Ts sKa s sa 13.48 13.6 Stability 727WEBC13 10/28/2014 20:49:58 where a27. The z-transform, G(z), is 1 z 1zfKa=s2 sag. The term Ka=s2 saisﬁrst expanded by partial fractions, after which we ﬁnd the z-transform of each term from Table 13.1. Hence, zKa s2 sa/C26/C27 Kza s2 sa/C26/C27 Kz1 s2 1=a s1=a sa/C26/C27 KTz z 12 z=a z 1z=a z e aT/C26/C27 KTz z 12  1 e aTz a z 1 z e aT/C26/C27 13.49  Thus, G zKT z e aT  z 11 e aT a/C18/C19 z 1 z e aT8 >>< >>:9 >>= >>; 13.50 Control surfaces A/D Computer D/AAmplifier KAirframe dynamics A/DTracking dataMissile acceleration K1 – e – Ts s27 s(s + 27)+ –Acceleration commandSampleHold AmplifierAirframe dynamicsMissile acceleration Ks27 s(s + 27)+ –Acceleration commandSample AmplifierAirframe dynamicsMissile acceleration(b) (c) (d)(a) 1 – e– TsSample Hold FIGURE 13.14 Finding stability of a missile control system: a.missile; b.conceptual block diagram; c.block diagram; d.block diagram with equivalent single sampler728 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:49:59 In the case of continuous systems, the determination of stability hinges upon our ability to determine whether the roots of t he denominator of the closed-loop transfer function are in the stable region of the s-plane. The problem for high-order systems is complicated by the fact that the closed-loop tr ansfer function denominator is in polyno- mial form, not factored form. The same problem surfaces with closed-loop sampled-data transfer functions. Tabular methods for determining stability, such as the Routh-Hurwitz method used for higher-order continuous systems, exist for sampled-data systems. These methods, whichare not covered in this introductory chapter to digital control systems, can be used todetermine stability in higher-order digital systems. If you wish to go further into the area of digital system stability, you are encouraged to look at Raible ’s tabular method or Jury ’s stability test for determining the number of a sampled-data system ’s closed-loop poles that exist outside the unit circle and thus indicate instability. 2 The following example demonstrates the effect of sampling rate on the stability of a closed-loop feedback control system. All parameters are constant except for the sampling interval, T. We will see that varying Twill lead us through regions of stability and instability just as though we were varying the forward-path gain, K.Letting T0:1 and a27, we have G zK 0:0655 z0:02783  z 1 z 0:0672  13.51  Finally, we ﬁnd the closed-loop transfer function, T(z), for a unity feedback system: T zG z 1G zK 0:0655 z0:02783  z2 0:0655 K 1:0672 z 0:02783 K0:0672  13.52  The stability of the system is found by ﬁnding the roots of the denominator. For K20, the roots of the denominator are 0 :12j0:78. The system is thus stable for K20, since the poles are inside the unit circle. For K100, the poles are at  0.58 and  4.9. Since one of the poles is outside the unit circle, the system is unstable for K100. Students who are using MATLAB should now run ch13p5 in Appendix B.You will learn how to use MATLAB to determine the range of Kfor stability in a digital system. This exercise solves Example 13.6using MATLAB. Example 13.7 Range of Tfor Stability Range of Tfor Stability PROBLEM: Determine the range of sampling interval, T, that will make the system shown in Figure 13.15 stable, and the range that will make it unstable. SOLUTION: Since H s1, the z-transform of the closed-loop system, T(z), is found from Figure 13.10 to be T zG z 1G z 13.53  2A discussion of Raible ’s tabular method and Jury’ s stability test can be found in Kuo (1980: 278 –286).13.6 Stability 729WEBC13 10/28/2014 20:50:0 We now have found, via the z-plane, that sampled systems are stable if their poles are inside the unit circle. Unfortunately, this stability criterion precludes the use of the Routh- Hurwitz criterion, which detects roots in the right half-plane rather than outside the unitcircle. However, another method exists that allows us to use the familiar s-plane and the Routh-Hurwitz criterion to determine the stability of a sampled system. Let usintroduce this topic. Bilinear Transformations Bilinear transformations give us the ability to apply our s-plane analysis and design techniques to digital systems. We can analyze and design on the s-plane as we have done in Chapters 8 and 9 and then, using these transformations, convert the results to a digitalsystem that contains the same properties. Let us look further into this topic. We can consider ze Tsand its inverse, s 1=Tlnz, as the exact transformations between zands. Thus, if we have G(z) and substitute zeTs, we obtain G eTsas the result of converting to s. Similarly, if we have G(s) and substitute s 1=Tlnz, we obtain G((1/T)l nz) as the result of converting to z. Unfortunately, both transformations yield transcendental functions, which we of course take care of through the rather complicated z-transform. What we would like is a simple transformation that would yield linear arguments when transforming in both directions (bilinear) through direct substitution and without thecomplicated z-transform. Bilinear transformations of the form zasb csd 13.57 ToﬁndG(z),ﬁrstﬁnd the partial-fraction expansion of G(s). G s101 e Ts s s110 1 e Ts1 s 1 s1/C18/C19 13.54  Taking the z-transform, we obtain G z10 z 1 zz z 1 z z e T/C20/C21 10 1 e T z e T 13.55  Substituting Eq. (13.55) into (13.53) yields T z10 1 e T z  11e T 10 13.56  The pole of Eq. (13.56), 11e T 10, monotonically decreases from +1t o  1 for 0<T<0:2. For 0 :2<T<∞; 11e T 10monotonically decreases from  1t o  10. Thus, the pole of T(z) will be inside the unit circle, and the system will be stable if 0<T<0:2. In terms of frequency, where f1=T, the system will be stable as long as the sampling frequency is 1 =0:25 hertz or greater.C(s) R(s) + –Plant Hold T1– e–Ts s10 s + 1 FIGURE 13.15 Digital system for Example 13.7730 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:0 and its inverse, s dzb cz a 13.58  have been derived to yield linear variables in sandz. Different values of a,b,c, and dhave been derived for particular applications and yield various degrees of accuracy when comparing properties of the continuous and sampled functions. For example, in the next subsection we will see that a particular choice of coef ﬁcients will take points on the unit circle and map them into points on the jω-axis. Points outside the unit circle will be mapped into the right half-plane, and points inside the unit circle will bemapped into the left half-plane. Thus, we will be able to make a simple transformation fromthez-plane to the s-plane and obtain stability information about the digital system by working in the s-plane. Since the transformations are not exact, only the property for which they are designed can be relied upon. For the stability transformation just discussed, we cannot expect theresulting G(s) to have the same transient response as G(z). Another transformation will be covered that will retain that property. Digital System Stability via the s-Plane In this subsection, we look at a bilinear transformation that maps jω-axis points on the s-plane to unit-circle points on the z-plane. Further, the transformation maps right –half- plane points on the s-plane to points outside the unit circle on the z-plane. Finally, the transformation maps left –half-plane points on the s-plane to points inside the unit circle on thez-plane. Thus, we are able to transform the denominator of the pulsed transfer function, D(z), to the denominator of a continuous transfer function, D(s), and use the Routh-Hurwitz criterion to determine stability. The bilinear transformation sz1 z 1 13.59  and its inverse zs1 s 1 13.60  perform the required transformation ( Kuo,1995 ). We can show this fact as follows: Letting sαjωand substituting into Eq. (13.60), z α1jω α 1jω 13.61  from which jzjﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ α12ω2q ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ α 12ω2q 13.62  Thus, jzj<1 when α<0 (13.63a) jzj>1 when α>0 (13.63b)13.6 Stability 731WEBC13 10/28/2014 20:50:1 and jzj1 when α0 (13.63c) Let us look at an example that shows how the stability of sampled systems can be found using this bilinear transformation and the Routh-Hurwitz criterion. Example 13.8 Stability via Routh-HurwitzStability via Routh-Hurwitz PROBLEM: Given T zN z=D z,w h e r e D zz3 z2 0:2z0:1, use the Routh-Hurwitz criterion to ﬁnd the number of z-plane poles of T(z) inside, outside, and on the unit circle. Is the system stable? SOLUTION: Substitute Eq. (13.60) into D z0 and obtain3 s3 19s2 45s 170 13.64  The Routh table for Eq. (13.64), Table 13.3, shows one root in the right –half-plane and two roots in the left –half-plane. Hence, T(z) has one pole outside the unit circle, no poles on the unit circle, and two poles inside the unit circle. The system is unstable because of the pole outside the unit circle. TABLE 13.3 Routh table for Example 13.8 s31  45 s219  17 s1 45.89 0 s0 17 0 Skill-Assessment Exercise 13.5 PROBLEM: Determine the range of sampling interval, T, that will make the system shown in Figure 13.16 stable. ANSWER: 0<T<0:1022 second The complete solution is located at www.wiley.com/college/nise .C(s) R(s) + –Plant Hold T1–e–Ts s20 s + 5FIGURE 13.16 Digital system for Skill-Assessment Exercise 13.5 3Symbolic math software, such as MATLAB ’s Symbolic Math Toolbox, is recommended to reduce the labor required to perform the transformation.732 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:2 In this section, we covered the concepts of stability for digital systems. Both z- and s-plane perspectives were discussed. Using a bilinear transformation, we are able to use the Routh-Hurwitz criterion to determine stability. The highlight of the section is that sampling rate (along with system parameters, such as gain and component values) helps to determine or destroy the stability of a digital system. In general, if the sampling rate is too slow, the closed-loop digital system will be unstable.We now move from stability to steady-state errors, paralleling our previous discussion ofsteady-state errors in analog systems. 13.7 Steady-State Errors We now examine the effect of sampling upon the steady-state error for digital systems. Anygeneral conclusion about the steady-state error is dif ﬁcult because of the dependence of those conclusions upon the placement of the sampler in the loop. Remember that theposition of the sampler could change the open-loop transfer function. In the discussion ofanalog systems, there was only one open-loop transfer function, G(s), upon which the general theory of steady-state error was based and from which came the standard de ﬁnitions of static error constants. For digital systems, however, the placement of the sampler changes the open-loop transfer function and thus precludes any general conclusions. In this section, we assume the typical placement of the sampler after the error and in the position of thecascade controller, and we derive our conclusions accordingly about the steady-state error ofdigital systems. Consider the digital system in Figure 13.17( a), where the digital computer is represented by the sampler and zero-order hold. The transfer function of the plant isrepresented by G 1(s) and the transfer function of the z.o.h. by 1 e Ts=s. Letting G(s) equal the product of the z.o.h. and G1(s), and using the block diagram reduction techniques for sampled-data systems, we can ﬁnd the sampled error, E* sE z. Adding synchronous samplers at the input and the feedback, we obtain Figure 13.17( b). Pushing G(s) and its input sampler to the right past the pickoff point yields Figure 13.17( c). Using Figure 13.9( a), we can convert each block to its z-transform, resulting in Figure 13.17( d). From this ﬁgure, E zR z E zG z,o r E zR z 1G z 13.65  Theﬁnal value theorem for discrete signals states that e* ∞lim z®1 1 z 1E z 13.66 Skill-Assessment Exercise 13.6 PROBLEM: Given T zN z=D z, where D zz3 z2 0:5z0:3, use the Routh-Hurwitz criterion to ﬁnd the number of z-plane poles of T(z) inside, outside, and on the unit circle. Is the system stable? ANSWER: T(z) has one pole outside the unit circle, no poles on the unit circle, and two poles inside the unit circle. The system is unstable. The complete solution is located at www.wiley.com/college/nise .13.7 Steady-State Errors 733WEBC13 10/28/2014 20:50:2 where e* ∞is the ﬁnal sampled value of e(t), or (alternatively) the ﬁnal value of e(kT).4 Using the ﬁnal value theorem on Eq. (13.65), we ﬁnd that the sampled steady-state error, e* ∞, for unity negative-feedback systems is e* ∞lim z®1 1 z 1E zlim z®1 1 z 1R z 1G z 13.67  Equation (13.67) must now be evaluated for each input: step, ramp, and parabola. Unit Step Input For a unit step input, R s1=s. From Table 13.1, R zz z 1 13.68  Substituting Eq. (13.68) into Eq. (13.67), we have e* ∞1 1lim z®1G z 13.69 (b) C(s) R*(s)+ – TR(s) TG(s)C*(s) T T TG(s) (c) C(z) R(z) + –G(z) G(z) (d)C(s) R*(s)+ – TR(s) TG(s) T T(a)C(s) + – TR(s)G1(s)E*(s) E*(s) E*(s)1 – e–Ts s E*(s) E*(s) E(z) Note: Phantom sam plers are shown in color.C*(s) FIGURE 13.17 a.Digital feedback control system for evaluation of steady-state errors; b.phantom samplers added; c.pushing G(s) and its samplers to the right past the pickoff point; d.z-transform equivalent system 4SeeOgata (1987: 59 ) for a derivation.734 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:2 Deﬁning the static error constant, Kp,a s Kplim z®1G z 13.70  we rewrite Eq. (13.69) as e* ∞1 1Kp 13.71  Unit Ramp Input For a unit ramp input, R zTz= z 12. Following the procedure for the step input, you can derive the fact that e* ∞1 Kv 13.72  where Kv1 Tlim z®1 z 1G z 13.73  Unit Parabolic Input For a unit parabolic input, R zT2z= z1=2 z 13. Similarly, e* ∞1 Ka 13.74  where Ka1 T2lim z®1 z 12G z 13.75  Summary of Steady-State Errors The equations developed above for e* ∞,Kp,Kv, and Kaare similar to the equations developed for analog systems. Whereas multiple pole placement at the origin of the s-plane reduced steady-state errors to zero in the analog case, we can see that multiple pole placement at z1 reduces the steady-state error to zero for digital systems of the type discussed in this section. This conclusion makes sense when one considers that s0 maps intoz1 under zeTs. For example, for a step input, we see that if G(z) in Eq. (13.69) has one pole at z1, the limit will become in ﬁnite, and the steady-state error will reduce to zero. For a ramp input, if G(z) in Eq. (13.73) has two poles at z1, the limit will become inﬁnite, and the error will reduce to zero. Similar conclusions can be drawn for the parabolic input and Eq. (13.75). Here, G(z) needs three poles at z1 in order for the steady-state error to be zero. Let us look at an example.13.7 Steady-State Errors 735WEBC13 10/28/2014 20:50:3 Example 13.9 Finding Steady-State ErrorFinding Steady-State Error PROBLEM: For step, ramp, and parabolic inputs, ﬁnd the steady-state error for the feedback control system shown in Figure 13.17( a)i f G1 s10 s s1 13.76  SOLUTION: FirstﬁndG(s), the product of the z.o.h. and the plant. G s10 1 e Ts s2 s110 1 e Ts1 s2 1 s1 s1/C20/C21 13.77  Thez-transform is then G z10 1 z 1Tz z 12 z z 1z z e T/C20/C21 10T z 1 1z 1 z e T/C20/C21 13.78  For a step input, Kplim z®1G z∞;e* ∞1 1Kp0 13.79  For a ramp input, Kv1 Tlim z®1 z 1G z10;e* ∞1 Kv0:1 13.80  For a parabolic input, Ka1 T2lim z®1 z 12G z0;e* ∞1 Ka∞ 13.81  You will notice that the answers obtained are the same as the results obtained for the analog system. However, since stability depends upon the sampling interval, be sure to check the stability of the system after a sampling interval is established before makingsteady-state error calculations. Students who are using MATLAB should now run ch13p6 in Appendix B.You will learn how to use MATLAB to determine K p,Kv, and Kain a digital system as well as check the stability. This exercise sol-ves Example 13.9 using MATLAB. Skill-Assessment Exercise 13.7 PROBLEM: For step, ramp, and parabolic inputs, ﬁnd the steady-state error for the feedback control system shown in Figure 13.17( a)i f G1 s20 s3 s4 s5 LetT0:1 second. Repeat for T0:5 second. ANSWER: ForT0:1 second, Kp3;Kv0, and Ka0; for T0:5 second, the system is unstable. The complete solution is located at www.wiley.com/college/nise .736 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:4 In this section, we discussed and evaluated the steady-state error of digital systems for step, ramp, and parabolic inputs. The equations for steady-state error parallel those for analog systems. Even the de ﬁnitions of the static error constants were similar. Poles at the origin of the s-plane for analog systems were replaced with poles at +1 on the z-plane to improve the steady-state error. We continue our parallel discussion by moving into adiscussion of transient response and the root locus for digital systems. 13.8 Transient Response on the z-Plane Recall that for analog systems a transient response requirement was speci ﬁed by selecting a closed-loop, s-plane pole. In Chapter 8, the closed-loop pole was on the existing root locus, and the design consisted of a simple gain adjustment. If the closed-loop pole was not on the existing root locus, then a cascade compensator was designed to reshape the original root locus to go through the desired closed-loop pole. A gain adjustment then completedthe design. In the next two sections, we want to parallel the described analog methods and apply similar techniques to digital systems. For this introductory chapter, we will parallel thediscussion through design via gain adjustment. The design of compensation is left to you topursue in an advanced course. Chapter 4 established the relationships between transient response and the s-plane. We saw that vertical lines on the s-plane were lines of constant settling time, horizontal lines were lines of constant peak time, and radial lines were lines of constant percent overshoot.In order to draw equivalent conclusions on the z-plane, we now map those lines through ze sT. The vertical lines on the s-plane are lines of constant settling time and are character- ized by the equation sσ1jω, where the real part, σ1 4=Ts, is constant and is in the left–half-plane for stability. Substituting this into zesT, we obtain zeσ1TejωTr1ejωT 13.82  Equation (13.82) denotes concentric circles of radius r1.I fσ1is positive, the circle has a larger radius than the unit circle. On the other hand, if σ1is negative, the circle has a smaller radius than the unit circle. The circles of constant settling time, normalized to the sampling interval, are shown in Figure 13.18 with radius eσ1Te 4= Ts=T. Also, Ts=T 4=ln r, where ris the radius of the circle of constant settling time. The horizontal lines are lines of constant peak time. The lines are characterized by the equation sσjω1, where the imaginary part, ω1π=Tp, is constant. Substituting this intozesT, we obtain zeσTejω1TeσTejθ1 13.83  Equation (13.83) represents radial lines at an angle of θ1.I fσis negative, that section of the radial line lies inside the unit circle. If σis positive, that section of the radial line lies outside the unit circle. The lines of constant peak time normalized to the sampling interval are shown in Figure 13.18. The angle of each radial line is ω1Tθ1π= Tp=T, from which Tp=Tπ=θ1. Finally, we map the radial lines of the s-plane onto the z-plane. Remember, these radial lines are lines of constant percent overshoot on the s-plane. From Figure 13.19, these radial lines are represented by σ ω tan sin 1ζ ζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p 13.84 13.8 Transient Response on the z-Plane 737WEBC13 10/28/2014 20:50:4 Hence, sσjω ωζﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p jω 13.85  Transforming Eq. (13.85) to the z-plane yields zesTe ωTζ/ﬃﬃﬃﬃﬃﬃﬃ ﬃ 1 ζ2p/C0/C1 ejωTe ωTζ/ﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p/C0/C1 ωT 13.86  = 0.3 –0.4Im ReTp/T = 20Tp/T = 10Tp/T = 5 Tp/T = 7Tp/T = 4Tp/T = 3 z = 0 –1–1 Ts/T = 3 Ts/T = 5–0.2 –0.4 –0.6 –0.8Ts/T = 10 Ts/T = 201 0.8 0.6 0.4 0 0.2 –0.8 –0.2 = 0.5 = 0.7 = 0.1 –0.6 = 0.91 0.8 0.6 = 0.2 0.4 0.2 Ts/T = 2ζ ζζζ ζ ζ ζ FIGURE 13.18 Constant damping ratio, normalized settling time, and normalized peak time plots on the z-plane Constant percent overshoot linej s-plane σsin–1 cos–1ω s = σ + jω ζ ζ FIGURE 13.19 Thes-plane sketch of constant percentovershoot line738 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:4 Thus, given a desired damping ratio, ζ, Eq. (13.86) can be plotted on the z-plane through a range of ωTas shown in Figure 13.18. These curves can then be used as constant percent overshoot curves on the z-plane. This section has set the stage for the analysis and design of transient response for digital systems. In the next section, we apply the results to digital systems using the root locus. 13.9 Gain Design on the z-Plane In this section, we plot root loci and determine the gain required for stability aswell as the gain required to meet a transient response requirement. Since the open-loop and closed-loop transfer functions for the generic digital system shown inFigure 13.20 are identical to the continuous system except for a change invariables from stoz, we can use the same rules for plotting a root locus. However, from our previous discussion, the region of stability on the z-plane is within the unit circle and not the left half-plane. Thus, in order to determinestability, we must search for the intersection of the root locus with the unit circlerather than the imaginary axis. In the last section, we derived the curves of constant settling time, peak time, and damping ratio. In order to design a digital system for transient response, weﬁnd the intersection of the root locus with the appropriate curves as they appear on thez-plane in Figure 13.18. Let us look at the following example.R(z) –G(z) H(z)C(z) + FIGURE 13.20 Generic digital feedback control system Example 13.10 Stability Design via Root LocusStability Design via Root Locus PROBLEM: Sketch the root locus for the system shown in Figure 13.21. Also, determine the range of gain, K, for stability from the root locus plot. SOLUTION: Treat the system as if zwere s, and sketch the root locus. The result is shown in Figure 13.22. Using the root locus program discussed in Appendix H.2 at www.wiley.com/college/nise, search along the unit circle for 180 °.I d e n t i ﬁcation of the gain, K, at this point yields the range of gain for stability. Using the program, we ﬁnd that the intersection of the root locus with the unit circle is 1 60 °. The gain at this point is 0.5. Hence, the range of gain for stability is 0 <K<0:5. Students who are using MATLAB should now run ch13p7 in Appendix B. You will learn how to use MATLAB to plot a root locus on the z-plane as well as superimpose the unit circle. You will learn how to select interactively the intersection of the root locusand the unit circle to obtain the value of gain for stability.This exercise solves Example 13.10 using MATLAB.K(z + 1) (z – 1)(z – 0.5)+ –R(z) C(z) FIGURE 13.21 Digital feedback control for Example 13.1013.9 Gain Design on the z-Plane 739WEBC13 10/28/2014 20:50:5 In the next example, we design the value of gain, K, in Figure 13.21 to meet a transient response speci ﬁcation. The problem is handled similarly to the analog system design, where we found the gain at the point where the root locus crossed the speci ﬁed damping ratio, settling time, or peak time curve. In digital systems, these curves are as shown in Figure 13.18. In summary, then, draw the root locus of the digital system and superimposethe curves of Figure 13.18. Then ﬁnd out where the root locus intersects the desired damping ratio, settling time, or peak time curve and evaluate the gain at that point. In order to simplifythe calculations and obtain more accurate results, draw a radial line through the point where the root locus intersects the appropriate curve. Measure the angle of this line and use the root locus program in Appendix H.2 at www.wiley.com/college/nise to search along this radial line for the point of intersection with the root locus.–3.00 –1.50 0 1.50 3.00 –3.00–2.252.253.00 z-plane Unit circle Root locusReIm –0.750.75 –1.501.50 FIGURE 13.22 Root locus for the system of Figure 13.21 Example 13.11 Transient Response Design via Gain AdjustmentTransient Response Design via Gain Adjustment PROBLEM: For the system of Figure 13.21, ﬁnd the value of gain, K, to yield a damping ratio of 0.7. SOLUTION: Figure 13.23 shows the constant damping ratio curves superimposed over the root locus for the system as determined from the last example. Draw a radial line from the origin to the intersection of the root locus with the 0.7 damping ratio curve (a 16.62 ° line). The root locus program discussed in Appendix H.2 at www.wiley.com/college/nise can now be used to obtain the gain by searching along a 16.62 °line for 180 °, the intersection with the root locus. The results of the program show that the gain, K, is 0.0627 at 0:719j0:215, the point where the 0.7 damping ratio curve intersects the root locus.740 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:5 We can now check our design by ﬁnding the unit sampled step response of the system of Figure 13.21. Using our design, K0:0627, along with R zz= z 1,a sampled step input, we ﬁnd the sampled output to be C zR zG z 1G z0:0627 z20:0627 z z3 2:4373 z22z 0:5627 13.87  Performing the indicated division, we obtain the output valid at the sampling instants, as shown in Figure 13.24. Since the overshoot is approximately 5%, the requirement of a 0.7damping ratio has been met. You should remember, however, that the plot is valid only atinteger values of the sampling instants. Students who are using MATLAB should now run ch13p8 in Appendix B.You will learn how to use MATLAB to plot a root locus on the z-plane as well as superimpose a grid of damping ratio curves. You willlearn how to obtain the gain and a closed-loop step response of adigital system after interactively selecting the operating pointon the root locus. This exercise solves Example 13.11 using MATLAB.z-plane= 0.7Root locus 16.62° 0.1 0.3 0.5 0.9 1.1Im Re0.5 0.40.30.20.1 0 0.2 0.4 0.6 0.8 1.0 1.2 –0.1 –0.2 –0.3 –0.4 –0.51.3 0.7ζ FIGURE 13.23 Root locus for the system of Figure 13.21 with constant 0.7 damping ratio curve 0.1 00.20.30.40.50.60.70.80.9 1.01.1 0 2 4 6 8 1 01 21 41 61 82 0 Sampling instantc*(t) Note: Valid onl y at inte ger values of sam pling instantFIGURE 13.24 Sampled step response of the system of Figure 13.21 with K0:062713.9 Gain Design on the z-Plane 741WEBC13 10/28/2014 20:50:6 Simulink provides an alternative method of simulating digital systems to obtain the time response. Students who are performingthe MATLAB exercises and want to explore the added capability ofSimulink should now consult Appendix C, Simulink Tutorial. Exam-ple C.4 in the tutorial shows how to use Simulink to simulatedigital systems. MATLAB ’s LTI Viewer provides another method of simulating digital systems to obtain the time response. Students who are performingthe MATLAB exercises and want to explore the added capability ofMATLAB ’s LTI Viewer should now consult Appendix E at www.wiley .com/college/nise , which contains a tutorial on the LTI Viewer as well as some examples. One of the illustrative examples, ExampleE.5, ﬁnds the closed-loop step response of a digital system using the LTI Viewer. In this section, we used the root locus and gain adjustment to design the transient response of a digital system. This method suffers the same drawbacks as when it was appliedto analog systems; namely, if the root locus does not intersect a desired design point, then asimple gain adjustment will not accomplish the design objective. Techniques to designcompensation for digital systems can then be applied. 13.10 Cascade Compensation via the s-Plane In previous sections of this chapter, we anal yzed and designed digital systems directly in the z- d o m a i nu pt oa n di n c l u d i n gd e s i g nv i a gain adjustment. We are now ready to design digital compensators, such as those covered in Chapters 9 and 11. Rather thancontinuing on this path of design directly in the z-domain, we depart by covering analysis and design techniques that allow us to make use of previous chapters byd e s i g n i n go nt h e s-plane and then transforming our s-plane design to a digital implementation. We covered one aspect of s-plane analysis in Section 13.6, whereSkill-Assessment Exercise 13.8 PROBLEM: For the system of Figure 13.20 where H z1 and G zK z0:5 z 0:25 z 0:75 ﬁnd the value of gain, K, to yield a damping ratio of 0.5. ANSWER: K0:31 The complete solution is at www.wiley.com/college/nise .TryIt 13.3 Use MATLAB, the Control System Toolbox, and the following statements tosolve Skill-Assessment Exercise 13.8. Gz=zpk(  0.5, [0.25,0.75] ,... 1 ,[] ) rlocus(Gz) zgrid(0.5, [] ) [K,p] =rloc ﬁnd(Gz) Note: When the root locus appears, click on the intersection of the 0.5 dampingratio curve and the root locus to calculate the gain.742 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:6 we used a bilinear transformation to ana lyze stability. We now continue with s-plane analysis and design by applying i t to cascade compensator design. Direct design of compensators on the z-plane is left for a dedicate d course in digital control systems. Cascade Compensation In order to perform design in the s-plane and then convert the continuous compensator to a digital compensator, we need a bilinear transformation that will preserve, at the sampling instants, the response of the continuous compensator. The bilinear transformation coveredin Section 13.6 will not meet that requirement. A bilinear transformation that can beperformed with hand calculations and yields a digital transfer function whose outputresponse at the sampling instants is approximately the same as the equivalent analog transfer function is called the Tustin transformation . This transformation is used to transform the continuous compensator, G c(s), to the digital compensator, Gc(z). The Tustin transformation is given by5 s2 z 1 T z1 13.88  and its inverse by z s2 T/C18/C19 s 2 T/C18/C19 1T 2s 1 T 2s 13.89  As the sampling interval, T, gets smaller (higher sampling rate), the designed digital compensator ’s output yields a closer match to the analog compensator. If the sampling rate is not high enough, there is a discrepancy at higher frequencies between the digital and analog ﬁlters’frequency responses. Methods are available to correct the discrepancy, but they are beyond the scope of our discussion. The interested reader should investigate the topic of prewarping , covered in books dedicated to digital control and listed in the Bibliography at the end of this chapter. Astrom and Wittenmark (1984 ) have developed a guideline for selecting the sampling interval, T. Their conclusion is that the value of Tin seconds should be in the range 0:15=ωΦMto 0: 5=ωΦM, where ωΦMis the zero dB frequency (rad/s) of the magnitude frequency response curve for the cascaded analog compensator and plant. In the following example, we will design a compensator, Gc(s), to meet the required performance speci ﬁcations. We will then use the Tustin transformation to obtain the model for an equivalent digital controller. In the next section, we will show how to implement the digital controller. 5SeeOgata (1987: 315 –318) for a derivation.13.10 Cascade Compensation via the s-Plane 743WEBC13 10/28/2014 20:50:7 Example 13.12 Digital Cascade Compensator DesignDigital Cascade Compensator Design PROBLEM: For the digital control system of Figure 13.25(a ), where Gp s1 s s6 s10 13.90  design a digital lead compensator, Gc(z), as shown in Figure 13.25( c), so that the system will operate with 20% overshoot and a settling time of 1.1 seconds. Create your design in the s-domain and transform the compensator to the z-domain. SOLUTION: Using Figure 13.25( b), design a lead compensator using the techniques described in Chapter 9 or 11. The design was created as part of Example 9.6, where we found that the lead compensator was Gc s1977 s6 s29:1 13.91 Gc(z)Digital lead compensator (c)Gp(z)Plant with sample-and-hold + –R(z) E(z) C(z)Gc(s)Lead compensator (b)Gp(s)Plant + –R(s) E(s) C(s)D/A A/DDigital computerDigital controller (a)Gp(s)Plant + –R(s) E(s) C(s) FIGURE 13.25 a.Digital control system showing the digital computer performing compensation; b.continuous system used for design; c.transformed digital system744 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:7 Using Eqs. (13.90) and (13.91), we ﬁnd that the zero dB frequency, ωΦM, forGp(s)Gc(s)i s 5.8 rad/s. Using the guideline described by Astrom and Wittenmark (1984 ), the lowest value ofTshould be in the range 0 :15=ωΦM0:026 to 0 :5=ωΦM0:086 second. Let us use T0:01 second. Substituting Eq. (13.88) into Eq. (13.91) with T0:01 second yields Gc z1778 z 1674 z 0:746 13.92  The z-transform of the plant and zero-order hold, found by the method discussed in Section 13.4 with T0:01 second, is Gp z 1:60210 7z2 6:15610 7z 1:47810 7 z3 2:847z22:699z 0:8521 13.93  The time response in Figure 13.26 ( T0:01 s) shows that the compensated closed-loop system meets the transi ent response requirements. The ﬁgure also shows the response for a compensator designed wi th sampling times at the extremes of Astrom and Wittenmark’ s guideline. Students who are using MATLAB should now run ch13p9 in Appendix B. You will learn how to use MATLAB to design a digital lead compen- sator using the Tustin transformation. This exercise solves Example 13.12 using MATLAB. 1.4T = 0.086 s T = 0.026 s T = 0.01 s1.2 1 0.8c*(t) 0.6 0.40.2 0 0 0.5 1 Time (seconds) Note: Valid onl y at inte ger values of sam pling instant1.5 2 FIGURE 13.26 Closed-loop response for the compensated system of Example 13.12 showing effect of three different sampling frequencies13.10 Cascade Compensation via the s-Plane 745WEBC13 10/28/2014 20:50:8 Now that we have learned how to design a digital cascade compensator, Gc(z), the next section will teach us how to use the digital computer to implement it. 13.11 Implementing the Digital Compensator The controller, Gc(z), can be implemented directly via calculations within the digital computer in the forward path as shown in Figure 13.27. Let us now derive a numerical algorithm that the computer can use to emulate the compensator. We will ﬁnd an expression for the computer ’s sampled output, x* t, whose transforms are shown in Figure 13.27 as X(z). We will see that this expression can be used to program the digital computer to emulate the compensator. Consider a second-order compensator, Gc(z), Gc zX z E za3z3a2z2a1za0 b2z2b1zb0 13.94  Cross-multiplying, b2z2b1zb0X z a3z3a2z2a1za0E z 13.95  Solving for the term with the highest power of zoperating on the output, X(z), b2z2X z a3z3a2z2a1za0E z  b1zb0X z 13.96 Skill-Assessment Exercise 13.9 PROBLEM: In Example 11.3, a lead compensator was designed for a unity feedback system whose plant was G s100K s s36 s100 Thedesignspeci ﬁcationswereasfollows:percent overshoot =20%,peaktime =0.1second, andKv40. In order to meet the requirements, the design yielded K1440 and a lead compensator, Gc s2:38s25:3 s60:2 If the system is to be computer controlled, ﬁnd the digital controller, Gc(z). ANSWER: Gc z2:34z 0:975 z 0:9416;T0:001 second The complete solution is at www.wiley.com/college/nise . Gc(z) G(z)Plant with sample-and-holdComputer emulating compensator E(z) X(z) C(z)FIGURE 13.27 Block diagram showing computer emulation of a digital compensator746 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:8 Dividing by the coef ﬁcient of X(z) on the left-hand side of Eq. (13.96) yields X za3 b2za2 b2a1 b2z 1a0 b2z 2/C18/C19 E z b1 b2z 1b0 b2z 2/C18/C19 X z 13.97  Finally, taking the inverse z-transform, x* ta3 b2e* tTa2 b2e* ta1 b2e* t Ta0 b2e* t 2T  b1 b2x* t T b0 b2x* t 2T 13.98  We can see from this equation that the present sample of the compensator output, x* t,i sa function of future e* tT, present e* t,p a s t e* t T, and e* t 2Tsamples of e(t), along with past values of the output, x* t Tandx* t 2T. Obviously, if we are to physically realize this compensator, the output sample cannot be dependent upon future values of the input. Hence, to be physically realizable, a3must equal zero for the future value ofe(t) to be zero. We conclude that the numerator of the compensator ’s transfer function must be of equal or lower order than the denominator in order that the compensator bephysically realizable. Now assume that a 3does indeed equal zero. Equation (13.98) now becomes x* ta2 b2e* ta1 b2e* t Ta0 b2e* t 2T b1 b2x* t T b0 b2x* t 2T 13.99  Hence, the output sample is a function of current and past input samples of the input as wellas past samples of the output. Figure 13.28 shows the ﬂowchart of the compensator from which a program can be written for the digital computer. 7Theﬁgure shows that the compensator can be implemented by storing several successive values of the input andoutput. The output is then formed by a weighted linear combination of these storedvariables. Let us now look at a numerical example.Delay T secondse*(t) e*(t–T) Delay T seconds e*(t–2T)+ + ++ a0 b2a1 b2a2 b2 Delay T secondsx*(t) x*(t–T) Delay T seconds x*(t–2T)– – b0 b2b1 b2 FIGURE 13.28 Flowchart for a second-order digital compensator6 6Adapted from Chassing, R. Digital Signal Processing (New York: John Wiley & Sons, Inc., 1999), p. 137. 1999 John Wiley & Sons, Inc. 7For an excellent discussion on basic ﬂowcharts to represent digital compensators, including the representation shown in Figure 13.28 and alternative ﬂowcharts with half as many delays, see Chassaing (1999, pp. 135 –143).13.11 Implementing the Digital Compensator 747WEBC13 10/28/2014 20:50:9 Example 13.13 Digital Cascade Compensator ImplementationDigital Cascade Compensator Implementation PROBLEM: Develop a ﬂowchart for the digital compensator de ﬁned by Eq. (13.100). Gc zX z E zz0:5 z2 0:5z0:7 13.100  SOLUTION: Cross-multiply and obtain z2 0:5z0:7X z z0:5E z 13.101  Solve for the highest power of zoperating on the output, X(z), z2X z z0:5E z    0:5z0:7X z 13.102  Solving for X(z) on the left-hand side, X z z 10:5z 2E z    0:5z 10:7z 2X z 13.103  Implementing Eq. (13.103) with the ﬂowchart of Figure 13.29 completes the design. + ++ –– Delay T secondsDelay T secondsDelay T seconds Delay T secondse*(t) e*(t–T) x*(t–T) x*(t–2T )x*(t) e*(t–2T )1 0.5 0.7–0.5 FIGURE 13.29 Flowchart to implement8 Gc zz0:5 z2 0:5z0:7 Skill-Assessment Exercise 13.10 PROBLEM: Draw a ﬂowchart from which the compensator Gc z1899 z2 3761 z1861 z2 1:908z0:9075 can be programmed if the sampling interval is 0.1 second. ANSWER: The complete solution is at www.wiley.com/college/nise . 8Adapted from Chassing, R. Digital Signal Processing (New York: John Wiley & Sons, Inc., 1999), p. 137. 1999 John Wiley & Sons, Inc.748 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:11 In this section, we learned how to implement a digital compensator. The resulting ﬂowchart can serve as the design of a digital computer program for the computer in the loop. The design consists of delays that can be thought of as storage for each sampled value of input and output. The stored values are weighted and added. The engineer then canimplement the design with a computer program. In the next section, we will put together the concepts of this chapter as we apply the principles of digital control system design to our antenna azimuth control system. Case Studies Antenna Control: Transient Design via GainAntenna Control: Transient Design via Gain We now demonstrate the objectives of this chapter by turning to our ongoing antenna azimuth position control system. We will show where the computer is inserted in the loop,model the system, and design the gain to meet a transient response requirement. Later, we will design a digital cascade compensator. The computer will perform two functions in the loop. First, the computer will be used as the input device. It will receive digital signals from the keyboard in the form of commands, and digital signals from the output for closed-loop control. The keyboard willreplace the input potentiometer, and an analog-to-digital (A/D) converter along with aunity gain feedback transducer will replace the output potentiometer. Figure 13.30( a) shows the original analog system, and Figure 13.30( b) shows the system with the computer in the loop. Here the computer is receiving digital signals from two sources: (1) the input via the keyboard or other tracking commands and (2) the output via an A/D converter. The plant is receiving signals from the digital computer via a digital-to-analog (D/A) converter and the sample-and-hold. Figure 13.30( b) shows some simplifying assumptions we have made. The power ampli ﬁer’s pole is assumed to be far enough away from the motor ’s pole that we can represent the power ampli ﬁer as a pure gain equal to its dc gain of unity. Also, we have absorbed any preampli ﬁer and potentiometer gain in the computer and its associated D/A converter. PROBLEM: Design the gain for the antenna azimuth position control system shown in Figure 13.30( b) to yield a closed-loop damping ratio of 0.5. Assume a sampling interval ofT0:1 second. 0.64 K100 s + 1002.083 s(s + 1.71)0.1iPot PreampPower amp Motor & load Gears o Sample-and- hold0.1Power amp Motor & load Gears oA/Di12.083 s(s + 1.71) A/D(a) (b)+ – + –Computer & D/Aθθ θ θ FIGURE 13.30 Antenna control system: a.analog implementation; b.digital implementationCase Studies 749WEBC13 10/28/2014 20:50:13 SOLUTION: Modeling the System: Ourﬁrst objective is to model the system in the z-domain. The forward transfer function, G(s), which includes the sample-and-hold, power ampli ﬁer, motor and load, and the gears, is G s1 e Ts s0:2083 s sa0:2083 a 1 eTsa s2 sa 13.104  where a1:71, and T0:1. Since the z-transform of 1 e Tsis 1 z 1and, from Example 13.6, the z-transform of a=s2 sais za s2 sa/C26/C27 Tz z 12  1 e aTz a z 1 z e aT/C20/C21 13.105  thez-transform of the plant, G(z), is G z0:2083 a 1 z 1za s2 sa/C26/C27 0:2083 a2aT  1 e aTz 1 e aT aTe aT z 1 z e aT/C20/C21 13.106  Substituting the values for aandT, we obtain G z9:84610 4 z0:945 z 1 z 0:843 13.107  Figure 13.31 shows the computer and plant as part of the digital feedback control system. Designing for Transient Response: Now that the modeling in the z-domain is complete, we can begin to design the system for the required transient response. We superimpose the root locus over the constant damping ratio curves in the z-plane, as shown in Figure13.32.Alinedrawnfromtheorigintotheintersectionformsan8.58 °angle.Searching along this line for 180 °,w eﬁnd the intersection to be 0:915j0:138, with a loop gain, 9:84610 4K, of 0.0135. Hence, K13:71. Checking the design by ﬁnding the unit sampled step response of the closed-loop system yields the plot of Figure 13.33, which exhibits 20% overshoot ζ0:456. CHALLENGE: We now give you a case study to test your knowledge of this chapter ’s objectives: You are given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 2. Do the following: a.Convert the system into a digital system with T0:1 second. For the purposes of the conversion, assume that the potentiometers are replaced with unity gain transducers.Neglect power ampli ﬁer dynamics. b.Design the gain, K, for 16.3% overshoot. c.For your designed value of gain, ﬁnd the steady-state error for a unit ramp input. d. Repeat Part busing MATLAB. 9.846 × 10–4(z + 0.945) (z – 1)(z – 0.843)KComputer Plant = G(z) R(z) + –C(z) FIGURE 13.31 Analog antenna azimuth position control system converted to adigital system750 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:13 Antenna Control: Digital Cascade Compensator DesignAntenna Control: Digital Cascade Compensator Design PROBLEM: Design a digital lead compensator to reduce the settling time by a factor of 2.5 from that obtained for the antenna azimuth control system in the previous Case Study problem in this chapter. SOLUTION: Figure 13.34 shows a simpli ﬁed block diagram of the continuous system, neglecting power ampli ﬁer dynamics and assuming that the potentiometers are replaced with unity gain trans ducers as previously explained. We begin with an s-plane design. From Figure 13.33, the settling time is about 5 seconds. Thus, our design requirements are a settling time of 2 seconds and a damping ratio of 0.5. The natural frequency is ωn4= ζTs4 rad/s. The compensated dominant poles are located at  ζω njωnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ 1 ζ2p  2j3:464. Designing a lead compensator zero to cancel the plant pole on the s-plane at  1.71 yields a lead compensator pole at  4. Hence the lead compensator is given by Gc ss1:71 s4 13.108 0.2 0.4 0.6 0.8 1 –0.6–0.4–0.20.2z-plane Root locus = 0.5 8.58Im Re0.40.6 0 0ζ FIGURE 13.32 Root locus superimposed over constant damping ratio curve c*(t) 01 23 4 5 6 7800.20.40.60.811.2 Time (seconds) Note: Valid onl y at inte ger values of sam pling instant FIGURE 13.33 Sampled step response of the antenna azimuth position control system KGc(s)0.2083 s(s + 1.71)iLead compensator Plant o + –(s) (s)θ θ FIGURE 13.34 Simpli ﬁed block diagram of antenna azimuth control systemCase Studies 751WEBC13 10/28/2014 20:50:14 Using root locus to evaluate the gain, K, at the design point yields 0 :2083K16, or K76:81. We now select an appropriate sampling frequency as described in Section 13.10. Using the cascaded compensator, KG c s76:81 s1:71 s4 13.109  and plant, Gp s0:2083 s s1:71 13.110  the equivalent forward-path transfer function, Ge sKG c sGp s,i s Ge s16 s s4 13.111  The magnitude frequency response of Eq. (13.111) is 0 dB at 3.1 rad/s. Thus, from Section 13.10, the value of the sampling interval, T, should be in the range 0 :15=ωΦM 0:05 to 0 :5=ωΦM0:16 second. Let us choose a smaller value, say T0:025 second. Substituting Eq. (13.89) into Eq. (13.111), where T0:025, yields the digital compensator KG c z74:72z 71:59 z 0:9048 13.112  In order to simulate the digital system, we calculate the z-transform of the plant in Figure 13.34 in cascade with a zero-order sample-and-hold. The z-transform of the sampled plant is evaluated by the method discussed in Section 13.4 using T0:025. The result is Gp z6:41810 5z6:32710 5 z2 1:958z0:9582 13.113  The step response in Figure 13.35 shows approximately 20% overshoot and a settling time of 2.1 seconds for the closed-loop digital system. 0 0.5 1 1.5 Note: Valid onl y at inte ger values of sam pling instant 2 2.5 300.20.40.60.811.2 Time (seconds)*(t)θ FIGURE 13.35 Closed-loop digital step response for antenna control system with a leadcompensator752 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:14 Summary In this chapter, we covered the design of digital systems using classical methods. State-space techniques were not covered. However, you are encouraged to pursue this topic in a coursededicated to sampled-data control systems. We looked at the advantages of digital control systems. These systems can control numerous loops at reduced cost. System modi ﬁcations can be implemented with software changes rather than hardware changes. Typically, the digital computer is placed in the forward path preceding the plant. Digital-to-analog and analog-to-digital conversion is required within the system to ensurecompatibility of the analog and digital signals throughout the system. The digital computerin the loop is modeled as a sample-and-hold network along with any compensation thatit performs. Throughout the chapter, we saw direct parallels to the methods used for s-plane analysis of transients, steady-state errors, and the stability of analog systems. The parallel isWe conclude the design by obtaining a ﬂowchart for the digital compensator. Using Eq. (13.112), where we de ﬁneKG c zX z=E z, and cross-multiplying yields z 0:9048 X z 74:72z 71:59E z 13.114  Solving for the highest power of zoperating on X(z), zX z 74:72z 71:59E z0:9048 X z 13.115  Solving for X(z), X z 74:72 71:59z 1E z0:9048 z 1X z 13.116  Implementing Eq. (13.116) as a ﬂowchart yields Figure 13.36. CHALLENGE: You are now given a case study to test your knowledge of this chapter’ s objectives. You are given the antenna azimuth position control system shown on the front endpapers, Con ﬁguration 2. Replace the potentiometers with unity gain transducers, neglect power ampli ﬁer dynamics, and do the following: a.Design a digital lead compensator to yield 10% overshoot with a 1-second peak time.Design in the s-plane and use the Tustin transformation to specify and implement a digital compensator. Choose an appropriate sampling interval. b.Draw a ﬂowchart for your digital lead compensator. c. Repeat Part ausing MATLAB.+ ++ –e*(t–0.025) x*(t–0.025)e*(t) x*(t) Delay 0.025 second74.72 –71.59Delay 0.025 second –0.9048 FIGURE 13.36 Flowchart for digital lead compensator9 9Adapted from Chassing, R. Digital Signal Processing (New York: John Wiley & Sons, Inc., 1999), p. 137. 1999 John Wiley & Sons, Inc.Summary 753WEBC13 10/28/2014 20:50:15 made possible by the z-transform, which replaces the Laplace transform as the transform of choice for analyzing sampled-data systems. The z-transform allows us to represent sampled waveforms at the sampling instants. We can handle sampled systems as easily as continuous systems, including block diagram reduction, sinceboth signals and systems can be represented in the z-domain and manipulated algebraically. Complex systems can be re duced to a single block through techniques that parallel those used with the s-plane. Time responses can be obtained through division of the numerator by the denominat or without the partial -fraction expansion required in the s-domain. Digital systems analysis parallels the s-plane techniques in the area of stability. The unit circle becomes the boundary of stability, replacing the imaginary axis. We also found that the concepts of root locus and transient response are easily carried into the z-plane. The rules for sketching the root locus do not change. We can map points on thes-plane into points on the z-plane and attach transient response characteristics to the points. Evaluating a sampled-data system shows that the sampling rate, in addition to gainand load, determines the transient response. Cascade compensators also can be designed for digital systems. One method is to ﬁrst design the compensator on the s-plane or via frequency response techniques described in Chapters 9 and 11, respectively. Then the resulting design is transformed to a digitalcompensator using the Tustin transformation. Designing cascade compensation directly onthez-plane is an alternative method that can be used. However, these techniques are beyond the scope of this book. This introductory control systems course is now complete. You have learned how to analyze and design linear control systems using frequency-domain and state-spacetechniques. This course is only a beginning. You may consider furthering your study of control systems by taking advanced courses in digital, nonlinear, and optimal control, where you will learn new techniques for analyzing and designing classes of systems not covered inthis book. We hope we have whetted your appetite to continue your education in controlsystems engineering. Review Questions 1.Name two functions that the digital computer can perform when used with feedbackcontrol systems. 2.Name three advantages of using digital computers in the loop. 3.Name two important considerations in analog-to-digital conversion that yield errors. 4.Of what does the block diagram model for a computer consist? 5.What is the z-transform? 6.What does the inverse z-transform of a time waveform actually yield? 7.Name two methods of ﬁnding the inverse z-transform. 8.What method for ﬁnding the inverse z-transform yields a closed-form expression for the time function? 9.What method for ﬁnding the inverse z-transform immediately yields the values of the time waveform at the sampling instants? 10.In order to ﬁnd the z-transform of a G(s), what must be true of the input and the output? 11.If input R(z) to system G(z) yields output C(z), what is the nature of c(t)?754 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:15 12.I fat i m ew a v e f o r m , c(t), at the output of system G(z) is plotted using the inverse z-transform, and a typical second-order response with damping ratio =0.5 results, can we say that the system is stable? 13.What must exist in order for cascaded sampled-data systems to be represented by the product of their pulse transfer functions, G(z)? 14.Where is the region for stability on the z-plane? 15.What methods for ﬁnding the stability of digital systems can replace the Routh-Hurwitz criterion for analog systems? 16.To drive steady-state errors in analog systems to zero, a pole can be placed at the originof the s-plane. Where on the z-plane should a pole be placed to drive the steady-state error of a sampled system to zero? 17.How do the rules for sketching the root locus on the z-plane differ from those for sketching the root locus on the s-plane? 18.Given a point on the z-plane, how can one determine the associated percent overshoot, settling time, and peak time? 19.Given a desired percent overshoot and settling time, how can one tell which point on thez-plane is the design point? 20.Describe how digital compensators can be designed on the s-plane. 21.What characteristic is common between a cascade compensator designed on the s-plane and the digital compensator to which it is converted? Problems 1.Derive the z-transforms for the time functions listed below. Do not use any z-transform tables. Use the plan f t®f* t®F* s®F z, followed by converting F(z) into closed form making use of the fact that 1= 1 z 11z 1z 2z 3∙∙∙. Assume ideal sampling. [Section: 13.3] a.e atu t b.u(t) c.t2e atu t d.cosωtu t 2.Repeat all parts of Problem 1using MATLAB and MATLAB ’s Symbolic Math Toolbox. 3.For each F(z),ﬁnd f(kT) using partial-fraction expansion. [Section: 13.3] a.F zz z3 z5 z 0:4 z 0:6 z 0:8 b.F z z0:2 z0:4 z 0:1 z 0:5 z 0:9 c.F z z1 z0:3 z0:4 z z 0:2 z 0:5 z 0:74.Repeat all parts of Problem 3using MATLAB and MATLAB ’s Symbolic Math Toolbox. 5.For each F(z) in Problem 3, do the following: [Section: 13.3] a.Find f(kT) using the power series expansion. b.Check your results against your answers fromProblem 3. 6.Using partial-fraction expansion and Table 13.1, ﬁnd the z-transform for each G(s) shown below if T0:5 second. [Section: 13.3] a.G s s4 s2 s5 b.G s s1 s2 s s3 s4 c.G s20 s3 s26s25 d.G s15 s s1 s210s81Problems 755WEBC13 10/28/2014 20:50:16 7.Repeat all parts of Problem 6 using MATLAB and MATLAB ’s Symbolic Math Toolbox. 8.Find G zC z=R zf o re a c ho ft h eb l o c k diagrams shown in Figure P13.1 if T0:3 second. [Section: 13.4] 9.Find T zC z=R zfor each of the systems shown in Figure P13.2. [Section: 13.5]10.Find C(z) in general terms for the digital system shown in Figure P13.3. [Section: 13.5] 11.Find the closed-loop transfer function, T zC z=R z, for the system shown in Figure P13.4. [Section: 13.5] 12.Write a MATLAB program that can be used to ﬁnd the range of sampling time, T, for stability. The program will be used for systems of the 20 s(s + 5)Hold (a) 20 s(s + 5)Hold (b)1 (s + 3) 20 s(s + 5)Hold (c)1 (s + 3)HoldR(s) C(s) C(s) R(s) R(s) C(s) FIGURE P13.1 R(s)G1(s)+ –G2(s)C(s) (a)H(s)+ –R(s)G1(s)+ –G2(s)C(s) (b)H(s) FIGURE P13.2 G1(s)C(s) T H1(s) H2(s)T –+ –+ R(s) TG2(s) G3(s) G4(s)+ – H2(s) FIGURE P13.3 R(s) T5 Hold 3C(s) + –+ –1 s(s + 2)1 s FIGURE P13.4756 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:16 type represented in Figure P13.5 and should meet the following requirements: a.MATLAB will convert G1(s) cascaded with a sample-and-hold to G(z) . b.The program will calculate the z-plane roots of the closed-loop system for a range of Tand determine the value of T, if any, below which the system will be stable. MATLAB will display thisvalue of Talong with the z-plane poles of the closed-loop transfer function. Test the program on G 1 s20 s6 s1 s3 s4 s8 R(s) + – Sample- and-holdG1(s)C(s) FIGURE P13.5 13.Given the system in Figure P13.6, ﬁnd the range of sampling interval, T, that will keep the system stable. [Section: 13.6] R(s) + – THold1 s(s + 10)C(s) FIGURE P13.6 14.Find the range of gain, K, to make the system shown in Figure P13.7 stable. [Section: 13.6] R(s) + – T = 0.2Hold3K s(s + 4)C(s) FIGURE P13.7 15.Find the static error constants and the steady-state errorfor each of the digital systems shown in Figure P13.8 ifthe inputs are [Section: 13.7] a.u(t) b.tu(t) c. 1 2t2u tR(s) + – T = 0.5Hold1 s + 2C(s) System 1 R(s) + – T = 0.1Hold20 s(s + 2)C(s) System 2 R(z) + –T = 0.5C(z) System 3 R(z) + –T = 0.10.13(z + 1) (z – 1)(z – 0.74)C(z) System 41.28 z – 0.37 FIGURE P13.8 16.Write a MATLAB program that can be used to ﬁndKp,Kv, and Kafor digital systems. The program will beused for systems of the type representedin Figure P13.5. Test your program for G z0:04406 z3 0:03624 z2 0:03284 z0:02857 z4 3:394z34:29z2 2:393z0:4966 where G(z) is the pulse transfer func- tion for G1 sin cascade with the z.o.h. and T0:1 second. 17.For the digital system shown in Figure P13.5, whereG 1 sK= s1 s5,ﬁnd the value of Kto yield a 15% overshoot. Also ﬁnd the range of Kfor stability. Let T0:1 second. [Section: 13.9] 18.Use Simulink to simulate thestep response for the system ofProblem 17. Set the value of gain,K, to that designed in Problem 17 for 15% overshoot. Use MATLAB ’s LTI Viewer to deter mine the peak time andsettling time of the closed-loop stepresponse for System 4 in Figure P13.8.Problems 757WEBC13 10/28/2014 20:50:17 20.Write a MATLAB program that can be used to design the gain of a digital control system to meet a percentovershoot requirement. The programwill be used for systems of the typerepresented in Figure P13.5 and meet thefollowing requirements: a.The user will input the desired per-cent overshoot. b.MATLAB will convert G 1(s) cascaded with the sample-and-hold to G(z) . c.MATLAB will display the root locus on the z-plane along with an overlay of the percent overshoot curve. d.The user will click with the mouse at the intersection of the root locusand percent overshoot overlay andMATLAB will respond with the value ofgain followed by a display of the stepresponse of the closed-loop system. Apply your program to Problem 17 andcompare results. 21.For the digital system shown in Figure P13.5, where G 1 sK=s s1,ﬁnd the value of Kto yield a peak time of 2 seconds if the sampling interval, T, is 0.2 second. Also, ﬁnd the range of Kfor stability. [Section: 13.9] 22.For the digital system shown in Figure P13.5, whereG 1 sK=s s1 s3,ﬁnd the value of Kto yield a 20% overshoot if the sampling interval, T, is 0.1 second. Also, ﬁnd the range of Kfor stability. [Section: 13.9] 23.For the digital system shown in Figure P13.5, where G1 sK s2s s1 s3,ﬁnd the value of Kto yield a settling time of 15 seconds if the sampling interval, T, is 1 second. Also, ﬁnd the range of Kfor stability. [Section: 13.9] 24.A PID controller was designed in Example 9.5 for acontinuous system with unity feedback. The system ’s plant was G s s8 s3 s6 s10 The designed PID controller was Gc s4:6 s55:92 s0:5 sFind the digital transfer function, Gc(z), of the PID controller in order for the system to be computercontrolled if the sampling interval, T, is 0.005 second. [Section: 13.10] 25.A continuous unity feedback system has a forwardtransfer function of G s 1 s s5 s8 The system is to be computer controlled with thefollowing speci ﬁcations: Percent overshoot: 10%Settling time: 2 secondsSampling interval: 0 :01 second Design a lead compensator for the digital system tomeet the speci ﬁcations. [Section: 13.10] Repeat Problem 25 using MATLAB. 27.An inverted pendulum mounted on amotor-driven cart ( Prasad ,2012 ) was the subject of Problem 33, Chapter 9. In thatproblem you were asked to develop Simulink models fortwofeedbacksystems,oneofwhichwastocontrolthecartposition, x(t). At the recommended settings, the step response of that system was expected to satisfy thefollowing requirements: a steady-state error, e( ∞) <2%, a peak time, TP<1.2 seconds, and a percent overshoot, % OS<20.5%. Having concluded that the steady-state error was unacceptable, you designed a PIDcontroller and found its recommended settings. Digitize the Simulink model developed for PID control of the cart position in Part dof Problem 33, Chapter 9, by adding azero-order-holdsetto0.01second.Then, run a simulation to evaluate performance. DESIGN PROBLEMSDESIGN PROBLEMS a. Convert the heading control for the UFSS vehicle shown on the back endpapers ( Johnson ,1980 ) into a digitally controlled system. b.Find the closed-loop pulse transfer function, T(z), if T0:1 second. c.Find the range of heading gain to keep the digitalsystem stable. 29.The analog system of a disk drive is shown in Figure P13.9. Do the following: a.Convert the disk drive to a digital system. Use a sampling time of 0.01 second. b.Find the range of digital controller gain to keep thesystem stable.758 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:17 c.Find the value of digital controller gain to yield 15% overshoot for a digital step response. d.Repeat all previous parts andobtain the step response forPart cusing MATLAB. 30.In Problem 49, Chapter 9, and Problem 39, Chapter 10,we considered the radial pickup position control of a DVD player. A controller was designed and placed in cascade with the plant in a unit feedback con ﬁguration to stabilize the system. The controller was given by M s 0:5 s1:63 s s0:27 and the plant by ( Bittanti ,2002 ) P s0:63 10:36 305:4ss2 305:42/C18/C19 10:04 248:2ss2 248:22/C18/C19 It is desired to replace the continuous system by anequivalent discrete system without appreciably affectingthe system performance. a.Find an appropriate sampling frequency for thediscretization. b.Using the chosen sampling frequency, translate thecontinuous compensator into a discrete compensator. c. Use Simulink to simulatethe continuous and discretesystems on the same graph. Assume a unit step input. Are theresigniﬁ cant differences in the system ’s performance? 31.In Problem 24, Chapter 11, we discussed an EVAD, adevice that works in parallel with the human heart to helppump blood in patients with cardiac conditions. Thedevice has a transfer function G s Pao s Em s1361 s269s70:85 where Em(s)i st h em o t o r ’s armature voltage, and Pao(s) is the aortic blood pressure ( Tasch ,1990). Using continuous techniques, a cascaded compensator isdesigned in a unity feedback conﬁ g u r a t i o nw i t ha transfer function Gc s0:5 s1 s0:05 Selecting to control the device using a microcontroller, a discrete equivalent has to be found for Gc(s). Do the following: a.Find an appropriate sampling frequency for the discretization. b.Translate the continuous compensator into a discretecompensator using the sampling frequency foundin Part a. c. Use Simulink to simulatethe continuous and discretesystems on the same graph for a unitstep input. There should be little difference between the compensated continuous and discrete systems. 32.In Problem 47, Chapter 9, a steam-driven turbine-governor system was implemented by a unityfeedback system with a forward-path transfer function(Khodabakhshian ,2005 ) G s K s0:08 s2 s5 a.Use a sampling period of T0:5 s and ﬁnd a discrete equivalent for this system. b.Use MATLAB to draw the rootlocus. c.Find the value of Kthat will result in a stable system with a damping factor of ζ0:7. d.Use the root locus found in Part ato predict the step-response settling time, T s, and peak time, Tp. e.Calculatethe ﬁnalvalueoftheclosed-loopsystemunit step response. f.Obtain the step response of the system using Simulink. Verify the predictions you made in Parts c andd. 33.Discrete time controlled systems can exhibit uniquecharacteristics not available in continuous control-lers. For example, assuming a speci ﬁc input and some conditions, it is possible to design a system to achievesteady state within one single time sample withoutovershoot. This scheme is well known and referredto as deadbeat control . We illustrate deadbeat control design with a simple example. For a morecomprehensive treatment see ( Ogata ,1987 ).s(s + 100)–XD(s) + YA(s)20,000Desired positionMotor and loadActualposition FIGURE P13.9 Simpli ﬁed block diagram of a ﬂoppy disk driveProblems 759WEBC13 10/28/2014 20:50:18 Assume in Figure 13.25( a) that Gp s1 s1. The purpose of the design will be to ﬁnd a compensator, Gc z, such that for a step input the system achieves steady state within one sample. We start by translating the system into the discrete domain to obtain theequivalent of Figure 13.25( c). The pulse transfer func- tion, G p z 1 e Tz 1 1 e Tz 1, is found using Eq. (13.40), since it is assumed that the compensator will befollowed by a zero-order hold. In Figure 13.25( c), the closed-loop transfer function is given by C z R zT zGc zGp z 1Gc zGp z, or, solving for the com- pensator, we get Gc z1 Gp zT z 1 T z. The desired system output is a unit step delayed by one unit sample. Thus, C zz z 1z 11 z 1. Since the input is a unit step, R zz z 1; the desired closed-loop transfer function isC z R zT zz 1, and the resulting compensator, found by direct substitution, is given by Gc z1 1 e T z e T z 1. Assume now that the plant is given by Gp s1 s, and a sampling period of T=0.05 second is used. a.Design a deadbeat compensator to reach steady state within one time sample for a step input. b.Calculate the resulting steady-state error for a unit-slope ramp input. c.Simulate your system usingSIMULINK. (Hint: FollowingFigure 13.25, the forward path willconsist of the cascading of G C(z), a zero-order hold, and Gp(s).) Show that the system reaches steady stateafter one sample. Also verify yoursteady-state error ramp result. Given G s8 s4 Use the LabVIEW Control Design andSimulation Module to (1) convert G(s) to a digital transfer function usinga sampling rate of 0.25 second; and(2) plot the step responses of thediscrete and the continuous transferfunctions.35. Given G zK z0:5 z 0:25 z 0:75 Use the LabVIEW Control Designand Simulation Module and theMathScript RT Module to (1) obtain thevalue of Kthat will yield a damping ratio of 0.5 for the closed-loop systemin Figure 13.20, where H(z)=1; and (2) display the step response of theclosed-loop system in Figure 13.20 where H(z)=1. Compare your results with those of Skill-Assessment Exercise 13.8. 36.Obtaining an exact shape in metalforming can be tricky because of material springback. A feedback system hasbeen devised in which critical deviations from speci ﬁca- tions are measured as soon as a part is formed and automatic incremental corrections to the forming tools are made before the next part is formed. Eventually thesystem compensates for material springback and resultsin parts compliant with speci ﬁcations. A unity-feedback digital system with a forward path G z k z 1 can be used as a simpli ﬁed representation of the system (Fu,2013 ). a.Make a sketch of the system ’s root locus. b.Find the range of kfor which the system is closed- loop stable. c.Find the system ’s steady-state error for a step input. d.Find the value of kthat will result in the fastest possible response. 37.The purpose of an arti ﬁcial pacemaker is to regulate heart rate in those patients in which the natural feedbacksystem malfunctions. Assume a unity-feedback systemwith a forward path, G s 1352 k s s8 s20 as a simpli ﬁed model of a pacemaker ( Neogi ,2010 ). a.Convert the pacemaker model to a discrete systemwith a sampling rate of 0.01 second. b.Draw the root locus of the system using a computerprogram. c.Use the root locus in Part btoﬁnd the range of k for which the system is closed-loop stable. d.Use the root locus from Part btoﬁnd the value of k that will yield a 5% overshoot for a step input. e.Simulatetheunit-stepinputofyourdiscretizedsystem to verify your design.760 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:19 38.A linear model of the α-subsystem of a grid-connected voltage-source converter with a Y-Y transformer (Mahmood ,2012 ) was presented in Problem 69, Chapter 8, and Problem 51, Chapter 10. The systemwas represented with unity-feedback and a forwardpath consisting of the cascading of a compensator anda plant. The plant is given by G P sVα s Mα s s2200  s220 s2120s16106 This system is now to be digitally controlled with the following speci ﬁcations: percent overshoot, %OS=10%; settling time, TS=0.1 second; and sampling interval, T=0.001 second. Design a lead compensator for that system to meet these speci ﬁca- tions. [Section: 13.10] PROGRESSIVE ANALYSIS AND DESIGN PROBLEMSPROGRESSIVE ANALYSIS AND DESIGN PROBLEMS Control of HIV/AIDS. In Chapter 11, a continuous cascaded compensator for a unity feedback system was designed for the treatment of the HIV-infected patient treated with RTIs ( Craig ,2004 ). The transfer function of the designed compensator was Gc s 210 4 s20:04s0:0048  s s0:02 The linearized plant was given by P sY s U1 s 520s 10:3844 s32:6817 s20:11s0:0126 The compensated system is overdamped with an approx-imate settling time of 100 seconds. This system must bediscretized for practical reasons: (1) HIV patient cannotbe monitored continuously and (2) medicine dosage cannot be adjusted continuously. a.Show that a reasonable sampling period for thissystem is T8 days (medicine dosage will be updated on a weekly basis). b.Use Tustin ’s method and T8 days to ﬁnd a discrete equivalent to G c(s). c.Use Simulink to simulate the continuous and discretecompensated systems for a unit stepinput. Plot both responses on the samegraph. Hybrid vehicle. In Problem 67, Chapter 7 (Figure P7.31), the block diagram of acascade scheme for the speed control of anHEV ( Preitl, 2007 ) was represented as a unity feedback system. In that diagram the output of the system is thespeed transducer ’s output voltage, C sK ssV s.I n Partbof Problem 33, Chapter 11, where a compensator was designed for this problem, we discussed thefeasibility of achieving full pole-zero cancellationwhen we place a PI speed controller ’s zero, Z I, on top of the uncompensated system’ s real pole, closest to the origin(locatedat  0.0163).Notingthatperfectpole-zero cancellation may not be maintained, we studied a casewhere the PI-controller ’s zero changed by +20%, moving to  0.01304. In that case, the transfer function of the plant with a PI speed controller, which has aproportional gain =K, was given by G s K s0:6 s0:01304  s s0:0163  s0:5858  Assuming that G1 sin Figure P13.5 equals the transfer function, G(s), given above for the vehicle with the speed controller: a.Develop a MATLAB M- ﬁle that would allow you to do the following: (Hint:Refer to the M- ﬁles you developed for Problems 12 and 20 of this chapter) (1) Convert G 1(s) cascaded with a sample-and-hold to G(z) ; (2) Search over the range 0 <T<5 sec- onds for the largest sampling periodT maxbelow which the system is sta- ble. Calculate the z-plane roots of the closed-loop system for the wholerange of the sampling time, T. Sub- sequently set T0:75T max; (3) Design the gain of a digital con- trol system to meet a percent over-shoot requirement, % OS, allowing the user to input the value of thedesired % OSand the value of the PI speed controller ’s proportional gain, K; (4) Plot the step response of that dig- ital system (in per unit, p. u., vs.time in seconds) . b.Run the M- ﬁle you developed in Part a and enter the values of the desiredpercent overshoot, % OS=0, and the PI speed controller ’s proportional gain, K=61; c.Select a point in the graphics windowdisplaying the root locus, such thatProblems 761WEBC13 10/28/2014 20:50:19 Cyber Exploration Laboratory Experiment 13.1 Objectives To design the gain of a digital control system to meet a transient response requirement; to simulate a digital control system to test a design; to see the effect of sampling rate upon the time response of a digital system Minimum Required Software Packages MATLAB, Simulink, and the Control System Toolbox Prelab 1.Given the antenna azimuth control system shown on the front endpapers, useConﬁguration 2 to ﬁnd the discrete transfer function of the plant. Neglect the dynamics of the power ampli ﬁer and include the preampli ﬁer, motor, gears, and load. Assume a zero-order hold and a sampling interval of 0.01 second. 2.Using the digital plant found in Prelab 1, ﬁnd the preampli ﬁer gain required for a closed- loop digital system response with 10% overshoot and a sampling interval of 0.01 second. What is the peak time? 3.Given the antenna azimuth control system shown on the front endpapers, use Conﬁ g u r a t i o n2t oﬁ nd the preampli ﬁer gain required for the continuous system to yield a closed-loop step response with 10% overshoot. Consider the open-loop systemto be the preampliﬁ er, motor, gears, and load. Neglect the dynamics of the power ampli ﬁer. Lab 1.Verify your value of preampli ﬁe rg a i nf o u n di nP r e l a b2u s i n gt h eS I S OD e s i g n Tool to generate the root locus for the digital open-loop transfer function found inPrelab 1. Use the Design Constraints capab ility to generate the 10% overshoot curve and place your closed-loop poles at this boundary. Obtain a plot of the root locus andthe design boundary. Record the value of gain for 10% overshoot. Also, obtain a plotall poles of the closed-loop transfer function, T z, are inside the unit circle. d.Write the sampled-data transfer functions obtained, Gzand Tz, indi- cating the corresponding value ofthe sampling time, T, and all poles, r, of the closed-loop transfer func- tion, T z; e.Plot the step response of that digitalsystem (in per unit, p. u., vs. time in seconds) noting the following charac- teristics: ﬁnal value, rise time, and settling time. Parabolic trough collector. In Problem 34, Chapter 11, a zero steady-state error for a unit-step input wasachieved through the design of a lag compensator with integral control. In that problem, the open-loop trans- mission can be written as L sG c sG s, where theparabolic trough plant is given by ( Camacho, 2012 ) G s137:210 6 s20:0224 s19610 6e 39s and the lag compensator is given by Gc s1:12 s0:01 s We want to substitute for the continuous com- pensator with a digital one. a.Find a suitable sampling period for the system. b.Find the equivalent compensator ’s transfer function inz-domain. c.Use Simulink to simulate thedigital compensator with thecontinuous plant. Compare the result-ing response with that of the originalsystem using the continuous compensa-tor on the same graph.762 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:19 of the closed-loop step response using the LTI Viewer and record the values of percent overshoot and peak time. Use the same tool to ﬁnd the range of gain for stability. 2.Using Simulink, set up the closed-loop digital system whose plant was found in Prelab 1. Make two diagrams: one with the digital transfer function for the plant and another usingthe continuous transfer function for the plant preceded by a zero-order sample-and-hold. Use the same step input for both diagrams and obtain the step response of each. Measure the percent overshoot and peak time. 3.Using Simulink, set up both the digital and continuous systems calculated in Prelab 2and Prelab 3, respectively, to yield 10% overshoot. Build the digital system with asample-and-hold rather than the z-transform function. Plot the step response of each system and record the percent overshoot and the peak time. 4.For one of the digital systems built in Lab 2, vary the sampling interval and record theresponses for a few values of sampling interval above 0.01 second. Record samplinginterval, percent overshoot, and peak time. Also, ﬁnd the value of sampling interval that makes the system unstable. Postlab 1.Make a table containing the percent overshoot, peak time, and gain for each of thefollowing closed-loop responses: the digital system using the SISO Design Tool; thedigital system using Simulink and the digital transfer functions; the digital system usingSimulink and the continuous transfer functions with the zero-order sample-and-hold;and the continuous system using Simulink. 2.Using the data from Lab 4, make a table containing sampling interval, percent overshoot,and peak time. Also, state the sampling interval that makes the system unstable. 3.Compare the responses of all of the digital systems with a sampling interval of 0.01second and the continuous system. Explain any discrepancies. 4.Compare the responses of the digital system at different sampling intervals with thecontinuous system. Explain the differences. 5.Draw some conclusions about the effect of sampling. Experiment 13.2 Objective To use the various functions from the LabVIEW Control Design and Simulation Module for the analysis of digital control systems. Minimum Required Software Packages LabVIEW with the Control Design and Simulation Module and the MathScript RT Module; MATLAB with the Control Systems Toolbox. Prelab You are given Figure P8.22 and the parameters listed in the Prelab of Cyber Exploration Laboratory Experiment 8.2 for the open-loop NASA eight-axis ARMII(Advanced Research Manipulator II) electromechanical shoulder joint/link, actuated byan armature-controlled dc servomotor. 1.Obtain the open-loop transfer function of the shoulder joint/link, G s θL s Vref s, or use your calculation from Cyber Exploration Laboratory Experiment 8.2. 2.Use MATLAB and design a digital compensator to yield a closed-loop response with zero steady-state error and a damping ratio of 0.7. If you already have performed Cyber Exploration Laboratory Experiment 8.2, modify your M- ﬁle from that experiment. Test your design using MATLAB.Cyber Exploration Laboratory 763WEBC13 10/28/2014 20:50:19 Bibliography Astrom, K. J., and Wittenmark, B. Computer Controlled Systems . Prentice Hall, Upper Saddle River, NJ, 1984. Bittanti, S., Dell ’Orto, F., Di Carlo, A., and Savaresi, S. M. Notch Filtering and Multirate Control for Radial Tracking in High Speed DVD-Players. IEEE Transactions on Consumer Electronics, vol. 48, 2002, pp. 56 –62. Boyd, M., and Yingst, J. C. PC-Based Operator Control Station Simpli ﬁes Process, Saves Time. Chilton ’sI&C S , September 1988, pp. 99 –101. Camacho, E. F., Berenguel, M., Rubio, F. R., and Martinez, D. Control of Solar Energy Systems . Springer-Verlag, London, 2012. Chassaing, R. Digital Signal Processing . Wiley, New York, 1999. Craig, I. K., Xia, X., and Venter, J. W. Introducing HIV/AIDS Education into the Electrical Engineering Curriculum at the University of Pretoria. IEEE Transactions on Education , vol. 47, no. 1, February 2004, pp. 65 –73. Craig, J. J. Introduction to Robotics .Mechanics and Control , 3d ed. Prentice Hall, Upper Saddle River, NJ, 2005. Fu, Z., Mo, J., Han, F., and Gong, P. Tool path correction algorithm for single-point incremental forming of sheet metal. Int. J. Adv. Manuf. Technol. , vol. 64, 2013, Springer, pp. 1239 –1248. Hostetter, G. H. Digital Control System Design . Holt, Rinehart & Winston, New York, 1988. Johnson, H. et al. Unmanned Free-Swimming Submersible (UFSS) System Description. NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C., 1980. Katz, P. Digital Control Using Microprocessors . Prentice Hall, Upper Saddle River, NJ, 1981. Khodabakhshian, A., and Golbon, N. Design of a New Load Frequency PID Controller Using QFT. Proceedings of the 13th Mediterranean Conference on Control and Automation , 2005, pp. 970– 975. Kuo, B. C. Automatic Control Systems , 7th ed. Prentice Hall, Upper Saddle River, NJ, 1995. Kuo, B. C. Digital Control Systems . Holt, Rinehart & Winston, New York, 1980. Mahmood, H., and Jiang, J. Modeling and Control System Design of a Grid Connected VSC Considering the Effect of the Interface Transformer Type. IEEE Transactions on Smart Grid, vol. 3, no. 1, March 2012, pp. 122 –134. Neogi, B., Ghosh, R., Tarafdar, U., and Das, A. Simulation Aspect of an Artiﬁ cial Pacemaker. International Journal of Information Technology and Knowledge Management , vol. 3, no. 2, 2010, pp. 723 –727. Nyzen, R. J. Analysis and Control of an Eight-Degree-of-Freedom Manipulator , Ohio University Masters Thesis, Mechanical Engineering, Dr. Robert L. Williams II, Advisor, August 1999. Ogata, K. Discrete-Time Control Systems . Prentice Hall, Upper Saddle River, NJ, 1987. Phillips, C. L., and Nagle, H. T. Jr. Digital Control System Analysis and Design . Prentice Hall, Upper Saddle River, NJ, 1984. Prasad, L., Tyagi, B., and Gupta, H. Modeling & Simulation for Optimal Control of Nonlinear Inverted Pendulum Dynamical System using PID Controller and LQR. IEEE Computer Society Sixth Asia Modeling Symposium , 2012, pp. 138 –143.Lab Simulate your Prelab design using a Simulation Loop from the LabVIEW Control Design and Simulation Module. Plot the step response of two loops as follows: (1) a unity feedback with the forward path consisting of the continuous system transfer functionpreceded by a zero-order hold, and (2) a unity feedback with the forward path consisting ofthe equivalent discrete transfer function of your compensator in cascade with the open-loopplant. Postlab Compare the results obtained with those from your prelab MATLAB program. Comment on time-performance speci ﬁcations.764 Chapter 13 Digital Control SystemsWEBC13 10/28/2014 20:50:19 Preitl, Z., Bauer, P., and Bokor, J. A Simple Control Solution for Traction Motor Used in Hybrid Vehicles. 4th International Symposium on Applied Computational Intelligence and Informatics . IEEE, 2007, pp. 157 –162. Smith, C. L. Digital Computer Process Control . Intext Educational Publishers, NY, 1972. Tasch, U., Koontz, J. W., Ignatoski, M. A., and Geselowitz, D. B. An Adaptive Aortic Pressure Observer for the Penn State Electric Ventricular Assist Device. IEEE Transactions on Biomedical Engineering , vol. 37, 1990, pp. 374 –383. Tou, J. Digital and Sampled-Data Control Systems . McGraw-Hill, New York, 1959. Williams, R. L. II. Local Performance Optimization for a Class of Redundant Eight-Degree-of- Freedom Manipulators. NASA Technical Paper 3417 , NASA Langley Research Center, Hampton VA, March 1994.Bibliography 765WEBC13 10/28/2014 20:50:19 Page 766WEBBAPPA 10/29/2014 10:13:13 Appendix A: List of Symbols %OS Percent overshoot A Ampere —unit of electrical current A System matrix for state-space representation am Motor time constant B Mechanical rotational coef ﬁcient of viscous friction in N-m-s/rad B Input matrix for state-space representation C Electrical capacitance in farads C Output matrix for state-space representation C(s) Laplace transform of the output of a system c(t) Output of a system CM Controllability matrix D Mechanical rotational coef ﬁcient of viscous friction in N-m-s/rad D Feedforward matrix for state-space representation Da Motor armature coef ﬁcient of viscous damping in N-m-s/rad Dm Total coef ﬁcient of viscous friction at the armature of a motor, including armature coefﬁcient of viscous friction and reﬂ ected load coef ﬁcient of viscous friction in N-m-s/rad E Energy E(s) Laplace transform of the error e(t) Error; electrical voltage Ea s Laplace transform of the motor armature input voltage; Laplace transform of the actuating signal ea t Motor armature input voltage; actuating signal F Farad —unit of electrical capacitance F(s) Laplace transform of f(t) f(t) Mechanical force in newtons; general time function fv Mechanical translational coef ﬁcient of viscous friction g Acceleration due to gravity G Electrical conductance in mhos G(s) Forward-path transfer function Gc s Compensator transfer function Gc z Sampled transfer function for a compensator 767WEBBAPPA 10/29/2014 10:13:13 GM Gain margin Gp z Sampled transfer function for a plant H Henry—unit of electrical inductance H(s) Feedback-path transfer function I Identity matrix i(t) Electrical current in amperes J Moment of inertia in kg-m2 Ja Motor armature moment of inertia in kg-m2 Jm Total moment of inertia at the armature of a motor, including armature moment of inertia and reﬂ ected load moment of inertia in kg-m2 K Controller gain matrix K Mechanical translational spr ing constant in N/m or rotational spring constant in N-m/rad; ampli ﬁer gain; residue k Controller feedback gain; running index Ka Acceleration constant Kb Back emf constant in V/rad/s Kf Feedback gain kg Kilogram newton seconds2=meter—unit of mass kg-m2Kilogram meters2newton-meters seconds2/radian—unit of moment of inertia Km Motor gain Kp Position constant Kt Motor torque constant relating developed torque to armature current in N-m/A Kv Velocity constant L Electrical inductance in henries L Observer gain matrix l Observer feedback gain M Mass in kilograms; slope of the root locus asymptotes m Meter—unit of mechanical translational displacement M ω Magnitude of a sinusoidal response m/s Meters/second —unit of mechanical translational velocity MP Peak magnitude of the sinusoidal magnitude response N Newton —unit of mechanical translational force in kilogram meters/second2 N-s/m Newton-seconds/meter —unit of mechanical translational coef ﬁcient of viscous friction n System type N/m Newton/meter —unit of mechanical translational spring constant N-m Newton-meter —unit of mechanical torque N-m-s/ radNewton-meter-seconds/radian— unit of mechanical rotational coef ﬁcient of viscous friction N-m/A Newton-meter/ampere —unit of motor torque constant N-m/rad Newton-meter/radian —unit of mechanical rotational spring constant OM Observability matrix P Similarity transformation matrix pc Compensator pole Q Coulomb —unit of electrical charge q(t) Electrical charge in coulombs R Electrical resistance in ohms768 Appendix A: List of SymbolsWEBBAPPA 10/29/2014 10:13:13 R(s) Laplace transform of the input to a system r Nonlinear electrical resistance r(t) Input to a system Ra Motor armature resistance in ohms rad Radian —unit of angular displacement rad/s Radian/second —unit of angular velocity s Second —unit of time s Complex variable for the Laplace transform SF:P Sensitivity of Fto a fractional change in P T Time constant; sampling interval for digital signals T(s) Closed-loop transfer function; Laplace transform of mechanical torque T(t) Mechanical torque in N-m Tm(t) Torque at the armature developed by a motor in N-m Tm(s) Laplace transform of the torque at the armature developed by a motor Tp Peak time in seconds Tr Rise time in seconds Ts Settling time in seconds Tw Pulse width in seconds u Input or control vector for state-space representation u Input control signal for state-space representation u(t) Unit step input V-s/rad Volt-seconds/radian —unit of motor back emf constant v(t) Mechanical translation velocity in m/s; electrical voltage vb(t) Motor back emf in volts ve(t) Error voltage vp(t) Power ampli ﬁer input in volts x State vector for state-space representation x(t) Mechanical translation displacement in meters; a state variable _x Time derivative of a state variable _x Time derivative of the state vector y Output vector for state-space representation y(t) Output scalar for state-space representation z Complex variable for the z-transform zc Compensator zero α Pole-scaling factor for a lag compensator, where α>1; angle of attack β Pole-scaling factor for a lead compensator, where β<1 γ Pole-scaling factor for a lag-lead compensator, where γ>1 δ Thrust angle ζ Damping ratio θ Angle of a vector with the positive extension of the real axis θ t Angular displacement θa Angle of a root locus asymptote with the positive extension of the real axis θc Angular contribution of a compensator on the s-plane θm t Angular displacement of the armature of a motor λ Eigenvalue of a square matrixAppendix A: List of Symbols 769WEBBAPPA 10/29/2014 10:13:13 σ Real part of the Laplace transform variable, s σa Real-axis intercept of the root locus asymptotes ΦM Phase margin Φ t State transition matrix ϕ Sinusoidal phase angle; body angle ϕc Sinusoidal phase angle of a compensator ϕmax Maximum sinusoidal phase angle Ω Ohm—unit of electrical resistance ℧ Mho—unit of electrical conductance ω Imaginary part of the Laplace transform variable, s ω t Angular velocity in rad/s ωBW Bandwidth in rad/s ωd Damped frequency of oscillation in rad/s ωΦM Phase-margin frequency in radians ωGM Gain-margin frequency in radians ωn Natural frequency in rad/s ωp Peak-magnitude frequency of the magnitude frequency response in rad/s770 Appendix A: List of SymbolsWEBBAPPB 10/29/2014 9:25:0 Appendix B: MATLAB Tutorial B.1 Introduction MATLAB is a high-level technical computing environment suitable for solving scienti ﬁc and engineering problems. When used with routines from its companion software, the Control System Toolbox, MATLAB can be used to analyze and design control systemsproblems such as those covered in this textbook. MATLAB and the Control SystemToolbox are commercial software products available from MathWorks, Inc., 3 Apple HillDrive, Natick, MA 01760-2098. Phone: (508) 647-7000. Email: info@mathworks.com. URL: www.mathworks.com . The MATLAB examples in this tutorial consist of solved problems that demonstrate the application of MATLAB to the analysis and design of control systems. Many problemswere taken from examples in the text (identi ﬁed with a MATLAB icon) that were solved without MATLAB. A Command Summary at the end of this appendix lists key MATLABstatements and their descriptions. The code in this tutorial is also available in the Control Systems Engineering Toolbox folder at www.wiley.com/college/nise and at www.mathworks.co m/matlabcentral/ ﬁleexchange . You should have MATLAB Version 8.3 (R2014a) and the Control System Toolbox Version 9.7installed on your machine to execute this appendix ’s code in the Control Systems Engineering Toolbox Version 7. To run the M- ﬁles, ﬁrst be sure the ﬁles are either added to the search path in Set Path under the HOME tab in the ENVIRONMENT section or appear in the Current Folder window, which is part of the MATLAB window. To see the computer responses after installing the M- ﬁles, run each problem by typing the M-ﬁ le name, such as ch2p1, after the prompt >>in the Command Window. You may also run the ﬁles by right-clicking the ﬁle name, if it appears in the Current Folder window, and select Run. To view all or part of the M- ﬁle in the Command Window, enter “type<ﬁle name >” or“help<ﬁle name >,”respectively, after the prompt. You may also view and make changes to the M- ﬁle by double-clicking the ﬁle in the Current Folder window. This action brings up the editor. After editing, be sure to save the revised ﬁle before executing. If you do not have the Control Systems Engineering Toolbox M- ﬁles, you can create your own M- ﬁles by typing the code for each problem in this appendix into a separate M- ﬁle (thereis no need to type the ﬁnal pause statement or comments), and naming each M- ﬁle with a .m extension, as in ch2p1.m. You can also type the code for more than one probleminto an M-ﬁ le, including the pause command, and name the M-ﬁ le with the .m extension. You can then call the ﬁle from the Command Window, and continue past the pause statements to the next problem by pressing any key. 771WEBBAPPB 10/29/2014 9:25:1 By its nature, this appendix cannot cover all the background and details necessary for a complete understanding of MATLAB. For further details, you are referred to other sources, including MATLAB reference manuals and instructions speci ﬁc to your particular computer. The bibliography at the end of this appendix provides a partial listing ofreferences. This appendix should give you enough information to be able to applyMATLAB to the analysis and design problems covered in this book. The code will also run on workstations that support MATLAB. Consult the MATLAB Installation Guide for your platform for minimum system hardware requirements. B.2 MATLAB Examples Chapter 2: Modeling in the Frequency Domain ch2p1 Bit strings will be used to identify parts of this tutorial on the computer output. Bit strings are represented by the text enclosed in apostrophes, such as 'ab' . Comments begin with%and are ignored by MATLAB. Numbers are entered without any other characters. Arithmetic can be performed using the proper arithmetic operator. Numbers can be assignedusing a left-hand argument and an equals sign. Finally, we can ﬁnd the magnitude and angle of a complex number, Qusing abs (Q) and angle (Q), respectively. '(ch2p1) ' % Display label. ' How are you? ' % Display string. -3.96 % Display scalar number -3.96. -4 + 7i % Display complex number -4+7i. -5-6j % Display complex number -5-6 j. (-4+7i)+(-5-6i) % Add two complex numbers and % display sum. (-4+7j) * (-5-6j) % Multiply two complex numbers and % display product. M=5 % Assign 5 to M and display. N=6 % Assign 6 to N and display. P=M+N % Assign M+N to P and display. Q=3+4j % Define complex number, Q. MagQ=abs(Q) % Find magnitude of Q. ThetaQ= (180/pi) *angle(Q) % Find the angle of Q in degrees. pause ch2p2 Polynomials in scan be represented as row vectors containing the coef ﬁcients. Thus P1s37s2 3s23 can be represented by the vector shown below with elements separated by a space or comma. Bit strings can be used to identify each section of this tutorial. '(ch2p2) ' % Display label. P1= [1 7 -3 23] % Store polynomial s^3 + 7s^2 -3s+ % 23 as P1 and display. pause ch2p3 Running the previous statements ca uses MATLAB to display the results. Ending the command with a semicolon suppresses the display. Typing an expression without a left-hand assignment and withou t a semicolon causes the expression to be evaluated and the result displayed. Enter P2in the MATLAB Command Window after execution.772 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:1 '(ch2p3) ' % Display label. P2= [3 5 7 8] ; % Assign 3s^3 + 5s^2 +7s + 8 to P2 % without displaying. 3*5 % Evaluate 3*5 and display result. pause ch2p4 AnF(s) in factored form can be represented in polynomial form. Thus P3 s2 s5 s6can be transformed into a polynomial using poly (V) , where Vis a row vector containing the roots of the polynomial and poly(V) forms the coef ﬁcients of the polynomial. '(ch2p4) ' % Display label. P3=poly( [-2 -5 -6] ) % Store polynomial% (s+2) (s+5) (s+6)as P3 and % display the coefficients. pause ch2p5 We can ﬁnd roots of polynomials using the roots (V) command. The roots are returned as a column vector. For example, ﬁnd the roots of 5 s47s39s2 3s20. '(ch2p5) ' % Display label. P4= [5 7 9 -3 2] % Form 5s^4+7s^3+9s^2-3s+2 and% display. rootsP4=roots(P4) % Find roots of 5s^4+7s^3+9s^2%-3s+2,% assign to rootsP4, and display. pause ch2p6 Polynomials can be multiplied together using the conv(a,b) command (stand- ing for convolve). Thus, P5 s37s210s9 s4 3s36s22s1is generated as follows: '(ch2p6) ' % Display label. P5=conv( [1 7 10 9],[1 -3 6 2 1] ) % Form (s^3+7s^2+10s+9) (s^4- % 3s^3+6s^2+2s+1) , assign to P5,% and display. pause ch2p7 The partial-fraction expansion for F sb s=a scan be found using the [K, p, k ]= residue (b, a) command ( K= residue; p= roots of denominator; k= direct quotient, which is found by dividing polynomials prior to performing a partial- fraction expansion). We expand F s 7s29s12=s s 7 s210s100as an example. Using the results from MATLAB yields: F s 0:2554  0:3382 i= s 5:0000 8:6603i 0:25540:3382i= s5:00008:6603i 0:5280 = s70:0171 =s: '(ch2p7) ' % Display label. numf= [7 9 12]; % Define numerator of F(s). denf=conv(poly( [0 -7] ),[1 10 100] ); % Define denominator of F(s).[K,p,k] =residue(numf,denf) % Find residues and assign to K; % find roots of denominator and% assign to p; find% constant and assign to k. pauseB.2 MATLAB Examples 773WEBBAPPB 10/29/2014 9:25:1 ch2p8 (Example 2.3) Let us do Example 2.3 in the book using MATLAB. '(ch2p8) Example 2.3' % Display label. numy=32; % Define numerator. deny=poly( [0 -4 -8] ); % Define denominator. [r,p,k] =residue(numy,deny) % Calculate residues, poles, and % direct quotient. pause ch2p9 Creating Transfer Functions Vector Method, Polynomial Form A transfer function can be expressed as a numerator polynomial divided by a denominator polynomial, that is, F sN s=D s. The numerator, N(s), is represented by a row vector, numf , that contains the coef ﬁcients of N(s). Similarly, the denominator, D(s), is represented by a row vector, denf , that contains the coef ﬁcients of D(s). We form F(s) with the command, F=tf(numf,denf) .Fis called a linear time-invariant (LTI) object. This object, or transfer function, can be used as an entity in other operations, such as addition or multiplication. We demonstrate with F s150 s22s7=s s25s4. Notice after executing the tfcommand, MATLAB prints the transfer function. Vector Method, Factored Form We also can create LTI transfer functions if the numerator and denominator are expressed in factored form. We do this by using rowvectors containing the roots of the numerator and denominator. Thus G sK *N s=D scan be expressed as an LTI object using the command, G=zpk(numg,deng,K) , where numg is a row vector containing the roots of N(s) anddeng is a row vector containing the roots of D(s). The expression zpk stands for zeros (roots of the numerator), poles (roots of the denominator), and gain, K. We demonstrate with G s20 s2 s4= s7 s8 s9. Notice after executing the zpk command, MATLAB prints the transfer function. Rational Expression in s Method, Polynomial Form (Requires Control SystemToolbox 8.4) This method allows you to type the transfer function as you normally would write it. The statement s=tf( 's ' ) must precede the transfer function if you wish to create an LTI transfer function in polynomial form equivalent to using F=tf(numf, denf) . Rational Expression in s Method, Factored Form (Requires Control SystemToolbox 8.4) This method allows you to type the transfer function as you normally would write it. The statement s=zpk( 's ' ) must precede the transfer function if you wish to create an LTI transfer function in factored form equivalent to using G=zpk(numg,deng,K) . For both rational expression methods the transfer function can be typed in any form regardless of whether s=tf( 's ' ) ors=zpk( 's ' ) is used. The difference is in the created LTI transfer function. We use the same examples above to demonstrate the rationalexpression in smethods. '(ch2p9) ' % Display label. ' Vector Method, Polynomial Form ' % Display label. numf=150* [1 2 7] % Store 150(s^2+2s+7) in numf and % display. denf= [1 5 4 0] % Store s(s+1) (s+4) in denf and% display. ' F(s) ' % Display label. F=tf(numf,denf) % Form F(s) and display. clear % Clear previous variables from% workspace.774 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:2 ' Vector Method, Factored Form' % Display label. numg= [-2 -4] % Store (s+2) (s+4) in numg and % display. deng= [-7 -8 -9] % Store (s+7) (s+8) (s+9) in deng % and display. K=20 % Define K. ' G(s) ' % Display label. G=zpk(numg,deng,K) % Form G(s) and display. clear % Clear previous variables from % workspace. ' Rational Expression Method, Polynomial Form' % Display label. s=tf( 's' ) % Define's'as an LTI object in % polynomial form. F=150* (s^2+2*s+7) / [s* (s^2+... % Form F (s) as an LTI transfer 5*s+4) ] % function in polynomial form. G=20* (s+2) * (s+4) / [ (s+7)*... % Form G(s) as an LTI transfer(s+8) * (s+9) ] % function in polynomial form. clear % Clear previous variables from % workspace. ' Rational Expression Method, Factored Form' % Display label. s=zpk( 's ' ) % Define's 'as an LTI object in % factored form. F=150* (s^2+2 * s+7) / [s * (s^2+5*s+4) ] % Form F(s) as an LTI transfer% function in factored form. G=20* (s+2) * (s+4) / [ (s+7) * (s+8) * (s+9) ] % Form G(s) as an LTI transfer % function in factored form. pause ch2p10 Transfer function numerator and denominator vectors can be converted between polynomial form containing the coef ﬁcients and factored form containing the roots. The MATLAB function, tf2zp(numtf,dentf) , converts the numerator and denominator from coef ﬁcients to roots. The results are in the form of column vectors. We demonstrate this with F s 10s240s60= s34s25s7. The MATLAB function, zp2tf(numzp,denzp,K) , converts the numerator and denominator from roots to coef ﬁcients. The arguments numzp anddenzp must be column vectors. In the demonstration that follows, apostrophes signify transpose. We demonstrate the conver- sion from roots to coef ﬁcients with G s10 s2 s4=s s3 s5. '(ch2p10) ' % Display label. ' Coefficients for F(s) ' % Display label. numftf= [10 40 60] % Form numerator of F(s)= % (10s^2+40s+60)/(s^3+4s^2+5s% +7). denftf= [1 4 5 7] % Form denominator of F(s)=% (10s^2+40s+60)/(s^3+4s^2+5s% +7). ' Roots for F(s) ' % Display label. [numfzp,denfzp] =tf2zp(numftf,denftf) % Convert F(s) to factored form. ' Roots for G(s) ' % Display label. numgzp= [-2 -4] % Form numerator ofB.2 MATLAB Examples 775WEBBAPPB 10/29/2014 9:25:2 K=10 % G(s)=10(s+2)(s+4) / [s(s + 3) % (s+5) ] . dengzp= [0 -3 -5] % Form denominator of% G(s)=10(s+2)(s+4) / [s(s+3)(s+5) ]. ' Coefficients for G(s) ' % Display label. [numgtf,dengtf] =zp2tf(numgzp ' ,dengzp ' ,K) % Convert G(s) to polynomial form. pause ch2p11 LTI models can also be converted between polynomial and factored forms. MATLAB commands tfandzpk are also used for the conversion between LTI models. If a transfer function, Fzpk(s), is expressed as factors in the numerator and denominator, then tf (Fzpk) converts Fzpk( s) to a transfer function expressed as coef ﬁcients in the numerator and denominator. Similarly, if a transfer function, Ftf(s), is expressed as coef ﬁcients in the numerator and denominator, then zpk(Ftf) converts Ftf(s) to a transfer function expressed as factors in the numerator and denominator. The following example demonstrates the concepts. ' (ch2p11) ' % Display label. 'Fzpk1(s) ' % Display label. Fzpk1=zpk( [-2 -4] , [0 -3 -5] ,10) % Form Fzpk1(s)= % 10(s+2) (s+4) / [s(s+3) (s+5) ] . 'Ftf1 ' % Display label. Ftf1=tf(Fzpk1) % Convert Fzpk1(s) to% coefficients form. 'Ftf2 ' % Display label. Ftf2=tf( [10 40 60] ,[1 4 5 7] ) % Form Ftf2(s)=% (10s^2+40s+60) / (s^3+4s^2+5s% +7) . 'Fzpk2 ' % Display label. Fzpk2=zpk(Ftf2) % Convert Ftf2(s) to% factored form. pause ch2p12 Functions of time can be easily plotted using MATLAB’ splot(X,Y,S) , where Xis the independent variable, Yis the dependent variable, and Sis a character string describing the plot ’s color, marker, and line characteristic. Type HELP PLOT in the Command Window to see a list of choices for S. Multiple plots also can be obtained using plot (X1,Y1,S1,X2,Y2,S2,X3,Y3,S3, . . . ). In the following example we plot on the same graph sin(5 t) in red and cos(5 t) in green for t0 to 10 seconds in 0.01 second increments. Time is speci ﬁed as t=start: increment: ﬁnal. ' (ch2p12) ' % Display label. t=0:0.01:10; % Specify time range and increment. f1=cos(5*t); % Specify f1 to be cos(5t). f2=sin(5*t); % Specify f2 to be sin (5t). plot(t,f1, ' r ' ,t,f2, ' g ' ) % Plot f1 in red and f2 in green. pause Chapter 3: Modeling in the Time Domain ch3p1 The square system matrix, A010 001  9 8 72 435is written with a space or comma776 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:2 separating the elements of each row. The next row is indicated with a semicolon or carriage return. The entire matrix is then enclosed in a pair of square brackets. '(ch3p1) ' % Display label. A= [0 1 0;0 0 1; -9 -8 -7] % Represent A. 'o r ' A= [0 1 0 % Represent A. 001 -9 -8 -7]pause ch3p2 A row vector, such as the output matrix C, can be represented with elements separated by spaces or commas and enclosed in square brackets. A column vector, such as input matrix B, can be written as elements separated by semicolons or carriage returns, or as the transpose ( ’) of a row vector. '(ch3p2) ' % Display label. C= [2 3 4] % Represent row vector C. B= [7;8;9] % Represent column vector B. 'o r ' B= [7 % Represent column vector B. 8 9] 'o r ' B= [7 8 9]' % Represent column vector B. pause ch3p3 The state-space representation consists of specifying the A,B,C,a n dD matrices followed by the creation of an LTI state-space object using the MATLAB command, ss(A,B,C,D) . Hence, for the matrices in (ch3p1) and (ch3p2), the state-space representation would be: ' (ch3p3) ' % Display label. A= [0 1 0;0 0 1;-9 -8 -7]; % Represent A. B= [7;8;9] ; % Represent column vector B. C= [2 3 4] ; % Represent row vector C. D=0; % Represent D. F=ss(A,B,C,D) % Create an LTI object and display. ch3p4 (Example 3.4) Transfer functions represented either by numerator and denominator or an LTI object can be converted to state space. For numerator and denominator representa-tion, the conversion can be implemented using [A, B, C, D] =tf2ss(num,den) .T h e A matrix is returned in a form called the controller canonical form, which will be explained inChapter 5 in the text. To obtain the phase-variable form, [Ap,Bp,Cp,Dp] , we perform the following operations: Ap=inv (P) *A*P;Bp=inv (P) *B;Cp=C*P,Dp=D ,w h e r eP is a matrix with 1 ’s along the anti-diagonal and 0 ’s elsewhere. These transformations will be explained in Chapter 5. The command inv (X) ﬁnds the inverse of a square matrix. The symbol * signi ﬁes multiplication. For systems represented as LTI objects, the command ss(F) ,w h e r e Fis an LTI transfer-function object, can be used to convert Fto a state-space object. Let us look at Example 3.4 in the text. For the numerator-denominator representation,notice that the MATLAB response associates the gain, 24, with the vector Crather than the vector Bas in the example in the text. Both representations are equivalent. For the LTI transfer- function object, the conversion to state space does not yield the phase-variable form. The resultB.2 MATLAB Examples 777WEBBAPPB 10/29/2014 9:25:3 is a balanced model that improves the accuracy of calculating eigenvalues, which are covered in Chapter 4. Since ss(F) does not yield familiar forms of the state equations (nor is it possible to easily convert to familiar forms), we will have limited use for that transformation at this time. '(ch3p4) Example 3.4' % Display label. ' Numerator-denominator representation conversion' % Display label. ' Controller canonical form' % Display label. num=24; % Define numerator of % G(s) =C(s)/R(s). den= [1 9 26 24]; % Define denominator of G(s). [A,B,C,D] =tf2ss(num,den) % Convert G(s) to controller % canonical form, store matrices % A, B, C, D, and display. ' Phase-variable form' % Display label. P= [0 0 1;0 1 0;1 0 0]; % Form transformation matrix. Ap=inv(P) *A*P % Form A matrix, phase-variable% form. Bp=inv(P) *B % Form B vector, phase-variable% form. Cp=C*P % Form C vector, phase-variable % form. Dp=D % Form D phase-variable form. ' LTI object representation ' % Display label. T=tf(num,den) % Represent T(s) =24/(s^3+9s^2 +% 26s+24) as an LTI transfer- % function object. Tss=ss(T) % Convert T(s) to state space. pause ch3p5 State-space representations can be converted to transfer functions represented by a numerator and a denominator using [num,den] =ss2tf(A,B,C,D,iu) , where iu is the input number for multiple-input systems. For single-input, single-output systems iu=1 . For an LTI state-space system, Tss, the conversion can be implemented using Ttf=tf(Tss) to yield the transfer function in polynomial form or Tzpk=zpk(Tss) to yield the transfer function in factored form. For example, the transfer function representedby the matrices described in (ch3p3) can be found as follows: ' (ch3p5) ' % Display label. ' Non LTI' % Display label. A= [0 1 0;0 0 1;-9 -8 -7]; % Represent A. B= [7;8;9]; % Represent B. C= [2 3 4]; % Represent C. D=0; % Represent D. ' Ttf(s) ' % Display label. [num,den] =ss2tf(A,B,C,D,1) % Convert state-space % representation to a % transfer function represented as % a numerator and denominator in% polynomial form, G(s) =num/den, % and display num and den. ' LTI ' % Display label. Tss=ss(A,B,C,D) % Form LTI state-space model. ' Polynomial form, Ttf(s) ' % Display label.778 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:3 Ttf=tf(Tss) % Transform from state space to % transfer function in polynomial % form. ' Factored form, Tzpk(s) ' % Display label. Tzpk=zpk(Tss) % Transform from state space to % transfer function in factored % form. pause Chapter 4: Time Response ch4p1 (Example 4.6) We can use MATLAB to calculate characteristics of a second-order system, such as damping ratio, ζ; natural frequency, ωn; percent overshoot, %OS (pos); settling time, Ts; and peak time, Tp. Let us look at Example 4.6 in the text. '(ch4p1) Example 4.6' % Display label. p1= [1 3+7*i]; % Define polynomial containing % first pole. p2= [1 3-7*i]; % Define polynomial containing% second pole. deng=conv(p1,p2); % Multiply the two polynomials to% find the 2nd order polynomial, % as^2+bs+c. omegan=sqrt(deng(3)/deng(1) ) % Calculate the natural frequency, % sqrt(c/a). zeta= (deng(2)/deng(1) )/ (2*omegan) % Calculate damping ratio, % ( (b/a)/2*wn). Ts=4/(zeta*omegan) % Calculate settling time,% (4/z*wn). Tp=pi/ (omegan*sqrt(1 -zeta^2) ) % Calculate peak time, % pi/wn*sqrt(1 -z^2). pos=100*exp(-zeta* pi/sqrt(1 -zeta^2) ) % Calculate percent overshoot% (100*e^(-z*pi/sqrt(1-z^2) ). pause ch4p2 (Example 4.8) We can use MATLAB to obtain system step responses. These responses are particularly valuable when the system is not a pure two-pole system and has additional poles or zeros. We can obtain a plot of the step response of a transfer function, T(s)=num/den , using the command step(T) , where Tis an LTI transfer-function object. Multiple plots also can be obtained using step(T1,T2,...). Information about the plots obtained with step(T) can be found by left-clicking the mouse on the curve. You can ﬁnd the curve ’s label as well as the coordinates of the point on which you clicked. Right-clicking away from a curve brings up a menu. From this menu youcan select (1) system responses to be displayed and (2) response characteristics to bedisplayed, such as peak response. When selected, a dot appears on the curve at the appropriate point. Let your mouse rest on the point to read the value of the characteristic. You may also select (3) choice for grid on or off, (4) choice to normalize the curve, and(5) properties, such as labels, limits, units, style, and characteristics. If we add the left-hand side, [y,t] =step(T) , we create vectors containing the plot ’s points, where yis the output vector and tis the time vector. For this case, a plot is not made until the plot(t,y) command is given, where we assume we want to plot the output (y) versus time (t). We can label the plot, the x-axis, and the y-axis with title( 'ab ' ) , xlabel( 'ab ' ) , and ylabel( 'ab ' ) , respectively. The command clf clears the graphB.2 MATLAB Examples 779WEBBAPPB 10/29/2014 9:25:3 prior to plotting. Finally, text can be placed anywhere on the graph using the command text(X,Y, 'text ' ) , where (X,Y) are the graph coordinates where 'text ' will be displayed. Let us look at Example 4.8 in the text. '(ch4p2) Example 4.8 ' % Display label. ' Test Run ' % Display label. clf % Clear graph. numt1= [24.542]; % Define numerator of T1. dent1= [1 4 24.542]; % Define denominator of T1. ' T1(s) ' % Display label. T1=tf(numt1,dent1) % Create and display T1(s). step(T1) % Run a demonstration step response % plot title ( ' Test Run of T1(s) ' ) % Add title to graph. pause ' Complete Run ' % Display label. [y1,t1] =step(T1) ; % Run step response of T1 and% collect points. numt2= [245.42]; % Define numerator of T2. p1= [1 10]; % Define (s+10) in denominator% of T2. p2= [1 4 24.542]; % Define (s^2+4s+24.542) in% denominator of T2. dent2=conv(p1,p2); % Multiply (s + 10)(s^2+4s+24.542) % for denominator of T2. ' T2(s) ' % Display label. T2=tf(numt2,dent2) % Create and display T2. [y2,t2] =step(T2); % Run step response of T2 and% collect points. numt3= [73.626]; % Define numerator of T3. p3= [1 3]; % Define (s+3) in denominator% of T3. dent3=conv(p3,p2); % Multiply (s+3) (s^2+4s+24.542) % for denominator of T3. ' T3(s) ' % Display label. T3=tf(numt3,dent3) % Create and display T3. [y3,t3] =step(T3); % Run step response of T3 and % collect points. clf % Clear graph. plot(t1,y1,t2,y2,t3,y3) % Plot acquired points with all % three plots on one graph. title ( ' Step Responses of T1(s),T2 (s), and T3(s) ' ) % Add title to graph. xlabel( ' Time(seconds) ' ) % Add time axis label. ylabel ( ' Normalized Response ' ) % Add response axis label.text(0.7,0.7, ' c3(t) ' ) % Label step response of T1. text(0.7,1.1, ' c2(t) ' ) % Label step response of T2. text(0.5,1.3, ' c1(t) ' ) % Label step response of T3. pausestep(T1,T2,T3) % Use alternate method of plotting% step responses. title ( ' Step Responses of T1 (s), T2(s), and T3(s) ') % Add title to graph. pause ch4p3 We also can plot the step response of systems represented in state space using the step(T,t) command. Here Tis any LTI object and t=a:b:c is the range for the time axis,780 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:4 where ais the initial time, bis the time step size, and cis the ﬁnal time. For example, t=0:1:10 means time from 0 to 10 seconds in steps of 1 second. The tﬁeld is optional. Finally, in this example we introduce the command grid on, which superimposes a grid over the step response. Place the grid on command after the step(T,t) command. ' (ch4p3) ' % Display label. clf % Clear graph. A= [0 1 0;0 0 1;-24 -26 -9]; % Generate A matrix. B= [0;0;1]; % Generate B vector. C= [2 7 1]; % Generate C vector. D=0; % Generate D. T=ss(A,B,C,D) % Generate LTI object, T, in state % space and display. t=0:0.1:10; % Define range of time for plot. step(T,t) % Plot step response for given% range of time. grid on % Turn grid on for plot. pause ch4p4 (Antenna Control Case Study) We now use MATLAB to plot the step response requested in the Antenna Control Case Study. ' (ch4p4) Antenna Control Case Study' % Display label. clf % Clear graph.numg=20.83; % Define numerator of G(s). deng= [1 101.71 171]; % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Form and display transfer% Function G(s). step(G); % Generate step response. title( ' Angular Velocity Response ' ) % Add title. pause ch4p5 (UFSS Case Study) As aﬁnal example, let us use MATLAB to do the UFSS Case Study in the text ( Johnson ,1980 ). We introduce table lookup to ﬁnd the rise time. Using the interp1(y,t,y1) command, we set up a table of values of amplitude, y, and time, t, from the step response and look for the value of time for which the amplitude is y1=0.1 and 0.9. We also generate time response data over a de ﬁned range of time using t=a:b:c followed by [y,t] =step(G,t) . Here Gis an LTI transfer-function object and tis the range for the time axis, where ais the initial time, bis the time step size, and cis the ﬁnal time; yis the output. ' (ch4p5) UFSS Case Study' % Display label. clf % Clear graph. ' (a) ' % Display label. numg=0.0169; % Define numerator of 2nd order % approximation of G(s). deng= [1 0.226 0.0169]; % Define 2nd order term of % denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). omegan=sqrt(deng(3) ) % Find natural frequency. zeta=deng(2)/ (2*omegan) % Find damping ratio. Ts=4/ (zeta*omegan) % Find settling time. Tp=pi/ (omegan*sqrt(1-zeta^2) ) % Find peak time.B.2 MATLAB Examples 781WEBBAPPB 10/29/2014 9:25:4 pos=exp (-zeta*pi/sqrt(1-zeta^2) ) *100 % Find percent overshoot. t=0:0.1:35; % Limit time to find rise time. t=0 % to 35 in steps of 0.1. [y,t] =step(G,t); % Generate and save points of step % response over defined range of t. Tlow=interp1(y,t,0.1); % Search table for time when % y=0.1*finalvalue. Thi=interp1(y,t,0.9); % Search table for % time=0.9*finalvalue. Tr=Thi-Tlow % Calculate rise time. ' (b) ' % Display label. numc=0.125* [1 0.435]; % Define numerator of C(s). denc=conv(poly( [0 -1.23] ),[1 0.226 0.0169] ); % Define denominator of C(s). [K,p,k] =residue(numc,denc) % Find partial-fraction expansion. ' (d) ' % Display label. numg=0.125* [1 0.435]; % Define numerator of G(s). deng=conv( [1 1.23],[1 0.226 0.0169] ); % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). [y,t] =step(G); % Generate complete step response % and collect points. plot(t,y) % Plot points. title ( ' Pitch Angle Response' ) % Add title.xlabel( ' Time(seconds) ' ) % label time axis. ylabel ( ' Pitch Angle (radians) ' ) % Label y-axis.pause Chapter 5: Reduction of Multiple Subsystems ch5p1 (UFSS Pitch Control System) MATLAB can be used for block diagram reduction. Three methods are available: (1) Solution via Series, Parallel, & Feedback Commands, (2) Solution via Algebraic Operations, and (3) Solution via Append & ConnectCommands. Let us look at each of these methods. Solution via Series, Parallel, & Feedback Commands The closed-loop transfer function is obtained using the following commands succes-sively, where the arguments are LTI objects: series(G1,G2) for a cascade connec- tion of G 1(s); and G2(s);parallel(G1,G2) for a parallel connection of G1(s) and G2(s);feedback(G,H,sign)for a closed-loop connection with G(s) as the forward path, H(s) as the feedback, and sign is–1 for negative-feedback systems or +1 for positive-feedback systems. The sign is optional for negative-feedback systems. Solution via Algebraic Operations Another approach is to use arithmetic operations successively on LTI transfer functionsas follows: G2*G1 for a cascade connection of G 1(s) and G2(s);G1+G2 for a parallel connection of G1(s) and G2(s);G/(1+G*H) for a closed-loop negative-feedback connection with G(s) as the forward path and H(s) as the feedback; G/ (1-G *H)for positive-feedback systems. When using division we follow with the function minreal (sys) to cancel common terms in the numerator and denominator. Solution via Append & Connect Commands The last method, which de ﬁnes the topology of the system, may be used effectively for complicated systems. First, the subsystems are de ﬁned. Second, the subsystems are782 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:4 appended, or gathered, into a multiple-input/multiple-output system. Think of this system as a single system with an input for each of the subsystems and an output for each of the subsystems. Next, the external inputs and outputs are speci ﬁed. Finally, the subsystems are interconnected. Let us elaborate on each of these steps. The subsystems are de ﬁned by creating LTI transfer functions for each. The subsystems are appended using the command G=append(G1,G2,G3,G4, . . . . .Gn) ,w h e r e theGiare the LTI transfer functions of the subsystems and Gis the appended system. Each subsystem is now identi ﬁed by a number based upon its position in the append argument. For example, G3is 3, based on the fact that it is the third subsystem in the append argument (not the fact that we write it as G3). Now that we have created an appended system, we form the arguments required to interconnect their inputs and outputs to form our system. The ﬁrst step identi ﬁes which subsystems have the external input signal and which subsystems have the external outputsignal. For example, we use inputs= [1 5 6] andoutputs= [3 4] to de ﬁne the external inputs to be the inputs of subsystems 1,5, and 6 and the external outputs to be theoutputs of subsystems 3 and 4. For single-input/single-output systems, these de ﬁnitions use scalar quantities. Thus inputs=5,outputs=8 deﬁne the input to subsystem 5 as the external input and the output of subsystem 8 as the external output. At this point we tell the program how all of the subsystems are interconnected. We form a Qmatrix that has a row for each subsystem whose input comes from another subsystem ’s output. The ﬁrst column contains the subsystem ’s number. Subsequent columns contain the numbers of the subsystems from which the inputs come. Thus, atypical row might be as follows: [3 6  7], or subsystem 3 ’s input is formed from the sum of the output of subsystem 6 and the negative of the output of subsystem 7. Finally, all of the interconnection arguments are used in the connect(G Q inputs, outputs) command, where all of the arguments have been previously de ﬁned. Let us demonstrate the three methods for ﬁnding the total transfer function by looking at the back endpapers and ﬁnding the closed-loop transfer function of the pitch control loop for the UFSS with K 1K21(Johnson, 1980 ). The last method using append and connect requires that all subsystems be proper (the order of the numerator cannot begreater than the order of the denominator). The pitch rate sensor violates this require-ment. Thus, for the third method, we perform some block diagram maneuvers by pushingthe pitch rate sensor to the left past the summing junction and combining the resulting blocks with the pitch gain and the elevator actuator. These changes are re ﬂected in the program. You should verify all computer results with hand calculations. ' (ch5p1) UFSS Pitch Control System' ' Solution via Series, Parallel, & Feedback Commands' % Display labels. numg1= [-1]; % Define numerator of G1(s). deng1= [1]; % Define denominator of G1(s). numg2= [0 2]; % Define numerator of G2(s). deng2= [1 2]; % Define denominator of G2 (s). numg3=-0.125* [1 0.435]; % Define numerator of G3(s). deng3=conv( [1 1.23],[1 0.226 0.0169] ); % Define denominator of G3(s). numh1= [-1 0]; % Define numerator of H1(s). denh1= [0 1]; % Define denominator of H1(s). G1=tf(numg1,deng1); % Create LTI transfer function, % G1(s). G2=tf(numg2,deng2); % Create LTI transfer function,% G2(s). G3=tf(numg3,deng3); % Create LTI transfer function, % G3(s).B.2 MATLAB Examples 783WEBBAPPB 10/29/2014 9:25:4 H1=tf (numh1,denh1); % Create LTI transfer function, % H1(s). G4=series(G2,G3); % Calculate product of elevator% and vehicle dynamics. G5=feedback(G4,H1); % Calculate closed-loop transfer% function of inner loop. Ge=series(G1,G5); % Multiply inner-loop transfer% function and pitch gain. ' T(s) via Series, Parallel, & Feedback Commands ' % Display label. T=feedback(Ge,1) % Find closed-loop transfer% function. ' Solution via Algebraic Operations ' % Display label. clear % Clear session. numg1= [-1]; % Define numerator of G1(s). deng1= [1]; % Define denominator of G1(s). numg2= [0 2]; % Define numerator of G2(s). deng2= [1 2]; % Define denominator of G2(s). numg3=-0.125* [1 0.435]; % Define numerator of G3(s). deng3=conv( [1 1.23],[1 0.226 0.0169] ); % Define denominator of G3(s). numh1= [-1 0]; % Define numerator of H1(s). denh1= [0 1]; % Define denominator of H1(s). G1=tf (numg1,deng1); %Create LTI transfer function, G1(s) . G2=tf (numg2,deng2); %Create LTI transfer function, G2(s) . G3=tf (numg3,deng3); %Create LTI transfer function, G3(s) . H1=tf (numh1,denh1); %Create LTI transfer function, H1(s) . G4=G3*G2; % Calculate product of elevator and % vehicle dynamics. G5=G4/ (1+G4*H1); % Calculate closed-loop transfer % function of inner loop. G5=minreal(G5); % Cancel common terms. Ge=G5*G1; % Multiply inner-loop transfer% functions. ' T(s) via Algebraic Operations' % Display label. T=Ge/ (1+Ge); %Find closed-loop transfer function. T=minreal(T) % Cancel common terms. 'Solution via Append & Connect Commands' % Display label. ' G1(s) = (-K1) * (1/ (-K2s) )=1/s' % Display label. numg1= [1]; % Define numerator of G1(s). deng1= [1 0]; % Define denominator of G1(s). G1=tf(numg1,deng1) % Create LTI transfer function,% G1(s) =pitch gain* % 1 (1/Pitch rate sensor). ' G2(s) = (-K2s) * (2/ (s+2) ' % Display label. numg2= [-2 0]; % Define numerator of G2(s). deng2= [1 2]; % Define denominator of G2(s). G2=tf(numg2,deng2) % Create LTI transfer function, % G2(s)=pitch rate sensor*vehicle % dynamics. ' G3(s)=-0.125(s +0.435) / ( (s+1.23)(s^2+0.226s+0.0169) ) ' % Display label. numg3=-0.125* [1 0.435]; % Define numerator of G3(s). deng3=conv( [1 1.23],[1 0.226 0.0169] ); % Define denominator of G3(s).784 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:5 G3=tf(numg3,deng3); % Create LTI transfer function, % G3(s) =vehicle dynamics. System=append(G1,G2,G3) % Gather all subsystems. input=1; % Input is at first subsystem,% G1(s). output=3; % Output is output of third % subsystem, G3(s). Q= [1 -3 0 % Subsystem 1, G1(s), gets its % input from the negative of the % output of subsystem 3, G3(s). 2 1 -3 % Subsystem 2, G2(s), gets its % input from subsystem 1, G1(s), % and the negative of the output % of subsystem 3, G3(s). 3 2 0]; % Subsystem 3, G3(s), gets its % input from subsystem 2, G2(s). T=connect(System,Q,input,output); % Connect the subsystems. ' T(s) via Append & Connect Commands' % Display label. T=tf(T); % Create LTI closed-loop transfer % function. T=minreal(T) % Cancel common terms. pause ch5p2 (Example 5.3) We can use MATLAB to calculate the closed-loop characteristics of a second-order system, such as damping ratio, ζ; natural frequency, ωn; percent overshoot, %OS (pos); settling time, Ts; and peak time, Tp. The command [numt,dent] =tfdata(T, 'v' ) extracts the numerator and denominator of T(s) for a single-input/single-output system from which the calculations are based. The argument 'v'returns the numerator and denominator as simple row vectors. Omitting 'v' would return the numerator and denominator as cell arrays requiring more steps to obtain the row vectors. We end by generating a plot of the closed-loop step response. Let us look at Example 5.3 in the text. ' (ch5p2) Example 5.3 ' % Display label. numg= [25]; % Define numerator of G(s). deng=poly( [0 -5] ); % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). ' T(s) ' % Display label. T=feedback(G,1) % Find T(s). [numt,dent]=tfdata(T, 'v' ); % Extract numerator & denominator % of T(s). wn=sqrt(dent(3) ) % Find natural frequency. z=dent(2)/(2*wn) % Find damping ratio. Ts=4/ (z*wn) % Find settling time. Tp=pi/ (wn*sqrt(1-z^2) ) % Find peak time. pos=exp(-z*pi/sqrt(1-z^2) ) *100 % Find percent overshoot. step(T) % Generate step response. pause ch5p3 MATLAB can be used to convert transfer functions to state space in a speci ﬁed form. The command [Acc Bcc Ccc Dcc] =tf2ss(num,den) can be used to convert T(s)=num/den into controller canonical form with matrices and vectors Acc, Bcc, Ccc, andDcc. We can then form an LTI state-space object using Scc=ss (Acc,Bcc,Ccc,Dcc) . This object can then be converted into parallel formB.2 MATLAB Examples 785WEBBAPPB 10/29/2014 9:25:5 using Sp=canon(Scc, ' type ' ) , where type=modal yields the parallel form. Another choice, not used here, is type=companion , which yields a right companion system matrix. Transformation matrices can be used to convert to other representations. As an example, let us convert C s=R s24= s2 s3 s4into a parallel representation in state space, as is done in Section 5.7 —Parallel Form. Notice that the product of values in theBandCvectors yields the same product as the results in Eqs. (5.49) and (5.50). Thus, the two solutions are the same, but the state variables are ordered differently, and the gains aresplit between the BandCvectors. We can also extract the system matrices from the LTI object using [A,B,C,D] =ssdata(S) ,w h e r e Sis a state-space LTI object and A, B, C, D, are its associated matrices and vectors. ' (ch5p3) ' % Display label. numt=24; % Define numerator of T(s). dent=poly( [-2 -3 -4] ); % Define denominator of T(s). ' T(s) ' % Display label. T=tf(numt,dent) % Create and display T(s). [Acc Bcc Ccc Dcc] =tf2ss(numt,dent); % Convert T(s) to controller % canonical form. Scc=ss(Acc,Bcc,Ccc,Dcc); % Create LTI controller canonical % state-space object. Sp=canon(Scc, 'modal ' ); % Convert controller canonical form% to parallel form. ' Controller Canonical Form ' % Display label. [Acc,Bcc,Ccc,Dcc] =ssdata(Scc) % Extract and display controller % canonical form matrices. ' Parallel Form ' % Display label. [Ap,Bp,Cp,Dp] =ssdata(Sp) % Extract and display parallel form % matrices. pause ch5p4 (Example 5.9) We can use MATLAB to perform similarity transformations to obtain other forms. Let us look at Example 5.9 in the text. ' (ch5p4) Example 5.9 ' % Display label. Pinv= [2 0 0; 3 2 0; 1 4 5]; % Define P inverse. P=inv(Pinv) % Calculate P. 'Original ' % Display label. Ax= [0 1 0;0 0 1;-2 -5 -7] % Define original A. Bx= [0 0 1] % Define original B. Cx= [1 0 0] % Define original C. 'Transformed' % Display label. Az=Pinv*Ax*P % Calculate new A. Bz=Pinv*Bx % Calculate new B. Cz=Cx*P % Calculate new C. pause ch5p5 Using MATLAB ’s[P,d]=eig(A) command, where the columns of Pare the eigenvectors of Aand the diagonal elements of dare the eigenvalues of A, we can ﬁnd the eigenvectors of the system matrix and then proceed to diagonalize the system. We can also usecanon (S, ' modal ' ) to diagonalize an LTI object, S, represented in state space. ' (ch5p5) ' % Display label. A= [3 1 5;4 -2 7;2 3 1]; % Define original A. B= [1;2;3]; % Define original B.786 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:5 C= [2 4 6]; % Define original C. [P,d] =eig(A) % Generate transformation matrix, % P, and eigenvalues, d. ' Via Transformation ' % Display label. Adt=inv(P) *A*P % Calculate diagonal system A. Bdt=inv(P) *B % Calculate diagonal system B. Cdt=C*P % Calculate diagonal system C. ' Via Canon Command' % Display label. S=ss(A,B,C,0) % Create state-space LTI object% for original system. Sp=canon(S, 'modal ' ) % Calculate diagonal system via % canon command. pause Chapter 6: Stability ch6p1 (Example 6.7) MATLAB can solve for the poles of a transfer function in order to determine stability. To solve for the poles of T(s) use the pole(T) command. Let us look at Example 6.7 in the text. ' (ch6p1) Example 6.7 ' % Display label. numg=1; % Define numerator of G(s). deng=conv ( [1 0] , [2 3 2 3 2] ); % Define denominator of G(s).G=tf(numg,deng); % Create G(s) object. ' T(s) ' % Display label. T=feedback(G,1) % Calculate closed-loop T(s)% object. % Negative feedback is default % when there is no sign parameter. poles=pole(T) % Find poles of T(s). pause ch6p2 (Example 6.9) We can use MATLAB to ﬁnd the range of gain for stability by generating a loop, changing gain, and ﬁn d i n ga tw h a tg a i nw eo b t a i nr i g h t –half-plane poles. ' (ch6p2) Example 6.9 ' % Display label. K= [1:1:2000]; % Define range of K from 1 to 2000% in steps of 1. for n=1:length(K); % Set up length of DO LOOP to equal% number of K values to be tested. dent= [1 18 77 K(n) ]; % Define the denominator of T(s) % for the nth value of K. poles=roots(dent); % Find the poles for the nth value %o fK . r=real(poles); % Form a vector containing the real% parts of the poles for K(n). if max(r) >=0, % Test poles found for the nth % value of K for a real value 0. poles % Display first pole values where% there is a real part 0. K=K(n) % Display corresponding value of K. break % Stop loop if rhp poles are found. end % End if. end % End for. pauseB.2 MATLAB Examples 787WEBBAPPB 10/29/2014 9:25:6 ch6p3 (Example 6.11) We can use MATLAB to determine the stability of a system represented in state space by using the command eig(A) toﬁnd the eigenvalues of the system matrix, A.Let us apply the concept to Example 6.11 in the text. ' (ch6p3) Example 6.11 ' % Display label. A= [0 3 1;2 8 1;-10 -5 -2] % Define system matrix, A. eigenvalues=eig(A) % Find eigenvalues. pause Chapter 7: Steady-State Errors ch7p1 (Example 7.4, sys. b) Static error constants are found using lim snG(s)a s s®0. Once the static error constant is found, w e can evaluate the steady-state error. To evaluate the static error constant we can use the command dcgain(G),w h i c h evaluates G(s)a ts0. Let us look at Example 7.4, system (b), in the text. ' (ch7p1) Example 7.4, sys.b ' % Display label. numg=500*poly( [-2 -5 -6] ); % Define numerator of G(s). deng=poly( [0 -8 -10 -12] ); % Define denominator of G(s). G=tf(numg,deng); % Form G(s). ' Check Stability ' % Display label. T=feedback(G,1); % Form T(s). poles=pole(T) % Display closed-loop poles. ' Step Input ' % Display label. Kp=dcgain(G) % Evaluate Kp=numg/deng for s=0. ess=1/(1+Kp) % Evaluate ess for step input. ' Ramp Input ' % Display label. numsg=conv( [1 0],numg); % Define numerator of sG(s). densg=poly( [0 -8 -10 -12] ); % Define denominator of sG(s). sG=tf(numsg,densg); % Create sG(s). sG=minreal(sG); % Cancel common' s 'in % numerator(numsg) and % denominator(densg). Kv=dcgain(sG) % Evaluate Kv=sG(s) for s=0. ess=1/Kv % Evaluate steady-state error for % ramp input. ' Parabolic Input ' % Display label. nums2g=conv( [1 0 0],numg); % Define numerator of s^2G(s). dens2g=poly( [0 -8 -10-12] ); % Define denominator of s^2G(s). s2G=tf(nums2g,dens2g); % Create s^2G(s). s2G=minreal(s2G); % Cancel common' s 'in % numerator(nums2g) and % denominator(dens2g). Ka=dcgain(s2G) % Evaluate Ka=s^2G(s) for s=0. ess=1/Ka % Evaluate steady-state error for% parabolic input. pause ch7p2 (Example 7.6) We can use MATLAB to evaluate the gain, K, required to meet a steady-state error speci ﬁcation. Let us look at Example 7.6 in the text. ' (ch7p2) Example 7.6' % Display label. numgdK= [1 5]; % Define numerator of G(s)/K. dengdK=poly( [0 -6 -7 -8] ); % Define denominator of G(s)/K. GdK=tf(numgdK,dengdK); % Create G(s)/K. numgkv=conv( [1 0],numgdK); % Define numerator of sG(s)/K.788 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:6 dengkv=dengdK; % Define denominator of sG(s) /K. GKv=tf(numgkv,dengkv); % Create sG(s)/K. GKv=minreal(GKv); % Cancel common' s 'in numerator % and denominator of sG(s) /K. KvdK=dcgain(GKv) % Evaluate (Kv/K)= (numgkv/dengkv)% for s=0. ess=0.1 % Enumerate steady-state error. K=1/ (ess*KvdK) % Solve for K. ' Check Stability' % Display label. T=feedback(K*GdK,1); % Form T(s). poles=pole(T) % Display closed-loop poles. pause Chapter 8: Root Locus Techniques ch8p1 (Example 8.7) MATLAB allows root loci to be plotted with the rlocus(GH) command, where G(s)H(s)=numgh/dengh andGHis an LTI transfer-function object. Points on the root locus can be selected interactively using the [K,p]=rlocﬁ nd(GH) command. MATLAB then yields the gain (K) at that point as well as all other poles (p ) that have that gain. We can zoom in and out of the root locus by changing the range of axis values using the command axis( [xmin,xmax, ymin,ymax] ). The root locus can be drawn over a grid that shows constant damping ratio (z) and constant natural frequency (wn) curves using the sgrid (z,wn) command. To plot multiple ζandωn curves, use z=zmin:zstep:zmax andwn=wnmin:wn-step:wnmax to specify ranges of values. ' (ch8p1) Example 8.7' % Display label. clf % Clear graph. numgh= [1 -4 20]; % Define numerator of G(s)H(s). dengh=poly( [-2 -4] ) ; % Define denominator of G(s)H(s). ' G(s)H(s) ' % Display label. GH=tf(numgh,dengh) % Create G(s)H(s) and display. rlocus(GH) % Draw root locus. z=0.2:0.05:0.5; % Define damping ratio values : 0.2 % to 0.5 in steps of 0.05. wn=0:1:10; % Define natural frequency values: % 0 to 10 in steps of 1. sgrid(z,wn) % Generate damping ratio and % natural frequency grid lines for % root locus. title ( ' Root Locus' ) % Define title for root locus. pauserlocus(GH) % Draw close-up root locus. axis( [-3 1 -4 4] ) % Define range on axes for root % locus close-up view. title( ' Close-up' ) % Define title for close-up root% locus. z=0.45; % Define damping ratio line for% overlay on close-up root locus. wn=0; % Suppress natural frequency% overlay curves. sgrid(z,wn) % Overlay damping ratio curve on % close-up root locus. for k=1: 3 % Loop allows 3 points to be % selected as per Example 8.7, %(z=0.45, jwcrossing,breakaway).B.2 MATLAB Examples 789WEBBAPPB 10/29/2014 9:25:6 [K,p] =rlocfind(GH) % Generate gain, K, and closed-loop % poles, p, for point selected % interactively on the root locus. end % End loop. pause ch8p2 (Example 8.8) We can couple the design of gain on the root locus with a step- response simulation for the gain selected. We introduce the command rlocus (G,K), which allows us to specify the range of gain, K, for plotting the root locus. This command will help us smooth the usual root locus plot by equivalently specifying more points via the argument, K. Notice that the ﬁrst root locus plotted without the argument Kis not smooth. We also introduce the command x=input( ' prompt ' ) , which allows keyboard entry of a value for xin response to a prompt. We apply this command to enter the desired percent overshoot. We also add a variable ’s value to the title of the root locus and step-response plots by inserting another ﬁeld in the title command and use num2str(value) to convert value from a number to a character string for display. Let us apply the concepts to Example 8.8 in the text. ' (ch8p2) Example 8.8' % Display label. clear % Clear variables from workspace. clf % Clear graph. numg= [1 1.5]; % Define numerator of G(s). deng=poly( [0 -1 -10] ); % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). rlocus(G) % Draw root locus (H(s) =1). title( ' Original Root Locus' ) % Add title. pauseK=0:0.005:50; % Specify range of gain to smooth % root locus. rlocus(G,K) % Draw smoothed root locus % (H(s)=1). title( ' Smoothed Root Locus' ) % Add title.pos=input( ' Type %OS ' ); % Input desired percent overshoot% from the keyboard. z=-log(pos/100) /sqrt(pi^2+[log(pos/100) ]^2) % Calculate damping ratio. sgrid(z,0) % Overlay desired damping ratio% line on root locus. title( [ ' Root Locus with' , num2str(pos), ' % overshoot line ' ] ) % Define title for root locus% showing percent overshoot used. [K,p] =rlocfind(G) % Generate gain, K, and closed-loop% poles, p, for point selected% interactively on the root locus. pause ' T(s) ' % Display label. T=feedback(K*G,1) % Find closed-loop transfer% function % with selected K and display. step(T) % Generate closed-loop step % response for point select on % root locus. title( [ ' Step Response for K=' ,num2str(K) ] ) % Give step response a title which% includes the value of K. pause790 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:7 Chapter 9: Design via Root Locus ch9p1 (Example 9.3) We can use MATLAB to design PD controllers. The program allows us to input a desired percent overshoot via the keyboard. MATLAB then produces a root locus for the uncompensated system with an overlay of the percent overshoot line. We interactivelyselect the intersection of the root locus and the desired percent overshoot line to set the gain.MATLAB outputs an estimate of the uncompensated system ’s performance speci ﬁcations and a step response of the uncompensated system for us to determine the required settling time. Afterwe input the settling time through the keyboard, MATLAB designs the PD controller and produces a root locus of the PD compensated system from which we can interactively select the gain. Finally, MATLAB produces an estimate of the PD compensated system ’sp e r f o r m a n c e speciﬁcations and a step response of the PD compensated system. ' (ch9p1) Example 9.3' % Display label. clf % Clear graph. 'Uncompensated System' % Display label. numg=1; % Generate numerator of G(s). deng=poly( [0 -4 -6] ); % Generate denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). pos=input( 'Type desired percent overshoot ' ); % Input desired percent overshoot. z=log(pos/100)/sqrt(pi^2+[log(pos/100) ]^2); % Calculate damping ratio. rlocus(G) % Plot uncompensated root locus. sgrid(z,0) % Overlay desired percent % overshoot line. title ( [ 'Uncompensated Root Locus with ' , num2str(pos),... '% Overshoot Line ' ] ) % Title uncompensated root locus. [K,p] =rlocfind(G); % Generate gain, K, and closed-loop % poles, p, for point selected % interactively on the root locus. ' Closed-loop poles=' % Display label. p % Display closed-loop poles. f=input( 'Give pole number that is operating point ' ); % Choose uncompensated system% dominant pole. ' Summary of estimated specifications for selected point on'' uncompensated root locus' % Display label. operatingpoint=p(f) % Display uncompensated dominant % pole. gain=K % Display uncompensated gain. estimated_settling_time=4/abs(real(p(f) ) ) % Display uncompensated settling% time. estimated_peak_time=pi/abs(imag(p(f) ) ) % Display uncompensated peak time. estimated_percent_overshoot=pos % Display uncompensated percent % overshoot. estimated_damping_ratio=z % Display uncompensated damping % ratio. estimated_natural_frequency=sqrt(real(p(f) )^2+imag(p(f) )^2) % Display uncompensated natural% frequency. numkv=conv( [1 0],numg); % Set up numerator to evaluate Kv.B.2 MATLAB Examples 791WEBBAPPB 10/29/2014 9:25:7 denkv=deng; % Set up denominator to evaluate Kv. sG=tf(numkv,denkv); % Create sG(s). sG=minreal(sG); % Cancel common poles and zeros. Kv=dcgain(K*sG) % Display uncompensated Kv.ess=1/Kv % Display uncompensated % steady-state % error for unit ramp input. ' T(s) ' % Display label. T=feedback(K * G,1) % Find uncompensated T(s). step(T) % Plot step response of % uncompensated system. title( [ 'Uncompensated System Step Response with ' ,num2str(pos) ,... '% Overshoot' ] ) % Add title to uncompensated step% response. ' Press any key to go to PD compensation ' % Display label. pause ' Compensated system' % Display label. Ts=input( 'Type Desired Settling Time ' ); % Input desired settling time from% the keyboard. wn=4/ (Ts*z); % Calculate natural frequency. desired_pole= (-z*wn)+(wn*sqrt(1-z^2)*i); % Calculate desired dominant pole% location. angle_at_desired_pole= (180/pi) *...angle(polyval(numg,desired_pole)/polyval(deng,desired_pole) ); % Calculate angular contribution% to desired pole without PD % compensator. PD_angle=180-angle_at_desired_pole; % Calculate required angular% contribution from PD % compensator. zc= ( (imag(desired_pole)/tan(PD_angle*pi/180) )...  real (desired_pole) ); % Calculate PD zero location. ' PD Compensator' % Display label. numc= [1 zc]; % Calculate numerator of Gc(s). denc= [0 1]; % Calculate denominator of Gc(s). ' Gc(s)' % Display label. Gc=tf (numc,denc) % Create and display Gc(s). ' G(s)Gc(s) ' % Display label. Ge=G*Gc % Cascade G(s) and Gc(s). rlocus(Ge,0:0.005:100) % Plot root locus of PD compensated % system. sgrid(z,0) % Overlay desired percent% overshoot line. title ( [ 'PD Compensated Root Locus with ' , num2str(pos),... '% Overshoot Line' ] ) % Add title to PD compensated root% locus. [K,p] =rlocfind(Ge); % Generate gain, K, and closed-loop % poles, p, for point selected % interactively on the root locus. ' Closed-loop poles=' % Display label. p % Display PD compensated systems ' % closed-loop poles. f=input( 'Give pole number that is operating point ' ); % Choose PD compensated system% dominant pole.792 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:7 ' Summary of estimated specifications for selected point on PD' ' compensated root locus' % Display label. operatingpoint=p(f) % Display PD compensated dominant% pole. gain=K % Display PD compensated gain. estimated_settling_time=4/abs(real(p(f) ) ) % Display PD compensated settling% time. estimated_peak_time=pi/abs(imag(p(f) ) ) % Display PD compensated peak time. estimated_percent_overshoot=pos % Display PD compensated percent % overshoot. estimated_damping_ratio=z % Display PD compensated damping % ratio. estimated_natural_frequency=sqrt(real(p(f) )^2+imag(p(f) )^2) % Display PD compensated natural% frequency. s=tf( [1 0],1); % Create transfer function,' s ' .sGe=s*Ge; % Create sGe(s). sGe=minreal(sGe); % Cancel common poles and zeros. Kv=dcgain(K*sGe) % Display compensated Kv.ess=1/Kv % Display compensated % steady-state error for% unit ramp input. ' T(s) ' % Display label. T=feedback(K*Ge,1) % Create and display PD compensated%T(s). ' Press any key to continue and obtain the PD compensated step'' response' % Display label. pausestep(T) % Plot step response for PD% compensated system. title( [ 'PD Compensated System Step Response with ' ...num2str(pos),'% Overshoot ' ] ) % Add title to step response % of PD compensated system. pause ch9p2 (Example 9.4) We can use MATLAB to design a lead compensator. The program allows us to input a desired percent overshoot via the keyboard. MATLAB then produces a root locus for the uncompensated system with an overlay of the percent overshoot line. We interactively select the intersection of the root locus and the desired percent overshoot line to set the gain. MATLAB outputs an estimate of the uncompensated system ’s performance speciﬁcations and a step response of the uncompensated system for us to determine the required settling time. Next we input the settling time and the lead compensator zero throughthe keyboard. At this point we take a different approach from that of the previous example.Rather than letting MATLAB calculate the lead compensator pole directly, MATLABproduces a root locus for every interactive guess of a lead compensator pole. Each root locuscontains the desired damping ratio and natural frequency curves. When our guess is correct, the root locus, the damping ratio line, and the natural frequency curve will intersect. We then interactively select this point of intersection to input the gain. Finally, MATLAB producesan estimate of the lead-compensated system ’s performance speci ﬁcations and a step response of the lead-compensated system. ' (ch9p2) Example 9.4' % Display label. clf % Clear graph.B.2 MATLAB Examples 793WEBBAPPB 10/29/2014 9:25:8 ' Uncompensated System' % Display label. numg=1; % Generate numerator of G(s). deng=poly( [0 -4 -6] ); % Generate denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). pos=input( 'Type desired percent overshoot ' ); % Input desired percent overshoot. z=-log(pos/100) /sqrt(pi^2+[log(pos/100) ]^2); % Calculate damping ratio. rlocus(G) % Plot uncompensated root locus. sgrid(z,0) % Overlay desired percent % overshoot line. title( [ 'Uncompensated Root Locus with ' , num2str(pos),... '% Overshoot Line' ] ) % Title uncompensated root locus. [K,p]=rlocfind(G); % Generate gain, K, and closed-loop % poles, p, for point selected % interactively on the root locus. ' Closed-loop poles= ' % Display label. p % Display closed-loop poles. f=input( 'Give pole number that is operating point ' ); % Choose uncompensated system% dominant pole. ' Summary of estimated specifications for selected point on'' uncompensated root locus' % Display label. operatingpoint=p(f) % Display uncompensated dominant % pole. gain=K % Display uncompensated gain. estimated_settling_time=4/abs(real(p(f) ) ) % Display uncompensated settling% time. estimated_peak_time=pi/abs(imag(p(f) ) ) % Display uncompensated peak time. estimated_percent_overshoot=pos % Display uncompensated percent % overshoot. estimated_damping_ratio=z % Display uncompensated damping % ratio. estimated_natural_frequency=sqrt(real(p(f) )^2+imag(p(f) )^2) % Display uncompensated natural% frequency. numkv=conv( [1 0],numg); % Set up numerator to evaluate Kv. denkv=deng; % Set up denominator to evaluate Kv. sG=tf(numkv,denkv); % Create sG(s). sG=minreal(sG); % Cancel common poles and zeros. Kv=dcgain(K*sG) % Display uncompensated Kv. ess=1/Kv % Display uncompensated% steady-state error for % unit ramp input. ' T(s) ' % Display label. T=feedback(K*G,1) % Create and display T(s). step(T) % Plot step response of% uncompensated system. title( [ 'Uncompensated System Step Response with ' ,...num2str(pos),'% Overshoot' ] ) % Add title to uncompensated step % response. ' Press any key to go to lead compensation' % Display label. pause794 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:8 Ts=input( 'Type Desired Settling Time' ); % Input desired settling time. b=input( 'Type Lead Compensator Zero, (s+b). b= ' ); % Input lead compensator zero. done=1; % Set loop flag. while done==1 % Start loop for trying lead % compensator pole. a=input ( 'Enter a Test Lead Compensator Pole, (s+a). a= ' ); % Enter test lead compensator pole. numge=conv(numg,[1 b] ); % Generate numerator of Gc(s)G(s).denge=conv( [1 a],deng); % Generate denominator % of Gc(s)G(s). Ge=tf(numge,denge); % Create Ge(s)= Gc(s)G(s).wn=4/ (Ts*z); % Evaluate desired natural % frequency. clf % Clear graph.rlocus(Ge) % Plot compensated root locus with % test lead compensator pole. axis( [-10,10,-10,10] ) % Change lead-compensated % root locus axes. sgrid(z,wn) % Overlay grid on lead-compensated % root locus. title ( [ 'Lead-Compensated Root Locus with ' , num2str(pos),... ' % Overshoot Line, Lead Pole at ' ,... num2str(-a) , ' and Required Wn' ] ) % Add title to lead-compensated % root locus. done=input ( ' Are you done? (y=0,n=1)' ); % Set loop flag. end % End loop for trying compensator % pole. [K,p]=rlocfind (Ge); % Generate gain, K, and closed-loop % poles, p, for point selected % interactively on the root locus. ' Gc(s) ' % Display label. Gc=tf ( [1 b] ,[1 a] ) % Display lead compensator. ' Gc(s)G(s) ' % Display label. Ge % Display Gc(s)G(s). ' Closed-loop poles=' % Display label. p % Display lead-compensated % system ' s% closed-loop poles. f=input( 'Give pole number that is operating point ' ); % Choose lead-compensated system% dominant pole. ' Summary of estimated specifications for selected point on lead ' ' compensated root locus' % Display label. operatingpoint=p(f) % Display lead-compensated % dominant pole. gain=K % Display lead-compensated gain. estimated_settling_time=4/abs(real(p(f) ) ) % Display lead-compensated % settling time. estimated_peak_time=pi/abs(imag(p(f) ) ) % Display lead-compensated % peak time. estimated_percent_overshoot=pos % Display lead-compensated % percent overshoot.B.2 MATLAB Examples 795WEBBAPPB 10/29/2014 9:25:8 estimated_damping_ratio=z % Display lead-compensated % damping ratio. estimated_natural_frequency=sqrt(real(p(f) )^2+imag(p(f) )^2) % Display lead-compensated % natural frequency. s=tf ( [1 0],1); % Create transfer Function,' s ' . sGe=s*Ge; % Create sGe(s) to evaluate Kv. sGe=minreal(sGe); % Cancel common poles and zeros.Kv=dcgain(K*sGe) % Display lead-compensated Kv. ess=1/Kv % Display lead-compensated steady- % state error for unit ramp input. ' T(s) ' % Display label. T=feedback(K*Ge,1) % Create and display lead- % compensated T(s). ' Press any key to continue and obtain the lead-compensated step' ' response' % Display label. pause step(T) % Plot step response for lead-% compensated system. title ( [ 'Lead-Compensated System Step Response with ' ,...num2str(pos),'% Overshoot' ] ) % Add title to step response % of lead-compensated system. pause Chapter 10: Frequency Response Techniques ch10p1 (Example 10.3) We can use MATLAB to make Bode plots using bode(G) , where G/ (s) =numg/deng andGis an LTI transfer-function object. Information about the plots obtained with bode(G) can be found by left-clicking the mouse on the curve. You can ﬁnd the curve ’s label, as well as the coordinates of the point on which you clicked. Right- clicking away from a curve brings up a menu if the icons on the menu bar are deselected. From this menu you can select (1) system responses to be displayed and (2) characteristics, such aspeak response. When selected, a dot appears on the curve at the appropriate point. Let yourmouse rest on the point to read the value of the characteristic. You may also select (3) whichcurves to view, (4) choice for grid on or off, (5) returning to full view after zooming, and (6) properties, such as labels, limits, units, style, and characteristics. We can obtain points on the plot using [mag, phase, w] =bode(G) , where magnitude, phase, and frequency are stored in mag, phase, andw, respectively. Magnitude and phase are stored as 3-D arrays. We use mag(:,:) ' , phase(:,:) ' to convert the arrays to column vectors, where the apostrophe signi ﬁes matrix transpose. Let us look at Example 10.3 in the text. ' (ch10p1) Example 10.3' % Display label. clf % Clear graph. numg= [1 3]; % Define numerator of G(s). deng=conv( [1 2],[1 2 25] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). bode(G) % Make a Bode plot. grid on % Turn on grid for Bode plot. title( 'Open-Loop Frequency Response' ) % Add a title to the Bode plot. [mag,phase,w]=bode(G); % Store points on the Bode plot. points= [20*log10(mag(:,:) ) ' ,phase(:,:) ' ,w] % List points on Bode plot with % magnitude in dB. pause796 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:9 ch10p2 (Example 10.5) We can use MATLAB to make Nyquist diagrams using nyquist(G) , where G(s)=numg/deng andGis an LTI transfer-function object. Information about the plots obtained with nyquist(G) can be found by left-clicking the mouse on the curve. You can ﬁnd the curve ’s label, as well as the coordinates of the point on which you clicked and the frequency. Right-clicking away from a curve brings up a menu if the icons on the menu bar are deselected. From this menu you can select (1) systemresponses to be displayed and (2) characteristics, such as peak response. When selected, adot appears on the curve at the appropriate point. Let your mouse rest on the point to read thevalue of the characteristic. You may also select (3) whether or not to show negative frequencies, (4) choice for grid on or off, (5) choice for zooming to ( –1,0), (6) returning to full view after zooming, and (7) properties, such as labels, limits, units, style, and characteristics. We can obtain points on the plot by using [re,im,w] =nyquist(G) , where the real part, imaginary part, and frequency are stored in re, im, andw, respectively, and reandimare 3-D arrays. We can specify a range of wby using [re,im] =nyquist(G,w). We use re(:,:) ' , andim(:,:) ' to convert the arrays to column vectors. Let us look at Example 10.5 in the text. ' (ch10p2) Example 10.5' % Display label. clf % Clear graph. numg= [1 2]; % Define numerator of G(s). deng= [1 0 0]; % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). nyquist(G) % Make a Nyquist diagram. grid on % Turn on grid for Nyquist diagram. title( 'Open-Loop Frequency Response' ) % Add a title to the Nyquist % diagram. w=0:0.5:10; % Let 0 <w<10 in steps of 0.5. [re,im] =nyquist(G,w); % Get Nyquist diagram points for a % range of w. points= [re(:,:) ' ,im(:,:) ' ,w' ] % List specified range of points % in Nyquist diagram. pause ch10p3 (Example 10.8) We can use MATLAB to ﬁnd gain margin ( Gm), phase margin (Pm), the gain-margin frequency, where the phase plot goes through 180 degrees ( Wcg), and the phase-margin frequency, where the magnitude plot goes through zero dB (Wcp) .T o ﬁnd these quantities we use [Gm,Pm,Wcg,Wcp] =margin(G) , where G(s)=numg/deng andGis an LTI transfer-function object. Let us look at Example 10.8 in the text. ' (ch10p3) Example 10.8' % Display label. clf % Clear graph. numg=6; % Define numerator of G(s). deng=conv( [1 2] , [1 2 2] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). nyquist(G) % Make a Nyquist diagram. grid on % Turn on grid for the Nyquist% diagram. title ( 'Open-Loop Frequency Response' ) % Add a title to the Nyquist % diagram. [Gm,Pm,Wcg,Wcp] =margin(G); % Find margins and margin % frequencies.B.2 MATLAB Examples 797WEBBAPPB 10/29/2014 9:25:9 ' Gm(dB); Pm(deg.) ; 180 deg. freq.(r/s); 0 dB freq. (r/s) ' % Display label. margins= [20*log10(Gm) ,Pm,Wcg,Wcp] % Display margin data. pause ch10p4 (Example 10.9) We can use MATLAB to determine the range of Kfor stability using frequency response methods. Let us look at Example 10.9 in the text. ' (ch10p4) Example 10.9' % Display label. numg=1; % Define numerator of G(s). deng=poly( [-2 -4 -5] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). [Gm,Pm,Wcg,Wcp] =margin(G); % Find margins and margin % frequencies. K=Gm % Display K for stability. pause ch10p5 (Example 10.11) We can use MATLAB to ﬁnd the closed-loop frequency response. Let us look at Example 10.11 in the text. ' (ch10p5) Example 10.11 ' % Display label. clf % Clear graph. numg=50; % Define numerator of G(s). deng=poly( [0 -3 -6] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). 'T(s) ' % Display label. T=feedback(G,1) % Find and display closed-loop % transfer function. bode(T) % Make a Bode plot. grid on % Turn on the grid for the plots. title( 'Closed-Loop Frequency Response' ) % Add a title to the Bode plot. pausenyquist(T) % Make a Nyquist diagram. title( 'Closed-Loop Frequency Response' ) % Add a title to the Nyquist% diagram. pause ch10p6 We can use MATLAB to plot Nichols charts using nichols(G) , where G(s) =numg/deng andGis an LTI transfer-function object. The Nichols grid can be added using the ngrid command after the nichols(G) command. Information about the plots obtained with nichols(G) can be found by left-clicking the mouse on the curve. You can ﬁnd the curve ’s label, as well as the coordinates of the point on which you clicked and the frequency. Right-clicking away from a curve brings up a menu if the icons on the menu bar are deselected. From this menu you can select (1) system responses to bedisplayed and (2) characteristics, such as peak response. When selected, a dot appears onthe curve at the appropriate point. Let your mouse rest on the point to read the value of thecharacteristic. You may also select (3) choice for grid on or off, (4) returning to full view798 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:9 after zooming, and (5) properties, such as labels, limits, units, style, and characteristics. Let us make a Nichols chart of G s1=s s1 s2. ' (ch10p6) ' % Display label. clf % Clear graph. numg=1; % Define numerator of G(s). deng=poly( [0 -1 -2] ); % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). nichols(G) % Make a Nichols plot. ngrid % Add Nichols grid. pause ch10p7 (Example 10.15) We can use MATLAB and frequency response methods to include time delay in the loop. Time delay is represented by [numd,dend] =pade (T, n), where Tis the delay time in seconds and nis the order. Larger values of ngive better approximations to the delay, G d(s)=numd/dend . Since we are plotting multiple plots, we ﬁrst collect the data for the Bode plots by using [mag,phase] =bode(G,w) , where wis speciﬁed as a range of frequencies. We then use the generic plotting command. Also notice the commands used to label the axes and the plots on the Bode plot (see the MATLAB instruction manual for details). Let us look at Example 10.15 in the text. ' (ch10p7) Example 10.15' % Display label. clf % Clear graph. hold off % Turn graph hold off. numg=1; % Define numerator of G(s). deng=poly( [0 -1 -10] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). w=0.01:0.1:10; % Let 0.01 <w<10 in steps of 0.1. [magg,phaseg] =bode (G,w); % Collect Bode data for G(s). [numd,dend] =pade(1,6); % Represent the delay. Gd=tf(numd,dend); % Create and display the delay, % Gd(s). [magd,phased] =bode(Gd,w); % Collect Bode data for Gd(s). Ge=Gd*G; % Form Gd(s)G(s). [mage,phasee] =bode(Ge,w); % Collect Bode data for Gd(s)G(s). subplot(2,1,1) % Subdivide plot area for plot 1. semilogx(w,20*log10(mage(:,:) ) ) % Plot magnitude response.grid on % Turn on grid for magnitude plot. axis( [0.01,10,-80,20] ); % Limit Bode plot axes. title ( 'Magnitude Response with Delay' ) % Add title to magnitude response. xlabel( 'Frequency (rad/s) ' ) % Label x-axis of magnitude % response. ylabel( ' 20log M ' ) % Label y-axis of magnitude% response. subplot(2,1,2) % Subdivide plot area for plot 2. phased=phased-1080; % Adjust phase offset to compensate% for modulo 360. phasee=phasee-1080; % Adjust phase offset to compensate% for modulo 360. semilogx(w,phaseg(:,:),w,phased(:,:),w,phasee(:,:) ) % Plot phase response for G(s),% Gd(s), and G(s)Gd(s) on one% graph.B.2 MATLAB Examples 799WEBBAPPB 10/29/2014 9:25:9 grid on % Turn on grid for phase plot. axis( [0.01,10,-900,0] ); % Limit Bode plot axes. title ( 'Phase Response with Delay ' ) % Add title to phase response. xlabel( 'Frequency (rad/s) ' ) % Label x-axis of phase response. ylabel( 'Phase (degrees) ' ) % Label y-axis of phase response. text(1.5,-50, 'Time Delay ' ) % Label time delay curve. text(4,-150, 'System ' ) % Label system curve. text(2.7,-300, ' Total ' ) % Label total curve. pause ch10p8 (Example 10.18) We can use MATLAB and frequency response methods to determine experimentally a transfer function from frequency response data. By determining simple component transfer functions and then successively subtracting their frequency response,we can approximate the complete transfer function. Let us look at Example 10.18 in the text anduse MATLAB for a portion of the problem. You can complete the program for practice. For thisproblem we generate the original frequency response plot via a transfer function. Normally, thedata for the original frequency response plot would be tabular, and the program would begin at the step [M0,P0] =bode(G0,w) where the tabular data is generated. In other words, in a real application, the data would consist of column vectors M0, P0, and w ' . ' (ch10p8) Example 10.18' % Display label. clf % Clear graph. hold off % Turn graph hold off. % Generate the experimental Bode plots for G0 (s) =numg0/deng0, that % is, M0,P0. numg0=70* [1 20]; % Define numerator of G0(s). deng0=conv( [1 7] ,[1 2 25] ); % Partially define denominator of % G0(s). deng0=conv(deng0 ,[1 70] ); % Complete the denominator of % G0(s). G0=tf(numg0,deng0); % Create G0(s). w=1:0.5:1000; % Let 1 <w<1000 in steps of 0.5. [M0, P0] =bode(G0 ,w); % Generate the tabular data. [20*log10(M0(:,:) ) ' ,P0(:,:) ' ,w ' ]; % Convert magnitude data to dB. bode(G0,w) % Generate a Bode plot. grid on % Turn on grid for Bode plot. title( 'Experimental ' ) % Add title. pauseclf % Clear graph. % Estimate a component part of the transfer function as% G1 (s) =25/ (s^2+2*0.22*5s+5^2) and subtract it from the experimental% frequency response numgl=5^2; % Define numerator of G1(s). deng1= [1 2*0.22*5 5^2]; % Define denominator of G1(s). 'First estimate ' % Display label. G1=tf(numg1,deng1) % Create and display G1(s). [M1,P1] =bode(G1,w); % Generate Bode data for G1(s). M2=20*log10(M0(:,:) )-20*log10(M1(:,:) ); % Subtract Bode magnitude data of% G1 from original magnitude data. P2=P0(:,:)-P1(:,:); % Subtract Bode phase data of G1 % from original phase data. subplot(2,1,1) % Divide plot area in two for% magnitude plot. semilogx(w(:,:),M2) % Plot magnitude response after% subtracting.800 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:10 grid on % Turn on grid for magnitude plot. xlabel( 'Frequency (rad/sec) ' ) % Add x-axis label. ylabel( 'Gain dB ' ) % Add y-axis label. subplot(2,1,2) % Divide plot area in two for phase % plot. semilogx(w,P2) % Plot the phase response after % subtracting. grid on % Turn on grid for phase plot. title( 'Experimental Minus 25/ (s^2+2*0.22*5s+5^2) ' ) % Add title. xlabel( 'Frequency (rad/sec) ' ) % Add x-axis label. ylabel( 'Phase deg ' ) % Add y-axis label. 'This completes a portion of Example 10.18. ''The student should continue the program for practice. ' pause Chapter 11: Design via Frequency Response ch11p1 (Example 11.1) We can design via gain adjustment on the Bode plot using MATLAB. You will input the desired percent overshoot from the keyboard. MATLAB will calculate the required phase margin and then search the Bode plot for that phase margin. Themagnitude at the phase-margin frequency is the reciprocal of the required gain. MATLABwill then plot a step response for that gain. Let us look at Example 11.1 in the text. ' (ch11p1) Example 11.1' % Display label. clf % Clear graph. numg= [100]; % Define numerator of G(s). deng=poly ( [0 -36 -100] ); % Define denominator of G(s). G=tf(numg,deng) % Create and display G(s). pos=input ( 'Type %OS ' ); % Input desired percent overshoot. z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping ratio. Pm=atan(2*z/ (sqrt(-2*z^2+sqrt(1+4*z^4) ) ) ) * (180/pi); % Calculate required phase margin. w=0.01:0.01:1000; % Set range of frequency from 0.01 % to 1000 in steps of 0.01. [M,P] =bode(G,w); % Get Bode data. Ph=-180+Pm; % Calculate required phase angle. for k=1: 1: length (P); % Search Bode data for required % phase angle. if P(k)-Ph <=0; % If required phase angle is found, % find the value of M=M(k); % magnitude at the same frequency. 'Required K ' % Display label. K=1/M % Calculate the required gain. break % Stop the loop. end % End if. end % End for. T=feedback(K*G,1); % Find T(s) using the calculated K. step(T) % Generate a step response. title ( [ 'Closed-Loop Step Response for K= ' ,num2str(K) ] ) % Add title to step response. pause ch11p2 (Example 11.2) Let us use MATLAB to design a lag compensator. The program solves Example 11.2 in the text and follows the same design techniqueB.2 MATLAB Examples 801WEBBAPPB 10/29/2014 9:25:10 demonstrated in that example. You will input the value of gain to meet the steady-state error requirement followed by the desired percent overshoot. MATLAB then designs a lag compensator, evaluates Kv,and generates a closed-loop step response. ' (ch11p2) Example 11.2' % Display label. clf % Clear graph. K=input( 'Type value of K to meet steady-state error requirement ' ); % Input K. pos=input ( 'Type %OS ' ); % Input desired percent overshoot. numg= [100*K]; % Define numerator of G(s). deng=poly( [0 -36 -100] ); % Define denominator of G(s). 'G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping % ratio. Pm=atan(2*z/(sqrt(-2*z^2+sqrt(1+4*z^4) ) ) ) * (180/pi)+10; % Calculate required phase margin. w=0.01:0.01:100; % Set range of frequency from 0.01% to 1000 in steps of 0.01. [M,P] =bode(G,w); % Get Bode data. Ph=-180+Pm; % Calculate required phase angle. for k=1:1:length(P); % Search Bode data for required% phase angle. if P(k)-Ph <=0; % If required phase angle is found,% find the value of M=M(k); % magnitude at the same frequency. wf=w(k); % At this frequency the magnitude % plot must go through 0 dB. break % Stop the loop. end % End if. end % End for. wh=wf/10; % Calculate the high-frequency % break of the lag compensator. wl= (wh/M); % Calculate the low-frequency% break of the lag compensator;% found from lag compensator, % Gc(s) =Kc(s+wh)/ (s+wl) , high & low % frequency gain requirements.% At low w, gain=1. Thus,% Kc*wh/wl=1. At high w, gain=1/M. % Thus Kc=1/M. Hence % Kc=wl/wh=1/M, or wl=wh/M. numc= [1 wh]; % Generate numerator of lag % compensator, Gc(s). denc= [1 wl]; % Generate denominator of lag % compensator, Gc(s). Kc=wl/wh; % Generate K for Gc(s). 'Lag compensator' % Display label. Kc % Display lag compensator K. 'Gc(s) ' % Display label. Gc=tf(Kc*numc,denc) % Create and display Gc(s). ' Gc(s)G(s) ' % Display label. GcG=Gc*G % Create and display Gc(s)G(s). s=tf( [1 0],1); % Create transfer function, ' s ' . sGcG=s*GcG; % Create sGc(s)G(s). sGcG=minreal(sGcG); % Cancel common terms.802 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:10 Kv=dcgain(sGcG) % Evaluate Kv. T=feedback(GcG,1); % Create T(s). step(T) % Generate a closed-loop, lag- % compensated step response. title ( 'Closed-Loop Step Response for Lag-Compensated System ' ) % Add title to step response. pause ch11p3 (Example 11.3) Let us use MATLAB to design a lead compensator. The program solves Example 11.3 in the text and follows the same design technique demonstrated in that example. You will enter desired percent overshoot, peak time, and Kv.MATLAB then designs the lead compensator using Bode plots, calculates Kv,and plots a closed-loop step response. ' (ch11p3) Example 11.3' % Display label. clf % Clear graph. pos=input ( 'Type %OS ' ); % Input desired percent overshoot. Tp=input( ' Type peak time ' ); % Input desired peak time. Kv=input( ' Type value of Kv ' ); % Input Kv. numg= [100]; % Define numerator of G(s). deng=poly ( [0 -36 -100] ); % Define denominator of G(s). G=tf(numg,deng); % Create G(s). s=tf( [1 0],1); % Create transfer function, ' s' . sG=s*G; % Create sG(s). sG=minreal(sG); % Cancel common factors. K=dcgain(Kv/sG); % Solve for K. 'G(s) ' % Display label. G=zpk(K*G) % Put K into G (s), convert to % factored form, and display. z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping% ratio. Pm=atan(2*z/(sqrt(-2*z^2+sqrt(1+4*z^4) ) ) ) * (180/pi); % Calculate required phase margin. wn=pi/(Tp*sqrt(1-z^2) ); % Calculate required natural% frequency. wBW=wn*sqrt( (1-2*z^2)+sqrt(4*z^4-4*z^2+2) ); % Determine required bandwidth. w=0.01:0.5:1000; % Set range of frequency from 0.01 % to 1000 in steps of 0.5 [M,P]=bode(G,w); % Get Bode data. [Gm,Pm,Wcg,Wcp]=margin(G); % Find current phase margin.Pmreq=atan(2*z/(sqrt(-2*z^2+sqrt(1+4*z^4) ) ) ) * (180/pi); % Calculate required phase margin. Pmreqc=Pmreq+10; % Add a correction factor of 10 % degrees. Pc=Pmreqc-Pm; % Calculate phase contribution % required from lead compensator. % Design lead compensatorbeta= (1-sin(Pc*pi/180) )/(1+sin(Pc*pi/180) ); % Find compensator beta. magpc=1/sqrt(beta); % Find compensator peak magnitude. for k=1:1:length(M); % Find frequency at which% uncompensated system has a % magnitude of 1/magpc. % This frequency will be the new% phase margin frequency. if M(k)-(1/magpc) <=0; % Look for peak magnitude.B.2 MATLAB Examples 803WEBBAPPB 10/29/2014 9:25:11 wmax=w(k); % This is the frequency at the % peak magnitude. break % Stop the loop, end % End if. end % End for. % Calculate lead compensator zero, pole, and gain. zc=wmax*sqrt(beta); % Calculate the lead compensators ' % low break frequency. pc=zc/beta; % Calculate the lead compensators ' % high break frequency. Kc=1/beta; % Calculate the lead compensators ' % gain. 'Gc(s) ' % Display label. Gc=tf(Kc*[1 zc] ,[1 pc] ); % Create Gc(s). Gc=zpk(Gc) % Convert Gc (s) to factored form % and display. 'Ge(s) =G(s)Gc(s) ' % Display label. Ge=G*Gc % Form Ge(s)=Gc(s)G(s). sGe=s*Ge; % Create sGe(s). sGe=minreal(sGe); % Cancel common factors. Kv=dcgain(sGe) % Calculate Kv. T=feedback(Ge,1); % Find T(s). step(T) % Generate closed-loop, lead- % compensated step response. title( ' Lead-Compensated Step Response' ) % Add title to lead-compensated% step response. pause ch11p4 (Example 11.4) Let us use MATLAB to design a lag-lead compensator. The program solves Example 11.4 in the text and follows the same design technique demon- strated in that example. You will enter desired percent overshoot, peak time, and Kv. MATLAB then designs the lag-lead compensator using Bode plots, calculates Kv,and plots a closed-loop step response. ' (ch11p4) Example 11.4' % Display label. clf % Clear graph. pos=input( 'Type %OS ' ); % Input desired percent overshoot. Tp=input( 'Type peak time ' ); % Input desired peak time. Kv=input( 'Type value of Kv ' ); % Input desired Kv. numg= [1]; % Define numerator of G(s). deng=poly( [0 -1 -4] ); % Define denominator of G(s). G=tf(numg,deng); % Create G(s) without K. s=tf( [1 0],1); % Create transfer function, ' s ' . sG=s*G; % Create sG(s). sG=minreal(sG); % Cancel common factors. K=dcgain(Kv/sG); % Solve for K. 'G(s) ' % Display label. G=tf(K*numg,deng); % Put K into G(s). G=zpk(G) % Convert G(s) to factored form and% display. z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping ratio. Pmreq=atan(2*z/ (sqrt(-2*z^2+sqrt(1+4*z^4) ) ) ) * (180/pi); % Calculate required phase margin. wn=pi/ (Tp*sqrt(1-z^2) ); % Calculate required natural% frequency.804 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:11 wBW=wn*sqrt( (1-2*z^2)+sqrt(4*z^4-4*z^2+2) ); % Determine required bandwidth. wpm=0.8*wBW; % Choose new phase-margin % frequency. [M,P] =bode(G,wpm); % Get Bode data. Pmreqc=Pmreq-(180+P)+5; % Find phase contribution required % from lead compensator% with additional 5 degrees. beta= (1-sin(Pmreqc*pi/180) )/(1+sin(Pmreqc*pi/180) ); % Find beta.% Design lag compensator zero, pole,% and gain. zclag=wpm/10; % Calculate zero of lag compensator. pclag=zclag*beta; % Calculate pole of lag compensator. Kclag=beta; % Calculate gain of lag compensator. 'Lag compensator, Glag(s) ' % Display label. Glag=tf(Kclag* [1 zclag] ,[1 pclag] ); % Create lag compensator.Glag=zpk(Glag) % Convert Glag(s) to factored form% and display. % Design lead compensator zero, % pole, and gain. zclead=wpm*sqrt(beta); % Calculate zero of lead % compensator. pclead=zclead/beta; % Calculate pole of lead % compensator. Kclead=1/beta; % Calculate gain of lead% compensator. 'Lead compensator' % Display label. Glead=tf(Kclead* [1 zclead] ,[1 pclead] ); % Create lead compensator. Glead=zpk(Glead) % Convert Glead(s) to factored form% and display. 'Lag-Lead Compensated Ge(s) ' % Display label. Ge=G*Glag*Glead % Create compensated system,% Ge(s) =G(s) Glag(s) Glead(s). sGe=s*Ge; % Create sGe(s). sGe=minreal(sGe); % Cancel common factors. Kv=dcgain(sGe) % Calculate Kv. T=feedback(Ge,1); % Find T(s). step(T) % Generate closed-loop, lag-lead-% compensated step response. title( 'Lag-Lead-Compensated Step Response ' ) % Add title to lag-lead-% compensated% step response. pause Chapter 12: Design via State Space ch12p1 (Example 12.1) We can use MATLAB to design controller gains using pole placement. You will enter the desired percent overshoot and settling time. We introduce the following commands: [num,den] =ord2(wn,z) , which produces a second-order system, given the natural frequency (wn) and the damping ratio (z). Then we use the denominator (den)to specify the dominant poles; and K=acker (A,B,-poles) , which calculates controller gains from the system matrix (A), the input matrix(B),t h e desired poles (poles). Let us look at Example 12.1 in the text.B.2 MATLAB Examples 805WEBBAPPB 10/29/2014 9:25:11 ' (ch12p1) Example 12.1 ' % Display label. clf % Clear graph. numg=20* [1 5]; % Define numerator of G(s). deng=poly( [0 -1 -4] ); % Define denominator of G(s). 'Uncompensated G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). pos=input( 'Type desired %OS ' ); % Input desired percent overshoot. Ts=input( 'Type desired settling time ' ); % Input desired settling time. z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping ratio. wn=4/ (z*Ts); % Calculate required natural % frequency. [num,den] =ord2(wn,z); % Produce a second-order system % that meets the transient response % requirements. r=roots(den); % Use denominator to specify % dominant poles. poles= [r(1) r(2) -5.1]; % Specify pole placement for all % poles. characteristiceqdesired=poly(poles) % Form desired characteristic% polynomial for display. [Ac Bc Cc Dc] =tf2ss(numg,deng); % Find controller canonical form % of state-space representation% of G(s). P= [0 0 1;0 1 0;1 0 0]; % Transformation matrix for % controller canonical to phase-% variable form. Ap=inv(P)*Ac*P; % Transform Ac to phase-variable% form. Bp=inv(P) *Bc; % Transform Bc to phase-variable % form. Cp=Cc*P; % Transform Cc to phase-variable % form. Dp=Dc; % Transform Dc to phase-variable% form. Kp=acker(Ap,Bp,poles) % Calculate controller gains in % phase-variable form. Apnew=Ap-Bp*Kp; % Form compensated A matrix. Bpnew=Bp; % Form compensated B matrix. Cpnew=Cp; % Form compensated C matrix. Dpnew=Dp; % Form compensated D matrix. [numt,dent] =ss2tf(Apnew,Bpnew,Cpnew,Dpnew); % Form T(s) numerator and% denominator. 'T(s) ' % Display label. T=tf(numt,dent) % Create and display T(s). poles=roots(dent) % Display poles of T(s). Tss=ss(Apnew,Bpnew,Cpnew,Dpnew) % Create and display Tss, an LTI % state-space object. step(Tss) % Produce compensated step % response. title( 'Compensated Step Response' ) % Add title to compensated step % response. pause806 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:12 ch12p2 (Example 12.2) We can test controllability by using the MATLAB command Cm=ctrb(A,B) toﬁnd the controllability matrix given the system matrix (A)and the input matrix (B). This command is followed by rank(Cm) to test the rank of the controllability matrix (Cm) . Let us apply the commands to Example 12.2. ' (ch12p2) Example 12.2' % Display label. A= [-1 1 0;0 -1 0;0 0 -2] % Define compensated A matrix. B= [0;1;1] % Define compensated B matrix. Cm=ctrb(A,B) % Calculate controllability % matrix. Rank=rank(Cm) % Find rank of controllability % matrix. pause ch12p3 (Example 12.4) If we design controller gains using MATLAB, we do not have to convert to phase-variable form. MA TLAB will give us the controller gains for any state-space representation we input. Let us look at Example 12.4 in the text. ' (ch12p3) Example 12.4' % Display label. clf % Clear graph. A= [-5 1 0;0 -2 1;0 0 -1]; % Define system matrix A. B= [0;0;1]; % Define input matrix B. C= [-1 1 0]; % Define output matrix C. D=0; % Define matrix D. pos=input( 'Type desired %OS ' ); % Input desired percent overshoot.Ts=input( 'Type desired settling time ' ) % Input desired settling time. z= (-log(pos/100) )/ (sqrt(pi^2+log(pos/100)^2) ); % Calculate required damping ratio. wn=4/ (z*Ts); % Calculate required natural% frequency. [num,den] =ord2(wn,z); % Produce a second-order system% that meets the transient% requirements. r=roots(den); % Use denominator to specify% dominant poles. poles= [r(1) r(2) -4]; % Specify pole placement for all % poles. K=acker(A,B,poles) % Calculate controller gains. Anew=A-B*K; % Form compensated A matrix. Bnew=B; % Form compensated B matrix. Cnew=C; % Form compensated C matrix. Dnew=D; % Form compensated D matrix. Tss=ss(Anew,Bnew,Cnew,Dnew); % Form LTI state-space object. 'T(s) ' % Display label. T=tf(Tss); % Create T(s). T=minreal(T) % Cancel common terms and display% T(s). poles=pole(T) % Display poles of T(s). step(Tss) % Produce compensated step% response. title( 'Compensated Step Response' ) % Add title to compensated step % response. pauseB.2 MATLAB Examples 807WEBBAPPB 10/29/2014 9:25:12 ch12p4 (Example 12.5) We can design observer gains by using the command l=acker(A ' ,C ' ,poles) ' . Notice we use the transpose of the system matrix (A) and output matrix (C)along with the desired poles (poles). Let us look at Example 12.5 in the text. ' (ch12p4) Example 12.5' % Display label. numg= [1 4]; % Define numerator of G(s). deng=poly( [-1 -2 -5] ); % Define denominator of G(s). ' G(s) ' % Display label. G=tf(numg,deng) % Create and display G(s). [Ac,Bc,Cc,Dc] =tf2ss(numg,deng); % Transform G(s) to controller % canonical form in state space. Ao=Ac' ; % Transform Ac to observer % canonical form. Bo=Cc' ; % Transform Bc to observer % canonical form. Co=Bc' ; % Transform Cc to observer% canonical form. Do=Dc; % Transform Dc to observer % canonical form. r=roots( [1 2 5] ) % Find the controller-compensated % system poles. poles=10* [r ' 10*real(r(1) ) ] % Make observer poles 10x bigger.lp=acker(Ao ' ,Co ' ,poles) ' % Find the observer gains in% observer canonical form. pause ch12p5 (Example 12.6) We can test observability using the MATLAB command Om=obsv(A,C) toﬁnd the observability matrix given the system matrix (A)and the output matrix (C). This command is followed by rank(Om) to test the rank of the observability matrix (Om) . Let us apply the commands to Example 12.6. ' (ch12p5) Example 12.6 ' % Display label. A= [0 1 0;0 0 1;-4 -3 -2] % Define compensated A matrix. C= [0 5 1] % Define compensated C matrix. Om=obsv(A,C) % Form observability matrix. Rank=rank(Om) % Find rank of observability % matrix. pause ch12p6 (Example 12.8) We can design observer gains using the command l=acker (A ' ,C ' ,poles) ' without transforming to observer canonical form. Let us look at E x a m p l e1 2 . 8i nt h et e x t . ' (ch12p6) Example 12.8' % Display label. A= [-5 1 0;0 -2 1;0 0 -1]; % Define system matrix A. B= [0;0;1]; % Define input matrix B. C= [1 0 0]; % Define output matrix C. D=0; % Define matrix D. poles=roots( [1 120 2500 50000] ) % Specify pole placement for all % poles. l=acker(A ' ,C ' ,poles) ' % Calculate observer gains. pause808 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:13 Chapter 13: Digital Control Systems ch13p1 (Example 13.4) We can convert G1(s) in cascade with a zero-order hold (z.o.h.) to G(z)u s i n gM A T L A B ’sG=c2d (G1,T, ' zoh' ) command, where G1is an LTI continuous-system object and Gis an LTI sampled-system object. Tis the sampling interval and 'zoh' is a method of transformation that assumes G1(s) in cascade with a z.o.h. We simply put G1(s) into the command (the z.o.h. is automatically taken care of) and the command returns G(z). Let us apply the concept to Example 13.4. You will enter Tthrough the keyboard. ' (ch13p1) Example 13.4' % Display label. T=input( 'Type T ' ); % Input sampling interval. numg1s= [1 2]; % Define numerator of G1(s). deng1s= [1 1]; % Define denominator of G1(s). 'G1(s) ' % Display label. G1=tf(numg1s,deng1s) % Create G1(s) and display. 'G(z) ' % Display label. G=c2d(G1,T, ' zoh' ) % Convert G1(s) in cascade with % z.o.h. to G(z) and display. pause ch13p2 We also can use MATLAB to convert G(s)t oG(z) when G(s) is not in cascade with a z.o.h. The command H=c2d(F,T, ' zoh ' )transforms F(s) in cascade with a z.o.h. to H(z),where H z z 1=z*zfF s=sg. If we let F ssG s, the command solves for H(z), where H z z 1=z*zfG sg. Hence, zfG sg  z=z 1*H z. In summary, input F ssG s, and multiply the result of H=c2d(F,T, ' zoh ' )by z=z 1. This process is equivalent to ﬁnding the z-transform. We convert G s s3= s26s13 intoG(z). You will enter T, the sampling interval, through the keyboard. Tis used to form H(z). We use an unspeci ﬁed sampling interval, T= [ ] , to form z= z 1. ' (ch13p2) ' % Display label. T=input( 'Type T ' ); % Input sampling interval. numgs= [1 3]; % Define numerator of G(s). dengs= [1 6 13]; % Define denominator of G(s). 'G(s) ' % Display label. Gs=tf(numgs,dengs) % Create and display G(s). Fs=Gs*tf( [1 0] ,1); % Create F(s) =sG(s). Fs=minreal(Fs); % Cancel common poles and zeros. Hz=c2d(Fs,T, 'zoh' ); % Convert F(s) to H(z) assuming% z.o.h. Gz=Hz*tf( [1 0] ,[1 -1] ,[ ] ); % Form G(z) =H(z)*z/(z-1). 'G(z) ' % Display label. Gz=minreal(Gz) % Cancel common poles and zeros. pause ch13p3 Creating Digital Transfer Functions Directly Vector Method, Polynomial Form A digital transfer function can be expressed as a numerator polynomial divided by adenominator polynomial, that is, F zN z=D z. The numerator, N(z),is represented by a vector, numf , that contains the coef ﬁcients of N(z). Similarly, the denominator, D(z), is represented by a vector, denf , that contains the coef ﬁcients of D(z). We form F(z) with the command, F=tf(numf,denf,T) , where Tis the sampling interval. Fis called a linear time-invariant (LTI) object. This object, or transfer function, can be used as anentity in other operations, such as addition or multiplication. We demonstrate withB.2 MATLAB Examples 809WEBBAPPB 10/29/2014 9:25:13 F z150 z22z7= z2 0:3z0:02. We use an unspeci ﬁed sampling interval, T=[] .Notice after executing the tfcommand, MATLAB prints the transfer function. Vector Method, Factored Form We also can create digital LTI transfer functions if the numerator and denominator areexpressed in factored form. We do this by using vectors containing the roots of thenumerator and denominator. Thus, G sK *N z=D zcan be expressed as an LTI object using the command, G=zpk(numg,deng,K,T) , where numg is a vector containing the roots of N(z),deng is a vector containing the roots of D(z),Kis the gain, and Tis the sampling interval. The expression zpk stands for zeros (roots of the numerator), poles (roots of the denominator), and gain, K. We demonstrate with G z20 z2 z4=  z 0:5 z 0:7 z 0:8and an unspeci ﬁed sampling interval. Notice after executing the zpk command, MATLAB prints the transfer function. Rational Expression in zMethod, Polynomial Form (Requires Control System Toolbox 9.7) This method allows you to type the transfer function as you normally would write it. The statement z=tf( 'z' ) must precede the transfer function if you wish to create a digital LTI transfer function in polynomial form equivalent to using G=tf(numg, deng,T) . Rational Expression in zMethod, Factored Form (Requires Control System Toolbox 9.7)This method allows you to type the transfer function as you normally would write it. Thestatement z=zpk( 'z' ) must precede the transfer function if you wish to create a digital LTI transfer function in factored form equivalent to using G=zpk(numg,  deng,K,T) . For both rational expression methods the transfer function can be typed in any form regardless of whether z=tf( 'z' ) or z=zpk( 'z' ) is used. The difference is in the created digital LTI transfer function. We use the same examples above to demonstrate therational expression in zmethods. ' (ch13p3) ' % Display label. 'Vector Method, Polynomial Form ' % Display label. numf=150* [1 2 7] % Store 150(z^2+2z+7) in numf and % display. denf= [1 -0.3 0.02] % Store(z^2-0.3z+0.02) in denf and% display. 'F(z) ' % Display label. F=tf(numf,denf,[ ] ) % Form F(z) and display. clear % Clear previous variables from % workspace. 'Vector Method, Factored Form ' % Display label. numg= [-2 -4] % Store (s+2)(s+4) in numg and% display. deng= [0.5 0.7 0.8] % Store (s-0.5) (s-0.7) (s-0.8) in % deng and display. K=20 % Define K. 'G(z) ' % Display label. G=zpk(numg,deng,K,[ ] ) % Form G(z) and display, clear % Clear previous variables from % workspace. 'Rational Expression Method, Polynomial Form ' % Display label. z=tf( 'z' ) % Define z as an LTI object in % polynomial form.810 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:13 F=150* (z^2+2*z+7) / (z^2-0.3*z+0.02) % Form F(z) as an LTI transfer % function in polynomial form. G=20* (z+2) * (z+4) / [ (z-0.5) * (z-0.7) * (z-0.8) ] % Form G(z) as an LTI transfer % function in polynomial form. clear % Clear previous variables from % workspace. 'Rational Expression Method, Factored Form ' % Display label. z=zpk( 'z' ) % Define z as an LTI object in % factored form. F=150* (z^2+2*z+7)/(z^2-0.3*z+0.02) % Form F(z) as an LTI transfer% function in factored form. G=20* (z+2) * (z+4)/ [ (z-0.5) * (z-0.7) * (z-0.8) ] % Form G(z) as an LTI transfer% function in factored form. pause ch13p4 We also can use MATLAB to convert G(z)t o G(s)w h e n G(s) is not in cascade with a z.o.h. First, we create a samp led LTI transfer function, as discussed in ch13p3. The command F=d2c(H, 'zoh ' ) transforms H(z)t oF(s) in cascade with a z. o.h., where H z z 1=zzfF s=sg. If we consider F ssG s, the command solves for sG(s)g i v e n H(z). Finally, sG s=sG syields the ﬁnal result. In summary, form H(z), where H z z 1=zG z.U s e F=d2c (H, 'zoh ' ) toﬁndF ssG s. Divide the result by sand obtain G(s). We convert G zz= z 0:3into G(s). You will enter T, the sampling interval, through the keyboard. ' (ch13p4) ' % Display label. T=input( 'Type T ' ); % Input sampling interval. numgz= [1 0]; % Define numerator of G(z). dengz= [1 -.3]; % Define denominator of G(z). 'G(z) ' % Display label. Gz=tf(numgz,dengz,T) % Create and display G(z). Hz=Gz*tf( [1 -1] ,[1 0] ,T); % Create H(z) = ( (z-1) /z)*G(z). Hz=minreal(Hz); % Cancel common poles and zeros. Fs=d2c(Hz, 'zoh' ); % Convert from H(z)to F(s) =sG(s). Gs=Fs*tf(1 ,[1 0] ); % Create G(s) =F(s)(1/s). 'G(s) ' % Display label. Gs=minreal(Gs) % Cancel common poles and zeros. pause ch13p5 (Example 13.6) We can use MATLAB to ﬁnd the gain for stability. Let us look at Example 13.6 in the text. ' (ch13p5) Example 13.6' % Display label. numgas=27; % Define numerator of Ga(s). dengas= [1 27 0]; % Define denominator of Ga(s). 'Ga(s) ' % Display label. Ga=tf(numgas,dengas) % Create and display Ga(s). 'G(z) ' % Display label. Gz=c2d(Ga,0.1, 'zoh' ) % Find G(z) assuming Ga(s) in% cascade with z.o.h. and display.B.2 MATLAB Examples 811WEBBAPPB 10/29/2014 9:25:14 for K=1:0.1:50; % Set range of K to look for % stability. Tz=feedback(K*Gz,1); % Find T(z). r=pole(Tz); % Get poles for this value of K. rm=max(abs(r) ); % Find pole with maximum absolute% value for this value of K. if rm>=1, % See if pole is outside unit% circle. break; % Stop if pole is found outside % unit circle. end; % End if. end; % End for. K % Display K value. r % Display closed-loop poles for % this value of K. rm % Display absolute value of pole. pause ch13p6 (Example 13.9) We can use MATLAB ’sc o m m a n d dcgain(Gz) toﬁnd steady- state errors. The command evaluates the dc gain of Gz, a digital LTI transfer function object, by evaluating Gzatz1. We use the dc gain to evaluate, Kp,Kv,a n dK a. Let us look at Example 13.9 in the text. You will input T, the sampling interval, through the keyboard to test stability. ' (ch13p6) Example 13.9' % Display label. T=input( 'Type T ' ); % Input sampling interval. numg1s= [10]; % Define numerator of G1(s). deng1s=poly( [0 -1] ); % Define denominator of G1(s). 'G1(s) ' % Display label. G1s=tf(numg1s,deng1s) % Create and display G1(s). 'G(z) ' % Display label. Gz=c2d(G1s,T, ' zoh' ) % Convert G1(s) and z.o.h. to G(z)% and display. 'T(z) ' % Display label. Tz=feedback(Gz,1) % Create and display T(z). 'Closed-Loop z-Plane Poles' % Display label. r=pole(Tz) % Check stability. M=abs(r) % Display magnitude of roots. pauseKp=dcgain(Gz) % Calculate Kp. GzKv=Gz* (1/T)*tf( [1 -1],[1 0],T); % Multiply G(z) by(1/T) * (z-1). % Also, divide G(z) by z , which% makes transfer function proper% and yields same Kv. GzKv=minreal(GzKv,0.00001); % Cancel common poles and zeros.Kv=dcgain(GzKv) % Calculate Kv. GzKa=Gz* (1/T^2) *tf ( [1 -2 1] , [1 0 0] ,T) ; % Multiply G(z) by (1/T^2) (z-1)^2. % Also, divide G(z)by z^2 , which% makes the transfer function% proper and yields the same Ka. GzKa=minreal(GzKa,0.00001); % Cancel common poles and zeros.Ka=dcgain(GzKa) % Calculate Ka. pause ch13p7 (Example 13.10) We now use the root locus to ﬁnd the gain for stability. First, we create a digital LTI transfer-function object for G zN z=D z;with an unspeci ﬁed sampling interval. The LTI object is created using tf(numgz,dengz, [] ) ,w h e r e numgz represents812 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:14 N(z),dengz represents D(z), and []indicates an unspeci ﬁed sampling interval. MATLAB produces a z-plane root locus along with the unit circle superimposed using the command, zgrid ( [] , [] ) . We then interactively select the intersection of the root locus and the unit circle. MATLAB responds with the value of gain and the closed-loop poles. Let us look at Example 13.10. ' (ch13p7) Example 13.10' % Display label. clf % Clear graph. numgz= [1 1]; % Define numerator of G(z). dengz=poly( [1 0.5] ); % Define denominator of G(z). 'G(z) ' % Display label. Gz=tf(numgz,dengz,[] ) % Create and display G(z). rlocus(Gz) % Plot root locus. zgrid( [] , [] ) % Add unit circle to root locus. title ( [ 'z-Plane Root Locus' ] ) % Add title to root locus. [K,p] =rlocfind(Gz) % Allows input of K by selecting% point on graphic. pause ch13p8 (Example 13.11) We now use the root locus to ﬁnd the gain to meet a transient response requirement. After MATLAB produces a z-plane root locus, along with damping ratio curves superimposed using the command zgrid, we interactively select the desired operating point at a damping ratio of 0.7, thus determining the gain. MATLAB responds with a gain value as well as the step response of the closed-loop sampled system using step(Tz) ,w h e r e Tzis a digital LTI transfer-function object. Let us look at Example 13.11. ' (ch13p8) Example 13.11' % Display label. clf % Clear graph. numgz= [1 1]; % Define numerator of G(z). dengz=poly( [1 0.5] ); % Define denominator of G(z). ' G(z) ' % Display label. Gz=tf(numgz,dengz,[] ) % Create and display G(z). rlocus(Gz) % Plot root locus. axis( [0,1,-1,1] ) % Create close-up view. zgrid % Add damping ratio curves to root % locus. title( [ 'z-Plane Root Locus' ] ) % Add title to root locus. [K,p] =rlocfind(Gz) % Allows input of K by selecting % point on graphic. ' T(z) ' % Display label. Tz=feedback(K*Gz,1) % Find T(z). step(Tz) % Find step response of gain-% compensated system. title ( [ 'Gain Compensated Step Response ' ] ) % Add title to step response of% gain-compensated system. pause ch13p9 (Example 13.12) Let us now use MATLAB to design a digital lead compensa- tor. The s-plane design was performed in Example 9.6. Here we convert the design to the z- plane and run a digital simulation of the step response. Conversion of the s-plane lead compensator, Gc(s)=numgcs/dengcs , to the z-plane compensator, Gc(z)=numgcz/ dengcz , is accomplished using the Gcz=c2d(numgcs,dengcs,T, ' tustin ' ) com- mand to perform a Tustin transformation, where T=sampling interval, which for this example is 1/300. This exercise solves Example 13.12 using MATLAB.B.2 MATLAB Examples 813WEBBAPPB 10/29/2014 9:25:15 ' (ch13p9) Example 13.12' % Display label. clf % Clear graph. T=0.01 % Define sampling interval. numgcs=1977* [1 6]; % Define numerator of Gc(s). dengcs= [1 29.1]; % Define denominator of Gc(s). 'Gc(s) in polynomial form' % Print label. Gcs=tf(numgcs,dengcs) % Create Gc(s) in polynomial form % and display. 'Gc(s) in polynomial form' % Display label. Gcszpk=zpk(Gcs) % Create Gc(s) in factored form% and display. 'Gc(z) in polynomial form via Tustin Transformation ' % Display label. Gcz=c2d(Gcs,T, 'tustin' ) % Form Gc(z) via Tustin% transformation. 'Gc(z) in factored form via Tustin Transformation' % Display label. Gczzpk=zpk(Gcz) % Show Gc(z) in factored form. numgps=1; % Define numerator of Gp(s). dengps=poly( [0 -6 -10] ); % Define denominator of Gp(s). 'Gp(s) in polynomial form' % Display label. Gps=tf(numgps,dengps) % Create Gp(s) in polynomial form % and display. 'Gp(s) in factored form' % Display label. Gpszpk=zpk(Gps) % Create Gp(s) in factored form% and display. 'Gp(z) in polynomial form' % Display label. Gpz=c2d(Gps,T, 'zoh' ) % Form Gp(z) via zoh transformation. 'Gp(z) in factored form' % Display label. Gpzzpk=zpk(Gpz) % Form Gp(z) in factored form. Gez=Gcz*Gpz; % Form Ge(z)= Gc(z)Gp(z). 'Ge(z) =Gc(z)Gp(z) in factored form ' % Display label. Gezzpk=zpk(Gez) % Form Ge(z) in factored form % and display. 'z-1 ' % Display label. zm1=tf( [1 -1],1,T) % Form z-1. zm1Gez=minreal(zm1*Gez,0.00001); % Cancel common factors. ' (z-1)Ge(z) for finding steady-state error' % Display label. zm1Gezzpk=zpk(zm1Gez) %Form & display(z-1)Ge(z) in% factored form. Kv= (1/T) *dcgain(zm1Gez) % Find Kv. 'T(z)=Ge(z)/(1+Ge(z) ) ' % Display label. Tz=feedback(Gez,1) % Find closed-loop% transfer function, T(z) step(Tz,0:T:2) % Find step reponse. title( 'Closed-Loop Digital Lead Compensated Step Response ' ) % Add title to step response. B.3 Command Summary abs(x) Obtain absolute value of x. acker(A,B,poles) Find gains for pole placement. angle(x) Compute the angle of xin radians. atan(x) Compute arctan(x ). axis( [xmin,xmax,ymin,ymax] ) Deﬁne range on axes of a plot.814 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:15 bode(G,w) Make a Bode plot of transfer function G(s) over a range of frequencies, ω. Field ωis optional. break Exit loop. c2d(G,T, 'tustin' ) Convert G(s)t oG(z) using the Tustin transformation. Tis the sampling interval. c2d(G,T, 'zoh' ) Convert G(s) in cascade with a zero-order hold to G(z).Tis the sampling interval. canon(S, 'modal' ) Convert an LTI state-space object, S,to parallel form. clear Clear variables from workspace. clf Clear current ﬁgure. conv( [a b c d] , [e f g h] ) Multiply as3bs2csdby es3fs2gsh. ctrb(A,B) Find controllability matrix. d2c(G, 'zoh' ) Convert G(z)t oG(s) in cascade with a zero-order hold. dcgain(G) Find dc gain for G(s) (that is, s0), or G(z) (that is,z1). eig(A) Find eigenvalues of matrix A. end End the loop. exp(a) Obtain ea. feedback(G,H,sign) Find T sG s=1G sH s. Sign  1o ri s optional for negative feedback systems.Sign 1 for positive feedback systems. grid on Put grid lines on a graph. hold off Turn off graph hold; start new graph. imag(P) Form a matrix of the imaginary parts of the components of matrix P. input( 'str' ) Permit variable values to be entered from the keyboard with prompt str. interp1 (x,y,x1) Perform table lookup by ﬁnding the value of yat the value of xx inv(P) Find the inverse of matrix P. length(P) Obtain dimension of vector P. log(x) Compute natural log of x. log10(x) Compute log to the base 10 of x. margin(G) Find gain and phase margins, and gain and phasemargin frequencies of transfer function, G(s). Return [Gain margin, Phase margin, 180 ° frequency, 0 dB frequency]. max(P) Find the maximum component of P. minreal(G,tol) Cancel common factors from transfer function G (s) within tolerance, tol. If' tol ' ﬁeld is blank, a default value is used. ngrid Superimpose grid over a Nichols plot. nichols(G,w) Make a Nichols plot of transfer function G(s) over a range of frequencies, ω. Field ωis optional.B.3 Command Summary 815WEBBAPPB 10/29/2014 9:25:16 nyquist(G,w) Make a Nyquist diagram of transfer function G(s) over a range of frequencies, ω. Field ωis optional. obsv(A,C) Find observability matrix. ord2(wn,z) Create a second-order system, G s1=s22ζωnsω2 n. pade(T,n) Obtain nth order Padé approximation for delay, T. pause Pause program until any key is pressed. plot(t1,y1,t2,y2,t3,y3) Ploty1 versus t1,y2 versus t2, and y3 versus t3o n the same graph. pole(G) Find poles of LTI transfer function object, G(s). poly( [  a b c] ) Form polynomial sa sb sc. polyval(P,a) Find polynomial P(s) evaluated at a, that is, P(a). rank(A) Find rank of matrix A. real(P) Form a matrix of the real parts of the components of matrix P. residue(numf,denf) Find residues of F(s) = numf/denf. rloc ﬁnd(GH) Allow interactive selection of points on a root locus plot for loop gain, G(s)H(s). Return value for Kand all closed-loop poles at thatK. rlocus(GH,K) Plot root locus for loop gain, G(s)H(s),over a range of gain, K.TheKﬁeld is optional. roots(P) Find roots of polynomial, P. semilogx(w,P1) Make a semilog plot of P1versus log10 ω. series(G1,G2) Find G1 sG2 s. sgrid(z,wn) Overlay z ζandwn(ωn) grid lines on a root locus. sin(x) Find sin( x). sqrt(a) Computeﬃﬃﬃ ap . ss2tf(A,B,C,D,1) Convert a state-space representation to a transfer function. Return [num,den] . ss(A,B,C,D) Create an LTI state-space object, S. ss(G) Convert an LTI transfer function object, G(s),to an LTI state-space object. ssdata(S) Extract A,B,C, andDmatrices from LTI state- space object, S. step(G1,G2,.. Gn,t) Plot step responses of G1 sthrough Gn son one graph over a range of time, t. Field tis optional as are ﬁeldsG2through Gn. subplot(xyz) Divide plotting area into an xbyygrid with zas the window number for the current plot. tan(x) Find tangent of xradians. text(a,b, 'str' ) Putstr on graph at graph coordinates, xa,yb. tf2ss(numg,deng) Convert G snumg/deng to state space in controller canonical form. Return [A,B,C,D] . vpa(a,D) Calculate awith Ddigits and convert to a symbolic with Ddigits.816 Appendix B: MATLAB TutorialWEBBAPPB 10/29/2014 9:25:16 tf2zp(numg,deng) Convert G snumg/deng in polynomial form to factored form. Return [zeros, poles, gains] . tf(numg,deng,T) Create an LTI transfer function, G snumg/ deng, in polynomial form. Tis the sampling interval and should be used only if Gis a sampled transfer function. tf(G) Convert an LTI transfer function, G(s), to polynomial form. tfdata(G, 'v' ) Extract numerator and denominator of an LTItransfer function, G(s), and convert values to a vector. Return [num, den] . title( 'str' ) Put title str on graph. xlabel( 'str' ) Put label str onxaxis of graph. ylabel( 'str' ) Put label str onyaxis of graph. zgrid Superimpose z(ζ)andwn ω ngrid curves on a z-plane root locus. zgrid( [ ] , [ ] ) Superimpose the unit circle on a z-plane root locus. zp2tf ( [  a b] ' , [  c d] ',K ) Convert F sK sa sb= s c sdto polynomial form.Return [num,den] . zpk(numg,deng,K,T) Create an LTI transfer function, G snumg/ deng , in factored form. Tis the sampling interval and should be used only ifGis a sampled transfer function. zpk(G) Convert an LTI transfer function, G(s),to factored form. Bibliography Johnson, H. et al. Unmanned Free-Swimming Submersible (UFFS) System Description. NRL Memorandum Report 4393. Naval Research Laboratory, Washington, D.C., 1980. MathWorks. Control System ToolboxTMGetting Started Guide R2014a . MathWorks, Natick, MA, 2000–2014. MathWorks. Control System ToolboxTMUser ’s Guide R2014a . MathWorks, Natick, MA, 2001 –2014. MathWorks. MATLABPrimer R2014a. MathWorks, Natick, MA, 1984 –2014. MathWorks. MATLABGraphics R2014a . MathWorks, Natick, MA, 1984 –2014. MathWorks. MATLABMathematics R2014a. MathWorks, Natick, MA, 1984 –2014. MathWorks. MATLABProgramming Fundamentals R2014a . MathWorks, Natick, MA, 1984 –2014. MathWorks. SimulinkGetting Started Guide R2014a. MathWorks, Natick, MA, 1990 –2014. MathWorks. SimulinkUser ’s Guide R2014a . MathWorks, Natick, MA, 1990 –2014. MathWorks MATLAB& SimulinkInstallation Guide R2014a. MathWorks, Natick, MA, 1996–2014.Bibliography 817WEBBAPPB 10/29/2014 9:25:16 Page 818WEBBAPPC 10/28/2014 21:33:37 Appendix C: Simulink Tutorial C.1 Introduction Readers who are studying MATLAB may want to explore the functionality and convenience of Simulink. Before proceeding, the reader should have studied Appendix B, the MATLAB Tutorial, including Section B.1, which is applicable to this appendix. Simulink Version 8.3 and MATLAB Version 8.3(R2014a) are required in order to use Simulink. In addition, if you wish to pursue the design of PID controllers discussed in Section C.4, you will need the Simulink Control Design Version 4(R2014a) add-on. The models described in this appendix are available at www.wiley.com/college/nise . The code will also run on workstations that support MATLAB. Consult the MATLABInstallation Guide for your platform for minimum system hardware requirements. Simulink is used to simulate systems. It uses a graphical user interface (GUI) for you to interact with blocks that represent subsystems. You can position the blocks, resize theblocks, label the blocks, specify block parameters, and interconnect blocks to form completesystems from which simulations can be run. Simulink has block libraries from which subsystems, sources (that is, function generators), and sinks (that is, scopes) can be copied. Subsystem blocks are availablefor representing linear, nonlinear, and discrete systems. LTI objects can be generated if theControl System Toolbox is installed. Help is available on the Quick Access Toolbar at the top of the MATLAB R2014a window. Click the circled question mark and select Simulink . Help is also available for each block in the block library and is accessed either by right-clicking a block ’s icon in the Simulink Library Browser and selecting Help for or by double-clicking the block ’s icon and then clicking the Help button. Finally, screen tips are available for some toolbar buttons. Let your mouse ’s pointer rest on the button for a few seconds to see the explanation. C.2 Using Simulink The following summarize the steps to take to use Simulink. Section C.3 will present fourexamples that demonstrate and clarify these steps. Access Simulink TheSimulink Library Browser , from where we begin Simulink, is accessed by typing simulink in the MATLAB Command Window or by clicking on the Simulink Library button on the toolstrip, shown circled in Figure C.1. In response, MATLAB displays the Simulink Library Browser shown in Figure C.2( a). We now create an untitled window, Figure C.2( b), by clicking on the New model button (shown circled in Figure C.2( a)) on the toolbar of the Simulink 819WEBBAPPC 10/28/2014 21:33:37 FIGURE C.1 MATLAB Window showing how to access Simulink. The Simulink Library Browser button is shown circled FIGURE C.2 a. Simulink Library Browser window showing the New model button encircled; (ﬁgure continues )820 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:38 Library Browser . You will build your system in this window. Existing models may be opened by clicking on the Open model button on the Simulink Library Browser toolbar. This button is immediately to the right of the New model button. Existing models may also be opened from the Filesection of the Home tab on the Toolstrip or from the Searchbar below the Toolstrip on the MATLAB window. Select blocks Figure C.2( a) shows the Simulink Library Browser from which all blocks can be accessed. The left-hand side of the browser shows major libraries, such as Simulink , as well as underlying block libraries, such as Continuous . The right-hand side of Figure C.2( a) also shows the underlying block libraries. To reveal a block library ’s underlying blocks, select the block library on the left-hand side or double-click the blocklibrary on the right-hand side. As an example, the Continuous library blocks under the Simulink major library are shown exposed in Figure C.3( a). Figures C.3( b) and C.3( c) show some of the Sources andSinks library blocks, respectively. Another approach to revealing the Simulink block library is to type open_system (‘simulink ’)in the MATLAB Command Window . The window shown in Figure C.4 is the result. Double-clicking any of the libraries in Figure C.4 reveals an individual window containing that library ’s blocks, equivalent to the right-hand side of the Simulink Library Browser as shown in the examples of Figure C.3. Assemble and label subsystems Drag required subsystems (blocks) to your model window from the browser, such as those shown in Figure C.3. Also, you may access the blocks by double-clicking the libraries shown in Figure C.4. You can position, resize, andrename the blocks. To position, drag with th e mouse; to resize, click on the subsystem and drag the handles; to rename, click on the existi ng name, select the existing text, and type the new name. Interconnect subsystems and label signals Position the pointer on the small arrow on the side of a subsystem, press the mouse button, and drag the resulting cross-hair pointerto the small arrow of the next subsystem. A line will be drawn between the twosubsystems. Blocks may also be interconnected by single-clicking the ﬁrst block followed by single-clicking the second block while holding down the control key.You can move line segments by positioning the pointer on the line, pressing the mousebutton, and dragging. Branches to line segments can be drawn by positioning the pointerwhere you want to create a line segment, holding down the mouse ’s right button, and FIGURE C.2 (Continued )b.resulting untitled model windowC.2 Using Simulink 821WEBBAPPC 10/28/2014 21:33:38 FIGURE C.3 Simulink block libraries: a.Continuous systems; b.Sources (ﬁgure continues )822 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:38 dragging the resulting cross hairs. A new line segment will form. Signals can be labeled by double-clicking the line and typing. Finally, labels can be placed anywhere by double-clicking and typing into the resulting box. Choose parameters for the subsystems Double-click a subsystem in your model window and type in the desired parameters. Some explanations are provided in the Block FIGURE C.3 (Continued )c.Sinks FIGURE C.4 Simulink Block Library windowC.2 Using Simulink 823WEBBAPPC 10/28/2014 21:33:39 Parameters window. Press the Help button in the Block Parameters window for more details. Explore other options by right-clicking on a block. Choose parameters for the simulation Select Model Conﬁ guration Parameters under the Simulation menu in your model window to set additional parameters, such as simulation time. Press the Help button in the Conﬁ guration Parameters window for more details. Start the simulation Make your model window the active window. Double-click the Scope block (typically, the scope is used to view the simulation results) to display the Scope window. Select Run under the Simulation menu in your model window or click on the Run icon on the toolbar of your model window as shown in Figure C.2( b). Clicking the Stop icon will stop the simulation before completion. Interact with the plot In the Scope window, using the toolbar buttons, you can zoom in and out, change axes ranges, save axis settings, and print the plot. Right-clicking on the Scope window brings up other choices. Save your model Saving your model, by choosing Save under the Filemenu, creates a ﬁle with an .mdl extension, which is required. C.3 Examples This section will present four examples of the use of Simulink to simulate linear, nonlinear,and digital systems. Examples will show the Simulink block diagrams as well as explain thesettings of parameters for the blocks. Finally, the results of the simulations will be shown. Example C.1 Simulation of Linear SystemsSimulation of Linear Systems Ourﬁrst example develops a simulation of three linear systems to compare their step responses. In particular, we solve Example 4.8 and reproduce the responses shown in Figure 4.24. Figure C.5 shows a Simulink block diagram formed by following Steps 1through 5 in Section C.2 as follows: Access Simulink; select, assemble, and label subsystems The source is a 1-volt step input, obtained by dragging the Step block from the Simulink Library Browser under Sources to your model window. Theﬁrst system, T1, consists of two blocks, Gain andTransfer Fcn. Gain is obtained by dragging the Gain block from the Simulink Library Browser under Math Operations to your model window. Transfer function, T1, is obtained by dragging the Transfer Fcn block from the Simulink Library Browser under Continuous to your model window. Systems T2 and T3 are created similarly. The three output signals, C1, C2, and C3, are multiplexed for display into the single input of a scope. The Mux (multiplexer) is obtained by dragging the Mux block from the Simulink Library Browser under Signal Routing to your model window. The sink is a scope, obtained by dragging the Scope block from the Simulink Library Browser under Sinks to your model window. Alternatively, all blocks can be dragged from the Library: simulink window shown in Figure C.4. The Mux can be found under Signal Routing in the Library: simulink window. The labels for the blocks can be changed to those shown in Figure C.5 by following Step 3 in Section C.2.824 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:39 Interconnect subsystems and label signals Follow Step 4 to interconnect the subsystems and label the signals. You must set the mux’ s parameters before the wiring can be completed. See the next paragraph. Choose parameters for the subsystems Let us now set the parameters of each block using Step 5. The Block Parameters window for each block is accessed by double- clicking the block on your model window. Figure C.6 shows the Block Parameters windows for the 1-Volt step input, gain, transfer function 1, and mux. Set the parameters to the required values as shown. FIGURE C.5 Simulink block diagram for Example C.1 FIGURE C.6 Block parameters windows for a.1-Volt step source; (ﬁgure continues )C.3 Examples 825WEBBAPPC 10/28/2014 21:33:40 FIGURE C.6 (Continued )b.gain; c.transfer function 1; d.mux826 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:40 The scope requires further explanation. Double-clicking the Scope block in your model window accesses the scope ’s display, Figure C.7( a). FIGURE C.7 Windows for the scope: a. Scope ;b.‘Scope ’parameters, General tab;c.‘Scope ’parameters, History tab; d.‘Scope ’parameters, Style tab; (ﬁgure continues )C.3 Examples 827WEBBAPPC 10/28/2014 21:33:40 Clicking the Parameters icon on the Scope window toolbar, shown in Figure C.7( a), accesses the ‘Scope ’parameters window as shown in Figure C.7( b). The ‘Scope ’ parameters window contains three tabs, General, History, andStyle , as shown in Figure C.7( b),(c),and ( d), respectively. Finally, right-clicking in the plotting area in the Scope window and selecting Axis properties . . . reveals the ‘Scope ’properties: axis 1 window, Figure C.7( e). We now can set the display parameters, such as amplitude range. Choose parameters for the simulation Follow Step 6 to set simulation parameters. Figure C.8 shows the resulting Conﬁ guration Parameters window. Among other parameters, the simulation start and stop times can be set. Start the simulation Now run the simulation by following Step 7. Figure C.9 shows the result in the Scope window. Plots are color coded in the order in which they appear at the mux input as follows: yellow, magenta, cyan, red, green, and dark blue. If the mux has more inputs, the colors recycle. Colors can be changed in the Style tab of the ‘Scope ’ parameters window. FIGURE C.7 (Continued )e.‘Scope ’properties axis 1 FIGURE C.8 Conﬁ guration Parameters window for Solver tab828 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:41 Interact with the plot The toolbar of the Scope window shown in Figure C.9 has several buttons that can be used to interact with the plot. Let us summarize the function and operation of each, starting with the left-most button: Button 1 executes a plot print. Button 2 has already been explained and is used to set scope parameters. Button 3 permits zooming into the plot in both the xandydirections. Press the button and drag a rectangle over the portion of the curve you want to expand. Button 4 allows zooming in the xdirection only. Drag a horizontal line over the plot covering the extent of xyou want to expand. Button 5 allows zooming in the ydirection only. Drag a vertical line over the plot covering the range of yyou want to expand. Button 6 autoscales axis for use after zooming. Button 7 saves current axis settings. Button 8 restores saved axis settings. Button 9 toggles ﬂoating scope. It must be turned off to use zooming. See documentation for use of ﬂoating scopes. Button 10 toggles lock for current axis selection. Button 11 allows selection of signals to view when using ﬂoating scope. FIGURE C.9 Scope window after Example C.1 simulation stopsC.3 Examples 829WEBBAPPC 10/28/2014 21:33:41 Example C.2 Effect of Ampli ﬁerSaturation on Motor's Load Angular VelocityEffect of Ampli ﬁer Saturation on Motor's Load Angular Velocity This example, which generated Figure 4.29 in the text, shows the use of Simulink to simulate the effect of saturation nonlinearity on an open-loop system. Figure C.10 showsa Simulink block diagram formed by following Steps 1 through 5 in Section C.2 above. Saturation nonlinearity is an additional block that we have not used before. Saturation is obtained by dragging to your model window the Saturation block in the Simulink Library Browser window under Discontinuities as shown in Figure C.11( a) and setting its parameters to those shown in Figure C.11( b). FIGURE C.10 Simulink block diagram for Example C.2 FIGURE C.11 a.Simulink library for nonlinearities; (ﬁgure continues ) 830 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:41 Now run the simulation by making your model window active and selecting Run under the Simulation menu of your model window or clicking on the Run button on your model window toolbar. Figure C.12 shows the result in the Scope window. FIGURE C.11 (Continued ) b.parameter settings for saturation FIGURE C.12 Scope window after simulation of Example C.2 stops. The lower curve is the output with saturationC.3 Examples 831WEBBAPPC 10/28/2014 21:33:42 Example C.3 Simulating Feedback SystemsSimulating Feedback Systems Simulink can be used for the simulation of feedback systems. Figure C.13( a)i sa n example of a feedback system with saturation. In this example, we have added a feedback path (see Step 4 in Section C.2) and a summing junction, which is obtained by dragging the Sum block from the Simulink Library Browser , contained in the Math Operations library, to your model window. TheFunction Block Parameters: Sum window, Figure C.13( b), shows the parameter settings for the summer. You can set the shape as well as set the plus and minus inputs. In FIGURE C.13 a.Simulation block diagram for a feedback system with saturation; b.block parameter window for the summer832 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:42 the list of signs, the “|”symbol signi ﬁes a space. We place it at the beginning to start the signs at “nine o'clock, ”conforming to our standard symbol, rather than at “12 o’ clock. ” The result of the simulation is shown in Figure C.14. Example C.4 Simulating Digital SystemsSimulating Digital Systems This example demonstrates two methods of generating digital systems via Simulink for the purpose of simulation, as shown in Figure C.15. FIGURE C.15 Simulink block diagram for simulating digital systems two ways FIGURE C.14 Simulation output for Example C.3C.3 Examples 833WEBBAPPC 10/28/2014 21:33:42 Theﬁrst approach uses a linear transfer function cascaded with a Zero-Order Hold block obtained from the Simulink Library Browser under the Discrete block library, shown on the right-hand side of Figure C.16. The second method uses a discrete transfer function also obtained from the Simulink Library Browser under the Discrete block library. The remainder of the block diagram was obtained by methods previously described. The block parameters for the Zero-Order Hold andDiscrete Transfer Fcn blocks are set as shown in Figures C.17( a) and ( b), respectively. Select Model Conﬁ guration Parameters under the Simulation menu in your model window and set the simulation stop time to 4 seconds, the type to ﬁxed-step , and the solver to ode4 (Runge-Kutta). The result of the simulation is shown in Figure C.18. FIGURE C.16 Simulink library of discrete blocks FIGURE C.17 Function Block parameter windows for: a. Zero-Order Hold block; (ﬁgure continues )834 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:43 FIGURE C.18 Outputs of the digital systems FIGURE C.17 (Continued )b. Discrete Transfer Fcn blockC.3 Examples 835WEBBAPPC 10/28/2014 21:33:43 C.4 Using Simulink for Control System Design In this section we show how to use Simulink to design control systems to meet speci ﬁcations previously discussed in this book. We can make gain adjustments and design compensators using our Simulink system along with other windows that give us instant veri ﬁcation of our design. Speci ﬁcally, we will concentrate on the design of PID compensators. We will show that PID compensators can be designed automatically or by adjusting design tools, such as responsetime and transient behavior. As we make adjustments, we see the immediate result of our designin lists of speci ﬁcations or time responses along with the automatic calculation of the PID gains. In order to perform control system design, you will need to add the Simulink Control DesignTMmodule Version 4.0 (R2014a), which contains all the necessary tools. Simulink designs PID controllers using derivative control with a low-pass ﬁlter to reduce noise. The design requires negative values of derivative gain, which you will notice in the designexamples. We ﬁrst cover the automated design of PID controllers. Next, we cover PID design using graphical methods. Automated Design of PID Controllers The automated design of PID gains generates reasonable robustness and response time. After the initial design, further adjustments are available, including response time, bandwidth, and phase margin. Let us ﬁrst enumerate the steps involved, followed by an example. Create a Simulink diagram Begin with a linear or nonlinear feedback control system containing a PID controller. Set initial values for the PID controller Double-click the PID controller and launch theFunction Block Parameters: PID Controller window. On the MAIN tab, input nominal values for the Controller parameters. Click Apply . Tune the PID controller Click Tune . . . in the Function Block Parameters: PID Controller window. The system is linearized and the PID Tuner window is launched showing the nominal values response ( Block response ) and the designed response (Tuned response ). Click the Show parameters button on the Toolstrip of the PID Tuner window to expose performance data, including the designed PID gains. If the response meets requirements, then click the Update Block button on the Toolstrip of the PID Tuner window to write the PID parameters to the controller. Modify the design via interactive tuning If required, change the performance by moving the Response Time andTransient Behavior sliders in the middle of the Toolstrip of the PID Tuner window. Click the Update Block to write the PID parameters to the controller. If the system is nonlinear, you should run the simulationto see the effect of the nonlinearity on the designed response. Example C.5 Automated Design of a PID ControllerAutomated Design of a PID Controller In this example we follow the previously enumerated steps to automate the design of a PID controller for the system of Figure C.19. The requirements are (1) less than 1 secondsettling time; and (2) less than 5% overshoot. Create a Simulink diagram We create the Simulink block diagram of Figure C.19 where the PID controller block is found in the Simulink Library Browser as shown in Figure C.3( a). Set initial values for the PID controller Double-clicking the PID controller results in Figure C.20. For initial values we have chosen unity and clicked Apply .836 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:43 FIGURE C.19 Simulink block diagram for automated design of a PID controller FIGURE C.20 Function Block Parameters window for the PID controllerC.4 Using Simulink for Control System Design 837WEBBAPPC 10/28/2014 21:33:44 Tune the PID controller Click Tune . . . in Figure C.20 to launch the PID Tuner window shown in Figure C.21( a). Click the Show Parameters button, shown encircled, on the Toolstrip of the PID Tuner window to display parameters and performance. Modify the design via interactive tuning Following the instructions in Step 4 on page 836, we continue tuning the controller using the Response Time andTransient Bahavior sliders. Finally, click the Update Block button to write the PID parameters to the controller. The ﬁnal design is shown in Figure C.21( b). FIGURE C.21 PID Tuner window: a.before additional tuning; b.after additional tuning838 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:44 Automated Tuning of PID Controllers and Graphical Design In this subsection, we begin PID design with automated tuning followed by graphical design of our choice using Bode plots, root locus, etc. Let us ﬁrst enumerate the steps involved followed by an example. Create a Simulink diagram Begin with a linear or nonlinear feedback control system containing a PID controller. Begin compensator design From the menu bar of your Simulink block diagram select Analysis/Control Design/Control System Designer . . . launching the Control and Estimation Tools Manager window. Select block to tune In the Control and Estimation Tools Manager window, click Select Blocks ....I n t h e resulting Select Blocks to Tune window, choose PID Controller and click OK. Choose the closed-loop response for which response will be analyzed On the Simulink block diagram, choose the input and output for the closed-loop. Right-click at the input and choose Linear Analysis Points/Input Perturbation . Right-click at the output point and choose Linear Analysis Points/Output Measurement . Small vertical arrows result at these points to indicate your selection. Tune blocks andlaunch theDesign Con ﬁguration Wizard Click Tune Blocks ...a n d launch the Design Con ﬁguration Wizard. Click Next and select the graphical plots you want to use for design. Click Next and choose the Analysis Plots you want to use to analyze the design. Check the Contents of Plots boxes that correspond to the Responses you want your Analysis Plots to display. Click Finish and launch the LTI Viewer for SISO Design Task window that contains the Analysis Plots you selected. Also launched is the SISO Design for SISO Design Task window that contains the graphical design plots that you previously selected. Perform automatic tuning of the PID controller In the Control and Estimation Tools Manager window select the Automated Tuning tab at the top right. Select PID Tuning in the Design method: drop-down menu. Select Tuning method andControl- ler Type . Click Update Compensator , which selects compensator gains and updates the response and graphical design curves. Click Update Simulink Block Parameters . Evaluate performance Right-click the response curve and select Characteristics. Select each desired choice under Characteristics ,addin g a plot marker to the curve at the appropriate measurement point. Click on each marker to read the performancedata. Improve performance by interacting with the graphical design plots Change PID poles and gains until your response meets the requirements. You may add performanceboundaries by right-clicking the design graphic and selecting Design Requirements/ New. . . . From the pull-down menu select the desired requirements. Upon closing the window the performance boundary is placed on the graphical design plot. Example C.6 Automated Tuning of a PID Controller and Graphical DesignAutomated Tuning of a PID Controller and Graphical Design In this example we follow the previously enumerated steps to automatically design a PID controller for the system of Figure C.19 and follow with further improvement inperformance using root locus. The requirements are: (1) less than 1 second settlingtime; and (2) less than 4% overshoot.C.4 Using Simulink for Control System Design 839WEBBAPPC 10/28/2014 21:33:44 Create a Simulink diagram We create the Simulink block diagram of Figure C.19 where the PID controller block is found in the Simulink Browser Library as shown in Figure C.3( a). Begin Compensator design In Figure C.19, we select Analysis/Control Design/ Compensator Design . . . , launching the Control and Estimation Tools Manager window shown in Figure C.22( a). FIGURE C.22 a. Control and Estimation Tools Manager window before selecting block to tune; b. Select blocks to Tune window; (ﬁgure continues )840 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:45 Select blocks to tune Click Select Blocks . . . in Figure C.22(a ) and launch the Select Blocks to Tune window shown in Figure C.22( b). Select PID Controller and click OK. The resulting Control and Estimation Tools Manager is shown in Figure C.22( c). C h o o s et h ec l o s e d - l o o pr e s p o n s ef o rw h i c hr e s p o n s ew i l lb ea n a l y z e d On the Simu- link block diagram, right-click the output of the step input and select Linear Analysis Points/Input Perturbation , placing a small down-arrow with a summing junction at that point, signifying the input of the closed-loop response. Similarly, the closed-loop output is chosen by right-clicking the output of the plant and selecting Linear Analysis Points/Output Measurement . A small up-arrow results, signifying the output of the closed-loop system. The resulting Simulink block diagram is shown in Figure C.23. Tune blocks and launch the Design Con ﬁguration Wizard Click T u n eB l o c k s... in Figure C.22( c) and launch the Design Con ﬁguration Wizard .C l i c k Next .T h e resulting window is shown in Figure C24( a). Select Root Locus in the Plot Type pull- down menu for Plot 1 . Click Next to select the plot to be used for analysis as shown in Figure C.24( b) .F o rt h i sc a s ew ec h o o s e Step forPlot 1 ,Plot Type . Also check the box for Plot 1 below to indicate the Responses as shown. FIGURE C.22 (Continued )c. Control and Estimation Tools Manager window after selecting block to tune FIGURE C.23 Simulink block diagram showing closed-loop input andoutput pointsC.4 Using Simulink for Control System Design 841WEBBAPPC 10/28/2014 21:33:45 Click Finish and launch the LTI Viewer for SISO Design Task window that contains the step response you selected for analysis. Also launched is the SISO Design for SISO Design Task window that contains the root locus plot that you previously selected for design. Before we discuss these two plots, we ﬁrst perform automatic PID tuning. Perform automated tuning of the PID controller TheControl and Estimation Tools Manager now looks like that shown in Figure C.25 after selecting the Automated Tuning tab at the top and making the selections shown in the ﬁgure. Click Update Compensator andUpdate Simulink Block Parameters . You should notice a marked improvement in the step response as shown in Figure C.26. FIGURE C.24 Design Con ﬁguration Wizard: a. with root locus selected as the design tool; b.with closed-loop step response selected as analysis tool842 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:45 Evaluate performance Right-click on the response curve shown in Figure C.26 and choose Characteristics . Select Peak Response andSettling Time . Blue dots are placed on the response curve at the appropriate points. Click on each dot to reveal the performance. In this case we see that automatic tuning yields 6.77% overshoot and 1.56settling time. The requirements are not met. FIGURE C.25 Control and Estimation Tools Manager prepared for automatic PID tuning FIGURE C.26 LTI Viewer for SISO Design Task window showing closed-loop step response after automatic PID tuningC.4 Using Simulink for Control System Design 843WEBBAPPC 10/28/2014 21:33:51 Improve performance by interacting with the graphical design plots We now reshape the root locus plot in order to improve performance and meet the require- ments. On the root locus shown in the SISO Design for SISO Design Task window, right-click and select Design Requirements/New. . . . In the pull-down menu select Settling time and type in 1 second. Click OK. Right-click again and choose Design Requirements/New. . . . In the pull-down menu select Percent overshoot a n dt y p ei n4 . C l i c k OK. In response, design boundaries are placed on the root locus. See Figure C.27. The white space represents responses faster than 1 second settling time and overshoot less than 4%. Now adjust root locus gain (red squares), PID zero (red zero), and/or PIDpole (red x). These are adjusted by letting your mouse rest on the selected red indicatoruntil it turns into a hand. Then move the indicator. Shape the root locus until an operatingpoint falls within the white area. After adjustments, we obtain the root locus shown inFigure C.28( a) and the time response shown in Figure C.28( b) . We conclude that the design requirements are met. FIGURE C.27 Root locus showing design boundaries of 4% overshoot (radial lines) and 1 second settling time (vertical line) with adjustable gain, PID zero, and PID poleshown in red844 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:54 FIGURE C.28 Final design as shown in a.root locus; b.step responseC.4 Using Simulink for Control System Design 845WEBBAPPC 10/28/2014 21:33:54 Summary This appendix explained Simulink, its advantages, and how to use it. Examples were taken from Chapters 4, 5, and 13 and demonstrated the use of Simulink for simulating linear, nonlinear, and digital systems. In addition, we showed how to use the Simulink Control Design add-on to automatically tune PID controllers and perform shaping of graphical design tools in orderto meet performance requirements. The objective of this appendix was to familiarize you with the subject and get you started using Simulink. There are many blocks, parameters, and preferences that could notbe covered in this short appendix. You are encouraged to explore and expand your use of Simulink by using the on-screen help that was explained earlier. The references in the Bibliography of this appendix also provide an opportunity to learn more about Simulink. Bibliography MathWorks. Control System ToolboxTMGetting Started Guide R2014a . MathWorks, Natick, MA, 2000 –2014. MathWorks. Control System ToolboxTMUser ’s Guide R2014a . MathWorks, Natick, MA, 2001 –2014. MathWorks. MATLABPrimer R2014a. MathWorks, Natick, MA, 1984 –2014.The designed compensator is displayed in the Control and Estimation Tools Man- ager under the Compensator Editor tab. Be sure to click the Update Simulink Block Parameters button at the bottom to update your Simulink model. The result is shown in Figure C.29. FIGURE C.29 PID meeting design requirements846 Appendix C: Simulink TutorialWEBBAPPC 10/28/2014 21:33:54 MathWorks. MATLABGraphics R2014a . MathWorks, Natick, MA, 1984 –2014. MathWorks. MATLABMathematics R2014a. MathWorks, Natick, MA, 1984 –2014. MathWorks. MATLABProgramming Fundamentals R2014a . MathWorks, Natick, MA, 1984 –2014. MathWorks. SimulinkGetting Started Guide R2014a. MathWorks, Natick, MA, 1990 –2014. MathWorks. SimulinkUser ’s Guide R2014a . MathWorks, Natick, MA, 1990 –2014. MathWorks. SimulinkControl DesignTMGetting Started Guide R2014a . MathWorks, Natick, MA, 2004 –2014. MathWorks. SimulinkControl DesignTMUser ’s Guide R2014a . MathWorks, Natick, MA, 2004 –2014. *All MATLAB and Simulink screenshots in this book are reprinted with permission from The MathWorks, Inc.Bibliography 847WEBBAPPC 10/28/2014 21:33:54 Page 848WEBBAPPD 10/28/2014 21:59:55 Appendix D: LabVIEW Tutorial D.1 Introduction LabVIEW is a programming environment that is presented here as an alternative to MATLAB. Although not necessary, the reader is encouraged to become acquainted with MATLAB before proceeding, since familiarity with MATLAB can enhance the understanding of the relationship between textual (MATLAB) and graphical (LabVIEW)programming languages and extend the functionality of LabVIEW. In this tutorial, we willshow how to use LabVIEW to (1)analyze and design control systems, and (2)simulate control systems. This appendix was developed using LabVIEW 2013. LabVIEW is a graphical programming environment that produces virtual instruments (VI ’s). A VI is a pictorial reproduction of a hardware instrument on your computer screen, such as an oscilloscope or waveform generator. The VI can consist of various controls and indicators, which become inputs and outputs, respectively, to your program. Underlying each control and indicator is an associated block of code that de ﬁnes its operation. The LabVIEW model thus consists of two windows: (1)Front Panel , which is a replica of the hardware front panel showing the controls and indicators, and (2)Block Diagram , which contains the underlying code for the controls and indicators on the Front Panel . Associated with the Front Panel window is a Controls palette window containing numerous icons representing controls and indicators. The icons can be dragged onto a Front Panel window to create that control or indicator. Simultaneously, the associated code block is formed on the Block Diagram window. Alternately, the block diagram can be formed ﬁrst, and then the front panel is created from the block diagram. Associated with the Block Diagram window is a Functions palette window containing numerous icons representing a wide range of functions. Icons can bedragged onto a Block Diagram window to create that code block. For example, Figure D.1(a ) is the front panel of a signal generator. The generator consists of a control to select the signal typ e and a waveform graph that shows the output waveform. Figure D.1( b) shows the underlying code, which is contained in the code blocks. Here, the signal type selector is a control, while the waveform graph is anindicator. Later we will show how to make connections to other VI’ s. The palette windows for the front panel and block diagram are shown respectively in Figures D.1( c) and ( d). 849WEBBAPPD 10/28/2014 21:59:55 D.2 Control Systems Analysis, Design, and Simulation LabVIEW can be used as an alternative to or in conjunction with MATLAB to analyze, design, simulate, build, and deploy control systems. In addition to LabVIEW, you will needthe LabVIEW Control Design and Simulation Module. Finally, as an option that will be explained later, you may want to install the MathScript RT Module. Analysis and design can be thought of as similar to writing MATLAB code, while simulation can be thought of as similar to Simulink. In LabVIEW, analysis and design, as opposed to simulation, are handled from different subpalettes of the Functions window ’s Control Design and Simulation palette. See Figure D.1( d). Analysis and design, and simulation will typically begin with the Block Diagram window, where icons representing code blocks will be interconnected. Parameters used by the code can be convenientlyselected, changed, and passed to the code through VI controls on the Front Panel window created from the code icons. Any results, such as time response, can be displayed through VIindicators on the Front Panel window created from the code icons. FIGURE D.1 A LabVIEW function generator VI: a. Front Panel window; b. Block Diagram window; (ﬁgure continues )850 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:55 D.3 Using LabVIEW The following steps start you on your way to using LabVIEW for control systems analysis, design, and simulation. These steps will be illustrated in the examples that follow. Start LabVIEW LabVIEW starts with the window shown in Figure D.2, where you can select a New VI orOpen an existing VI from the Filemenu. Alternatively, existing FIGURE D.1 (Continued )c. Controls palette; d. Functions palette FIGURE D.2 LabVIEW windowD.3 Using LabVIEW 851WEBBAPPD 10/28/2014 21:59:56 VI’s can be opened from the Open Existing table on the right. Selecting a new or existing VI brings up the Front Panel andBlock Diagram windows shown in Figure D.1. If necessary, a window can be opened from the Window tab on the menu bar of the Front Panel andBlock Diagram . Right-click the Block Diagram window to bring up the Functions palette and click the thumb tack in the upper left-hand corner to dock the window. Repeat for the Front Panel window to access the Controls palette. Select blocks Make the Block Diagram window active, or access it from Window on the menu bar. Right-click the Block Diagram window or use the View menu to bring up theFunctions palette. Expand the palette window by clicking the double-up arrows at the bottom. At the top of the palette window click Customize , and select View This Palette As/Category (Icons and Text) to add a text description below each icon. For control systems analysis, design, and simulation, expand Control Design & Simulation in the Functions palette by clicking the arrow to the left of this category. If you are performing a simulation, click the subpalette Simulation . If you are performing control system analysis or design, click the subpalette Control Design .A na r r o wi nt h e upper-right corner of a subpalette indicates additional underlying palettes or blocks. If the name of the icon is incomplete, resting the mouse over the icon will bring up its complete identi ﬁcation. To obtain detailed help about an icon, right-click the icon and select Help . Move blocks to the block diagram window To move the icon to the Block Diagram , left-click the mouse to attach the icon (some icons take a little time to complete this operation). When the pointer turns into a hand, click the spot on the Block Diagram where you want to place the icon. Obtain information about the block You will now want to obtain information about how to interconnect the block to other blocks and pass parameters to the block as well as other characteristics about the block. Select the yellow question mark at the right of the Block Diagram toolbar to turn on the Context Help window. This window will provide help about a particular icon if you rest your mouse over that icon. Additional help isavailable under the Help menu on the Block Diagram menu bar. Finally, right-click the icon to bring up a menu with additional choices, such as Properties , if any. In particular, you will use this menu to create the block ’s front panel ’s controls and indicators. This front panel will be your interface with the block to choose parameters and see responses. Interconnect and label blocks Once blocks are placed on the Block Diagram they can be moved about by clicking on them or dragging your mouse across several of themto establish a selection pattern. After the selection pattern has been established, depressthemouse left button and drag to a new location. To delete a block, select the block and press the Backspace button on your keyboard. The context help for the block includes a description of the block ’s terminals. Let your mouse rest on a terminal until the mouse pointer turns into a spool of wire. Click the terminal and then move the mouse to the next icon ’s terminal where you want to make the connection. Click the destination terminal to complete the wiring. Notice that the terminal in the Context Help window blinks when your mouse resides above that terminal on the block, ensuring that you are on the correct terminal. If you make anerror in wiring, click on the wire and press the Backspace button on your keyboard or right-click the wire and select Delete Wire Branch . Block labels can be displayed or hidden. Right-click on the block to bring up the pop-up menu and check or uncheck Visible Items/Label to display or hide, respectively, the label. Double-clicking on the label above some blocks will allow you to select andchange the text. One click of the mouse on the label will place a selection pattern aroundthe label and allow you to hold down the left key of the mouse and move the label to adifferent location.852 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:56 Create the interface to your block You will now want to create the interface to your block in order to control or select functions, specify parameters, or view responses. This interface will be accessed via the Front Panel window. Right-click a terminal on a block for which you want to create an interface. On the pop-up menu, choose Create/Control to be able to interact with the block or Create/Indicator to view a response or setting. Set the controls Switch to the Front Panel window and set your controls. For example, enter parameter values, select functions, etc. If you want to change values and at somefuture time return to the current values, click on Edit on the Block Diagram menu bar and select Make Current Values Default . To return to the default values in the future, click on Edit on the Block Diagram menu bar and select Reinitialize Values to Default . Run the program Click on the arrow at the left of the toolbar on either the Block Diagram orFront Panel window to run the program. The program can be run continuously by clicking the curved arrows button on the toolbar second from the left.Continuously running your program permits changing functions and parameter valuesduring execution. In order to identify the buttons, let your mouse rest on a button to bring up a context menu. Stop your simulation by pressing the red-dot button, third from the left. If you areperforming control systems analysis and design, another way to continuously run theprogram is to place a While Loop around your block diagram. The loop is available in theFunctions palette at Express/Execution Control/While Loop. This loop also places a Stop button on the Front Panel . The program executes until you press the stop button. In lieu of the Stop button, any true/false Boolean can be wired to the condition block (red dot) created inside the While Loop . If you are performing simulation, you can use a Simulation Loop available in the Functions palette at Control Design and Simulation/Simulation/Control & Simulation Loop . Place the Control & Simulation Loop around your simulation block diagram by dragging the mouse. Right-click on the Control & Simulation Loop outline and choose Conﬁ gure Simulation Parameters . . . to determine the parameters for executing the simulation. The Front Panel indicators and controls are also con ﬁgurable. Right-click on the indicator or control and select Properties . D.4 Analysis and Design Examples In this section, we will present some examples showing the use of LabVIEW for the analysisand design of control systems. In the next section, examples of the use of LabVIEW forsimulation will be presented. Analysis and design examples use icons selected from the Control Design subpalette under the Control Design and Simulation palette. In the next section showing examples of simulation, we will use icons taken from the Simulation subpalette under the Control Design and Simulation palette. Example D.1 Open-Loop Step ResponseOpen-Loop Step Response Analysis and design usually begins by selecting icons from the Control Design subpalette and dragging them to the Block Diagram window. The icons represent blocks of code and the cascading of code blocks can be thought of as a sequence of lines of code. Thus, an advantage of LabVIEW over MATLAB is that the programmerdoes not need to memorize coding language. For example, consider the MATLAB codeshown in TryIt D.1 that produces the step response of G(s)=100/( s 2+2s+100).TryIt D.1 numg=100; deng=[1 2 100] ; 'G(s) ' G=tf(numg,deng) step(G) ; title( 'Angular Velocity ' )D.4 Analysis and Design Examples 853WEBBAPPD 10/28/2014 21:59:56 This step response can be produced in LabVIEW without knowing any coding language. We now demonstrate by following each step of Section D.3: Start LabVIEW Start LabVIEW and select New VI from the Filemenu shown in Figure D.2. Select blocks From the Functions palette, select the blocks shown in Figure D.3( a) and ( b). Move/blocks to the Block Diagram window Drag your icons one at a time to the Block Diagram window, Figure D.4. Obtain information about the block Right-click each of the blocks and be sure the ﬁrst two items under Visible Items are checked. Look at the CD Construct Transfer Function Model.vi. APolymorphic VI Selector is shown at the bottom of the icon. FIGURE D.3 Selecting a. CD Construct ...a n d CD Draw ...; b. CD Step Response ...854 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:56 Click the selector to bring up the menu. Select SISO . This block effectively creates the transfer function shown in the ﬁrst four steps of the MATLAB code in TryIt D.1. Repeat for the CD Draw Transfer Function Equation.vi and select TFfrom thePolymorphic VI Selector. This block will write the transfer function symbolically in the display. Your selection from the polymorphic vi selector should match the format of the transfer function created by the CD Construct Transfer Function Model.vi . Repeat for the CD Step Response.vi. and select TFfrom the Polymorphic VI Selector . This block will collect the data for the step response and permit plotting the data. This block effectively creates the last two commands of the MATLAB codeshown in TryIt D.1. Interconnect and label blocks You should now have the Block Diagram window shown in Figure D.4. Interconnect the cod e blocks. Click on the question mark on the right side of the toolbar to bring up the context menu. As your mouse passes above an icon, its context menu appears, showing the terminals. See Figure D.5. Interconnect the terminals by letting the mouse rest on a terminal until it becomes aspool of wire. FIGURE D.4 Block Diagram window FIGURE D.5 Context Help forCD Construct Transfer Function Model.viD.4 Analysis and Design Examples 855WEBBAPPD 10/28/2014 21:59:57 Click on the terminal and then click on the destination terminal. The two terminals will appear as wired together. Continue wiring terminals until you have the Block Diagram window shown in Figure D.6. Mid-wire connections as shown can be made by letting your mouse rest at the connection point until it becomes a spool of wire. Create the interface to your block You will now want to create the interface to specify parameters and view responses. This step will create the interface that will be accessed on the Front Panel window. The interfaces we will create are: CD Construct Transfer Function Model.vi input parameter controls. Right-click on the numerator terminal shown in Figure D.5 and select Create/Control . Repeat for the denominator. CD Step Response.vi response plot indicator. Right-click on the Step Response Graph terminal and select Create/Indicator . CD Draw Transfer Function Equation.vi symbolic transfer function indicator. Right-click on the Equation terminal and select Create/Indicator . Your Block Diagram should now look similar to Figure D.7( a). As an option, you can create transfer functions using a MathScript block if the MathScript RT Module is installed. This option is generally compatible withMATLAB ’sM - ﬁle code statements for creating your transfer function. Interfaces are then created to pass parameters to and from the M- ﬁle code. You should be familiar with MATLAB to use this option. The MathScript block is found in the Programming/ FIGURE D.7 Block Diagram window: a.with Control Design blocks and interfaces; (ﬁgure continues ) FIGURE D.6 Interconnected blocks856 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:57 Structures/MathScript palette. You create M- ﬁle code inside the MathScript block. Inputs, outputs, and controls are created as follows. Right-click on the left side of the MathScript Node and select Add Input . Name the input K. Right-click your terminal Kand select Create/Control . A control is formed on both the Block Diagram and Front Panel . Repeat the same process to create inputs and controls for parameters aand b. Now create the output to the MathScript Node . Right-click the right-hand side of the MathScript Node and select Add Output/G . After wiring your inputs and outputs, your Block Diagram will be that shown in Figure D.7( b). On the Block Diagram window menu bar, select Window/Show Front Panel . You will see the Front Panel shown in Figure D.8 created by your interfaces. You can double-click the labels above your interfaces either in the Front Panel window or the Block Diagram window to change the label to be more descriptive of your project. Set the controls Using the Front Panel window, enter polynomial coef ﬁcients for the numerator and denominator in ascending order —lowest to highest. The selector to the left of the numerator and denominator shows the power of sfor the left-most coefﬁcient. Increasing the counter allows entry of higher-order coef ﬁcients not visible originally. To make all coef ﬁcients of a polynomial visible, let the mouse move on the right-hand edge of the polynomial indicator until the pointer becomes a double arrow FIGURE D.7 (Continued )b.withMathScript block FIGURE D.8 Front Panel: a. forBlock Diagram shown in Figure D.7( a); (ﬁgure continues )D.4 Analysis and Design Examples 857WEBBAPPD 10/28/2014 21:59:57 and blue dots appear at the left and right edges of the entire polynomial indicator. You can then drag the right blue dot to expose more cells. Familiarize yourself with the choices on the menu bar as well as those on the pop-up menus created when you right-click on any indicator or control. For example,under the Edit menu, among other choices, you can Make Current Values Default or Reinitialize Values to Default. Right-clicking the indicators or controls brings up a menu from which, among other choices, Properties can be selected to con ﬁgure the indicator or control as desired. Run the program Figure D.9 shows Example D.1 after execution. The ﬁgure shows the values entered, the equation, and the step response. Execution was initiated by clicking the arrow at the left of the toolbar. The program can run continuously by clicking the curved arrows on the toolbar. Now, change values; hit the Enter key and see the results immediately displayed. Stop the program execution by clicking on the red hexagon on the toolbar. Another way of FIGURE D.8 (Continued )b.forBlock Diagram shown in Figure D.7(b) FIGURE D.9 Front Panel after execution: a.for block diagram in Figure D.7(a); (ﬁgure continues )858 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:58 continuously running the program is to place a While Loop around the block diagram as shown in Figure D.10( a). The loop is accessed from Functions/Express/Execution Control as shown in Figure D.10( b). After selecting the While Loop , drag the cursor across the block diagram to create the continuous loop. A stop button will appear on the block diagram as well as on the Front Panel . At the lower right is a Conditional Terminal icon, which can be used to control the While Loop. The reader should consult the on-line documentation for further information. FIGURE D.10 a.Block diagram with While Loop ;b. Functions palette showing While Loop location FIGURE D.9 (Continued )b.for block diagram in Figure D.7( b)D.4 Analysis and Design Examples 859WEBBAPPD 10/28/2014 21:59:58 Example D.2 Closed-Loop Step ResponseClosed-Loop Step Response In this example, we show how to display the step response of a unity-feedback system. For variety, we represent the open-loop system as a ratio of zeros over poleswith a multiplying gain, analogous to MATLAB ’szpk function. In the previous example, we represented the system as a ratio of polynomials, analogous to MATLAB ’s tffunction. Select blocks The zero-pole-gain transfer function is obtained from the Functions palette as shown in Figure D.11( a). We place this transfer function in the forward path FIGURE D.11 a.Obtaining zero-pole-gain transfer function from the Functions palette; b.Obtaining Feedback interconnection from Functions palette860 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:59 of a unity-feedback system by following its block with a Feedback block obtained from the Functions palette as shown in Figure D.11( b). If the Model 2 input to the Feedback block is left unconnected, then a unity-feedback interconnection is assumed. Other options for interconnection, such as parallel and series, are shown on the palette of Figure D.11( b). Interconnect and label blocks Producing the closed-loop step response is similar to Example D.1, except the step-response blocks are placed at the output of the Feedback block. The equation writer is wired to the system output as in Example D.1. All datatypes must be compatible and are shown selected with the pull-down menu at the base of the blocks. If you select Automatic in the pull-down menu, LabVIEW will select the correct form for you as you connect the blocks. Theﬁnal Block Diagram andFront Panel for this example are shown in Figure D.12 ( a) and ( b), respectively. Notice that you enter open-loop poles, zeros, and gain on the Front Panel in place of polynomial open-loop numerator and denominator coefﬁcients. FIGURE D.12 a. Block Diagram for Example D.2; b. Front Panel for Example D.2D.4 Analysis and Design Examples 861WEBBAPPD 10/28/2014 21:59:59 Example D.3 Root Locus Analysis and DesignRoot Locus Analysis and Design We can obtain root locus plots by adding the Root Locus block obtained from the Functions palette as shown in Figure D.13. The Root Locus block is connected to the output of the open-loop system and a Root Locus Graph indicator is formed at the output of the Root Locus block. The resultant Block Diagram andFront Panel are shown in Figure D.14( a) and ( b) respectively. Figure D.13 shows other characteristic blocks that can be added. For example, closed- loop poles and zeros, as well as damping ratio and natural frequency, can be displayed. FIGURE D.13 Functions palette showing location of Root Locus block FIGURE D.14 Windows showing root locus analysis: a. Block Diagram ; b. Front Panel Example D.4 Open- and Closed-Loop Sinusoidal Frequency Analysis andDesignOpen- and Closed-Loop Sinusoidal Frequency Analysisand Design We can obtain open- and closed-loop sinusoidal frequency response curves by replacing theRoot Locus block with the Bode block to yield the open-loop frequency response. A copy of the Bode block can be added at the output of the Feedback block to obtain the closed-loop frequency response. Figure D.15 shows where to obtain the Bode block.862 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 21:59:59 Figure D.16 shows the Block Diagram andFront Panel with open- and closed- loop Bode analysis. In order to display the plots, the indicators shown at the outputs of theBode blocks were created. FIGURE D.15 Functions window showing frequency response blocks, such as Bode ,Nyquist , Nichols , and Gain and Phase Margin blocks FIGURE D.16 Bode analysis via LabVIEW: a. Block Diagram ;(ﬁgure continues )D.4 Analysis and Design Examples 863WEBBAPPD 10/28/2014 22:0:0 Figure D.15 shows other alternatives for frequency response analysis. For example, in addition to the Bode plots, yo u can create an indicator telling you the gain and phase margins by using the Gain and Phase Margin block. Figure D.17 shows that result. FIGURE D.16 (Continued )b. Front Panel FIGURE D.17 Bode analysis with gain and phase margin: a. Block Diagram ;(ﬁgure continues )864 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:0 D.5 Simulation Examples Whereas the LabVIEW block sequence for design and analysis is analogous to following the code statement sequence in a MATLAB M- ﬁle, the LabVIEW block sequence for simulation is analogous to following the block sequence of a Simulinkdiagram. In this section, we show examples of simulation using LabVIEW. For control system simulation, icons for the block diagram are taken from the Simulation subpalette under the Control Design and Simulation palette. Our examples will parallel the e x a m p l e ss h o w ni nA p p e n d i xCw h i c hu s e sS i m u l i n k .Finally, if you need to use Nyquist or Nichols charts, the associated blocks are shown in Figure D.15 and can replace the Bode blocks. FIGURE D.17 (Continued )b. Front PanelD.5 Simulation Examples 865WEBBAPPD 10/28/2014 22:0:1 Example D.5 Simulation of Linear SystemsSimulation of Linear Systems Create Block Diagram and Front Panel Figure D.18 shows the Block Diagram and Front Panel for simulating a linear system. The simulation reproduces Example C.1 in Appendix C, which uses Simulink. Blocks are selected from the Simulation subpalette under the Control Design and Simulation palette and must be placed within theSimulation Loop obtained from Functions/Control Design and Simulation/ Simulation/Control & Simulation Loop. We now enumerate the detailed steps required to create the Block Diagram andFront Panel: FIGURE D.18 Simulation of linear systems: a. Block Diagram ;b. Front Panel866 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:9 1.Transfer functions are obtained from Functions/Control Design and Simulation/ Simulation/Continuous Linear Systems/Transfer Function . Right-click on each transfer function and select Conﬁguration to enter the parameter values shown in Figure D.18( a) or equivalently in Figure C.5. 2.The gain block is obtained from Functions/Control Design and Simulation/ Simulation/Signal Arithmetic/Gain. Right-click on the gain block and select Conﬁ guration to enter the parameter value. 3.The step-input block is obtained from Functions/Control Design and Simulation/ Simulation/Signal Generation/Step Signal . Right-click on the gain block and select Conﬁ guration to enter the parameter value. 4.In order to display the three step-response curves simultaneously, we use a Build Array block obtained from Functions/Programming/Array/Build Array. Drag the bottom of the icon to expose the correct number of inputs (three for this case). 5.To create the display, we use the Simulation Time Waveform block obtained from Functions/Control Design and Simulati on/Simulation/Graph Utilities/Simtime Waveform . Right-click the output of the Simtime Waveform block and select Create/ Indicator to produce the Waveform Chart icon and the Front Panel display. Conﬁ gure simulation loop Finally, set the simulation parameters by right-clicking theSimulation Loop and selecting Conﬁgure Simulation Parameters . . . . Set the parameters as shown in Figure D.19. FIGURE D.19 Conﬁguring the Simulation Loop parameters: a.Simulation parameters; b.Timing parametersD.5 Simulation Examples 867WEBBAPPD 10/28/2014 22:0:12 Conﬁgure graph parameters On the Front Panel , right-click the graph and select Properties to con ﬁgure graph parameters if required. Select the legend and expand it vertically to expose all three plot identities. The titles in the legend can be changed to reﬂect meaningful labels for the plots. Run the simulation Perform the simulation by clicking the arrow at the extreme left of the toolbar on the Front Panel window. You can erase curves between trials by right-clicking the display and selecting Data Operations/Clear Chart . Example D.6 Effect of Ampli ﬁerSaturation on Motor ’s Load Angular VelocityEffect of Ampli ﬁer Saturation on Motor ’s Load Angular Velocity Create Block Diagram and Front Panel TheBlock Diagram andFront Panel for simulating a dc motor with and without saturation are shown in Figure D.20. TheSaturation block is obtained from Control Design & Simulation/Simulation/ Nonlinear Systems/Saturation. Conﬁgure simulation loop Conﬁgure the simulation loop as shown in ﬁgure D.19, except change the Final Time (s) in Figure D.19( a) to 10. Conﬁgure graph parameters On the Front Panel , right-click the graph and select Properties to con ﬁgure graph parameters. Select the Scales tab and enter 10 in the Maximum box as shown in Figure D.21. Select the legend and expand it vertically to expose both plot identities. The titles in the legend can be changed to re ﬂect meaningful labels for the plots. Run the simulation Perform the simulation by clicking the arrow at the extreme left of the toolbar on the Front Panel window. You can erase curves between trials by right-clicking the display and selecting Data Operations/Clear Chart . FIGURE D.20 Simulation of a dc motor with and without saturation: a. Block Diagram ;(ﬁgure continues )868 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:13 FIGURE D.20 (Continued )b. Front Panel FIGURE D.21 Chart Properties: Waveform Chart WindowD.5 Simulation Examples 869WEBBAPPD 10/28/2014 22:0:13 Example D.7 Simulating Feedback SystemsSimulating Feedback Systems Create Block Diagram and Front Panel TheBlock Diagram andFront Panel for simulating feedback systems is shown in Figure D.22. The Summation block is obtained from Control Design & Simulation/Simulation/Signal Arithmetic/Summation . Conﬁgure Summation and other blocks Right-click the Summation block and select Conﬁguration . . . Repeat for other blocks. FIGURE D.22 Simulation of feedback systems: a. Block Diagram ;b. Front Panel870 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:14 Example D.8 Simulating Digital Systems with the Simulation PaletteSimulating Digital Systems with the Simulation Palette Digital systems, such as Example C.4 in Appendix C, can be simulated using LabVIEW. However, there are restrictions on the transfe r functions used in the simulation. LabVIEW requires that all inputs to the transfer functions be present at the beginning of the simula-tion or else a cycle error will result. Unfortunately, this requirement limits the use oftransfer functions to those with a denominator of higher order than the numerator. Under these conditions, the reader is a dvised to use either MATLAB or the Control Design palette rather than the Simulation palette of the Control Design & Simulation function. Our ﬁrst digital example will simulate a digital feedback system using the Simulation palette with proper transfer functions. The next example will simulate Example C.4 in Appendix C, which does not have proper transfer functions, using LabVIEW ’sControl Design palette. Create Block Diagram and Front Panel TheBlock Diagram andFront Panel for simulating digital systems is shown in Figure D.23. The Discrete Zero-Order Hold block is obtained from Control Design & Simulation/Simulation/Discrete Linear Systems/ FIGURE D.23 Simulation of digital systems with Simulation palette: a. Block Diagram ;(ﬁgure continues )Conﬁ gure simulation loop Conﬁgure the simulation loop as shown in Figure D.19, except change the Final Time (s) in Figure D.19( a)t o1 0 . Conﬁ gure graph parameters On the Front Panel , right-click the graph and select Properties to con ﬁgure graph parameters. Select the Scales tab and enter 10 in the Maximum box as shown in Figure D.21. Run the simulation Perform the simulation by clicking the arrow at the extreme left of the toolbar on the Front Panel window. You can erase curves between trials by right-clicking the display and selecting Data Operations/Clear Chart .D.5 Simulation Examples 871WEBBAPPD 10/28/2014 22:0:14 Discrete Zero-Order Hold. The Discrete Transfer Function is obtained from Control Design & Simulation/Simulation/Discrete Linear Systems/Discrete Transfer Function . Conﬁgure Discrete Zero-Order Hold and other blocks Right click the Discrete Zero-Order Hold block and select Conﬁguration . . . Set the sample period to 0.5 second. Conﬁgure the transfer functions as shown on the Block Diagram .C o n ﬁgure the Step Signal to be a unit step. Conﬁgure simulation loop Conﬁgure the simulation loop as shown in Figure D.19. Conﬁgure graph parameters On the Front Panel , right-click the graph and select Properties to con ﬁgure graph parameters. Select the Scales tab and enter 3 in the Maximum box for the xaxis and 1 for the yaxis. Select the legend and expand it vertically to expose both plot identities. The titles in the legend can be changed to re ﬂect meaningful labels for the plots. Run the simulation Perform the simulation by clicking the arrow at the extreme left of the toolbar on the Front Panel window. You can erase curves between trials by right-clicking the display and selecting Data Operations/Clear Chart . The simulation shows the difference in responses obtained by (1) modeling the digital system as a zero-o rder hold cascaded with a linear system (Plot 0), or (2) modeling the system with a dig ital transfer function (Plot 1). Example D.9 Simulating Digital Systems with the Control Design PaletteSimulating Digital Systems with the Control Design Palette In order to avoid cycle errors in LabVIEW, we use the Control Design palette when we have transfer functions for which the numerator and denominator are of the same order. This example reproduces Simulink Example C.4. FIGURE D.23 (Continued )b. Front Panel872 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:14 Create Block Diagram and Front Panel TheBlock Diagram andFront Panel for this example are shown in Figure D.24. Wire the blocks as shown. Most of the blocks were previously discussed in Examples D.1 and D.2. Digital transfer functions are created using the same blocks as continuous systems, but with a nonzero Sampling Time(s) input. The CD Convert Continuous to Discrete.vi , is obtained from Functions/ Control Design & Simulation/Control Design/Model Conversion/CD ConvertContinuous to Discrete.vi . FIGURE D.24 Simulation of digital systems with the Control Design palette: a. Block Diagram ; b. Front PanelD.5 Simulation Examples 873WEBBAPPD 10/28/2014 22:0:18 TheBuild Array is obtained from Functions/Programming/Array/Build Array . Expand the Build Array block to show two inputs. Conﬁgure parameters for Build Array Right-click on Build Array and select Concatenate Inputs . Right-click again on Build Array and select Create/Indicator . Select and then right-click the indicator on the front panel and choose Replace .1 Using the resulting palettes as shown in Figure D.25, select the XY Graph .2 On the front panel expand the legend to show two graphs. Title the legend components as shown. Change the x- and y-axes’starting and ending points as desired by right-clicking the graph and selecting Properties . In the Properties window, select Scales and enter the desired information. Finally, select Plots and enter your choices. Right-click the graph on the front panel and select Data Operations and make your current values the default. Also, right-click again and choose to reinitialize to your default values. You may also choose to clear the current plot. Conﬁgure parameters for CD Convert Continuous to Discrete.vi Right-click and create a control for Sample Time(s), Numerator , and Denominator as described in Example D.1. Set the values as shown on the Front Panel . Conﬁgure parameters for CD Construct Transfer Function Model.vi as a discrete model Right-click and create a control for Sample Time(s) ,Numerator , and Denominator as described in Example D.1. Set the values as shown on the Front Panel . Conﬁgure parameters for all CD Draw Transfer Function Equation.vi Right-click and create a control for Equation as described in Example D.1. Set the values as shown on the Front Panel . Run simulation See Example D.1 for a description. The results are shown in Figure D.24( b). FIGURE D.25 Choosing XYGraph 1Be sure to select the entire indicator. Then place your mouse on the outer edge and be sure it is a pointer before selecting Replace . 2Right click the XY Graph on the front panel and open Properties . On the Appearance tab, select 2 for Plots shown .874 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:18 D.6 Interfacing with External Hardware This section provides an introduction to the use of LabVIEW virtual instruments to control external hardware with the NI myDAQ for students. Speci ﬁcally, we concentrate on using theNI myDAQ to analyze and design an actual feedback system used in the Hardware Exploration Laboratory sections at the end of select chapters. Required Hardware NI myDAQ is a data acquisition module that is ideal for student experimentation, since it is port able and of low cost. In order to perform the experiments in this book, you will need a motor control chip and a gearmotor. Although other alternatives exist, we use the following: (1) ROHM motor controlchip, BA6886N; and (2) 9.7:1 metal gearmotor 25Dx48L mm HP with 48 CPRencoder, which can be obtained from www.pololu.com . Required Software The software required to support the experiments in this book are: (1) LabVIEW or the Student Version of LabVIEW and (2) NI ELVISmx Soft Front Panel (SFP) Instruments, which comes bundled with the NI myDAQ. NI ELVISmx provides virtual instruments that will generate input signals to and acquire output signals from your external control system. Basic Con ﬁguration Figure D.26 shows the NI myDAQ and the basic con ﬁguration that will be used to perform control system design and analysis. Detailed wiring diagramswill accompany speci ﬁc experiments. Launching NI myDAQ TheNI myDAQ kit comes with the following cables and connectors: (1) USB cable; (2) 20-position screw terminal connector; (3) audio cable;and (4) DMM banana cable. The following steps will launch the NI myDAQ and NI ELVISmx , which provides convenient virtual instruments for control and data acquisition. FIGURE D.26 a. NI myDAQ;( ﬁgure continues )D.6 Interfacing with External Hardware 875WEBBAPPD 10/28/2014 22:0:20 Step 1: Be sure LabVIEW is installed on your computer. Step 2: Install the NI myDAQ software. Step 3: Connect the NI myDAQ to your computer via the USB cable. Step 4: After NI myDAQ is recognized, NI ELVISmx should launch automatically. IfNI ELVISmx does not launch, then manually launch from the Start menu All Programs/National Instruments/NI ELVISmx for NI ELVIS & NI myDAQ/ NI ELVISmx Instrument Launcher . Figure D.27 shows the window containing the virtual instruments available from NI ELVISmx . Clicking on any instrument will bring up that VI. Simple Experiments Using the NI myDAQ Measuring battery voltage using the NI myDAQ Digital Multimeter (DMM) With myDAQ connected to your computer, launch the DMM shown in Figure D.27. Attach the DMM probes between the myDAQ and a battery as shown in Figure D.28( a). Press the green Run arrow.ROHM Motor Control Chip B6886N9.7:1 Metal Gearmotor 25Dx48L mm HP with 48 CPR Encoder (b) FIGURE D.26 (Continued )b.basic con ﬁguration showing NI myDAQ interfaced with motor control chip and gearmotor; c.interconnected hardware876 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:20 FIGURE D.27 The NI ELVISmx Instrument Launcher window FIGURE D.28 Battery voltage measurement: a.Connections to myDAQ; (ﬁgure continues )D.6 Interfacing with External Hardware 877WEBBAPPD 10/28/2014 22:0:20 The NI myDAQ audio equalizer With myDAQ connected to your computer, launch theAudio Equalizer in the Featured Instruments menu shown in Figure D.27. Attach an audio cable from your music source to AUDIO IN on your myDAQ. Similarly, attach speakers or an earphone to the AUDIO OUT . Press the blue Start arrow. You can now adjust volume, bass, midtone, and treble as well as watch the audio waveform in time or frequency. The Audio Equalizer is shown in Figure D.29.FIGURE D.28 (Continued )b. DMM reading FIGURE D.29 The NI myDAQ Audio Equalizer878 Appendix D: LabVIEW TutorialWEBBAPPD 10/28/2014 22:0:21 Summary This appendix presented LabVIEW as an alternative to MATLAB for analysis, design, and simulation. Our discussion was divided into analysis and design, and simulation. Analysis and design is performed by interconnecting code blocks, which is analogous to writing in-line code for MATLAB M- ﬁles. Since the LabVIEW code blocks are represented by icons, an advantage of using LabVIEW is that you do not have to knowspeciﬁc code statements. Simulation is performed by interconnecting code blocks and is analogous to Simulink ﬂow diagrams. LabVIEW has more extensive applications. You can create virtual instruments on your computer monitor that can operate external hardware and transmit and receivetelemetric data. We covered a few of these applications in this appendix using the NImyDAQ. It is left to the interested reader to pursue more of these applications. Bibliography National Instruments. Getting Started with LabVIEW . National Instruments, Austin, TX. 2003 –2013. National Instruments. LabVIEW Fundamentals . National Instruments, Austin, TX. 2005. National Instruments. LabVIEWTMControl Design User Manual. National Instruments, Austin, TX. 2004–2009. National Instruments. Introduction to LabVIEW in 3 Hours for Control Design and Simulation . National Instruments Course Notes, Austin, TX. 2009. National Instruments. NI myDAQ User Guide and Speci ﬁcations . National Instruments, Austin, TX. 2010–2011. *All LabVIEW screenshots and equipment in this book are reprinted with permission of National Instruments.Bibliography 879WEBBAPPD 10/28/2014 22:0:21 Page 880WEBBGLOSS 10/29/2014 0:12:44 Glossary Acceleration constant lim s®0s2G s Actuating signal The signal that drives the controller. If this signal is the difference between the input and output, it is called the error . Analog-to-digital converter A device that converts analog signals to digital signals. Armature The rotating member of a dc motor through which a current ﬂows. Back emf The voltage across the armature of a motor. Bandwidth The frequency at which the magnitude frequency response is  3 dB below the magnitude at zero frequency. Basis Linearly independent vectors that de ﬁne a space. Bilinear transformation A mapping of the complex plane where one point, s, is mapped into another point, z, through z asb/ csd. Block diagram A representation of the interconnection of subsystems that form a system. In a linear system, the block diagram consists of blocks representing subsystems, arrows representing signals, summing junctions, and pickoff points. Bode diagram (plot) A sinusoidal frequency response plot where the magnitude response is plotted separately from the phase resp onse. The magnitude plot is dB versus log ω,a n d the phase plot is phase versus log ω. In control systems, the Bode plot is usually made for the open-loop transfer function. Bode plots can also be drawn as straight-line approximations. Branches Lines that represent subsystems in a signal-ﬂow graph. Break frequency A frequency where the Bode magnitude plot changes slope. Breakaway point A point on the real axis of the s-plane where the root locus leaves the real axis and enters the complex plane.Break-in point A point on the real axis of the s-plane where the root locus enters the real axis from the complex plane.Characteristic equation The equation formed by setting the characteristic polynomial to zero. Characteristic polynomial The denominator of a transfer function. Equivalently, the unforced differential equation, where the differential operators are replaced by sorλ. 881WEBBGLOSS 10/29/2014 0:12:44 Classical approach to control systems Seefrequency domain techniques . Closed-loop system A system that monitors its output and corrects for disturbances. It is characterized by feedback paths from the output. Closed-loop transfer function For a generic feedback system with G sin the forward path and H sin the feedback path, the closed-loop transfer function, T s,i s G s/1G sH s, where the +is for negative feedback, and the –is for positive feedback. Compensation The addition of a transfer function in the forward path or feedback path for the purpose of improving the transient or steady-state performance of a control system. Compensator A subsystem inserted into the forward or feedback path for the purpose of improving the transient response or steady-state error.Constant Mcircles The locus of constant, closed-loop magnitude frequency response for unity feedback systems. It allows the closed-loop magnitude frequency response to be determined from the open-loop magnitude frequency response. Constant Ncircles The locus of constant, closed-loop phase frequency response for unity feedback systems. It allows the closed-loop phase frequency response to be determined from the open-loop phase frequency response. Controllability A property of a system by which an input can be found that takes every state variable from a desired initial state to a desired ﬁnal state in ﬁnite time. Controlled variable The output of a plant or process that the system is controlling for the purpose of desired transient response, stability, and steady-state error characteristics.Controller The subsystem that generates the input to the plant or process. Critically damped response The step response of a second-order system with a given natural frequency that is characterized by no overshoot and a rise time that is faster than any possible overdamped response with the same natural frequency. Damped frequency of oscillation The sinusoidal frequency of oscillation of an underdamped response.Damping ratio The ratio of the exponential decay frequency to the natural frequency. Decade Frequencies that are separated by a factor of 10. Decibel (dB) The decibel is de ﬁned as 10 log P G, where PGis the power gain of a signal. Equivalently, the decibel is also 20 log VG, where VGis the voltage gain of a signal. Decoupled system A state-space representation in which each state equation is a function of only one state variable. Hence, each differential equation can be solved independently of the other equations. Digital compensator A sampled transfer function use dt oi m p r o v et h er e s p o n s eo f computer-controlled feedback systems. T he transfer function can be emulated by a digital computer in the loop.Digital-to-analog converter A device that converts digital signals to analog signals. Disturbance An unwanted signal that corrupts the input or output of a plant or process. Dominant poles The poles that predominantly generate the transient response. Eigenvalues Any value, λ i, that satis ﬁesAXiλixiforxi60. Hence, any value, λi, that makes xian eigenvector under the transformation A.882 GlossaryWEBBGLOSS 10/29/2014 0:12:44 Eigenvector Any vector that is collinear with a new basis vector after a similarity transformation to a diagonal system. Electric circuit analog An electrical network whose variables and parameters are analogous to another physical system. The electric circuit analog can be used to solve for variables of the other physical system. Electrical admittance The inverse of electrical impedance. The ratio of the Laplace transform of the current to the Laplace transform of the voltage. Electrical impedance The ratio of the Laplace transform of the voltage to the Laplace transform of the current.Equilibrium The steady-state solution characterized by a constant position or oscillation. Error The difference between the input and the output of a system. Euler ’s approximation A method of integration where the area to be integrated is approximated as a sequence of rectangles.Feedback A path through which a signal ﬂows back to a previous signal in the forward path in order to be added or subtracted.Feedback compensator A subsystem placed in a feedback path for the purpose of improving the performance of a closed-loop system.Forced response For linear systems, that part of the total response function due to the input. It is typically of the same form as the input and its derivatives. Forward-path gain The product of gains found by traversing a path that follows the direction of signal ﬂow from the input node to the output node of a signal- ﬂow graph. Frequency domain techniques A method of analyzing and designing linear control systems by using transfer functions and the Laplace transform as well as frequency response techniques. Frequency response techniques A method of analyzing and designing control systems by using the sinusoidal frequency response characteristics of a system. Gain The ratio of output to input; usually used to describe the ampli ﬁcation in the steady state of the magnitude of sinusoidal inputs, including dc.Gain margin The amount of additional open-loop gain, expressed in decibels (dB), required at 180 °of phase shift to make the closed-loop system unstable. Gain-margin frequency The frequency at which the phase frequency response plot equals 180 °. It is the frequency at which the gain margin is measured. Homogeneous solution Seenatural response. Ideal derivative compensator Seeproportional-plus-derivative controller . Ideal integral compensator Seeproportional-plus-integral controller . Instability The characteristic of a system de ﬁned by a natural response that grows without bounds as time approaches in ﬁnity. Kirchhoff ’s law The sum of voltages around a closed loop equals zero. Also, the sum of currents at a node equals zero.Lag compensator A transfer function, characterized by a pole on the negative real axis close to the origin and a zero close and to the left of the pole, that is used for the purpose of improving the steady-state error of a closed-loop system.Glossary 883WEBBGLOSS 10/29/2014 0:12:45 Lag-lead compensator A transfer function, characterized by a pole-zero con ﬁguration that is the combination of a lag and a lead compensator, that is used for the purpose of improving both the transient response and the steady-state error of a closed-loop system. Laplace transformation A transformation that transforms linear differential equations into algebraic expressions. The transformation is especially useful for modeling, analyzing, and designing control systems as well as solving linear differential equations. Lead compensator A transfer function, characterized by a zero on the negative real axis and a pole to the left of the zero, that is used for the purpose of improving the transient response of a closed-loop system. Linear combination A linear combination of nvariables, xi, for i1t o n, given by the following sum, S: SKnXnKn 1Xn 1 K1X1 where each Kiis a constant. Linear independence The variables xi, fori1t on, are said to be linearly independent if their linear combination, S, equals zero only if every Ki0 and no x i0. Alternatively, if thexi’s are linearly independent, then KnxnKn 1xn 1 ∙∙∙K1x10 cannot be solved for any xk. Thus, no xkcan be expressed as a linear combination of the other xi’s. Linear system A system possessing the properties of superposition and homogeneity. Linearization The process of approximating a nonlinear differential equation with a linear differential equation valid for small excursions about equilibrium. Loop gain For a signal-ﬂ ow graph, the product of branch gains found by traversing a path that starts at a node and ends at the same node without passing through any other node more than once, and following the direction of the signal ﬂow. Major-loop compensation A method of feedback compensation that adds a compensating zero to the open-loop transfer function for the purpose of improving the transient response ofthe closed-loop system. Marginal stability The characteristic of a system de ﬁned by a natural response that neither decays nor grows, but remains constant or oscillates as time approaches in ﬁnity as long as the input is not of the same form as the system’ s natural response. Mason ’sr u l e A formula from which the transfer function of a system consisting of the interconnection of multiple subsystems can be found. Mechanical rotational impedance The ratio of the Laplace transform of the torque to the Laplace transform of the angular displacement. Mechanical translational impedance The ratio of the Laplace transform of the force to the Laplace transform of the linear displacement.Minor-loop compensation A method of feedback compensation that changes the poles of a forward-path transfer function for the purpose of improving the transient response of the closed-loop system. Modern approach to control systems Seestate-space representation. Natural frequency The frequency of oscillation of a system if all the damping is removed. Natural response That part of the total response function due to the system and the way the system acquires or dissipates energy.884 GlossaryWEBBGLOSS 10/29/2014 0:12:45 Negative feedback The case where a feedback signal is subtracted from a previous signal in the forward path. Newton ’s law The sum of forces equals zero. Alternatively, after bringing the maforce to the other side of the equality, the sum of forces equals the product of mass and acceleration. Nichols chart The locus of constant closed-loop magnitude and closed-loop phase frequency responses for unity feedback systems plotted on the open-loop dB versus phase-angle plane. It allows the closed-loop frequency response to be determined from the open-loop frequencyresponse. Nodes Points in a signal- ﬂow diagram that represent signals. No-load speed The speed produced by a motor with constant input voltage when the torque at the armature is reduced to zero.Nonminimum-phase system A system whose transfer function has zeros in the right half-plane. The step response is characterized by an initial reversal in direction. Nontouching-loop gain The product of loop gains from nontouching loops taken two, three, four, and so on at a time.Nontouching loops Loops that do not have any nodes in common. Notch ﬁlter Aﬁlter whose magnitude frequency response dips at a particular sinusoidal frequency. On the s-plane, it is characterized by a pair of complex zeros near the imaginary axis. Nyquist criterion If a contour, A, that encircles the entire right half-plane is mapped through G sH s, then the number of closed-loop poles, Z, in the right half-plane equals the number of open-loop poles, P, that are in the right half-plane minus the number of counterclockwise revolutions, N, around  1, of the mapping; that is, ZP N. The mapping is called the Nyquist diagram ofG sH s. Nyquist diagram (plot) A polar frequency response plot made for the open-loop transfer function.Nyquist sampling rate The minimum frequency at which an analog signal should be sampled for correct reconstruction. This frequency is twice the bandwidth of the analog signal.Observability A property of a system by which an initial state vector, x t 0, can be found from u(t) and y(t) measured over a ﬁnite interval of time from t0. Simply stated, observability is the property by which the state variables can be estimated from a knowledge of the input, u(t), and output, y(t). Observer A system con ﬁguration from which inaccessible states can be estimated. Octave Frequencies that are separated by a factor of two. Ohm ’s law For dc circuits the ratio of voltage to current is a constant called resistance. Open-loop system A system that does not monitor its output nor correct for disturbances. Open-loop transfer function For a generic feedback system with G(s) in the forward path andH(s) in the feedback path, the open-loop transfer function is the product of the forward- path transfer function and the feedback transfer function, or G sH s. Operational ampli ﬁerAn ampli ﬁer—characterized by a very high input impedance, a very low output impedance, and a high gain —that can be used to implement the transfer function of a compensator. Output equation For linear systems, the equation that expresses the output variables of a system as linear combinations of the state variables.Glossary 885WEBBGLOSS 10/29/2014 0:12:45 Overdamped response A step response of a second-order system that is characterized by no overshoot. Partial-fraction expansion A mathematical equation where a fraction with nfactors in its denominator is represented as the sum of simpler fractions. Particular solution Seeforced response. Passive network A physical network that only stores or dissipates energy. No energy is produced by the network.Peak time, T pThe time required for the underdamped step response to reach the ﬁrst, or maximum, peak. Percent overshoot, %OS The amount that the underdamped step response overshoots the steady-state, or ﬁnal, value at the peak time, expressed as a percentage of the steady-state value. Phase margin The amount of additional open-loop phase shift required at unity gain to make the closed-loop system unstable. Phase-margin frequency The frequency at which the magnitude frequency response plot equals zero dB. It is the frequency at which the phase margin is measured.Phase variables State variables such that each subsequent state variable is the derivative of the previous state variable.Phasor A rotating vector that represents a sinusoid of the form Acos ωtϕ. Pickoff point A block diagram symbol that shows the distribution of one signal to multiple subsystems.Plant or process The subsystem whose output is being controlled by the system. Poles (1) The values of the Laplace transform variable, s, that cause the transfer function to become in ﬁnite; and (2) any roots of factors of the characteristic equation in the denominator that are common to the numerator of the transfer function.Position constant lim s®0G s Positive feedback The case where a feedback signal is added to a previous signal in the forward path. Proportional-plus-derivative (PD) controller A controller that feeds forward to the plant a proportion of the actuating signal plus its derivative for the purpose of improving the transient response of a closed-loop system. Proportional-plus-integral (PI) controller A controller that feeds forward to the plant a proportion of the actuating signal plus its integral for the purpose of improving the steady- state error of a closed-loop system. Proportional-plus-integral-plus-derivative (PID) controller A controller that feeds forward to the plant a proportion of the actuating signal plus its integral plus its derivative for the purpose of improving the transient response and steady-state error of a closed-loopsystem. Quantization error For linear systems, the error associated with the digitizing of signals as a result of the ﬁnite difference between quantization levels. Raible ’s tabular method A tabular method for determining the stability of digital systems that parallels the Routh-Hurwitz method for analog signals.Rate gyro A device that responds to an angular position input with an output voltage proportional to angular velocity.886 GlossaryWEBBGLOSS 10/29/2014 0:12:45 Residue The constants in the numerators of the terms in a partial-fraction expansion. Rise time ,TrThe time required for the step response to go from 0.1 of the ﬁnal value to 0.9 of the ﬁnal value. Root locus The locus of closed-loop poles as a system parameter is varied. Typically, the parameter is gain. The locus is obtained from the open-loop poles and zeros. Routh-Hurwitz criterion A method for determining how many roots of a polynomial in s are in the right half of the s-plane, the left half of the s-plane, and on the imaginary axis. Except in some special cases, the Routh-Hurwitz criterion does not yield the coordinates of the roots. Sensitivity The fractional change in a system characteristic for a fractional change in a system parameter.Settling time ,T sThe amount of time required for the step response to reach and stay within 2%of the steady-state value. Strictly speaking, this is the de ﬁnition of the 2% settling time. Other percentages, for example 5%, also can be used. This book uses the 2% settling time.Signal-ﬂow graph A representation of the interconnection of subsystems that form a system. It consists of nodes representing signals and lines representing subsystems. Similarity transformation A transformation from one state-space representation to another state-space representation. Although the state variables are different, each representation is a valid description of the same system and the relationship between the input and the output. Stability That characteristic of a system de ﬁned by a natural response that decays to zero as time approaches in ﬁnity. Stall torque The torque produced at the armature when a motor ’s speed is reduced to zero under a condition of constant input voltage. State equations A set of nsimultaneous, ﬁrst-order differential equations with nvariables, where the nvariables to be solved are the state variables. State space Then-dimensional space whose axes are the state variables. State-space representation A mathematical model for a system that consists of simultaneous, ﬁrst-order differential equations and an output equation. State-transition matrix The matrix that performs a transformation on x(0), taking xfrom the initial state, x(0), to the state x(t) at any time, t0. State variables The smallest set of linearly independent system variables such that the values of the members of the set at time t 0along with known forcing functions completely determine the value of all system variables for all tt0. State vector A vector whose elements are the state variables. Static error constants The collection of position constant, velocity constant, and acceleration constant. Steady-state error The difference between the input and the output of a system after the natural response has decayed to zero.Steady-state response Seeforced response . Subsystem A system that is a portion of a larger system. Summing junction A block diagram symbol that shows the algebraic summation of two or more signals.Glossary 887WEBBGLOSS 10/29/2014 0:12:45 System type The number of pure integrations in the forward path of a unity feedback system. System variables Any variable that responds to an input or initial conditions in a system. Tachometer A voltage generator that yields a voltage output proportional to rotational input speed. Time constant The time for e atto decay to 37% of its original value at t0. Time-domain representation Seestate-space representation . Torque-speed curve The plot that relates a motor ’s torque to its speed at a constant input voltage.Transducer A device that converts a signal from one form to another, for example from a mechanical displacement to an electrical voltage.Transfer function The ratio of the Laplace transform of the output of a system to the Laplace transform of the input.Transient response That part of the response curve due to the system and the way the system acquires or dissipates energy. In stable systems it is the part of the response plot prior to the steady-state response. Tustin transformation A bilinear transformation that converts transfer functions from continuous to sampled and vice versa. The important characteristic of the Tustin transformation is that both transfer functions yield the same output response at the sampling instants. Type Seesystem type . Undamped response The step response of a second-order system that is characterized by a pure oscillation. Underdamped response The step response of a second-order system that is characterized by overshoot.Velocity constant lim s®0sG s z-transformation A transformation related to the Laplace transformation that is used for the representation, analysis, and design of sampled signals and systems. Zero-input response That part of the response that depends upon only the initial state vector and not the input. Zero-order sample-and-hold (z.o.h.) A device that yields a staircase approximation to the analog signal.Zeros (1) Those values of the Laplace transform variable, s, that cause the transfer function to become zero; and (2) any roots of factors of the numerator that are common to the characteristic equation in the denominator of the transfer function. Zero-state response That part of the response that depends upon only the input and not the initial state vector.888 GlossaryWEBBANS 10/28/2014 16:7:53 Answers to Selected Problems Chapter 1 c. x t2 5 e 4t25cos 3 t8 15sin 3t/C18/C19 b. x t  e t9te t5e 2tt 2 Chapter 2 b. x t15 26e 2t 3 10e 4t 1865cos 3 t 1 65sin 3t 8.Y s X ss34s26s8 s33s25s1 c.d3x dt311d2x dt212dx dt18xdf dt3f t a.Vo s Vi s1 s2 b.Vo s Vi ss22s2 s42s33s23s2 36.θ2 s T s3 20s213s4 37.θ2s  Ts 0:011 s0:29  s2:26  46.θ2s  Eas 0:08 ss0:8  889WEBBANS 10/28/2014 16:7:54 Chapter 3 di2 dt di4 dt dvo dt2 66666643 7777775  2 5 1 101 10  15 45 45  25 85 252 66666643 7777775i 2 i4 vo2 643 752 5 15 252 66666643 7777775v o yvo001 i2 i4 vo2 6643 775 Note: L1is left-most inductor in Figure P3.1 in the text. a. _x0100 00100001  13  5 1 52 666643 77775x0 0012 666643 77775r t c t 1 0800 x a. Y s R s10 s35s22s3 _x Deq Jeq0Kt JeqN1 N2 10 0  Kb LaN2 N10 Ra La2 666643 77775ω L θL ia2 4350 0 1 La2 643 75ea y0N2 N10/C20/C21 ωL θL ia2 435 Chapter 4 14.xt 1 6 16e  0:5tcosﬃﬃﬃﬃﬃ 11p 2t1ﬃﬃﬃﬃﬃ11p sinﬃﬃﬃﬃﬃ11p 2t ! 1 61 1:091e 0:5tcosﬃﬃﬃﬃﬃ 11p 2t 16:78o ! "# : a. ζ0:375; ωn4 rad/s; Ts2:67 s; Tp0:847 s; %OS 28:06 a. s 6:67j9:88 38.s 1:5j3:428 a. s3 8s2 11s80b.s9:11;0:534; 1:64 43.y t2 5 25e  5t890 Answers to Selected ProblemsWEBBANS 10/28/2014 16:7:54 46.Φ t" 1:0455 e 0:20871 t 0:045545 e 4:7913t0:21822 e 0:20871 t 0:21822 e 4:7913t  0:21822 e 0:20871 t0:21822 e 4:7913 t 0:045545 e 0:20871 t1:0455 e 4:7913t# x t1:0455 e 0:20871 t 0:045545 e 4:7913 t  0:21822 e 0:20871 t0:21822 e 4:7913t/C20/C21 y t0:60911 e 0:20871 t0:39089 e 4:7913t 77.D0:143 N-m-s/rad 80.R912Ω Chapter 5 2.C s R sG3 G1G21 1G1H1 4.C s R sG1G2G3 1G3HG1G2HG2G4 6.C s R sG1G5 1G1G2G1G3G4G5G1G3G5G6G7G1G5G8 9.C s R sG4G6G2G5G6G3G5G6 1G6G1G2G1G3G1G2G6 G1G3G6G4G6G7G2G5G6G7G3G5G6G7 26.C s R sG1G2G3G4 2G2G3G42G3G42G4 27.C s R sG1G6G7 G2G3 G4G5 1 G6G7H3 G2G3 G4G5 G6H1 G7H2G6G7H1H2 28.C s R ss31 2s4s22s c. _x 2100 0 200 00  50 000  62 666643 77775x0 1 112 666643 77775r y 1 6 1 72 1918/C20/C21 x _x01 0 0  20 1 0 00 0 1 5 1002 666643 77775x0 00 12 666643 77775r yc  5100 x 65.D L3560 N-m-s/radAnswers to Selected Problems 891WEBBANS 10/28/2014 16:7:55 Chapter 6 1.2 rhp, 3 lhp, 0 jω 3.3 rhp, 2 lhp, 0 jω 4.1 rhp, 0 lhp, 4 jω 5.0 rhp, 2 lhp, 2 jω 9.Unstable 17.1 rhp, 2 lhp, 4 jω 23.K>3 4;K< 1 a.  4<K<20:41; b.1:36 rad/s a. 0<K<22:22; b.K22:22; c.sj1:1547 ; 6:393; 2:607 42. 23<K<0 Chapter 7 4.estep ∞0;eramp ∞93:33;eparabola ∞∞ _e ∞0:9 a. %OS 14:01; b.Ts0:107 sec; c.estep ∞0; d.eramp ∞0:075; e.eparabola ∞∞ a. Kp13;K ν0;Ka0;b.e 1  37:5;1;1;respectively ; c.Type 0 20.K70000 27.β1;K1:16;α7:76;orβ 1;K5:16;α1:74 a. K831;744;a831:744 36.K1156:8;Kf7:44 a. Step: e ∞0:1622; ramp: e ∞∞ Chapter 8 16.Breakaway point  2; asymptotes: σa 13/3; jω-axis crossing j6:3 b. Asymptotes: σa 73;c.K60:2;d.K1:88 20.K9997 ;α7 a. σ a 52;b.s 1:38; 3:62; c.0<K<126; d.K10:3 b. K9:4;c.T s4:62 s;Tp1:86 s; d.s 4:27; e.0<K<60 30.α4 a. 0<K<4;b.K1090; c.K690 a. K170:1;b.K16:95 Chapter 9 1.Gc ss0:7 s;K'13:8 for both cases; KpO1:38;KpN∞; %OS O%OS N9:48;TsOTsN4:36 s892 Answers to Selected ProblemsWEBBANS 10/28/2014 16:7:56 a. s 3:33j5:519; b.Angle  73:309 °;c.s 4:985 d.K187; e.s 1:66; 11:7 a. s 2:4j4:16; b.s 6:06; c.K29:12; d.s 1:263; f.Ka4:8 a. Gc ss7 s37:42;K5452 ;dominant poles  4:13j10:78 a. Kuc10;Kc9:95; b.Kpuc1:25;Kpc6:22; c.%OS uc%OS c4:32; d.Uncompensated: exact second-order system, approximation OK; compensated: closed-loop pole at  0:3, closed-loop zero at  0:5, simulate e.Approach to ﬁnal value longer than settling time of uncompensated system f.GLLC s404:1 s0:5 s4 s2 s4 s0:1 s28:36yields approximately a 5 times improvement in speed. 25.Gc s s7:71 s0:1 s;K1:683 29.Poles  0:758j1:48; 2:54; zeros—none Chapter 10 10.System 1: 0 <K<490:2; System 2: 0 <K<1:4; System 3: 1 <K<∞ (Answers are from exact frequency response) a. System 1: GM 6:38 dB;ΦM 20:3° (Answers are from exact frequency response) c. ωBW2:29 rad/s 23.System 2: Ts2:23 sec, Tp0:476 s, %OS 42:62 (Answers are from exact frequency response) 40.GM6:59 dB,ΦM46:9°(Answers are from exact frequency response) Chapter 11 a. K2113 (Answer is from exact frequency response) a. K2365 (Answer is from exact frequency response) a. K575 (Answer is from exact frequency response) 12.Gcs 4:611 s1:8 s8:3;K2000 (Answer is from exact frequency response) 21.Gc s s0:092 s2:392 s;K27:01 (Answer is from exact frequency response) Chapter 12 d. For function i:T ss3 s2 k28s k116Answers to Selected Problems 893WEBBANS 10/28/2014 16:7:57 b. For function i:G s6:25 s 27:5 s1071:25 s20;T s200 s27s25 4s3as2bsc where a 25k3 110k2285k1120 b 750k3 2200 k22850 k1800 c5000 k3 andC111 ;B71:25 27:56 :25Twas used a. Uncontrollable; b.Controllable; c.Controllable K 92:35 36 :78 7for a characteristic polynomial of s6 s28s45:78s314s293:78s274:7 L   671:19 1472 :4Tfor a characteristic polynomial of s2144s14;400 Chapter 13 a. f kT229:5 0:4k 504 0:6k275:5 0:8k c. G z0:395 z0:2231 z 0:2231 z20:1857 z0:04979  b. G z0:0517z22:2699 z0:2995 z 1 z 0:2231 z 0:4065 a. T zG1 zG2 z 1G1 zG2H z 14.0<K<15:76 a. Kp1 2;e ∞23;K ν0;e ∞∞;Ka0;e ∞∞ 17.K18:42 for 15 %of overshoot; 0 <K<134:76 for stability894 Answers to Selected Problems3GBINDEX 10/14/2014 11:56:16 Index A Abscissa of convergence, 35nAbsorption, 143 –145 Acceleration constant, 345, 584Ac/dc conversion and power distribution system, 517Ackerman ’s formula, 662n Active-circuit realization, of compensation, 495 –497 Active front steering, 644 Active queue management (AQM) algorithm, 376 Active suspension system, 286 –287, 373 Actuating signal, 8Actuator block diagram, 286A/D, SeeAnalog-to-digital converter Adenosine triphosphate (ATP) level, 374Admittance, 53AGC, SeeAutomatic generation control Agee, J. T., 104, 112, 151, 155Aggarwal, J. K., 112Agricultural delivery booms, 644 –645 Ahmad, R. K. R., 648AIDS, SeeHIV/AIDS Aircraft: attitude of, 23hypersonic ﬂight testing, 517 STOL ﬁghter aircraft, 327 Akesson, M., 113Alertness monitoring, 24α-subsystem, of grid-connected converter, 517, 607, 761 Alternative Drivetrains, 28n, 30Alvarez, T., 650n, 699n, 704Alvin ,2 7 1 Ampli ﬁers: operational, 57 –61, 188 –189 power, 93, 141preampli ﬁers, 93 transfer functions and, 93Ampli ﬁer saturation, 87 load angular velocity response and, 192simulation with LabVIEW program, 868 –869 Amplitudes, 160Anagnost, J. J., 334Analogs: explanation of, 83parallel, 85 –86 series, 83 –85 Analog system, disk drive, 758 –759 Analog-to-digital control conversion, 710 –711 antenna azimuth for, 708steps to, 711 Analog-to-digital (A/D) converter, 709, 710Analysis. See also Control systems analysis deﬁnition of, 9 feedback ampli ﬁer, 5 mesh, 48 –53 nodal, 50, 53 –55 open-loop/closed-loop sinusoidal frequency, 862 –865 qualitative design and, 158sensitivity, 18sinusoidal frequency, 5via input substitution, 360 –362 Analytical expressions for frequency response, 528–529 Anderson, C. G., 433, 434n, 447Anderson, S., 28, 30Anesthesia regulation, 23Angles of departure and arrival: from complex pole, 401 –402 in root locus sketching, 400 –402 Angu lar displacement: load, 193, 194in lossless gears, 74torque-, 69 8953GBINDEX 10/14/2014 11:56:17 Angular velocity, 81 load angular velocity response, 192 torque-, 69 Ansermino, J. M., 447Antenna azimuth, 11 –14, 25 analog- to-digital control conversion for, 708block diagram for, 17position control system, 203, 285, 691 –692 Antenna control system, 11 –14 cascade compensation and, 638 –640 closed-loop response design for, 272 –275 controller/observer design and, 688 –693 digital cascade compensator design and, 751 –753 gain design and, 638lag-lead compensation and, 500 –503 open-loop response and, 202 –205 root locus for, 417 –419 stability design/transient performance and, 595 –596 stability design via gain for, 321 –323 state-space representation and, 141 –143 steady-state errors and, 362 –363 transfer functions for, 92 –94 transient design via gain and, 417 –419, 749 –751 Anthonis, J., 448AQM algorithm, SeeActive queue management algorithm Aquifers, 144 –145 Aquifer system model, 144Aranda, J., 25n, 31Armature, 78 –79 Armature circuit, 15, 78 –79 Armature resistance, 80Armature voltage, 78 –79, 81 Arndt, D., 25, 30 Arrival angle, SeeAngles of departure and arrival Arterial blood pressure, 217, 437 Artiﬁcial heart, open-loop transfer function, 217 Artiﬁcial pacemakers, 760 Ashkenas, I., 232Asparagus-picking robots, 212Assembly-line robots, steady-state errors and, 349Åström, K., 290, 296, 430, 447, 605, 610, 743, 764 Asymptotes: approximations of, 531 –550 break frequency, 533high-frequency, 533low-frequency, 533root locus sketching with, 393 –395 ATP level, SeeAdenosine triphosphate level Attitude, aircraft, 23Automatic ﬁeld current regulator, 436 –437 Automatic generation control (AGC), 515Automatic Voltage Regulator, 212, 290, 330B Back electromotive force, 79 Backlash: on load angular displacement response, 193, 194 as nonlinearilty, 87insystems of gears, 73 Bahill, A. T., 30Baker, M. W., 447Ballard, R. D., 271, 296, 333 Ball-drop experiment, 150 Bandwidth, 571Baratta, R. V., 233Barbé, L., 288n, 297Barkana, I., 371, 379, 644, 647Bauer, P., 153n, 156, 297, 334, 380, 448, 524, 611, 648, 704, 765 Bayle, B., 288n, 297 Bechhoefer, J., 24, 30 Behavior at in ﬁnity, root locus sketching and, 392 –395 Bell Telephone Laboratories, 5Bennett, S., 4n, 30Berenguel, M., 112, 155, 232, 296, 333, 379, 447, 523, 610, 647, 704, 764 Bersak, D. R., 334Bessemer, Henry, 5 Bhambhani, V., 606, 610 Bhandari, M., 701n, 704Bhattacharyya, S. P., 610, 648BIBO, SeeBounded-input bounded-output Bicycle: dynamics, 289 –290 self-balancing, 607steer and roll angle of, 605 steering and tilt angle of, 430 Bilinear transformations, in digital control systems, 730–731 Binu, L. S., 524 Biological system, 94 –95 Bittanti, S., 516, 523, 605, 610, 759, 764Block diagram(s), 16 –17 converting signal- ﬂow graphs to, 249 –250 functional, 12, 13, 15of multiple subsystems, 236 –245 of open-/closed-loop systems, 7of phase variables, 132of summing junctions, 241of transfer functions, 45 Block diagram reduction, 17 digital control systems and, 723 –726 by moving blocks, 242 –244 of sampled-data systems, 724 –725 via familiar forms, 242 –243 Block libraries, in MATLAB Simulink program, 822 –823896 Index3GBINDEX 10/14/2014 11:56:17 Blocks, in MATLAB Simulink program, 821 Blood pressure, arterial, 217, 437 Bobrow, J. E., 30Bode, H. W., 5, 30, 610Bode plots: of (s+a), 533 approximations for, 531 –532 determining stability via, 566 –568 evaluating gain/phase margins via, 568 –570 forG(s)=(s+a), 532 –535 forG(s)=1/s, 537 forG(s)=1/(s 2+2ζωns+ωn2), 543 –547 forG(s)=1/(s+a), 536 for gain adjustment, 615 –616 gain margin/phase margin from, 569forG(s)=s, 536 –537 forG(s)=s 2+2ζωns+ωn2, 540 –541 for lead compensation, 627range of gain for stability via, 567 –568 for ratio of ﬁrst-order factors, 537 –540, 547 –550 for ratio of second-order factors, 541 –543, 547 –550 static error constants from, 585 –586 transfer function from, 591 –594 Bokor, J., 153n, 156, 297, 334, 380, 448, 524, 611, 648, 704, 765 Bona, B. E., 156, 233, 297, 334, 705Bondia, J., 156, 704Boost converter, 291Borovic, B., 216, 231Bosch, R., 28, 30, 106, 112Bottom-up design, 21Bounded input, 300Bounded-input bounded-output (BIBO), 300 –301 Boyd, M., 764Branches: root locus sketching and, 391of signal-ﬂ ow graphs, 248 –249 Breakaway points: explanation of, 395 –397, 404 using differential calculus to ﬁnd, 397 –398 without differentiation, 398 –399 Break frequency, 533Break frequency asymptotes, 533Break-in points: explanation of, 395 –397, 404 using differential calculus to ﬁnd, 397 –398 without differentiation, 398 –399 Breazeal, C., 30Bretholtz, Ø., 31 Budak, A., 523 Butler, H., 290, 291n, 296Butterworth polynomial, 328Buzi, G., 379C Cai, Y., 379, 447, 611 Camacho, E. F., 29, 30, 107, 112, 153, 155, 222, 232, 294, 332, 333, 377, 379, 438, 447, 519, 523, 608, 610, 646,647, 702, 704, 764 Campbell, T. J., 434n, 447Cancellation, pole-zero, 190 –191 Cannon, R. H., Jr., 30, 47, 112Canonical form: controller, 260 –261, 265 Jordan, 260observer, 261 –265, 671 –673 transformations to, 260 –265 Capacitors, 127Cárdenas, M. O., 704Cardona, J. E., 701, 704Carlson, L. E., 112, 155 Cascade compensation: antenna control and, 638 –640 in digital control systems, 743 steady-state error design via, 614steady-state errors via, 453 –462 transient response design via, 614transient response improvement via, 462 –474 vias-plane, 742 –746 Cascade compensators, 486, 744 –745, 751–753 Cascade d interconnections, 34 Cascaded subsystems, 237 –239, 264 Cascaded systems, load in, 238Cascade form: of multiple subsystems, 237 –239 of state space, 256 –258, 265 Cascade PI controller, robotic manipulator with, 433 Catheter, de ﬂection response, 216 Cereijo, M. R., 155 Chan, W. L., 334Chandra, F. A., 374, 379Chaos, D., 25n, 31Characterizing response, from damping ratio, 172Chassaing, R., 747n, 764Chebyshev, P. L., 5 Chemical process control system, 329 Chen, J. M., 288n, 297Chen, N., 374n, 380Chen, S.-Y., 291, 296Chen, Y. D., 233Chen, Yq., 610Chignola, R., 104, 112Chiu, D. K., 149, 155 Circuits: armature, 15, 78 –79 complex, 51 –55 integrated, 290 –291Index 8973GBINDEX 10/14/2014 11:56:18 Circuits: ( Continued ) inverting operational ampli ﬁer, 58 –59 nonminimum-phase electric, 188 simple, 50, 51solenoid coil, 285 –286 transformed, 49 Classical technique, 116. See also Frequency-domain modeling Cleveland, J. P., 233 Clifford, William Kingdon, 5 Closed-loop feedback, in ventilators, 432Closed-loop frequency responses: closed-loop transient responses and, 570 –573 relation between open-loop and, 573 –578 Closed-loop polar plot, 576nClosed-loop poles, 301 –303, 382 –383, 386, 407, 410, 416, 455 Closed-loop response design, for antenna control, 272 –275 Closed-loop sinusoidal frequency analysis and design, with LabVIEW program, 862 –865 Closed-loop step response, with LabVIEW program, 860–861 Closed-loop system, 8, 158 block diagram of, 7error, 337 –338 for ideal integral compensator, 455root sensitivity of, 416 –417 Closed-loop transfer function, sensitivity of, 357Closed-loop transient responses: closed-loop frequency responses and, 570 –573 open-loop frequency responses and, 578 –582 Closed-loop vehicle response, for train stopping, 431CMM, SeeCoordinate measuring machine Cochin, I., 112, 155Coefﬁcient(s): matching, 661 –662, 677, 681 –683 reverse, 307of viscous friction, 61, 69 Companion matrices, 262Compensated system: of ideal derivative compensation, 466 –467 root locus for, 456 Compensating zero, via rate feedback, 489 –491 Compensation. See also speci ﬁc types active-circuit realization of, 495 –497 physical realization of, 495 –499 for systems, 8techniques, 452 Compensators, 8, 452 –453. See also speci ﬁc types passive realization of, 498root locus with, 454root locus without, 454 Completely controllable, 659nCompletely observable, 675n Complex circuits: via mesh analysis, 51 –53 vianodal analysis, 53 –55 Complex numbers, vector representation of, 383 –385 Complex pole, angle of departure/arrival from, 401 –402 Component design, transient response through, 180 –181 Component responses, of three-pole system, 183 –184 Computer-aided design, 19 –20 Computer-controlled systems, 8 Computer hard disk drive, 9, 433, 644Computers, SeeDigital computers Computer simulation, of step responses, 420Conductance, 54nConservation, ﬂow for, 145 Constant-acceleration inputs, 337Constant command, 17 Constant Mcircles, 573 –574, 576 Constant Ncircles, 573 –576 Constant-velocity inputs, 336 Continuous casting, in steel production, 289Continuous stirred tank reactor, 699, 700Contours, 551 –554 Control design palette, in LabVIEW program, 872 –874 Controllability, 658 –661 by inspection, 658 –659 via controllability matrix, 659 –660 Controllability matrix, 659 –661 Controllable systems, 658Controlled variable, 7, 34Controller canonical form, of state space, 260 –261, 265 Controller design, 651 –658 alternative approaches to, 661 –667 antenna control and, 688 –693 by matching coef ﬁcients, 661 –662 for phase-variable form, 655 –657 by transformation, 662 –666 Controllers. See also Proportional-plus-integral-plus- derivative (PID) controllers cascade PI, 433master, 329 open-loop swivel, 376 in open-loop systems, 7proportional-plus-derivative, 463proportional-plus-integral, 453, 457slave, 329 Control system problem, for root locus, 382 –383 Control systems. See also Feedback control systems; speci ﬁc control systems advantages, 2 –4 analysis of, 9 –14, 17 –18 compo nents, 2 computer-aided design of, 19 –20898 Index3GBINDEX 10/14/2014 11:56:19 conﬁgurations of, 6 –8 deﬁnition of, 2 derivative, 453 design objectives for, 9 –14 design process, 14 –18 digital computers in, 6engineering, 20 –21 history of, 4 –6 integral, 453 prevalence of, 21 proportional, 453schematic for, 15test waveforms, 18theory, 5twentieth-century developments, 5 Control systems analysis: in design process, 17 –18 with LabVIEW program, 850 –851 linear, 5objectives of, 9 –14 Control System Toolbox, 439, 519, 520, 609Convolution integral, 198Cook, P. A., 112Coordinate measuring machine (CMM), 516Corke, P. I., 523 Coulomb friction, 65n Cowan, N. J. A., 611Craig, I. K., 27, 30, 105, 113, 152, 155, 222, 232, 293, 331, 333, 376, 379, 447, 518, 523, 608, 610, 645,647, 702, 704, 761, 764 Craig, J. J., 447, 523, 764Cramer ’s rule, 52 Crane loading, 103 Crawshaw, L. I., 30 Critically damped response, 167, 168Critical points, root locus sketching and, 405 –406 Crosslapper, 218Cruise control systems, 606CT scans, 288Cubitt, William, 4Cutaneous rabbit, 24 –25 DDa, R. E., 334D/A converter, SeeDigital-to-analog converter D’Ambrosia, R. D., 233 Damped frequency of oscillation, 178Damper, mass and, 123Damping, 79 Damping frequency, exponential, 178 Damping ratio: characterizing response from, 172deﬁnition of, 170natural frequency and, 203 –204 from phase margin, 579 –580 second-order response as function of, 171of second-order system, 169 –172 second-order underdamped responses for, 174v. percent overshoot, 176v. rise time, 177 Das, A., 764Datta, A., 610, 648 Davidson, C. M., 437, 447 Davis, S. A., 113D’Azzo, J. J., 30, 333, 340n, 379, 523, 647, 704 DBS, SeeDeep Brain Stimulation Dc-dc converter, 219, 699 –700 Dc motors, 78 driving rotational mechanical load, 80load and, 81 –82 Dc servomotor, load and, 148Deadbeat control, 759 –760 Dead zone, 87, 193de Araújo, F. M. U., 447, 610Deblander, J., 448Decay frequency, exponential, 169 –170 Decoupled equations, 260, 268Decoupled variables, 123 Deep Brain Stimulation (DBS), 437 Deﬂection response, of ﬂuid- ﬁlled catheter, 216 Degr ees of freedom, 64 in rotational systems, 69 de Keyser, R., 232, 289n, 297Delivery booms, agricultural, 644 –645 Dell ’Orto, F., 523, 610, 764 de Mathelin, M, 288n, 297 Deng, H., 31 de Paor, A. M., 447Departure angle, SeeAngles of departure and arrival Dependent source, electrical network with, 125 –127 Derivative compensation, SeeIdeal derivative compensation Derivative control systems, 453Design. See also Frequency response design methods; Root locus design methods; State-space design methods computer-aided, 19 –20 deﬁnition of, 9 with LabVIEW program, 850 –851 objectives, 9 –14 theory, 5 Design process: ﬂowchart of, 14 steps of, 14 –18 Desired transient response, 9 Desoer, C. A., 334Destination shaft, 75Index 8993GBINDEX 10/14/2014 11:56:19 de Vlugt, E., 288, 296 Diagonalizing: system in state space, 269 –270 system matrix, 267 Diaz, J. M., 25n, 31 DiBona, G. F., 217, 232Di Carlo, A., 523, 610, 764Dickinson, M. H., 611Differential calculus, 397 –398 Differential equation(s): coefﬁcients, 5 fractional calculus, 218Laplace transform solution of, 39linearization of, 89 –90 linear time-invariant, 16nth-order, 16, 117 single loop via, 48 transfer function for, 45 Digital cascade compensator design, 744 –745 antenna control and, 751 –753 Digital compensator, implementing, 746 –749 Digital computers: advantages, 709 –710 in control systems, 6 modeling, 711 –714 placement within loop, 709 Digital control systems: advantages of digital computers, 709 –710 analog-to-digital conversion, 710 –711 antenna control with, 749 –753 background, 708 –709 bilinear transformations in, 730 –731 block diagram reduction and, 723 –726 cascade compensation in, 743cascade compensation via s-plane and, 742 –746 digital system stability in, 726 –733 digital-to-analog conversion, 710gain design on z-plane and, 739 –742 implementing digital compensators, 746 –749 with MATLAB program, 809 –814 with MATLAB Simulink program, 833 –835 modeling digital computers, 711 –714 stability design via root locus in, 739 –740 steady-state errors and, 733 –737 transfer functions of, 719 –723 transient response design via gain adjustment and, 740 –741 transient response on z-plane, 737 –739 z-transform and, 714 –719 Di gital feedback control system: steady-state errors for, 734unit parabolic input for, 735unit ramp input for, 735unit step input for, 734 –735Digital numerical control, lathe with, 726 Digital system simulation, with LabVIEW program, 871–874 Digital system stability: digital control systems in, 726 –733 via Routh-Hurwitz, 732 vias-plane, 731 –733 viaz-plane, 726 –730 Digital-to-analog conversion, 710 Digital-to-analog (D/A) converter, 709, 710 Digital versatile disc (DVD) players, 515 –516, 605, 759 Dirac delta functions, 713Disk drive, 9 analog system of, 758 –759 arm, 433, 644 Displacement. See also Angular displacement force-, 62 mechanical, 61 –62 read/write head, 328 Distributed parameter, 70n Disturbances: deﬁnition of, 7 steady-state errors for, 351 –353 Doebelin, E. O., 30, 113Dollar, A. M., 334 Dominant-pole argument, 217 Dong, F., 212, 232Dorf, R. C., 30, 113, 188, 232, 333, 447, 523, 610, 648Doyle, J. C., 379Drebbel, Cornelis, 4Drive system, with elastically coupled load, 290, 331, 701Driving simulator, 630Drug absorption, 143 –145 D’Souza, A. F., 23, 30, 113 Duals, 262 –263 Dubowsky, S., 30Dumont, G. A., 447DVD players, SeeDigital versatile disc players DVR, SeeDynamic voltage restorer Dynamic control systems, 9Dynamic subsystems, 141 Dynamic voltage restorer (DVR), 372, 431 Dynamometer, 23, 80 –81 EEconomics, as design consideration, 10Economic system dynamics, 330 –331 ECU, SeeElectronic control unit Edelson, J., 28, 30 Edelstein-Keshet, L., 103, 104, 113 Eigenvalues, 268 poles and, 195 –198 transfer function poles and, 195 –198900 Index3GBINDEX 10/14/2014 11:56:20 Eigenvector, 267 –269 Ekeberg, Ö., 155 Elara ﬁ, M. G. M. K., 218, 232 Electrical constants, of motor transfer function, 81Electrical network(s): branch currents in, 124with dependent source, 125 –127 representation of, 124 –125 state-space representations of, 116 –120 transfer function, 47 –61 Electrical to mechanical systems analogies, 61 –62 Electric circuit analogs, 83 –86 Electric vehicle, mechanical brake response of, 219 –220 Electric ventricular assist device (EVAD), 287, 643–644, 759 Electromechanical system transfer functions, 77 –83 Electronic control unit (ECU), 28 Elevators, 2, 3 Elevator surface angle, 206Elkins, J. A., 113, 155El-Samad, H., 447Elsley, G., 297, 333Emami-Naeini, A., 30, 113, 156, 232, 610, 704Energy storage elements, 123Enzyme breakdown, 102 –103 Eppinger, S. D., 156, 232, 297, 334Epsilon method, stability via, 306Equations of motion, SeeMotion equations Equilibrium, 87Errors, 8. See also Steady-state errors quantization, 710ramp response, 483static error constants, 345 –347, 458, 585 –586 Estimator, 667EVAD, SeeElectric ventricular assist device Evans, W. R., 5, 382, 447Existing transient response, 9Exponential damping frequency, 178Exponential decay frequency, 169 –170 Exponential frequency, 163Exponential response, 160 Exponential time constant, 169 –170 External hardware, with LabVIEW program, 875 –878 F Factoring, via Routh-Hurwitz, 317Fagergren, A., 150, 155Fahlén, P., 524, 611FANUC M-410iB robot, 321 Feedback ampli ﬁer analysis, 5 Feedback compensation, 487 –495 approach 1, 488 –491 approach 2, 492 –495generic control system, 487minor-loop, 492 –494 in UFSS, 503 –504 Feedback control systems, 8, 240 –241. See also Control systems; speci ﬁc control systems analysis/design of, 245 –248 for ideal derivative compensation, 466 with MATLAB Simulink program, 832 –833 simulat ion with LabVIEW program, 870 –871 state-space representations of, 263 –264 Feedback form, of multiple subsystems, 240 –241 Feedback path, 8 Fenn ’s law, 287 Fertilizer applicator, 435Final value theorem, steady-state errors using, 359 –360 Finances, of control systems, 10First-order systems, 162 –164 poles of, 159 –161 unit step and, 162zeros of, 159 –161 First-order transfer functions via testing, 163 –164 Fixed ﬁeld, 78 Fixed structure controllers, SISO system, 607 –608, 645 Flexible links, 700 –701 Flight dynamics, fruit ﬂy, 607 Floor vibration eliminator, 435Flower, T. L., 648Flow for conservation, 145Fluid- ﬁlled catheter, de ﬂection response, 216 Flyball speed governor, 4Force-displacement, 62Forced response, 10, 158, 160Force-velocity, 62 Foroni, R. I., 112 Forssberg, H., 155Forward-path gain, 251Forward transfer function, SeeOpen-loop transfer function Four-wheel drive vehicle, steering model for, 374Fractional calculus differential equations, 218Frankle, J. T., 30Franklin, G. F., 30, 113, 156, 191, 232, 447, 610, 662n, 704 Free-body diagram, 63 Free viruses, 105Frequency: break, 533damped frequency of oscillation, 178exponential, 163, 169 –170 exponential damping, 178and gain at imaginary-axis crossing, 399 –400 natural, 169, 171, 203 –204 Frequency-domain modeling: antenna control system, 92 –94 electrical networks, 47 –61Index 9013GBINDEX 10/14/2014 11:56:20 Frequency-domain modeling: ( Continued ) electric circuit analogs, 83 –86 electromechanical systems, 77 –83 human leg, 94 –95 Laplace transforms for, 35 –44 with linearization, 87 –92 with MATLAB program, 772 –776 nonlinearities in, 86 –87 representations of systems, 34 –35 rotational mechanical systems, 69 –73 for systems with gears, 73 –77 transfer functions, 44 –47 translational mechanical systems, 61 –68 v. time-domain modeling, 116 Frequency response: analytical expressions for, 528 –529 for antenna control, 595 –596 asymptotic approximations of, 531 –550 background on, 526 –527 Bode plots of, 531 –550 closed-loop, 570 –578 closed-loop transient response and, 570 –573, 578 –582 concept of, 527 –528 gain and phase margin via Nyquist diagram, 564 –566 lead compensator, 624 –625 with MATLAB program, 796 –801 Nyquist criterion, 550 –555 open-loop, 573 –582 plotting, 529 –531 sinusoidal, 527 sketching Nyquist diagrams, 555 –560 stability, gain margin, and phase margin via Bode plots, 566–570 stability via Nyquist diagram, 560 –564 steady-state errors from, 582 –586 systems with time delay, 586 –590 from transfer function, 530transfer functions from, 591 –594 Frequency response design methods: antenna control and, 638 –640 lag compensation and, 618 –623 lag-lead compensation and, 629 –637 lead compensation and, 623 –629 with MATLAB program, 801 –805 overview of, 614 –615 root locus and, 614transient response via gain adjustment and, 615 –618 Frequency response plots, 529. See also Bode plots of time delay systems, 587 –588 Friction, 65nFriedman ’s model, 330, 331 Fruit ﬂyﬂight dynamics, 607 Fu, Z., 760, 764Fuchs, F. W., 220n, 233, 334, 448, 524, 611, 705 Fuel-cell power plants, 6 Function(s). See also Transfer function(s) Dirac delta, 713linearizing, 88time, 35 –36, 715 –716 Functional block diagrams, 12, 13 drawing of, 15 GG(s), steady-state error as, 340 –344 Gaiceanu, M., 113Gain, 3. See also Range of gain for stability forward-path, 251at imaginary-axis crossing, 399 –400 loop, 241, 251 –252 pitch, 322 stability design via, 321 –323 steady-state error design via, 363 –365 unity, 8 Gain-adjusted antenna control system, step responses of, 418 Gain adjustment: bode plots for, 615 –616 stability and, 614transient response via, 615 –618 Gain design: antenna control and, 638 for meeting steady-state error speci ﬁcation, 350 Third-order system, 408 –411 for transient response, 247onz-plane, digital control systems and, 739 –742 Gain margin: from Bode plots, 569evaluating, 568 via Nyquist diagram, 564 –566 Galvão , R. K. H., 430, 447, 604, 610 Gamble, J. B., 31, 297Gauthier, M., 233Gear backlash, 87Gear driven rotational systems, 74 –75 Gear systems, 73 –77 with loss, 76 –77 motion equation for, 75schematic, 73 Gear train, 76The General Problem of the Stability of Motion (Lyapunov), 5 Geselowitz, D. B., 297, 648, 765 Ghosh, R., 764 Gillard, D., 233Glantz, A. S., 216, 232Glargine insulin, 699902 Index3GBINDEX 10/14/2014 11:56:21 Global carbon cycle, schematic description of, 151 Glycolysis, 374 GNP, SeeGross National Product Godhaven, J., 31Golbon, N., 523, 764Gompertz growth model, 104Gong, P., 764Gong, W., 379, 610, 648Good, M. C., 232 Goodwin, G. C., 297, 333 Gozde, H., 212, 232, 290, 297, 330, 333Graebe, S. F., 289, 297, 332, 333Graham, D., 232Grain drying conveyor, 645Graovac, D., 104, 113, 291Graphical user interface (GUI), 19, 192Grid-connected converter, α-subsystem, of, 517, 607, 761 Griggs, G. E., 112, 155Grinder system, 23Gross National Product (GNP), 330GUI, SeeGraphical user interface Gupta, H., 152n, 156, 233, 334, 524, 704, 764Gurkaynak, Y., 25, 26n, 30Guy, W., 433, 447 H Hacisalihzade, S. S., 31Hahn, J. O., 432, 447Hammel, H. T., 30Han, F., 764Han, Y. D., 379, 447Haptipog ̂lu, C., 334 Harbor, R. D., 648Hard disk drive (HDD) arm, 433, 644Harmonic drives, robotic manipulator with, 435 –436 Hatopog ̆lu, C., 448 HDD arm, SeeHard disk drive arm Head, 144Heat-exchanger process, 513Heat exchange system, 644 Heinemann, W., 232 Hekman, K. A., 329, 333Heller, H. C., 30Her, M.-G., 288n, 297High-frequency asymptotes, 533High-speed proportional solenoid valve, 24Hisham, S. B., 232HIV/AIDS control system problem, 27, 105, 152, 222, 293, 331, 376 –377, 438, 518, 608, 645, 702, 761 Hoffmann, N., 220n, 233, 334, 448, 524, 611, 705Hogan, B. J., 23, 30Hold: zero-order, 714zero-order sample-and-, 710, 714, 721 –722 Hollot, C. V., 376, 379, 431, 447, 605, 610, 643, 648Holographic media storage, 605 –606 Home entertainment systems, 6Homogeneity, 86Homogeneous solutions, 10, 162nHong, J., 149, 156 Hormonal regulation mechanisms, 430 Horn, M., 219n, 233Hospital pharmacy robot, 650Hostetter, G. H., 30, 297, 333, 360, 379, 523, 610, 648, 704, 764 Hot tail responses, 217Houpis, C. H., 30, 333, 340n, 379, 523, 647, 704Hsu, J. C., 113 Huisman, R., 611 Human growth population, 103Human leg, transfer function of, 94 –95 Human postural dynamics, 103 –104 Human pupil servomechanism, 432 –433 Human response, to visual cues, 215Hutchinson, S., 380, 436n, 448Hybrid solar cell, diesel power distribution system and, 289 Hybrid vehicle control problem, 27 –28, 105 –106, 152 –153, 222, 293 –294, 331 –332, 377, 438, 518 –519, 608, 646, 702, 761 –762 Hypersonic ﬂight testing, 517 Hypothalamic-pituitary-adrenal axis, 149 –150, 697 I Iagnemma, K., 30 ICE, SeeInternal combustion engine Ideal compensators, 452Ideal derivative compensation, 463 –470 design, 466 –469 feedback control system for, 466predicted characteristics for, 465root locus for, 466, 468 uncompensated/compensated system, 466 –467 Ideal integral compensated system response, uncompensated system response and, 457 Ideal integral compensator, 453 –457 close d-loop system for, 455 effect of, 455 –457 implementing, 457 Ideal sampling, zero-order hold and, 714Identity matrix, 136 Ignatoski, M. A., 297, 648, 765Iizuka, Y., 448Imaginary-axis crossing, frequency/gain at, 399 –400Index 9033GBINDEX 10/14/2014 11:56:22 Impedance(s): for mechanical components, 63 –64 rotational mechanical, 75 summing, 55, 57 Impedance relationships, 47 rotational, 69translational, 61 –62 Implantable medical devices, with in-body batteries, 435 Impulse, 17, 18In-body batteries, implantable medical devices with, 435 Inductors, 127Inertia, 15, 69, 80Inﬁnity, sketching behavior at, 392 –395 Inigo, R. M., 156Initial conditions, 45 Input, 2. See also speci ﬁc types Input potentiometer, 92 –93 Input signals: root locus and, 413 test of, 17 Input substitution: analysis via, 360 –362 steady-state errors using, 361 –362 Input transducer, 7Insect ﬂight dynamics, 219, 607 Inspection, mesh equations via, 56 –57 Instability, 10, 300, 301. See also Stability Insulin, 149, 699Integral control: design, 685 –687 steady-state error design via, 684 –687 systems, 453 Integrated circuits, 290 –291 Interconnection of subsystems, block diagram of, 34Internal combustion engine (ICE), 28Inverse Laplace transform, 35, 36, 162Inverse z-transform, 717 –719 via partial-fraction expansion, 717 –718 via power series method, 718 –719 Inverted pendulum cart system, 151 –152, 220 –221, 328, 511–512, 701, 758 Inverting operational ampli ﬁer, 57 –58, 286 circuit, 58 –59 schematic, 58 Ionescu, C., 218, 232Ionic polymer-metal composite, 219Isailovic ́, J., 370, 379 JJarvis, A. J., 151n, 156Jason , 315Jason Junior , 271 Jenkins, H. E., 23, 30Jeon, C.-H., 297Jiang, J., 448, 523, 611, 764Jiayu, K., 218, 232Jimoh, A. A., 112, 155Johansson, R., 103, 113Johnson, H., 205, 232, 275, 277, 285, 297, 322, 333, 419, 421, 447, 503, 504, 523, 758, 764, 781, 783 Joint ﬂexibility, model representing, 436 jω-axis crossings, root locus sketching and, 399 –400 Jordan canonical form, 260 Jury ’s stability test, 729 KKailath, T., 35, 113, 156, 704Kandel, A., 145, 156 Kanellakopoulos, I., 286n, 297 Karkoub, M., 288, 297Karlsson, P., 432n, 442, 447, 517, 523Kasper, R., 232Katic ́, V., 113 Katz, P., 764Kermurjian, A., 113Khadraoui, S., 607, 610, 645, 648 Khaligh, A., 26n, 30 Khammash, M., 430, 447Kharitonov ’s theorem, 327, 328 Khodabakhshian, A., 515, 523, 759, 764Kidney function, arterial blood ﬂow and, 217 Kim, J. H., 610Kim, J.-W., 648Kim, S.-H., 605, 610 Kim, Y.-B., 648 Kirchhoff ’s current law, 16, 47, 83 Kirchhoff ’s nodal equations, SeeNodal equations Kirchhoff ’s voltage law, 16 Klaasens, J. B., 233, 705Klapper, J., 30Klein, R. E., 296, 447, 610Knight, B., 233 Ko, S.-H., 297 Kong, F., 289, 297Koontz, J. W., 297, 648, 765Krieg, M., 104, 113Ktesibios ’water clock, 4 Kuo, B. C., 218, 232, 447, 485, 523, 611, 648, 729n, 764 Kuo, C.-F. J., 232, 374, 379 Kuo, F. F., 113, 611 Kurfess, T. R., 30Kwon, O.-S., 297Kyrylov, V., 149, 156, 697, 704904 Index3GBINDEX 10/14/2014 11:56:22 L LabVIEW program, 20 ampli ﬁer saturation simulation with, 868 –869 analysis examples with, 853 –865 closed-loop step response with, 860 –861 control design palette in, 872 –874 controlling external hardware with, 875 –878 control systems analysis with, 850 –851 design examples with, 853 –865 design with, 850 –851 digital system simulation with, 871 –874 feedback system simulation with, 870 –871 linear systems simulation with, 866 –868 open-loop/closed-loop sinusoidal frequency analysis/ design with, 862 –865 open-loop step response with, 853 –859 root locus analysis/design with, 862simulation examples, 865 –874 simulation palette in, 871 –872 simulation with, 850 –851 using, 851 –853 Lag compensation, 457 –462, 618 –623 design procedure, 619 –623 root locus and, 459 type 1 systems, 457 visualizing, 618 –619 Lag compensator, 453, 618n design, 459 –462 Lagging, 618n Lag-lead compensation, 629 –637 antenna control and, 500 –503 design procedure, 630 –634 using Nichols chart, 635 –637 Lag-lead compensator, 479 design, 479 –484 ramp response error for, 483root locus for, 480 –482 Lago, G., 113Lam, C. S., 372, 379, 447Lam, P. Y., 607, 611Landesberg, A., 297 Laplace transform, 16, 35 –36 deﬁnition of, 35 of differential equation, 39 inverse, 35, 36review, 35 –44 ofstat e-transition matrix, 198 –199 state-transition matrix via, 201 –202 table, 36 theorems, 37 of time function, 35 –36 Laplace transformed circuit, 49Laplace transform solution, 196 –198of state equations, 194 –198 Lathe, with digital numerical control, 726Lead compensation, 470 –474 Bode plots for, 627design, 471 –474, 626 –629 geometry of, 470possible solutions, 471in UFSS, 503 –504 visualizing, 623 –624 Lead compensator, 463, 623n frequency response, 624 –625 realization, 499 Ledgerwood, B. K., 113Lee, Edmund, 4Lee, K.-B., 648Lee, S., 155Lee, S.-R., 289, 297 Leedal, D. T., 151n, 156 Lennartsson, A., 296, 447, 610Leo, D. J., 232Lessard, C. D., 104, 113Lewis, F. L., 216n, 231Li, P., 374n, 380Li, S., 151, 156Li, Z., 26n, 30 Liang, S. Y., 333 Library Browser, MATLAB Simulink program, 820 –821 Liceaga-Castro, E., 150, 156Lieberman, J., 24, 30Liew, K. M., 379, 447, 611Lin, J.-S., 286n, 287, 297, 373, 379Lin, R., 334, 448, 648Linan, M., 232 Linear combination, 119, 120 Linear control systems analysis, 5Linear independence: explanation of, 120state variables and, 121 –122 Linearity, 86Linearization, 87 –92 about a point, 88 of differential equations, 89 –90 of function, 88 longitudinal ﬂight model, 218 state-space representation and, 138 –140 Linearized magnetic levitation system block, 430Linearly dependent motions, 64Linearly increasing command, 17Linearly independent, 120 state variables, 121 –122 Linear systems, 86 piecewise, 102simulation with LabVIEW program, 866 –868Index 9053GBINDEX 10/14/2014 11:56:23 Linear systems ( Continued ) simulation with MATLAB Simulink program, 824 –829 total response for, 10 Linear time-invariant differential equation, 16 Linear time-invariant model, of hypothalamic-pituitary- adrenal axis, 149 –150 Linear voltage differential transformer (LVDT), 24Liquid-level control, 4Lithium-ion battery charger, 329 Liu, A. Q., 216n, 231 Liu, C.-H., 374n, 379Liu, G., 334, 611Liu, J.-H., 700, 704Load: in cascaded systems, 238dc servomotor and, 148elastically coupled, 290, 331, 701 motor and, 81 –82, 93, 141 –143 rotational mechanical, 80 Load angular displacement response: backlash effect on, 193, 194 dead zone effect on, 193 Load angular velocity response, ampli ﬁer saturation and, 192 Log-magnitude plots, 533, 542 –543, 566 –567 Longitudinal ﬂight model linearization, 218 Look-ahead offset, 330Loop analysis, SeeMesh analysis Looper, Mark, 28nLoop gain, 241, 251 –252 Loops: major, 488minor, 487, 488multiple, 51 –53 nontouching, 251 –252 Lordi, N. G., 143, 156Lossless gears, 74 angular displacement in, 74system with, 75 –76 Low, K. H., 376, 379, 447, 604, 611Low back pain, motor trunk patterns and, 217Lowery, M. M., 447 Low-frequency asymptotes, 533 LTI Viewer, 19, 566, 569Ludwick, S. J., 30Luenberger, D. G., 704Lumped parameter, 70nLusitania , 315 LVDT, SeeLinear voltage differential transformer Lyapunov, Alexandr Michailovich, 5 M Mablekos, V. E., 78, 113Magnetic levitation transportation system, 604 –605Magnitude frequency response, 528 Magnitude plots, 529 Magnusson, M., 113Mahmood, H., 437, 448, 517, 523, 607, 611, 761, 764 Mahony, R. E., 523Maka, S., 448Mallavarapu, K., 219, 232Malthus, Thomas, 103 Manned submersible, 271 Mansor, H., 645, 648Mapping contour, 551 –552 Mapping only positive jω-axis, stability via, 562 –563 Margaris, N. I., 379Marginally stable systems, 301Marginal stability, 300Martin, R. H., Jr., 31 Martinez, D., 112, 155, 232, 296, 333, 379, 447, 523, 610, 647, 704, 764 Marttinen, A., 103, 113, 328, 333, 604, 611 Marumo, Y., 448Mason, S. J., 251, 297Mason ’s rule: multiple subsystems and, 251 –253 transfer function via, 252 –253 Mass, 61, 62, 64 damper and, 123 Master controller, 329Matching coef ﬁcients: controller design by, 661 –662 observer design by, 677, 681 –683 Math ematical models, 16 –17 from physical system schematics, 34 MathWorks Inc., 19MATLAB program, 19 –20 command summary for, 814 –817 design via frequency response with, 801 –805 design via root locus with, 791 –796 design via state space with, 805– 808 digital control systems with, 809 –814 examples, 772 –814 frequency domain modeling with, 772 –776 frequency response techniques with, 796 –801 M-ﬁles with, 771 multiple subsystems with, 782 –787 root locus with, 789 –790 stability with, 787 –788 steady-state errors with, 788 –789 time domain modeling with, 776 –779 time response with, 779 –782 using, 771 –772 MATLAB Simulink program, SeeSimulink program (MATLAB)906 Index3GBINDEX 10/14/2014 11:56:24 Matrices: companion, 262 controllability, 659 –661 identity, 136observability, 674 –677 state-transition, 198 –199, 201 –202 system, 267, 269 –270 transformation, 266, 267, 269 –271 vector-matrix form, 125 Maximum power point tracking (MPPT) system, 25, 26Maxwell, James Clerk, 5Mayr, O., 4n, 31McKerrow, P. J., 225, 232McRuer, D., 218, 232Mechanical brake response, electric vehicle, 219 –220 Mechanical constants, 80Mechanical displacement, 61 –62 Mechanical system: into parallel analog, 86into series analog, 84 –85 Mechanical system transfer functions: rotational, 69 –73 translational, 61 –68 Meier, R., 23, 31MEMS, SeeMicro Electromechanical System Mengxiao, W., 232Mesh, 48Mesh analysis: complex circuits via, 51 –53 single loop via, 48 –50 Mesh equations, via inspection, 56 –57 Metalforming, exact shapes in, 760Metering pumps, 517 Meyer, A. U., 113 M-ﬁles, with MATLAB program, 771 Miao, Y., 648Michaelis-Menten equations, 102Micro Electromechanical System (MEMS), 216Micro Optical Electromechanical Systems (MOEMS), 216Milhorn, H. T., Jr., 681, 704Milsum, 1966, 94 Minnichelli, R. J., 328, 334 Minor loop, 487, 488Minor-loop feedback compensation, 492 –494 root locus for, 493step response simulation for, 494 Minorsky, N., 5, 113Misra, V., 379, 447, 610, 648Missile control system: modeling of, 727 –729 stability of, 727 –729 Missile steering control, 148Mitchell, R. J., 374, 375n, 379Mo, J., 764 Models, in MATLAB Simulink program, 824 MOEMS, SeeMicro Optical Electromechanical Systems Mohseni, K., 113Moment of inertia, 69Moored ﬂoating platforms, 25 Motion control, 375 –376 Motion equations, 62 –63, 70 –71 for gear systems, 75 by inspection, 67 –68, 71 –72 Motor(s): dc, 78, 80 –82 explanation of, 78 –79 load and, 81 –82,93, 141 –143 transfer functions and, 93 Motorcycle radio volume, 23 Motor-driven inverted pendulum cart system, 151 –152, 220–221, 328, 511 –512, 701, 758 Motor drive system, 220Motor transfer function, electrical constants of, 81Motor trunk patterns, low back pain and, 217Mott, C., 24, 31MPPT system, SeeMaximum power point tracking system Multiple loops, 51 –53 Multiple nodes, 54 with current sources, 55 Multiple root of multiplicity, 40Multiple subsystems. See also Subsystems analysis and design of feedback systems, 245 –248 in antenna control system, 272 –275 background on, 236block diagrams of, 236 –245 cascade form of, 237 –239, 264 feedback form of, 240 –241 Mason ’s rule, 251 –253 with MATLAB program, 782 –787 moving blocks to create familiar forms, 241 –245 parallel form of, 239signal-ﬂow graphs of, 248 –251 signal-ﬂow graphs of state equations and, 254 –256 similarity transformations, 265 –271 in space shuttle, 237state-space representations of, 256 –265 in UFSS vehicle, 275 –277 Multiplicity, 40Muñoz-Mansilla, R., 25, 31Murakami, T., 375n, 379Muscle contraction, 104MyDAQ, 110 –112, 226 –230, 441, 443, 444 NNaﬁon sheet, 219 Nagle, H. T., 232, 764Index 9073GBINDEX 10/14/2014 11:56:24 Nakamura, M., 217, 232 Nano-positioning device, 217 NASA ﬂight simulator robot arm, 78 Nashner, L. M., 216, 232National Instruments PXI, 526Natural frequency: damping ratio and, 203 –204 of general second-order system, 169, 171 Natural period, 169 –170 Natural response, 10 of general second-order system, 167, 168poles and, 158, 160 Naval Research Laboratory, 205n-channel enhancement-mode MOSFET Source Follower circuit, 286 Neamen, D. A., 286, 297Negative feedback, 240n Negative-feedback systems, 413, 414 Negative step response, of pitch control, 207Neogi, B., 760, 764Network theory, 124Neuroprostheses, 215Newbury, K., 232Newton ’s laws, 16, 62 Nichols charts, 577 –578 lag-lead compensation design using, 635 –637 Nieuwland, J., 31Nilsson, J. W., 35, 113, 528, 611NI myDAQ, 875 –878 Noah, J., 611Nodal analysis: complex circuits via, 53 –55 simple circuits via, 50 Nodal equations: form of, 56method to write, 53 –55 Node(s): multiple, 54, 55of signal-ﬂ ow graphs, 248 –249 single, 50 No integration systems, steady-state error for, 343 No-load speed, 81 Noninverting operational ampli ﬁer, 59 –61, 286 circuit, 60schematic, 59 Nonlinear electrical network, 90 –91 Nonlinearities, 86 –87 physical, 87time response and, 192 –194 Nonlinear systems, 86 –87 representation of, 139 –140 translational mechanical, 140 Nonminimum-phase electric circuit, 188Nonminimum-phase system: step responses of, 188, 190transfer function of, 188 –190 Nontouching loop gain, 251 –252 Nontouching loops, 251 –252 Nonunity feedback systems: steady-state actuating signal for, 356 –357 steady-state errors for, 353 –356 Noor, S. B. M., 648 Norton ’s theorem, 54 Notch ﬁlter, 484 –486 Nounou, H., 610, 648 Nounou, M., 610, 648 Novo sad, J. P., 31 nsimultaneous, ﬁrst-order differential equations, 117 nth-order differential equations: converted to nsimultaneous ﬁrst-order differential equations, 117 explanation of, 16 Nyawako, D., 435, 448Nygaard, G., 31Nyquist, H., 5, 31, 611Nyquist criterion, 550 –555 derivation of, 551 –554 range of gain for stability via, 561 –562 stability determination with, 554 –555 Nyquist diagram: gain margin/phase margin via, 564 –566 for open-loop function, 558 –559 sketching, 555 –560 stability via, 560 –564 Nyquist sampling rate, 710Nyzen, R. J., 448, 764 O Observability, 674 –677 by inspection, 674via observability matrix, 675 –676 Observability matrix, 674 –677 observability via, 675 –676 unobservability via, 676 –677 Observable systems, 674Observer, 667Observer canonical form: observer design for, 671 –673 of state space, 261 –265 Observer design, 667 –674 alternative approaches, 677 –684 antenna control and, 688 –693 by matching coef ﬁcients, 677, 681 –683 for observer canonical form, 671 –673 by transformation, 677 –681 Octave, 533908 Index3GBINDEX 10/14/2014 11:56:25 Ogata, K., 31, 113, 232, 523, 611, 619, 648, 659n, 662n, 675n, 704, 710n, 734n, 743n, 759, 764 Ohnishi, K., 375n, 376, 379 Oil cylinder valve, 151Oil drilling rigs, 26 –27 Okun ’s law, 330, 331 OMS, SeeOrbital maneuvering system One integration systems, steady-state error for, 344Open-loop frequency responses: closed-loop transient responses and, 578 –582 relation between closed-loop and, 573 –578 response speed from, 580 –582 Open-loop function, Nyquist diagram for, 558 –559 Open-loop pitch response, UFSS and, 205 –207 Open-loop poles, 392 –393, 430 Open-loop response, antenna control and, 202 –205 Open-loop sinusoidal frequency analysis and design, with LabVIEW program, 862 –865 Open-loop step response, with LabVIEW program, 853–859 Open-loop swivel controller, 376Open-loop systems, 7Open-loop transfer function, 217, 241Operational ampli ﬁers, 57 –61, 188 –189, 286 Optical disk recording system, 6 Orbital maneuvering system (OMS), 6 Oscillations: damped, 13, 169damped frequency of, 166undamped sinusoidal, 208 O’Sullivan, D. M., 233, 705 Oustaloup ’s method, 218 Output, 2 Output engine fan speed, 327 Output equation, 117 –121 Output potentiometer, 92 –93 Output response, 158Output transducer, 8Overdamped behavior, 208Overdamped response, 165 –167 Overhead crane system, 604 Overshoot, 174, 402, 408, 589 –590. See also Percent overshoot Özel, T., 516, 523 Özgüner, Ü., 330, 334, 448 P Pacemakers, arti ﬁcial, 760 Packet information ﬂow, 376 Padé approximation, 330, 433Paint mixing, 105Palazoglu, A., 513n, 524Papadopoulos, K. G., 375, 379Papastefanaki, E. N., 379 Papin, Denis, 4 Parabolic inputs: in control system design, 17, 18steady-state error and, 336, 337, 342 –343 unit, 735 Parabolic trough collector problem, 29, 106 –107, 153, 222, 294, 332, 377, 438, 519, 608, 646, 702, 762 Parallel analog, 85 –86 development of, 85 mechanical system converted into, 86param eters for, 85 Parallel form: of multiple subsystems, 239of state space, 258 –260, 264 Parallel hybrid-electric vehicle, 28Parallel subsystems, 239 Park, J.-Y., 610 Park, Y.-P., 610Parkinson ’s disease, 437 Partial-fraction expansion, 37 –44 inverse z-transform via, 717 –718 Particular solutions, 10, 162nPassive-circuit realization, 497 –499 PD controllers, SeeProportional-plus-derivative controllers Peak time, 173 evaluation of, 175lines of constant, 178from pole location, 178 –180 from transfer function, 177 Pendulum: inverted pendulum cart system, 151 –152, 220 –221, 328, 511–512, 701, 758 simple, 139 Percent overshoot, 174 evaluation of, 175 –176 lines of constant, 178from pole location, 178 –180 for time delay systems, 589 –590 from transfer function, 177v. damping ratio, 176 Pérez López, O., 650n, 699n, 704Performance, 2Peters, S., 30Pﬂeiderer, H. J., 156, 704 Pharmaceutical drug absorption, 143 –145 Pharmaceutical drug-level concentrations, 143Phase frequency response, 528Phase margin: from Bode plots, 569damping ratio from, 579 –580 evaluating, 568via Nyquist diagram, 564 –566Index 9093GBINDEX 10/14/2014 11:56:25 Phase shift oscillator, 333 Phase-variable form, state space in, 256, 264 Phase-variable representation: controller design for, 655 –657 for plant, 652, 653 Phase variables, 133 block diagram of, 132choice, 133 Phasors, 527 Philco Technological Center, 156 Phillips, C. L., 232, 648, 764Philon of Byzantium, 4Photovoltaic system, 25 –26, 104, 151 pH processes, modeling/control of, 218 –219 Phugoid mode, 218Physical system: mathematical models from schematics of, 34 transform requirements into, 14 –15 Piccin, O., 288, 297 Pickoff points, 236Picó, J., 156, 704PI controllers, SeeProportional-plus-integral controllers PID control, 375PID controllers, SeeProportional-plus-integral-plus- derivative controllers Piecewise linear systems, 102Pinette, B., 149n, 156Pitch angle control representation, in UFSS, 275 –277, 285 Pitch control loop: with rate feedback, 421root locus of, 419for UFSS vehicle, 205 without rate feedback, 420 Pitch control system, negative step response of, 207 Pitch gain, 322Planetary gear systems, 220Plant, 2, 7 phase-variable representation for, 652, 653pole placement for, 653 –658 state-space representation of, 651 –652 with state-variable feedback, 689 –690 Plots, in MATLAB Simulink program, 824. See also speci ﬁc types of plots Polar plot, 576nPole(s), 158 eigenvalues and, 195 –198 evaluating response with, 161ofﬁrst-order system, 159 –161 of transfer function, 159underdamped response using, 166 Pole distribution, via Routh table with row of zeros, 309–310Pole location: peak time from, 178 –180 percent overshoot from, 178 –180 for plant, 653 –658 for root locus, 387settling time from, 178 –180 topology for, 651 –653 Pole plot, for underdamped second-order system, 178 Pole sensitivity, root locus and, 415 –417 Pole-zero plot, 160Popa, D., 216n, 231Position constant, 582 –583 Position control system, 11, 34 antenna azimuth, 11 –14, 203 response of, 13with speci ﬁed overshoot and settling time, 514 –515 tachometer as, 487 Position error constant, 345Posit ive feedback, 240n Positive-feedback systems, root locus for, 413 –415 Postural arm re ﬂexes, 287 –288 Potentiometer, 8, 22 –23 input, 92 –93 output, 92 –93 Pounds, P. E. I., 330, 334, 516, 523Powell, J. D., 30, 113, 156, 232, 610, 704Power ampli ﬁer, 93, 141 Power series method, inverse z-transform via, 718 –719 Prasad, L., 151, 152n, 156, 220, 233, 328, 334, 511, 524, 701, 704, 758, 764 Preampli ﬁer, 93 Precision grip dynamics, 150 Preitl, Z., 153, 156, 293, 297, 334, 377, 380, 448, 518, 524, 608, 611, 646, 648, 702, 704, 761, 765 Prewarping, 743 Process control industry, 5Processes (plants), 2, 7Prochazka, A., 233Proportional control system, 453Proportional-plus-derivative (PD) controllers, 463 Proportional-plus-integral (PI) controllers, 453, 457 Proportional-plus-integral-plus-derivative (PID) controllers, 5 characteristics of, 476design, 475 –479 implementing, 497root locus for, 476 Pulse transfer function: derivation of, 720 –721 of feedback system, 724 –725 Pupil dilation, 24Pythagorean theorem, 178910 Index3GBINDEX 10/14/2014 11:56:26 Q Qian, H., 334, 611 Qu, S.-G., 151, 156Qualitative analysis and design, 158Qualitative method, 158Quantization error, 710 R Radial pickup position control, of DVD player, 515 –516, 605, 759 Radiator power control, 604Raible ’s tabular method, 729 RAM, SeeRandom-access memory Ramon, H., 448Ramp inputs: in control system design, 17, 18sensitivity of steady-state error with, 358 steady-state error and, 336 –338, 342 unit, 735 Ramp response error, for lag-lead compensator, 483 Random-access memory (RAM), 349Random early detection (RED) algorithm, 431, 605, 643Range of gain for stability: for time delay systems, 588 –589 via Bode plots, 567 –568 via Nyquist criterion, 561 –562 Range of sampling interval, for stability, 729 –730 Rate feedback, compensating zero via, 489 –491 Raven, F. H., 64, 113, 648Reaction control system (RCS), 6Read/write head displacement, 328Real-axis breakaway, root locus sketching and, 395 –399 Real-axis break-in points, root locus sketching and, 395–399 Real-axis pole, transient response and, 160Real-axis segments, root locus sketching and, 391Realization: active-circuit, 495 –497 of lag-lead compensator, 501 –502 passive-circuit, 497 –499 Reciprocal, of time constant, 163 RED algorithm, SeeRandom early detection algorithm Reference, 7 Reference input, 34Reidel, S. A., 113Reinoso, A. J., 25n, 31Reiser, M. B., 611Remote-controlled robot, 3Ren, Z., 220, 233 Residues, 190 –191 Resistance(s), 49 armature, 80 running, 106Resistor, 49 Response speed, from open-loop frequency response, 580–582 Retinal light ﬂux, 433 Reverse coefﬁ cients, stability via, 307 Reynolds, P., 448 Richon, J.-B., 434n, 447Riegelman, S., 156Ringdorfer, M., 219, 233 Riseman, E. M., 149n Rise time, 163, 173 evaluation of, 176 –178 from transfer function, 176 –177 v. damping ratio, 177 Robotic manipulator, 376 with cascade PI controller, 433harmonic drives with, 435 –436 target environment and, 149 Robots, 3 asparagus-picking, 212assembly-line, 349FANUC M-410iB, 321hospital pharmacy, 650input commands to, 183leg of, 139 –140 remote-controlled, 3with television imaging systems, 148 –149 walking, 139 Robust design, 10 –11 Rockwell International, 6, 8, 10, 31, 667, 704Roll- stabilizing system, ship, 605 Romagnoli, J. A., 512, 513n, 524Room temperature control, 512 Root locus, 5 for antenna control, 417 –419 for compensated system, 456 with compensator, 454control problem for, 382 –383 deﬁnition of, 382, 386 –388 frequency response design methods and, 614from general control system, 388 generalized, 411 –412 for ideal derivative compensation, 466, 468 lag compensation and, 459for lag-lead compensator, 480 –482 with MATLAB program, 789 –790 for minor-loop feedback compensation, 493for notch ﬁlter, 484 –485 for PID controllers, 476 of pitch control loop, 419 plotting/calibrating, 402 –403 pole location for, 387pole plot for, 387Index 9113GBINDEX 10/14/2014 11:56:27 Root locus ( Continued ) pole sensitivity and, 415 –417 for positive-feedback systems, 413 –415 properties of, 388 –390 sample, 450 for security camera system, 386starting/ending points and, 391 –392 UFSS and, 419 –421 for uncompensated system, 456 vector representation of complex numbers and, 383 –385 without compensator, 454 Root locus design methods: for antenna control system, 500 –503 cascade compensation, 453 –474 compensation con ﬁgurations for, 452 with compensators, 452 –453 with feedback compensation, 487 –495 improving steady-state error with, 451– 462, 474 –486 improving transient response with, 450 –451, 462 –486 with LabVIEW program, 862 lag-lead compensator design, 479 –484 with MATLAB, 791 –796 notch ﬁlters, 484 –486 physical realization of compensation, 495 –499 PID controller design, 475 –479 for UFSS vehicle, 503 –504 Root locus sketching: angles of departure/arrival in, 400 –402 with asymptotes, 393 –395 behavior at in ﬁnity, 392 –395 branches and, 391critical points and, 405 –406 example of, 404 –407 jω-axis crossings and, 399 –400 real-axis breakaway and, 395 –399 real-axis break-in points and, 395 –399 real-axis segments and, 391reﬁning, 395 –403 rules for, 390–395, 404 symmetry and, 391transient response design via gain adjustment from, 407–411 Root sensitivity, of closed-loop system, 416 –417 Roots of denominator of F(s): complex or imaginary, 41 –44 real and distinct, 38 –40 real and repeated, 40 –41 Rotational mechanical impedances, 75Rotational mechanical load, DC motor driving, 80 Rotational mechanical system transfer functions, 69 –73 Rotational systems: degrees of freedom in, 69 driven by gears, 74 –75Roth, E., 607, 611 Rotor, 78 Routh, E. J., 5, 334Routh-Hurwitz criterion, 303 –305 digital system stability via, 732examples of, 311 –318 factoring via, 317special cases of, 305 –311 stability via, 316 –317 with zero in ﬁrst column, 312 –313 Routh table: generating, 303 –305 interpreting, 305pole distribution via, 309 –310 with row of zeros, 309 –310, 314 –315 stability via, 308zero in, 305 –311 Rover ,3 Rubio, F. R., 112, 155, 232, 296, 333, 379, 447, 523, 610, 647, 704, 764 Running resistances, 106 S Saeys, W., 435, 448Safety valve, 4 Saini, S. C., 700, 701n, 704 Salapaka, M. V., 233Salapaka, S., 217, 233Salminen, R. T., 103n, 113, 333, 611Sampled-data systems. See also Digital control systems block diagram reduction of, 724 –725 transfer functions and, 719 –723 z-transform and, 723 Sampler, modeling, 712 –713 Sarcomere, 287Sarpeshkar, R., 447Satija, U., 701n, 704Saturation, ampli ﬁer,SeeAmpli ﬁer saturation Saturation nonlinearity, with MATLAB Simulink program, 830–831 Savant, C. J., Jr., 30, 297, 333, 379, 523, 610, 648, 704 Savaresi, S. M., 523, 610, 764 Sawusch, M. R., 233 Schema tics: contr ol system, 15 gear system, 73global carbon cycle, 151inverting operational ampli ﬁer, 58 mathematical models from, 34 noninverting operational ampli ﬁer, 59 Schierman, J. D., 327 Schiop, L., 105, 113Schneider, R. T., 376, 380912 Index3GBINDEX 10/14/2014 11:56:27 Schnell, 2004, 102 Schouten, A. C., 296 Sebastian, A., 233Second-order responses: damping ratio and, 171 Second-order step responses: approximation, 191components of, 166 Second-order systems, 164 –172 damping ratio of, 169 –172 natural frequency of, 169step responses for damping, 168 Second-order transfer functions via testing, 181 –182 Second-order underdamped responses: for damping ratio values, 174speciﬁcations, 173 –174 Second-order underdamped systems, step responses of, 178 –179 Security camera system, root locus for, 386Seering, W. P., 156, 232, 297, 334Segway personal transporter, 24Self-balancing bicycle, 607Sensitivity: of closed-loop transfer function, 357steady-state errors and, 356 –359 of steady-state error with ramp input, 358of steady-state error with step input, 358 Sensitivity analysis, 18Sensor, 8Serial hybrid-electric vehicle, 28Series analog, 83 –85 Series RLC electrical network, 49Settling time, 163, 174 lines of constant, 178from pole location, 180from transfer function, 176, 177 Severyanova, L. A., 156, 704Shahin, M., 437, 448Shao, M., 156Sharma, Y., 701n, 704Shaw, D. A., 31 Shibata, M., 375n, 379 Shinners, S. M., 704Ship: roll axis, 207roll-stabilizing system of, 605stability, 5steering, 5 Shortening muscle velocity, 287 Short period mode, 218 Short takeoff and landing (STOL) ﬁghter aircraft, 327 Signal- ﬂow graphs: components of, 248 –249converting block diagrams to, 249 –250 development stages of, 254 –255 of multiple subsystems, 248 –251 of state equations, 254 –256 Signals, in MATLAB Simulink program, 821, 823Similarity transformations: of multiple subsystems, 265 –271 on state equations, 266 –267 Similar systems, 265, 271 Simple circuits: via nodal analysis, 50 via voltage division, 51 Simple pendulum, 139Simulation palette, in LabVIEW program, 871 –872 Simulation parameters, in MATLAB Simulink program, 824 Simulations: with LabVIEW program, 850 –851 in MATLAB Simulink program, 824 Simulink program (MATLAB), 19, 186, 192 –194, 219, 247, 742 accessing, 819 –821 assembling and labeling subsystems in, 821block libraries, 822 –823 digital control systems with, 833 –835 examples, 824 –835 feedback systems with, 832 –833 interacti ng with plots, 824 interconnecting subsystems and labeling signals, 821, 823 linear system simulation with, 824 –829 saturation nonlinearity with, 830 –831 saving models in, 824 selecting blocks in, 821 simulation parameters in, 824starting simulations, 824subsystem parameters in, 823, 824using, 819 –824 Single loop: via differential equation, 48via mesh analysis, 48 –50 via transform methods, 50 Single node, 50Single-pole oil cylinder valve, 151Sinha, N. K., 704Sinusoidal frequency analysis, 5Sinusoidal inputs, 17, 18SISO Design Tool, 19SISO systems, ﬁxed structure controllers for, 607 –608, 645 Sivan, R., 297Skeletal muscle voltage potential, 218Slave controller, 329Smith, C. A., 513, 524, 644, 648Index 9133GBINDEX 10/14/2014 11:56:28 Smith, C. L., 765 Smoother, block diagram, 430 Soleimani-Mosheni, M., 524, 611Solenoid coil circuit, 285 –286 Solomonow, M., 233Son, M., 648Source shaft, 77Space shuttle, 6 main engine controller, 8 multiple subsystems in, 237 Speed control, 4 Sperry Gyroscope Company, 5s-plane: cascade compensation via, 742 –746 digital system stability via, 731 –733 mapping of, onto z-plane, 727 Split-power hybrid-electric vehicle, 28 Spong, M., 380, 435, 436n, 448 Spring constant, 61, 69Springs, translational relationships for, 62Spruijt, J. N., 233, 705Squid jet locomotion, 104Stability, 10 for antenna control system, 321 –322 closed-loop poles/response in, 301 –303 deﬁnition of, 300 –301 determining, 566 –567 digital system, 726 –733 evaluation of, 301 –303 with MATLAB program, 787 –788 Maxwell ’s criterion of, 5 of missile control system, 727 –729 range of sampling interval for, 729 –730 Routh-Hurwitz criterion of, 303 –318 in state space, 318 –321 transient response design via gain adjustment and, 614in UFSS vehicle, 322 –323 via epsilon method, 306via mapping only positive jω-axis, 562 –563 via Nyquist diagram, 560 –564 via reverse coef ﬁcients, 307 via Routh table, 308 Stability design: antenna control and, 595 –596 via gain, 321 –323 via root locus, 739 –740 Stabilization, control systems for, 5Stable systems, steady-state error and, 337Stall torque, 81 Stapleton, C. A., 436, 448 State, 118State equations, 117, 120 –122 Laplace transform solution of, 194 –198signal-ﬂow graphs of, 254 –256 similarity transformations on, 266 –267 time domai n solution of, 198 –202 State-feedback design, 667State space, 121 alternative representations in, 256 –265 cascade form of, 257 –259, 265 controller canonical form of, 260 –261, 265 diagonalizing system in, 269 –270 graphic representation of, 121observer canonical form of, 261 –265 parallel form of, 258 –260, 264 phase-variable form of, 256, 264stability in, 318 –321 from transfer function, 130 –136 transfer function from, 136 –138 State-space design methods: for antenna control, 688 –693 controllability in, 658 –661 controller design, 651 –658, 661 –667 with MATLAB program, 805 –808 observability in, 674 –677 observer design, 667 –674, 677 –684 steady-state error design via integral control, 684 –687 v. domain design methods, 650 –651 State-space representation, 16, 117 advantages of, 116antenna control and, 141 –143 application of, 122 –129 computer simulation and, 146of electrical networks, 116 –120 of feedback systems, 263 –264 general, 120 –122 linearization and, 138 –140 of plant, 651 –652 to transfer function, 137 –138 State-transition matrix, 198 –199 Laplace transform of, 198 –199 via Laplace transform, 201 –202 State-variable feedback, plant with, 689 –690 State variables, 117, 121 linearly independent, 121 –122 minim um number of, 122 –123 State vector, 121Static error constants, 345 –347, 458 from Bode plots, 585 –586 steady-state error via, 346 –347 Steady-state actuating signal, for nonunity feedback systems, 356 –357 Steady-state error design: via cascade compensation, 614via integral control, 684 –687 Steady-state errors, 2, 13 –14, 18. See also Errors914 Index3GBINDEX 10/14/2014 11:56:29 antenna control and, 362 –363 assembly-line robots and, 349 deﬁnition of, 336 digital control systems and, 733 –737 digital feedback control system for, 734for disturbances, 351 –353 evaluating, 337 –338 ﬁnding, 736from frequency response, 582 –586 improving, 451 –452, 474 –486 with MATLAB program, 788 –789 for no integration systems, 343for nonunity feedback systems, 353 –356 for one integration systems, 344parabola input and, 336, 337parabolic input and, 342 –343 ramp input and, 336 –338, 342 sensitivity of, 356 –359 sources of, 338 –339 speciﬁcations, 348 –351 stable systems and, 337from step disturbances, 352step input and, 336 –338, 341 –342 for systems in state space, 359 –362 system type and, 347 –348 in terms of G(s), 340 –344 in terms of T(s), 339 –340 test inputs, 336 –337 test waveforms for, 336transient response, 18, 474 –486 for unity feedback systems, 339 –344 using ﬁnal value theorem, 359 –360 using input substitution, 361 –362 via cascade compensation, 453 –462 via static error constants, 346 –347 video laser disc recorder and, 363 –365 Steady-state response, 9, 10n, 162nSteam-driven power generators, 329 –330, 515, 606 –607 Steam-driven turbine governor system, 759Steam press ure control, 4 Steel production, continuous casting in, 289 Steering: active front steering, 644 for four-wheel drive vehicle, 374history of control systems for, 5missile steering control, 148vehicle steering control model, 374, 430, 644 Steering angle, bicycle, 430Stefani, R. T., 30, 215, 233, 297, 333, 379, 523, 610, 648, 704 Steinbuch, M., 611Step disturbances, steady-state errors from, 352Step inputs:in control system design, 17, 18 sensitivity of steady-state error with, 358 steady-state error and, 336 –338, 341 –342 unit, 162, 734 –735 Step responses: computer simulation of, 420of gain-adjusted antenna control system, 418for minor-loop feedback compensation, 494of nonminimum-phase network, 190 of nonminimum-phase system, 188 of pitch control loop without rate feedback, 420of pitch control loop with rate feedback, 421for second-order system damping cases, 168of second-order underdamped systems, 178 –179 of three-pole systems, 185 –186 for transfer functions, 185 –186 STOL ﬁghter aircraft, SeeShort takeoff and landing ﬁghter aircraft s-transform, table of, 716 Strobel, K. L., 232Submarine autopilot, 150Subsystem parameters, in MATLAB Simulink program, 823, 824 Subsystems. See also Multiple subsystems deﬁnition of, 2 in MATLAB Simulink program, 821, 823 Summers, T. A., 233Summing: admittances, 55, 85impedances, 55, 57junctions, 7, 236, 241torques of pendulum, 139voltages, 57 Sun, J., 644, 648Sun, M., 219, 233Superposition, 86Susceptance, 54nSuspension, active, 286 –287, 373 Svensson, J., 432n, 447, 523Sweet, L. M., 232Symbolic Math Toolbox, 19 Symbols list, 767 –770 Symmetry, root locus sketching and, 391 System matrix, diagonalizing a, 267System representation, 34 –35 System response, 158 with additional poles, 182 –186 from transfer function, 46with zeros, 186 –191 Systems in state space, steady-state errors for, 359 –362 System step response test, laboratory results of, 164System type, steady-state errors and, 347 –348 System variables, 121Index 9153GBINDEX 10/14/2014 11:56:29 T T(s), steady-state error as, 339 –340 Tabular method (Raible), 729 Tachometer: as position control system, 487transfer function of, 488 Tactile feedback suit, 24 –25 Tadeo, F., 650n, 699, 704Taip, F. S., 648 Tan, X., 149n, 156 Taplamacioglu, M. C., 232, 297, 333Tarafdar, U., 764Target environment, robotic manipulator and, 149Tarín, C., 149, 156, 699, 704Tasch, U., 287, 297, 643, 648, 759, 765Taylor series, 89, 90, 138TCP/IP network model, 605, 643 Television imaging system, robot with, 148 –149 Temperature control system, 4, 23 Testing: ﬁrst-order transfer functions via, 163 –164 hypersonic ﬂight, 517 second-order transfer functions via, 181 –182 Test inputs, for steady-state error, 336 –337 Test waveforms, 18 for steady-state error, 336 Teufel, E., 156, 704Textile cross-lapper machine, 374Textile machine, 701Thermistor, 8Thermostat, 6Third-order observer, 669Third-order system gain design, 408 –411 Thomas, B., 329, 512, 524, 604, 611Thomsen, S., 220, 233, 290, 331, 334, 448, 518, 524, 607, 611, 701, 705 Three-loop electrical network, 56Three-mode controllers, SeeProportional-plus-integral- plus-derivative (PID) controllers Three-phase ac/dc converter, 104, 291Three-pole systems: comparing responses of, 185 –186 component responses of, 183 –184 step responses of, 185 –186 Time constant, 162 –163 exponential, 169 –170 reciprocal of, 163 Time delay systems, 586 –590 frequency response plots of, 587 –588 percent overshoot for, 589 –590 range of gain for stability for, 588 –589 Time-domain modeling: antenna control system, 141 –143applications of state-space representation, 122 –129 converting state space to transfer functions, 136 –138 converting transfer functions to state space, 130 –136 general state-space representation, 120 –122 with linearization, 138 –140 with MATLAB program, 776 –779 pharmaceutical drug absorption, 143 –145 of state equations, 198 –202 state-space representations of electrical networks, 116–120 v.freque ncy-domain modeling, 116 Time function: Laplace transform of, 35 –36 z-transform of, 715 –716 Time response: with additional poles, 182 –186 for antenna control system, 202 –205 inﬁrst-order systems, 162 –164 general second-order system, 169 –172 Laplace transform solutions of state equations, 194 –198 with MATLAB program, 779 –782 nonlinearities and, 192 –194 overview of, 158overview of second-order systems, 164 –165 poles/zeros and, 158 –161 second-order systems with zeros, 186 –191 time domain solution of state equations, 198 –202 for UFSS vehicle, 205 –207 in underdamped second-order systems, 173 –182 Time-varying systems, 116Timothy, L. K., 156, 233, 297, 334, 705Titanic , 271 Top-down design, 21 Torque, of motor, 79 Torque-angular displacement, 69Torque-angular velocity, 69Torque-controlled crane, 328Torque equivalent mechanical loading, 79Torque-speed curve, 81 –82 Total response, 10Tou, J., 765 Tower Trainer 60 Unmanned Aerial Vehicle, 371, 644 Towsley, D., 379, 447, 610, 648Train stopping, closed-loop vehicle response for, 431Transducers: input, 7output, 8 Transfer function(s), 16, 44 –47 for antenna control system, 92 –94 block diagram of, 45from Bode plots, 591 –594 with constant term in numerator, 131 –133 decomposing, 133, 134916 Index3GBINDEX 10/14/2014 11:56:30 for differential equation, 45 of digital control systems, 719 –723 electrical network, 47 –61 electromechanical system, 77 –83 experimentally obtaining, 591 –594 ﬁrst-order transfer functions via testing, 163 –164 frequency response from, 530 of human leg, 94 –95 matrix, 136 –137 nonminimum-phase system of, 188 –190 peak time from, 177percent overshoot from, 177poles of, 159with polynomial in numerator, 134 –135 rise time from, 176 –177 rotational mechanical system, 69 –73 sampled-data systems and, 719 –723 second-order approximation, 186second-order transfer functions via testing, 181 –182 settling time from, 176, 177from state space, 136 –138 to state space, 130 –136 state-space representation to, 137 –138 step responses for, 185 –186 system response from, 46 translational mechanical system, 61 –68 via Mason ’s rule, 252 –253 zeros of, 159 Transfer function poles, eigenvalues and, 195 –198 Transfer pitch angle, of UFSS vehicle, 206 Transformation(s): bilinear, 730 –731 to canonical form, 260 –265 controller design by, 662 –666 observer design by, 677 –681 similarity, 265 –271 Transformation matrix, 266, 267, 269 –271 Transformed circuit, 49Transformed free-body diagram, 63Transform methods, single loop via, 50Transform of the response, 173 Transient performance, stability design and, 595 –596 Transient response, 2, 9, 10n cascade compensation for improvement of, 462 –474 desired and existing, 9 ﬁnding, 246 –247 gain design for, 247improving, 450 –451 modeling, 18 model ing steady-state error, 18 real-axis pole and, 160 steady-state errors and, 18, 474 –486 through component design, 180 –181via gain adjustment, 615 –618 onz-plane, 737 –739 Transient response design via cascade compensation, 614Transient response design via gain adjustment, 407 –411, 614 antenna control and, 417 –419, 749 –751 digital control systems and, 740 –741 UFSS and, 419 –421 Transition method, 303, 397 –398 Translational mechanical system: representation of, 128transfer functions, 61 –68 Transpose, 125A Treatise on the Stability of a Given State of Motion (Routh), 5 TryIt, 40 –43, 46, 57, 71, 135, 138, 182, 186, 187, 191, 197, 245, 248, 261, 263, 271, 306, 314, 320, 348, 350, 354, 358, 360, 385, 390, 406, 461, 470, 550, 560, 566, 569, 578, 590, 618, 622 –623, 629, 657, 661, 673, 677, 722, 742 Tsai, C.-C., 232Tsang, K. M., 329, 334Tsunashima, H., 448Tu, H.-M., 232, 374n, 379Tumor cell growth model, 104 Turnbull, G. A., 31 Tustin transformation, 743Two degrees of freedom translational mechanical system, 65–66 Two-loop electrical network, 51 –53 Two-pole system, zeros and, 187Two-tank liquid control system, 512 –513 Two-wheeled driving control system, 25 Tyagi, B., 152n, 156, 233, 334, 524, 704, 764 Tyberg, V. J., 232Type 3 feedback control systems, 375 U UAV helicopter, 330UFSS, SeeUnmanned Free-Swimming Submersible UNAIDS, 27, 31 Unbounded input, 300 Uncompensated system: of ideal derivative compensation, 465 –467 root locus for, 456 Uncompensated system response, ideal integral compensated system response and, 457 Uncontrollable system, 658Undamped response, 167, 168 Undamped sinusoidal oscillations, 208 Underdamped curve, 169Underdamped response, 166 –167 Underdamped second-order systems, 173 –182Index 9173GBINDEX 10/14/2014 11:56:31 Underwater remote-controlled vehicle, 315 Uniform-rate sampling, 712 Uniform rectangular pulse train, 713United Technologies, 3Unit multiplicity, 310nUnit parabolic input, for digital feedback control system, 735 Unit ramp input, for digital feedback control system, 735Unit step input: for digital feedback control system, 734 –735 ﬁrst-order system and, 162 Unity feedback systems: forming an equivalent, 353 –354 steady-state error for, 339 –344 Unity gain, 8Unmanned autonomous vehicle, 516 –517 Unmanned Free-Swimming Submersible (UFSS), 158, 271 heading control, 758lead/feedback compensation in, 503 –504 open-loop pitch response and, 205 –207 pitch angle control representation, 275 –277, 285 pitch control loop for, 205stability design via gain in, 322 –323 transient design via gain and, 419 –421 Unobservability, via observability matrix, 676 –677 Unobservable systems, 674Unstable systems, 301. See also Stability Ünyeliog ̆lu, K. A., 430, 448 Űnyelioglu, K. A., 334 Vvan der Helm, F. C. T., 296 van der Molen, G. M., 150n, 156 Van de Vegte, J., 524van de Zalm, G., 606, 611Van Dijk, E., 219, 233, 699, 705Van Valkenburg, M. E., 113Varghese, J., 517, 524Variable speed wind turbine, feedback control, 700Variable valve timing (VVT), 220 Vaughan, N. D., 24, 31, 285, 297 Vector-matrix form, 125Vector representation, of complex numbers, 383 –385 Vectors: evaluation of complex function via, 385Laplace transform of, 136nstate, 121 Vehicle steering control model, 374, 430, 644 Veldpaus, F., 611 Velocity: angular, 69, 81, 192constant-velocity inputs, 336force-, 62 shortening muscle, 287 Velocity constant, 345, 583 –584 Venter, J. W., 30, 105n, 113, 152n, 155, 232, 296, 333, 379, 447, 523, 610, 647, 704, 764 Ventilators, closed-loop feedback in, 432 Verﬁng, E. H., 31 Vertical risers, 4Vertical spindle surface grinding, 329 Video laser disc recorders, 363 –365 Vidyasagar, M., 113, 380, 436n, 448 Vieira, A., 156, 704Virkkunen, J., 103n, 113, 333, 611Virtual Experiment, 65, 81, 138, 162, 177, 247, 311, 352, 466, 493 Virtual reality simulator, 288Viruses, free, 105 Viscous damper, 62, 64, 123 Viscous damping, 15Visual cues, human response to, 215Voltage(s): armature, 78 –79, 81 skeletal muscle voltage potential, 218summing, 57 Voltage-charge, 47 Voltage-current, 47 Voltage-dependent current source, 125 –127 Voltage division, simple circuits via, 51Voltage droop control, 431Voltage-source converter (VSC), 437 –438, 607 VVT, SeeVariable valve timing W Wang, F., 31 Wang, H., 379, 447, 611Wang, W., 31Wang, X.-K., 329, 334, 606, 611Water clock, 4Water level control, in steam generator, 329 –330 Water-loading experiments, 437 Watt, James, 4 Wavefo rms , 18 Weiss, R., 149n Williams, R. L., II, 448, 765Windmill speed control, 4Wind turbines, 433 –435 Wingrove, R. C., 330, 334Wittenmark, B., 743, 764Wolfson, P., 232 Wong, M. C., 379, 447 Woods Hole Oceanographic Institution, 315Wormly, D. N., 156, 232, 297, 334Wu, J., 524918 Index3GBINDEX 10/14/2014 11:56:33 X X-4 quadrotor, 516 –517 Xia, W., 156 Xia, X., 30, 105n, 113, 152n, 155, 232, 296, 333, 379, 447, 523, 610, 647, 704, 764 Xiong, Y., 233Xu, D.-P., 704Xue, D., 218, 233 Y Yamazaki, H., 431, 448Yan, T., 328, 334, 433, 448, 644, 648Yang, H., 610Yang, J., 610Yang, X.-H., 334, 611Yang, X.-Y., 704Yaniv, Y., 287, 297 Ye, Z., 156 Yin, G., 374, 380Yingst, J. C., 764Yoneyama, T., 447, 610Yu, S., 517, 524 Z Zbinden, A. M., 31 Zedka, M., 217, 233 Zero(s), 158 entire row is, 308 –311 inﬁrst column, 306 –307, 312 –313ofﬁrst-order system, 159 –161 in Routh table, 305 –311 system response with, 186 –191 of transfer function, 159two-pole system and, 187 Zero-input response, 198Zero-order hold, 714Zero-order sample-and-hold (z.o.h.), 710, 714, 721 –722 Zero-state response, 198, 209 Zhang, D., 524 Zhang, J.-Y., 644, 648Zhang, Y., 156Zhao, Q., 26, 31Zhongjun, X., 232Zhou, B. H., 215, 233Zhou, J., 31Zhu, G. G., 220n, 233 z.o.h., SeeZero-order sample-and-hold z-plane: digital system stability via, 726 –730 gain design on, 739 –742 s-plane mapping onto, 727 transient response on, 737 –739 z-transform, 712 digital control systems and, 714 –719 sampled-data systems and, 723 table of, 716theorems, 717of time function, 715 –716Index 9193GBINDEX 10/14/2014 11:56:33 Page 920WEBBKEY 10/29/2014 0:39:40 Key Equations WEBBIBC 10/29/2014 0:17:50 Unmanned Free-Swimming Submersible Vehicle Pitch Control System Pitch gainPitch command θc(s)Commanded elevator deflection δec(s)2 s + 2Elevator actuatorElevator deflection δe(s)Vehicle dynamics –0.125(s +0.435) (s+1.23)( s2+0.226 s+0.0169)Pitch θ(s) Pitch rate sensor –K2s+ –+ ––K1 Heading Control System Heading gainHeading commandCommanded rudder deflectionRudder actuatorVehicle dynamics Yaw rate sensorHeadingHeading (yaw) rate –2 s + 2+ –– + 0.125(s + 0.437) (s + 1.29)(s + 0.193)ψc(s) δrc(s) δr(s) ψ(s) ψ(s)Rudder deflection 1 s –K2s–K1WILEY END USER LICENSE AGREEMENT Go to www.wiley.com/go/eula to access Wiley's ebook EULA.